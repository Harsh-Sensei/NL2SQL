[
  {
    "db_id": "department_management",
    "query": "SELECT count(*) FROM head WHERE age  >  56",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "head",
      "WHERE",
      "age",
      ">",
      "56"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "head",
      "where",
      "age",
      ">",
      "value"
    ],
    "question": "How many heads of the departments are older than 56 ?",
    "question_toks": [
      "How",
      "many",
      "heads",
      "of",
      "the",
      "departments",
      "are",
      "older",
      "than",
      "56",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          56.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_management",
    "query": "SELECT creation ,  name ,  budget_in_billions FROM department",
    "query_toks": [
      "SELECT",
      "creation",
      ",",
      "name",
      ",",
      "budget_in_billions",
      "FROM",
      "department"
    ],
    "query_toks_no_value": [
      "select",
      "creation",
      ",",
      "name",
      ",",
      "budget_in_billions",
      "from",
      "department"
    ],
    "question": "List the creation year, name and budget of each department.",
    "question_toks": [
      "List",
      "the",
      "creation",
      "year",
      ",",
      "name",
      "and",
      "budget",
      "of",
      "each",
      "department",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_management",
    "query": "SELECT max(budget_in_billions) ,  min(budget_in_billions) FROM department",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "budget_in_billions",
      ")",
      ",",
      "min",
      "(",
      "budget_in_billions",
      ")",
      "FROM",
      "department"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "budget_in_billions",
      ")",
      ",",
      "min",
      "(",
      "budget_in_billions",
      ")",
      "from",
      "department"
    ],
    "question": "What are the maximum and minimum budget of the departments?",
    "question_toks": [
      "What",
      "are",
      "the",
      "maximum",
      "and",
      "minimum",
      "budget",
      "of",
      "the",
      "departments",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_management",
    "query": "SELECT avg(num_employees) FROM department WHERE ranking BETWEEN 10 AND 15",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "num_employees",
      ")",
      "FROM",
      "department",
      "WHERE",
      "ranking",
      "BETWEEN",
      "10",
      "AND",
      "15"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "num_employees",
      ")",
      "from",
      "department",
      "where",
      "ranking",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "employees",
      "of",
      "the",
      "departments",
      "whose",
      "rank",
      "is",
      "between",
      "10",
      "and",
      "15",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          10.0,
          15.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_management",
    "query": "SELECT name FROM head WHERE born_state != 'California'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "head",
      "WHERE",
      "born_state",
      "!",
      "=",
      "'California",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "head",
      "where",
      "born_state",
      "!",
      "=",
      "value"
    ],
    "question": "What are the names of the heads who are born outside the California state?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "heads",
      "who",
      "are",
      "born",
      "outside",
      "the",
      "California",
      "state",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"California\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_management",
    "query": "SELECT count(DISTINCT temporary_acting) FROM management",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "temporary_acting",
      ")",
      "FROM",
      "management"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "temporary_acting",
      ")",
      "from",
      "management"
    ],
    "question": "How many acting statuses are there?",
    "question_toks": [
      "How",
      "many",
      "acting",
      "statuses",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                13,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_management",
    "query": "SELECT count(*) FROM department WHERE department_id NOT IN (SELECT department_id FROM management);",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "department",
      "WHERE",
      "department_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "department_id",
      "FROM",
      "management",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "department",
      "where",
      "department_id",
      "not",
      "in",
      "(",
      "select",
      "department_id",
      "from",
      "management",
      ")"
    ],
    "question": "How many departments are led by heads who are not mentioned?",
    "question_toks": [
      "How",
      "many",
      "departments",
      "are",
      "led",
      "by",
      "heads",
      "who",
      "are",
      "not",
      "mentioned",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      11,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_management",
    "query": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'",
    "query_toks": [
      "SELECT",
      "head_id",
      ",",
      "name",
      "FROM",
      "head",
      "WHERE",
      "name",
      "LIKE",
      "'",
      "%",
      "Ha",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "head_id",
      ",",
      "name",
      "from",
      "head",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "Which head's name has the substring 'Ha'? List the id and name.",
    "question_toks": [
      "Which",
      "head",
      "'s",
      "name",
      "has",
      "the",
      "substring",
      "'Ha",
      "'",
      "?",
      "List",
      "the",
      "id",
      "and",
      "name",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"%Ha%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT count(*) FROM farm",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "farm"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "farm"
    ],
    "question": "How many farms are there?",
    "question_toks": [
      "How",
      "many",
      "farms",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT count(*) FROM farm",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "farm"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "farm"
    ],
    "question": "Count the number of farms.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "farms",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT Hosts FROM farm_competition WHERE Theme !=  'Aliens'",
    "query_toks": [
      "SELECT",
      "Hosts",
      "FROM",
      "farm_competition",
      "WHERE",
      "Theme",
      "!",
      "=",
      "'Aliens",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "hosts",
      "from",
      "farm_competition",
      "where",
      "theme",
      "!",
      "=",
      "value"
    ],
    "question": "What are the hosts of competitions whose theme is not \"Aliens\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "hosts",
      "of",
      "competitions",
      "whose",
      "theme",
      "is",
      "not",
      "``",
      "Aliens",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Aliens\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT Hosts FROM farm_competition WHERE Theme !=  'Aliens'",
    "query_toks": [
      "SELECT",
      "Hosts",
      "FROM",
      "farm_competition",
      "WHERE",
      "Theme",
      "!",
      "=",
      "'Aliens",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "hosts",
      "from",
      "farm_competition",
      "where",
      "theme",
      "!",
      "=",
      "value"
    ],
    "question": "Return the hosts of competitions for which the theme is not Aliens?",
    "question_toks": [
      "Return",
      "the",
      "hosts",
      "of",
      "competitions",
      "for",
      "which",
      "the",
      "theme",
      "is",
      "not",
      "Aliens",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Aliens\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT avg(Working_Horses) FROM farm WHERE Total_Horses  >  5000",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Working_Horses",
      ")",
      "FROM",
      "farm",
      "WHERE",
      "Total_Horses",
      ">",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "working_horses",
      ")",
      "from",
      "farm",
      "where",
      "total_horses",
      ">",
      "value"
    ],
    "question": "What is the average number of working horses of farms with more than 5000 total number of horses?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "working",
      "horses",
      "of",
      "farms",
      "with",
      "more",
      "than",
      "5000",
      "total",
      "number",
      "of",
      "horses",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          5000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT avg(Working_Horses) FROM farm WHERE Total_Horses  >  5000",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Working_Horses",
      ")",
      "FROM",
      "farm",
      "WHERE",
      "Total_Horses",
      ">",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "working_horses",
      ")",
      "from",
      "farm",
      "where",
      "total_horses",
      ">",
      "value"
    ],
    "question": "Give the average number of working horses on farms with more than 5000 total horses.",
    "question_toks": [
      "Give",
      "the",
      "average",
      "number",
      "of",
      "working",
      "horses",
      "on",
      "farms",
      "with",
      "more",
      "than",
      "5000",
      "total",
      "horses",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          5000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT max(Cows) ,  min(Cows) FROM farm",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Cows",
      ")",
      ",",
      "min",
      "(",
      "Cows",
      ")",
      "FROM",
      "farm"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "cows",
      ")",
      ",",
      "min",
      "(",
      "cows",
      ")",
      "from",
      "farm"
    ],
    "question": "What are the maximum and minimum number of cows across all farms.",
    "question_toks": [
      "What",
      "are",
      "the",
      "maximum",
      "and",
      "minimum",
      "number",
      "of",
      "cows",
      "across",
      "all",
      "farms",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT max(Cows) ,  min(Cows) FROM farm",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Cows",
      ")",
      ",",
      "min",
      "(",
      "Cows",
      ")",
      "FROM",
      "farm"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "cows",
      ")",
      ",",
      "min",
      "(",
      "cows",
      ")",
      "from",
      "farm"
    ],
    "question": "Return the maximum and minimum number of cows across all farms.",
    "question_toks": [
      "Return",
      "the",
      "maximum",
      "and",
      "minimum",
      "number",
      "of",
      "cows",
      "across",
      "all",
      "farms",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT count(DISTINCT Status) FROM city",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Status",
      ")",
      "FROM",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "status",
      ")",
      "from",
      "city"
    ],
    "question": "How many different statuses do cities have?",
    "question_toks": [
      "How",
      "many",
      "different",
      "statuses",
      "do",
      "cities",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT count(DISTINCT Status) FROM city",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Status",
      ")",
      "FROM",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "status",
      ")",
      "from",
      "city"
    ],
    "question": "Count the number of different statuses.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "statuses",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT Official_Name FROM city WHERE City_ID NOT IN (SELECT Host_city_ID FROM farm_competition)",
    "query_toks": [
      "SELECT",
      "Official_Name",
      "FROM",
      "city",
      "WHERE",
      "City_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Host_city_ID",
      "FROM",
      "farm_competition",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "official_name",
      "from",
      "city",
      "where",
      "city_id",
      "not",
      "in",
      "(",
      "select",
      "host_city_id",
      "from",
      "farm_competition",
      ")"
    ],
    "question": "List the official names of cities that have not held any competition.",
    "question_toks": [
      "List",
      "the",
      "official",
      "names",
      "of",
      "cities",
      "that",
      "have",
      "not",
      "held",
      "any",
      "competition",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      20,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT Official_Name FROM city WHERE City_ID NOT IN (SELECT Host_city_ID FROM farm_competition)",
    "query_toks": [
      "SELECT",
      "Official_Name",
      "FROM",
      "city",
      "WHERE",
      "City_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Host_city_ID",
      "FROM",
      "farm_competition",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "official_name",
      "from",
      "city",
      "where",
      "city_id",
      "not",
      "in",
      "(",
      "select",
      "host_city_id",
      "from",
      "farm_competition",
      ")"
    ],
    "question": "What are the official names of cities that have not hosted a farm competition?",
    "question_toks": [
      "What",
      "are",
      "the",
      "official",
      "names",
      "of",
      "cities",
      "that",
      "have",
      "not",
      "hosted",
      "a",
      "farm",
      "competition",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      20,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT Official_Name FROM city WHERE Population  >  1500 OR Population  <  500",
    "query_toks": [
      "SELECT",
      "Official_Name",
      "FROM",
      "city",
      "WHERE",
      "Population",
      ">",
      "1500",
      "OR",
      "Population",
      "<",
      "500"
    ],
    "query_toks_no_value": [
      "select",
      "official_name",
      "from",
      "city",
      "where",
      "population",
      ">",
      "value",
      "or",
      "population",
      "<",
      "value"
    ],
    "question": "Find the official names of cities with population bigger than 1500 or smaller than 500.",
    "question_toks": [
      "Find",
      "the",
      "official",
      "names",
      "of",
      "cities",
      "with",
      "population",
      "bigger",
      "than",
      "1500",
      "or",
      "smaller",
      "than",
      "500",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          1500.0,
          null
        ],
        "or",
        [
          false,
          4,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          500.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT Official_Name FROM city WHERE Population  >  1500 OR Population  <  500",
    "query_toks": [
      "SELECT",
      "Official_Name",
      "FROM",
      "city",
      "WHERE",
      "Population",
      ">",
      "1500",
      "OR",
      "Population",
      "<",
      "500"
    ],
    "query_toks_no_value": [
      "select",
      "official_name",
      "from",
      "city",
      "where",
      "population",
      ">",
      "value",
      "or",
      "population",
      "<",
      "value"
    ],
    "question": "What are the official names of cities that have population over 1500 or less than 500?",
    "question_toks": [
      "What",
      "are",
      "the",
      "official",
      "names",
      "of",
      "cities",
      "that",
      "have",
      "population",
      "over",
      "1500",
      "or",
      "less",
      "than",
      "500",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          1500.0,
          null
        ],
        "or",
        [
          false,
          4,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          500.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT Census_Ranking FROM city WHERE Status !=  \"Village\"",
    "query_toks": [
      "SELECT",
      "Census_Ranking",
      "FROM",
      "city",
      "WHERE",
      "Status",
      "!",
      "=",
      "``",
      "Village",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "census_ranking",
      "from",
      "city",
      "where",
      "status",
      "!",
      "=",
      "value"
    ],
    "question": "Show the census ranking of cities whose status are not \"Village\".",
    "question_toks": [
      "Show",
      "the",
      "census",
      "ranking",
      "of",
      "cities",
      "whose",
      "status",
      "are",
      "not",
      "``",
      "Village",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Village\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT Census_Ranking FROM city WHERE Status !=  \"Village\"",
    "query_toks": [
      "SELECT",
      "Census_Ranking",
      "FROM",
      "city",
      "WHERE",
      "Status",
      "!",
      "=",
      "``",
      "Village",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "census_ranking",
      "from",
      "city",
      "where",
      "status",
      "!",
      "=",
      "value"
    ],
    "question": "What are the census rankings of cities that do not have the status \"Village\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "census",
      "rankings",
      "of",
      "cities",
      "that",
      "do",
      "not",
      "have",
      "the",
      "status",
      "``",
      "Village",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Village\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM students WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "students",
      "WHERE",
      "student_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "student_id",
      "FROM",
      "student_course_attendance",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "students",
      "where",
      "student_id",
      "not",
      "in",
      "(",
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      ")"
    ],
    "question": "List the id of students who never attends courses?",
    "question_toks": [
      "List",
      "the",
      "id",
      "of",
      "students",
      "who",
      "never",
      "attends",
      "courses",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  6
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      30,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM students WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "students",
      "WHERE",
      "student_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "student_id",
      "FROM",
      "student_course_attendance",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "students",
      "where",
      "student_id",
      "not",
      "in",
      "(",
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      ")"
    ],
    "question": "What are the  ids of every student who has never attended a course?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "every",
      "student",
      "who",
      "has",
      "never",
      "attended",
      "a",
      "course",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  6
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      30,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM student_course_attendance",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "student_course_attendance"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance"
    ],
    "question": "List the id of students who attended some courses?",
    "question_toks": [
      "List",
      "the",
      "id",
      "of",
      "students",
      "who",
      "attended",
      "some",
      "courses",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM student_course_attendance",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "student_course_attendance"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance"
    ],
    "question": "What are the ids of all students who have attended at least one course?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "all",
      "students",
      "who",
      "have",
      "attended",
      "at",
      "least",
      "one",
      "course",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = \"Pass\"",
    "query_toks": [
      "SELECT",
      "candidate_id",
      "FROM",
      "candidate_assessments",
      "WHERE",
      "asessment_outcome_code",
      "=",
      "``",
      "Pass",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "candidate_id",
      "from",
      "candidate_assessments",
      "where",
      "asessment_outcome_code",
      "=",
      "value"
    ],
    "question": "Find id of candidates whose assessment code is \"Pass\"?",
    "question_toks": [
      "Find",
      "id",
      "of",
      "candidates",
      "whose",
      "assessment",
      "code",
      "is",
      "``",
      "Pass",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              38,
              false
            ],
            null
          ],
          "\"Pass\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = \"Pass\"",
    "query_toks": [
      "SELECT",
      "candidate_id",
      "FROM",
      "candidate_assessments",
      "WHERE",
      "asessment_outcome_code",
      "=",
      "``",
      "Pass",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "candidate_id",
      "from",
      "candidate_assessments",
      "where",
      "asessment_outcome_code",
      "=",
      "value"
    ],
    "question": "What are the ids of the candidates that have an outcome code of Pass?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "the",
      "candidates",
      "that",
      "have",
      "an",
      "outcome",
      "code",
      "of",
      "Pass",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              38,
              false
            ],
            null
          ],
          "\"Pass\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM student_course_attendance WHERE course_id  =  301",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "student_course_attendance",
      "WHERE",
      "course_id",
      "=",
      "301"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "course_id",
      "=",
      "value"
    ],
    "question": "What are the id of students who registered course 301?",
    "question_toks": [
      "What",
      "are",
      "the",
      "id",
      "of",
      "students",
      "who",
      "registered",
      "course",
      "301",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              31,
              false
            ],
            null
          ],
          301.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM student_course_attendance WHERE course_id  =  301",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "student_course_attendance",
      "WHERE",
      "course_id",
      "=",
      "301"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "course_id",
      "=",
      "value"
    ],
    "question": "What are the ids of the students who registered for course 301?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "the",
      "students",
      "who",
      "registered",
      "for",
      "course",
      "301",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              31,
              false
            ],
            null
          ],
          301.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT * FROM student_course_registrations WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "student_course_registrations",
      "WHERE",
      "student_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "student_id",
      "FROM",
      "student_course_attendance",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "student_course_registrations",
      "where",
      "student_id",
      "not",
      "in",
      "(",
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      ")"
    ],
    "question": "What are all info of students who registered courses but not attended courses?",
    "question_toks": [
      "What",
      "are",
      "all",
      "info",
      "of",
      "students",
      "who",
      "registered",
      "courses",
      "but",
      "not",
      "attended",
      "courses",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  6
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      30,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT * FROM student_course_registrations WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "student_course_registrations",
      "WHERE",
      "student_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "student_id",
      "FROM",
      "student_course_attendance",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "student_course_registrations",
      "where",
      "student_id",
      "not",
      "in",
      "(",
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      ")"
    ],
    "question": "What are all details of the students who registered but did not attend any course?",
    "question_toks": [
      "What",
      "are",
      "all",
      "details",
      "of",
      "the",
      "students",
      "who",
      "registered",
      "but",
      "did",
      "not",
      "attend",
      "any",
      "course",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  6
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      30,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT date FROM weather WHERE max_temperature_f  >  85",
    "query_toks": [
      "SELECT",
      "date",
      "FROM",
      "weather",
      "WHERE",
      "max_temperature_f",
      ">",
      "85"
    ],
    "query_toks_no_value": [
      "select",
      "date",
      "from",
      "weather",
      "where",
      "max_temperature_f",
      ">",
      "value"
    ],
    "question": "Give me the dates when the max temperature was higher than 85.",
    "question_toks": [
      "Give",
      "me",
      "the",
      "dates",
      "when",
      "the",
      "max",
      "temperature",
      "was",
      "higher",
      "than",
      "85",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          85.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT date FROM weather WHERE max_temperature_f  >  85",
    "query_toks": [
      "SELECT",
      "date",
      "FROM",
      "weather",
      "WHERE",
      "max_temperature_f",
      ">",
      "85"
    ],
    "query_toks_no_value": [
      "select",
      "date",
      "from",
      "weather",
      "where",
      "max_temperature_f",
      ">",
      "value"
    ],
    "question": "What are the dates with a maximum temperature higher than 85?",
    "question_toks": [
      "What",
      "are",
      "the",
      "dates",
      "with",
      "a",
      "maximum",
      "temperature",
      "higher",
      "than",
      "85",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          85.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT name FROM station WHERE lat  <  37.5",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "station",
      "WHERE",
      "lat",
      "<",
      "37.5"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "station",
      "where",
      "lat",
      "<",
      "value"
    ],
    "question": "What are the names of stations that have latitude lower than 37.5?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "stations",
      "that",
      "have",
      "latitude",
      "lower",
      "than",
      "37.5",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          37.5,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT name FROM station WHERE lat  <  37.5",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "station",
      "WHERE",
      "lat",
      "<",
      "37.5"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "station",
      "where",
      "lat",
      "<",
      "value"
    ],
    "question": "What are the names of all stations with a latitude smaller than 37.5?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "stations",
      "with",
      "a",
      "latitude",
      "smaller",
      "than",
      "37.5",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          37.5,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT avg(lat) ,  avg(long) FROM station WHERE city  =  \"San Jose\"",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "lat",
      ")",
      ",",
      "avg",
      "(",
      "long",
      ")",
      "FROM",
      "station",
      "WHERE",
      "city",
      "=",
      "``",
      "San",
      "Jose",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "lat",
      ")",
      ",",
      "avg",
      "(",
      "long",
      ")",
      "from",
      "station",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "What is the average latitude and longitude of stations located in San Jose city?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "latitude",
      "and",
      "longitude",
      "of",
      "stations",
      "located",
      "in",
      "San",
      "Jose",
      "city",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"San Jose\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT avg(lat) ,  avg(long) FROM station WHERE city  =  \"San Jose\"",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "lat",
      ")",
      ",",
      "avg",
      "(",
      "long",
      ")",
      "FROM",
      "station",
      "WHERE",
      "city",
      "=",
      "``",
      "San",
      "Jose",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "lat",
      ")",
      ",",
      "avg",
      "(",
      "long",
      ")",
      "from",
      "station",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "What is the average latitude and longitude in San Jose?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "latitude",
      "and",
      "longitude",
      "in",
      "San",
      "Jose",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"San Jose\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT sum(duration) ,  max(duration) FROM trip WHERE bike_id  =  636",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "duration",
      ")",
      ",",
      "max",
      "(",
      "duration",
      ")",
      "FROM",
      "trip",
      "WHERE",
      "bike_id",
      "=",
      "636"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "duration",
      ")",
      ",",
      "max",
      "(",
      "duration",
      ")",
      "from",
      "trip",
      "where",
      "bike_id",
      "=",
      "value"
    ],
    "question": "What is the total and maximum duration of trips with bike id 636?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "and",
      "maximum",
      "duration",
      "of",
      "trips",
      "with",
      "bike",
      "id",
      "636",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          636.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT sum(duration) ,  max(duration) FROM trip WHERE bike_id  =  636",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "duration",
      ")",
      ",",
      "max",
      "(",
      "duration",
      ")",
      "FROM",
      "trip",
      "WHERE",
      "bike_id",
      "=",
      "636"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "duration",
      ")",
      ",",
      "max",
      "(",
      "duration",
      ")",
      "from",
      "trip",
      "where",
      "bike_id",
      "=",
      "value"
    ],
    "question": "What is the total and maximum duration for all trips with the bike id 636?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "and",
      "maximum",
      "duration",
      "for",
      "all",
      "trips",
      "with",
      "the",
      "bike",
      "id",
      "636",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          636.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT count(DISTINCT bike_id) FROM trip",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "bike_id",
      ")",
      "FROM",
      "trip"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "bike_id",
      ")",
      "from",
      "trip"
    ],
    "question": "From the trip record, find the number of unique bikes.",
    "question_toks": [
      "From",
      "the",
      "trip",
      "record",
      ",",
      "find",
      "the",
      "number",
      "of",
      "unique",
      "bikes",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                20,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT count(DISTINCT bike_id) FROM trip",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "bike_id",
      ")",
      "FROM",
      "trip"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "bike_id",
      ")",
      "from",
      "trip"
    ],
    "question": "How many different bike ids are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "bike",
      "ids",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                20,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT count(DISTINCT city) FROM station",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "city",
      ")",
      "FROM",
      "station"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "city",
      ")",
      "from",
      "station"
    ],
    "question": "What is the number of distinct cities the stations are located at?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "distinct",
      "cities",
      "the",
      "stations",
      "are",
      "located",
      "at",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT count(DISTINCT city) FROM station",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "city",
      ")",
      "FROM",
      "station"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "city",
      ")",
      "from",
      "station"
    ],
    "question": "How many different cities have these stations?",
    "question_toks": [
      "How",
      "many",
      "different",
      "cities",
      "have",
      "these",
      "stations",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT COUNT(*) FROM station WHERE city  =  \"Mountain View\"",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "station",
      "WHERE",
      "city",
      "=",
      "``",
      "Mountain",
      "View",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "station",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "How many stations does Mountain View city has?",
    "question_toks": [
      "How",
      "many",
      "stations",
      "does",
      "Mountain",
      "View",
      "city",
      "has",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Mountain View\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT COUNT(*) FROM station WHERE city  =  \"Mountain View\"",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "station",
      "WHERE",
      "city",
      "=",
      "``",
      "Mountain",
      "View",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "station",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "How many stations are in Mountain View?",
    "question_toks": [
      "How",
      "many",
      "stations",
      "are",
      "in",
      "Mountain",
      "View",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Mountain View\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT COUNT(*) FROM weather WHERE mean_humidity  >  50 AND mean_visibility_miles  >  8",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "weather",
      "WHERE",
      "mean_humidity",
      ">",
      "50",
      "AND",
      "mean_visibility_miles",
      ">",
      "8"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "weather",
      "where",
      "mean_humidity",
      ">",
      "value",
      "and",
      "mean_visibility_miles",
      ">",
      "value"
    ],
    "question": "How many days had both mean humidity above 50 and mean visibility above 8?",
    "question_toks": [
      "How",
      "many",
      "days",
      "had",
      "both",
      "mean",
      "humidity",
      "above",
      "50",
      "and",
      "mean",
      "visibility",
      "above",
      "8",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              31,
              false
            ],
            null
          ],
          50.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              37,
              false
            ],
            null
          ],
          8.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT COUNT(*) FROM weather WHERE mean_humidity  >  50 AND mean_visibility_miles  >  8",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "weather",
      "WHERE",
      "mean_humidity",
      ">",
      "50",
      "AND",
      "mean_visibility_miles",
      ">",
      "8"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "weather",
      "where",
      "mean_humidity",
      ">",
      "value",
      "and",
      "mean_visibility_miles",
      ">",
      "value"
    ],
    "question": "What is the number of days that had an average humity above 50 and an average visibility above 8?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "days",
      "that",
      "had",
      "an",
      "average",
      "humity",
      "above",
      "50",
      "and",
      "an",
      "average",
      "visibility",
      "above",
      "8",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              31,
              false
            ],
            null
          ],
          50.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              37,
              false
            ],
            null
          ],
          8.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT avg(bikes_available) FROM status WHERE station_id NOT IN (SELECT id FROM station WHERE city  =  \"Palo Alto\")",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "bikes_available",
      ")",
      "FROM",
      "status",
      "WHERE",
      "station_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "id",
      "FROM",
      "station",
      "WHERE",
      "city",
      "=",
      "``",
      "Palo",
      "Alto",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "bikes_available",
      ")",
      "from",
      "status",
      "where",
      "station_id",
      "not",
      "in",
      "(",
      "select",
      "id",
      "from",
      "station",
      "where",
      "city",
      "=",
      "value",
      ")"
    ],
    "question": "What is the average bike availability in stations that are not located in Palo Alto?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "bike",
      "availability",
      "in",
      "stations",
      "that",
      "are",
      "not",
      "located",
      "in",
      "Palo",
      "Alto",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"Palo Alto\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT avg(bikes_available) FROM status WHERE station_id NOT IN (SELECT id FROM station WHERE city  =  \"Palo Alto\")",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "bikes_available",
      ")",
      "FROM",
      "status",
      "WHERE",
      "station_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "id",
      "FROM",
      "station",
      "WHERE",
      "city",
      "=",
      "``",
      "Palo",
      "Alto",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "bikes_available",
      ")",
      "from",
      "status",
      "where",
      "station_id",
      "not",
      "in",
      "(",
      "select",
      "id",
      "from",
      "station",
      "where",
      "city",
      "=",
      "value",
      ")"
    ],
    "question": "What is the average bike availablility for stations not in Palo Alto?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "bike",
      "availablility",
      "for",
      "stations",
      "not",
      "in",
      "Palo",
      "Alto",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"Palo Alto\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT avg(long) FROM station WHERE id NOT IN (SELECT station_id FROM status GROUP BY station_id HAVING max(bikes_available)  >  10)",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "long",
      ")",
      "FROM",
      "station",
      "WHERE",
      "id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "station_id",
      "FROM",
      "status",
      "GROUP",
      "BY",
      "station_id",
      "HAVING",
      "max",
      "(",
      "bikes_available",
      ")",
      ">",
      "10",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "long",
      ")",
      "from",
      "station",
      "where",
      "id",
      "not",
      "in",
      "(",
      "select",
      "station_id",
      "from",
      "status",
      "group",
      "by",
      "station_id",
      "having",
      "max",
      "(",
      "bikes_available",
      ")",
      ">",
      "value",
      ")"
    ],
    "question": "What is the average longitude of stations that never had bike availability more than 10?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "longitude",
      "of",
      "stations",
      "that",
      "never",
      "had",
      "bike",
      "availability",
      "more",
      "than",
      "10",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [
              [
                0,
                8,
                false
              ]
            ],
            "having": [
              [
                false,
                3,
                [
                  0,
                  [
                    1,
                    9,
                    false
                  ],
                  null
                ],
                10.0,
                null
              ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT avg(long) FROM station WHERE id NOT IN (SELECT station_id FROM status GROUP BY station_id HAVING max(bikes_available)  >  10)",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "long",
      ")",
      "FROM",
      "station",
      "WHERE",
      "id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "station_id",
      "FROM",
      "status",
      "GROUP",
      "BY",
      "station_id",
      "HAVING",
      "max",
      "(",
      "bikes_available",
      ")",
      ">",
      "10",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "long",
      ")",
      "from",
      "station",
      "where",
      "id",
      "not",
      "in",
      "(",
      "select",
      "station_id",
      "from",
      "status",
      "group",
      "by",
      "station_id",
      "having",
      "max",
      "(",
      "bikes_available",
      ")",
      ">",
      "value",
      ")"
    ],
    "question": "What is the mean longitude for all stations that have never had more than 10 bikes available?",
    "question_toks": [
      "What",
      "is",
      "the",
      "mean",
      "longitude",
      "for",
      "all",
      "stations",
      "that",
      "have",
      "never",
      "had",
      "more",
      "than",
      "10",
      "bikes",
      "available",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [
              [
                0,
                8,
                false
              ]
            ],
            "having": [
              [
                false,
                3,
                [
                  0,
                  [
                    1,
                    9,
                    false
                  ],
                  null
                ],
                10.0,
                null
              ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT date ,  zip_code FROM weather WHERE max_temperature_f  >=  80",
    "query_toks": [
      "SELECT",
      "date",
      ",",
      "zip_code",
      "FROM",
      "weather",
      "WHERE",
      "max_temperature_f",
      ">",
      "=",
      "80"
    ],
    "query_toks_no_value": [
      "select",
      "date",
      ",",
      "zip_code",
      "from",
      "weather",
      "where",
      "max_temperature_f",
      ">",
      "=",
      "value"
    ],
    "question": "When and in what zip code did max temperature reach 80?",
    "question_toks": [
      "When",
      "and",
      "in",
      "what",
      "zip",
      "code",
      "did",
      "max",
      "temperature",
      "reach",
      "80",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                46,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          80.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT date ,  zip_code FROM weather WHERE max_temperature_f  >=  80",
    "query_toks": [
      "SELECT",
      "date",
      ",",
      "zip_code",
      "FROM",
      "weather",
      "WHERE",
      "max_temperature_f",
      ">",
      "=",
      "80"
    ],
    "query_toks_no_value": [
      "select",
      "date",
      ",",
      "zip_code",
      "from",
      "weather",
      "where",
      "max_temperature_f",
      ">",
      "=",
      "value"
    ],
    "question": "What zip codes have a station with a max temperature greater than or equal to 80 and when did it reach that temperature?",
    "question_toks": [
      "What",
      "zip",
      "codes",
      "have",
      "a",
      "station",
      "with",
      "a",
      "max",
      "temperature",
      "greater",
      "than",
      "or",
      "equal",
      "to",
      "80",
      "and",
      "when",
      "did",
      "it",
      "reach",
      "that",
      "temperature",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                46,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          80.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT date ,  zip_code FROM weather WHERE min_dew_point_f  <  (SELECT min(min_dew_point_f) FROM weather WHERE zip_code  =  94107)",
    "query_toks": [
      "SELECT",
      "date",
      ",",
      "zip_code",
      "FROM",
      "weather",
      "WHERE",
      "min_dew_point_f",
      "<",
      "(",
      "SELECT",
      "min",
      "(",
      "min_dew_point_f",
      ")",
      "FROM",
      "weather",
      "WHERE",
      "zip_code",
      "=",
      "94107",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "date",
      ",",
      "zip_code",
      "from",
      "weather",
      "where",
      "min_dew_point_f",
      "<",
      "(",
      "select",
      "min",
      "(",
      "min_dew_point_f",
      ")",
      "from",
      "weather",
      "where",
      "zip_code",
      "=",
      "value",
      ")"
    ],
    "question": "On which day and in which zip code was the min dew point lower than any day in zip code 94107?",
    "question_toks": [
      "On",
      "which",
      "day",
      "and",
      "in",
      "which",
      "zip",
      "code",
      "was",
      "the",
      "min",
      "dew",
      "point",
      "lower",
      "than",
      "any",
      "day",
      "in",
      "zip",
      "code",
      "94107",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                46,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      29,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    46,
                    false
                  ],
                  null
                ],
                94107.0,
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT date ,  zip_code FROM weather WHERE min_dew_point_f  <  (SELECT min(min_dew_point_f) FROM weather WHERE zip_code  =  94107)",
    "query_toks": [
      "SELECT",
      "date",
      ",",
      "zip_code",
      "FROM",
      "weather",
      "WHERE",
      "min_dew_point_f",
      "<",
      "(",
      "SELECT",
      "min",
      "(",
      "min_dew_point_f",
      ")",
      "FROM",
      "weather",
      "WHERE",
      "zip_code",
      "=",
      "94107",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "date",
      ",",
      "zip_code",
      "from",
      "weather",
      "where",
      "min_dew_point_f",
      "<",
      "(",
      "select",
      "min",
      "(",
      "min_dew_point_f",
      ")",
      "from",
      "weather",
      "where",
      "zip_code",
      "=",
      "value",
      ")"
    ],
    "question": "Which days had a minimum dew point smaller than any day in zip code 94107, and in which zip codes were those measurements taken?",
    "question_toks": [
      "Which",
      "days",
      "had",
      "a",
      "minimum",
      "dew",
      "point",
      "smaller",
      "than",
      "any",
      "day",
      "in",
      "zip",
      "code",
      "94107",
      ",",
      "and",
      "in",
      "which",
      "zip",
      "codes",
      "were",
      "those",
      "measurements",
      "taken",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                46,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      29,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    46,
                    false
                  ],
                  null
                ],
                94107.0,
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT date FROM weather WHERE zip_code  =  94107 AND EVENTS != \"Fog\" AND EVENTS != \"Rain\"",
    "query_toks": [
      "SELECT",
      "date",
      "FROM",
      "weather",
      "WHERE",
      "zip_code",
      "=",
      "94107",
      "AND",
      "EVENTS",
      "!",
      "=",
      "``",
      "Fog",
      "''",
      "AND",
      "EVENTS",
      "!",
      "=",
      "``",
      "Rain",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "date",
      "from",
      "weather",
      "where",
      "zip_code",
      "=",
      "value",
      "and",
      "events",
      "!",
      "=",
      "value",
      "and",
      "events",
      "!",
      "=",
      "value"
    ],
    "question": "In zip code 94107, on which day neither Fog nor Rain was not observed?",
    "question_toks": [
      "In",
      "zip",
      "code",
      "94107",
      ",",
      "on",
      "which",
      "day",
      "neither",
      "Fog",
      "nor",
      "Rain",
      "was",
      "not",
      "observed",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              46,
              false
            ],
            null
          ],
          94107.0,
          null
        ],
        "and",
        [
          false,
          7,
          [
            0,
            [
              0,
              44,
              false
            ],
            null
          ],
          "\"Fog\"",
          null
        ],
        "and",
        [
          false,
          7,
          [
            0,
            [
              0,
              44,
              false
            ],
            null
          ],
          "\"Rain\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT date FROM weather WHERE zip_code  =  94107 AND EVENTS != \"Fog\" AND EVENTS != \"Rain\"",
    "query_toks": [
      "SELECT",
      "date",
      "FROM",
      "weather",
      "WHERE",
      "zip_code",
      "=",
      "94107",
      "AND",
      "EVENTS",
      "!",
      "=",
      "``",
      "Fog",
      "''",
      "AND",
      "EVENTS",
      "!",
      "=",
      "``",
      "Rain",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "date",
      "from",
      "weather",
      "where",
      "zip_code",
      "=",
      "value",
      "and",
      "events",
      "!",
      "=",
      "value",
      "and",
      "events",
      "!",
      "=",
      "value"
    ],
    "question": "On which day has it neither been foggy nor rained in the zip code of 94107?",
    "question_toks": [
      "On",
      "which",
      "day",
      "has",
      "it",
      "neither",
      "been",
      "foggy",
      "nor",
      "rained",
      "in",
      "the",
      "zip",
      "code",
      "of",
      "94107",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              46,
              false
            ],
            null
          ],
          94107.0,
          null
        ],
        "and",
        [
          false,
          7,
          [
            0,
            [
              0,
              44,
              false
            ],
            null
          ],
          "\"Fog\"",
          null
        ],
        "and",
        [
          false,
          7,
          [
            0,
            [
              0,
              44,
              false
            ],
            null
          ],
          "\"Rain\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT id FROM trip WHERE duration  >=  (SELECT avg(duration) FROM trip WHERE zip_code  =  94103)",
    "query_toks": [
      "SELECT",
      "id",
      "FROM",
      "trip",
      "WHERE",
      "duration",
      ">",
      "=",
      "(",
      "SELECT",
      "avg",
      "(",
      "duration",
      ")",
      "FROM",
      "trip",
      "WHERE",
      "zip_code",
      "=",
      "94103",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "id",
      "from",
      "trip",
      "where",
      "duration",
      ">",
      "=",
      "(",
      "select",
      "avg",
      "(",
      "duration",
      ")",
      "from",
      "trip",
      "where",
      "zip_code",
      "=",
      "value",
      ")"
    ],
    "question": "Find the id for the trips that lasted at least as long as the average duration of trips in zip code 94103.",
    "question_toks": [
      "Find",
      "the",
      "id",
      "for",
      "the",
      "trips",
      "that",
      "lasted",
      "at",
      "least",
      "as",
      "long",
      "as",
      "the",
      "average",
      "duration",
      "of",
      "trips",
      "in",
      "zip",
      "code",
      "94103",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      13,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    22,
                    false
                  ],
                  null
                ],
                94103.0,
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT id FROM trip WHERE duration  >=  (SELECT avg(duration) FROM trip WHERE zip_code  =  94103)",
    "query_toks": [
      "SELECT",
      "id",
      "FROM",
      "trip",
      "WHERE",
      "duration",
      ">",
      "=",
      "(",
      "SELECT",
      "avg",
      "(",
      "duration",
      ")",
      "FROM",
      "trip",
      "WHERE",
      "zip_code",
      "=",
      "94103",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "id",
      "from",
      "trip",
      "where",
      "duration",
      ">",
      "=",
      "(",
      "select",
      "avg",
      "(",
      "duration",
      ")",
      "from",
      "trip",
      "where",
      "zip_code",
      "=",
      "value",
      ")"
    ],
    "question": "What are the ids of all trips that had a duration as long as the average trip duration in the zip code 94103?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "all",
      "trips",
      "that",
      "had",
      "a",
      "duration",
      "as",
      "long",
      "as",
      "the",
      "average",
      "trip",
      "duration",
      "in",
      "the",
      "zip",
      "code",
      "94103",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      13,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    22,
                    false
                  ],
                  null
                ],
                94103.0,
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT date FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31",
    "query_toks": [
      "SELECT",
      "date",
      "FROM",
      "weather",
      "WHERE",
      "mean_sea_level_pressure_inches",
      "BETWEEN",
      "30.3",
      "AND",
      "31"
    ],
    "query_toks_no_value": [
      "select",
      "date",
      "from",
      "weather",
      "where",
      "mean_sea_level_pressure_inches",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What are the dates in which the mean sea level pressure was between 30.3 and 31?",
    "question_toks": [
      "What",
      "are",
      "the",
      "dates",
      "in",
      "which",
      "the",
      "mean",
      "sea",
      "level",
      "pressure",
      "was",
      "between",
      "30.3",
      "and",
      "31",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              34,
              false
            ],
            null
          ],
          30.3,
          31.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT date FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31",
    "query_toks": [
      "SELECT",
      "date",
      "FROM",
      "weather",
      "WHERE",
      "mean_sea_level_pressure_inches",
      "BETWEEN",
      "30.3",
      "AND",
      "31"
    ],
    "query_toks_no_value": [
      "select",
      "date",
      "from",
      "weather",
      "where",
      "mean_sea_level_pressure_inches",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What are the dates that have an average sea level pressure between 30.3 and 31?",
    "question_toks": [
      "What",
      "are",
      "the",
      "dates",
      "that",
      "have",
      "an",
      "average",
      "sea",
      "level",
      "pressure",
      "between",
      "30.3",
      "and",
      "31",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              34,
              false
            ],
            null
          ],
          30.3,
          31.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "book_2",
    "query": "SELECT count(*) FROM book",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "book"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "book"
    ],
    "question": "How many books are there?",
    "question_toks": [
      "How",
      "many",
      "books",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "book_2",
    "query": "SELECT Title FROM book WHERE Writer != \"Elaine Lee\"",
    "query_toks": [
      "SELECT",
      "Title",
      "FROM",
      "book",
      "WHERE",
      "Writer",
      "!",
      "=",
      "``",
      "Elaine",
      "Lee",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "book",
      "where",
      "writer",
      "!",
      "=",
      "value"
    ],
    "question": "What are the titles of the books whose writer is not \"Elaine Lee\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "titles",
      "of",
      "the",
      "books",
      "whose",
      "writer",
      "is",
      "not",
      "``",
      "Elaine",
      "Lee",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Elaine Lee\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "book_2",
    "query": "SELECT Title ,  Issues FROM book",
    "query_toks": [
      "SELECT",
      "Title",
      ",",
      "Issues",
      "FROM",
      "book"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      ",",
      "issues",
      "from",
      "book"
    ],
    "question": "What are the title and issues of the books?",
    "question_toks": [
      "What",
      "are",
      "the",
      "title",
      "and",
      "issues",
      "of",
      "the",
      "books",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "book_2",
    "query": "SELECT Title FROM book WHERE Book_ID NOT IN (SELECT Book_ID FROM publication)",
    "query_toks": [
      "SELECT",
      "Title",
      "FROM",
      "book",
      "WHERE",
      "Book_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Book_ID",
      "FROM",
      "publication",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "book",
      "where",
      "book_id",
      "not",
      "in",
      "(",
      "select",
      "book_id",
      "from",
      "publication",
      ")"
    ],
    "question": "List the titles of books that are not published.",
    "question_toks": [
      "List",
      "the",
      "titles",
      "of",
      "books",
      "that",
      "are",
      "not",
      "published",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      2,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "book_2",
    "query": "SELECT COUNT (DISTINCT Publication_Date) FROM publication",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "Publication_Date",
      ")",
      "FROM",
      "publication"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "publication_date",
      ")",
      "from",
      "publication"
    ],
    "question": "What is the number of distinct publication dates?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "distinct",
      "publication",
      "dates",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                4,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "book_2",
    "query": "SELECT COUNT (DISTINCT Publication_Date) FROM publication",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "Publication_Date",
      ")",
      "FROM",
      "publication"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "publication_date",
      ")",
      "from",
      "publication"
    ],
    "question": "How many distinct publication dates are there in our record?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "publication",
      "dates",
      "are",
      "there",
      "in",
      "our",
      "record",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                4,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "book_2",
    "query": "SELECT Price FROM publication WHERE Publisher  =  \"Person\" OR Publisher  =  \"Wiley\"",
    "query_toks": [
      "SELECT",
      "Price",
      "FROM",
      "publication",
      "WHERE",
      "Publisher",
      "=",
      "``",
      "Person",
      "''",
      "OR",
      "Publisher",
      "=",
      "``",
      "Wiley",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "publication",
      "where",
      "publisher",
      "=",
      "value",
      "or",
      "publisher",
      "=",
      "value"
    ],
    "question": "Show the prices of publications whose publisher is either \"Person\" or \"Wiley\"",
    "question_toks": [
      "Show",
      "the",
      "prices",
      "of",
      "publications",
      "whose",
      "publisher",
      "is",
      "either",
      "``",
      "Person",
      "''",
      "or",
      "``",
      "Wiley",
      "''"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Person\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Wiley\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "musical",
    "query": "SELECT count(*) FROM actor",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "actor"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "actor"
    ],
    "question": "How many actors are there?",
    "question_toks": [
      "How",
      "many",
      "actors",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "musical",
    "query": "SELECT count(*) FROM actor",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "actor"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "actor"
    ],
    "question": "Count the number of actors.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "actors",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "musical",
    "query": "SELECT Character ,  Duration FROM actor",
    "query_toks": [
      "SELECT",
      "Character",
      ",",
      "Duration",
      "FROM",
      "actor"
    ],
    "query_toks_no_value": [
      "select",
      "character",
      ",",
      "duration",
      "from",
      "actor"
    ],
    "question": "What are the characters and duration of actors?",
    "question_toks": [
      "What",
      "are",
      "the",
      "characters",
      "and",
      "duration",
      "of",
      "actors",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "musical",
    "query": "SELECT Character ,  Duration FROM actor",
    "query_toks": [
      "SELECT",
      "Character",
      ",",
      "Duration",
      "FROM",
      "actor"
    ],
    "query_toks_no_value": [
      "select",
      "character",
      ",",
      "duration",
      "from",
      "actor"
    ],
    "question": "Return the characters and durations for each actor.",
    "question_toks": [
      "Return",
      "the",
      "characters",
      "and",
      "durations",
      "for",
      "each",
      "actor",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "musical",
    "query": "SELECT Name FROM actor WHERE Age != 20",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "actor",
      "WHERE",
      "Age",
      "!",
      "=",
      "20"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "actor",
      "where",
      "age",
      "!",
      "=",
      "value"
    ],
    "question": "List the name of actors whose age is not 20.",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "actors",
      "whose",
      "age",
      "is",
      "not",
      "20",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          20.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "musical",
    "query": "SELECT Name FROM actor WHERE Age != 20",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "actor",
      "WHERE",
      "Age",
      "!",
      "=",
      "20"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "actor",
      "where",
      "age",
      "!",
      "=",
      "value"
    ],
    "question": "What are the names of actors who are not 20 years old?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "actors",
      "who",
      "are",
      "not",
      "20",
      "years",
      "old",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          20.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "musical",
    "query": "SELECT Name FROM musical WHERE Nominee  =  \"Bob Fosse\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "musical",
      "WHERE",
      "Nominee",
      "=",
      "``",
      "Bob",
      "Fosse",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "musical",
      "where",
      "nominee",
      "=",
      "value"
    ],
    "question": "What are the names of musicals with nominee \"Bob Fosse\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "musicals",
      "with",
      "nominee",
      "``",
      "Bob",
      "Fosse",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Bob Fosse\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "musical",
    "query": "SELECT Name FROM musical WHERE Nominee  =  \"Bob Fosse\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "musical",
      "WHERE",
      "Nominee",
      "=",
      "``",
      "Bob",
      "Fosse",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "musical",
      "where",
      "nominee",
      "=",
      "value"
    ],
    "question": "Return the names of musicals who have the nominee Bob Fosse.",
    "question_toks": [
      "Return",
      "the",
      "names",
      "of",
      "musicals",
      "who",
      "have",
      "the",
      "nominee",
      "Bob",
      "Fosse",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Bob Fosse\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "musical",
    "query": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "musical",
      "WHERE",
      "Musical_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Musical_ID",
      "FROM",
      "actor",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "musical",
      "where",
      "musical_id",
      "not",
      "in",
      "(",
      "select",
      "musical_id",
      "from",
      "actor",
      ")"
    ],
    "question": "List the name of musicals that do not have actors.",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "musicals",
      "that",
      "do",
      "not",
      "have",
      "actors",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      10,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "musical",
    "query": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "musical",
      "WHERE",
      "Musical_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Musical_ID",
      "FROM",
      "actor",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "musical",
      "where",
      "musical_id",
      "not",
      "in",
      "(",
      "select",
      "musical_id",
      "from",
      "actor",
      ")"
    ],
    "question": "What are the names of musicals who have no actors?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "musicals",
      "who",
      "have",
      "no",
      "actors",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      10,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "musical",
    "query": "SELECT Nominee FROM musical WHERE Award  =  \"Tony Award\" OR Award  =  \"Cleavant Derricks\"",
    "query_toks": [
      "SELECT",
      "Nominee",
      "FROM",
      "musical",
      "WHERE",
      "Award",
      "=",
      "``",
      "Tony",
      "Award",
      "''",
      "OR",
      "Award",
      "=",
      "``",
      "Cleavant",
      "Derricks",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "nominee",
      "from",
      "musical",
      "where",
      "award",
      "=",
      "value",
      "or",
      "award",
      "=",
      "value"
    ],
    "question": "Show the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\".",
    "question_toks": [
      "Show",
      "the",
      "musical",
      "nominee",
      "with",
      "award",
      "``",
      "Bob",
      "Fosse",
      "''",
      "or",
      "``",
      "Cleavant",
      "Derricks",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Tony Award\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Cleavant Derricks\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "musical",
    "query": "SELECT Nominee FROM musical WHERE Award  =  \"Tony Award\" OR Award  =  \"Cleavant Derricks\"",
    "query_toks": [
      "SELECT",
      "Nominee",
      "FROM",
      "musical",
      "WHERE",
      "Award",
      "=",
      "``",
      "Tony",
      "Award",
      "''",
      "OR",
      "Award",
      "=",
      "``",
      "Cleavant",
      "Derricks",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "nominee",
      "from",
      "musical",
      "where",
      "award",
      "=",
      "value",
      "or",
      "award",
      "=",
      "value"
    ],
    "question": "Who are the nominees who were nominated for either of the Bob Fosse or Cleavant Derricks awards?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "nominees",
      "who",
      "were",
      "nominated",
      "for",
      "either",
      "of",
      "the",
      "Bob",
      "Fosse",
      "or",
      "Cleavant",
      "Derricks",
      "awards",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Tony Award\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Cleavant Derricks\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "twitter_1",
    "query": "SELECT email FROM user_profiles WHERE name  =  'Mary'",
    "query_toks": [
      "SELECT",
      "email",
      "FROM",
      "user_profiles",
      "WHERE",
      "name",
      "=",
      "'Mary",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "email",
      "from",
      "user_profiles",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "Find the emails of the user named \"Mary\".",
    "question_toks": [
      "Find",
      "the",
      "emails",
      "of",
      "the",
      "user",
      "named",
      "``",
      "Mary",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Mary\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "twitter_1",
    "query": "SELECT partitionid FROM user_profiles WHERE name  =  'Iron Man'",
    "query_toks": [
      "SELECT",
      "partitionid",
      "FROM",
      "user_profiles",
      "WHERE",
      "name",
      "=",
      "'Iron",
      "Man",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "partitionid",
      "from",
      "user_profiles",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "What is the partition id of the user named \"Iron Man\".",
    "question_toks": [
      "What",
      "is",
      "the",
      "partition",
      "id",
      "of",
      "the",
      "user",
      "named",
      "``",
      "Iron",
      "Man",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Iron Man\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "twitter_1",
    "query": "SELECT count(*) FROM user_profiles",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "user_profiles"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "user_profiles"
    ],
    "question": "How many users are there?",
    "question_toks": [
      "How",
      "many",
      "users",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "twitter_1",
    "query": "SELECT count(*) FROM follows",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "follows"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "follows"
    ],
    "question": "How many followers does each user have?",
    "question_toks": [
      "How",
      "many",
      "followers",
      "does",
      "each",
      "user",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "twitter_1",
    "query": "SELECT count(*) FROM tweets",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "tweets"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "tweets"
    ],
    "question": "Find the number of tweets in record.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "tweets",
      "in",
      "record",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "twitter_1",
    "query": "SELECT count(DISTINCT UID) FROM tweets",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "UID",
      ")",
      "FROM",
      "tweets"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "uid",
      ")",
      "from",
      "tweets"
    ],
    "question": "Find the number of users who posted some tweets.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "users",
      "who",
      "posted",
      "some",
      "tweets",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                4,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "twitter_1",
    "query": "SELECT name ,  email FROM user_profiles WHERE name LIKE '%Swift%'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "email",
      "FROM",
      "user_profiles",
      "WHERE",
      "name",
      "LIKE",
      "'",
      "%",
      "Swift",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "email",
      "from",
      "user_profiles",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "Find the name and email of the user whose name contains the word \u2018Swift\u2019.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "and",
      "email",
      "of",
      "the",
      "user",
      "whose",
      "name",
      "contains",
      "the",
      "word",
      "\u2018Swift\u2019",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"%Swift%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "twitter_1",
    "query": "SELECT name FROM user_profiles WHERE email LIKE '%superstar%' OR email LIKE '%edu%'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "user_profiles",
      "WHERE",
      "email",
      "LIKE",
      "'",
      "%",
      "superstar",
      "%",
      "'",
      "OR",
      "email",
      "LIKE",
      "'",
      "%",
      "edu",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "user_profiles",
      "where",
      "email",
      "like",
      "value",
      "or",
      "email",
      "like",
      "value"
    ],
    "question": "Find the names of users whose emails contain \u2018superstar\u2019 or \u2018edu\u2019.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "users",
      "whose",
      "emails",
      "contain",
      "\u2018superstar\u2019",
      "or",
      "\u2018edu\u2019",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"%superstar%\"",
          null
        ],
        "or",
        [
          false,
          9,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"%edu%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "twitter_1",
    "query": "SELECT text FROM tweets WHERE text LIKE '%intern%'",
    "query_toks": [
      "SELECT",
      "text",
      "FROM",
      "tweets",
      "WHERE",
      "text",
      "LIKE",
      "'",
      "%",
      "intern",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "text",
      "from",
      "tweets",
      "where",
      "text",
      "like",
      "value"
    ],
    "question": "Return the text of tweets about the topic 'intern'.",
    "question_toks": [
      "Return",
      "the",
      "text",
      "of",
      "tweets",
      "about",
      "the",
      "topic",
      "'intern",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"%intern%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "twitter_1",
    "query": "SELECT name ,  email FROM user_profiles WHERE followers  >  1000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "email",
      "FROM",
      "user_profiles",
      "WHERE",
      "followers",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "email",
      "from",
      "user_profiles",
      "where",
      "followers",
      ">",
      "value"
    ],
    "question": "Find the name and email of the users who have more than 1000 followers.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "and",
      "email",
      "of",
      "the",
      "users",
      "who",
      "have",
      "more",
      "than",
      "1000",
      "followers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          1000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "twitter_1",
    "query": "SELECT avg(followers) FROM user_profiles WHERE UID NOT IN (SELECT UID FROM tweets)",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "followers",
      ")",
      "FROM",
      "user_profiles",
      "WHERE",
      "UID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "UID",
      "FROM",
      "tweets",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "followers",
      ")",
      "from",
      "user_profiles",
      "where",
      "uid",
      "not",
      "in",
      "(",
      "select",
      "uid",
      "from",
      "tweets",
      ")"
    ],
    "question": "Find the average number of followers for the users who do not have any tweet.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "number",
      "of",
      "followers",
      "for",
      "the",
      "users",
      "who",
      "do",
      "not",
      "have",
      "any",
      "tweet",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "twitter_1",
    "query": "SELECT avg(followers) FROM user_profiles WHERE UID IN (SELECT UID FROM tweets)",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "followers",
      ")",
      "FROM",
      "user_profiles",
      "WHERE",
      "UID",
      "IN",
      "(",
      "SELECT",
      "UID",
      "FROM",
      "tweets",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "followers",
      ")",
      "from",
      "user_profiles",
      "where",
      "uid",
      "in",
      "(",
      "select",
      "uid",
      "from",
      "tweets",
      ")"
    ],
    "question": "Find the average number of followers for the users who had some tweets.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "number",
      "of",
      "followers",
      "for",
      "the",
      "users",
      "who",
      "had",
      "some",
      "tweets",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "twitter_1",
    "query": "SELECT max(followers) ,  sum(followers) FROM user_profiles",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "followers",
      ")",
      ",",
      "sum",
      "(",
      "followers",
      ")",
      "FROM",
      "user_profiles"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "followers",
      ")",
      ",",
      "sum",
      "(",
      "followers",
      ")",
      "from",
      "user_profiles"
    ],
    "question": "Find the maximum and total number of followers of all users.",
    "question_toks": [
      "Find",
      "the",
      "maximum",
      "and",
      "total",
      "number",
      "of",
      "followers",
      "of",
      "all",
      "users",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            4,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name  =  \"Green\"",
    "query_toks": [
      "SELECT",
      "attribute_data_type",
      "FROM",
      "Attribute_Definitions",
      "WHERE",
      "attribute_name",
      "=",
      "``",
      "Green",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "attribute_data_type",
      "from",
      "attribute_definitions",
      "where",
      "attribute_name",
      "=",
      "value"
    ],
    "question": "What is the attribute data type of the attribute with name \"Green\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "attribute",
      "data",
      "type",
      "of",
      "the",
      "attribute",
      "with",
      "name",
      "``",
      "Green",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Green\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name  =  \"Green\"",
    "query_toks": [
      "SELECT",
      "attribute_data_type",
      "FROM",
      "Attribute_Definitions",
      "WHERE",
      "attribute_name",
      "=",
      "``",
      "Green",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "attribute_data_type",
      "from",
      "attribute_definitions",
      "where",
      "attribute_name",
      "=",
      "value"
    ],
    "question": "Find the attribute data type for the attribute named \"Green\".",
    "question_toks": [
      "Find",
      "the",
      "attribute",
      "data",
      "type",
      "for",
      "the",
      "attribute",
      "named",
      "``",
      "Green",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Green\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT catalog_level_name ,  catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10",
    "query_toks": [
      "SELECT",
      "catalog_level_name",
      ",",
      "catalog_level_number",
      "FROM",
      "Catalog_Structure",
      "WHERE",
      "catalog_level_number",
      "BETWEEN",
      "5",
      "AND",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "catalog_level_name",
      ",",
      "catalog_level_number",
      "from",
      "catalog_structure",
      "where",
      "catalog_level_number",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "Find the name and level of catalog structure with level between 5 and 10.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "and",
      "level",
      "of",
      "catalog",
      "structure",
      "with",
      "level",
      "between",
      "5",
      "and",
      "10",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          5.0,
          10.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT catalog_level_name ,  catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10",
    "query_toks": [
      "SELECT",
      "catalog_level_name",
      ",",
      "catalog_level_number",
      "FROM",
      "Catalog_Structure",
      "WHERE",
      "catalog_level_number",
      "BETWEEN",
      "5",
      "AND",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "catalog_level_name",
      ",",
      "catalog_level_number",
      "from",
      "catalog_structure",
      "where",
      "catalog_level_number",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What are the name and level of catalog structure with level number between 5 and 10",
    "question_toks": [
      "What",
      "are",
      "the",
      "name",
      "and",
      "level",
      "of",
      "catalog",
      "structure",
      "with",
      "level",
      "number",
      "between",
      "5",
      "and",
      "10"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          5.0,
          10.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT avg(price_in_euros) ,  min(price_in_euros) FROM catalog_contents",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price_in_euros",
      ")",
      ",",
      "min",
      "(",
      "price_in_euros",
      ")",
      "FROM",
      "catalog_contents"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price_in_euros",
      ")",
      ",",
      "min",
      "(",
      "price_in_euros",
      ")",
      "from",
      "catalog_contents"
    ],
    "question": "What are the average and minimum price (in Euro) of all products?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "and",
      "minimum",
      "price",
      "(",
      "in",
      "Euro",
      ")",
      "of",
      "all",
      "products",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT avg(price_in_euros) ,  min(price_in_euros) FROM catalog_contents",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price_in_euros",
      ")",
      ",",
      "min",
      "(",
      "price_in_euros",
      ")",
      "FROM",
      "catalog_contents"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price_in_euros",
      ")",
      ",",
      "min",
      "(",
      "price_in_euros",
      ")",
      "from",
      "catalog_contents"
    ],
    "question": "Give me the average and minimum price (in Euro) of the products.",
    "question_toks": [
      "Give",
      "me",
      "the",
      "average",
      "and",
      "minimum",
      "price",
      "(",
      "in",
      "Euro",
      ")",
      "of",
      "the",
      "products",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE \"2%\"",
    "query_toks": [
      "SELECT",
      "catalog_entry_name",
      "FROM",
      "catalog_contents",
      "WHERE",
      "product_stock_number",
      "LIKE",
      "``",
      "2",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "catalog_entry_name",
      "from",
      "catalog_contents",
      "where",
      "product_stock_number",
      "like",
      "value"
    ],
    "question": "Find the names of all the products whose stock number starts with \"2\".",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "all",
      "the",
      "products",
      "whose",
      "stock",
      "number",
      "starts",
      "with",
      "``",
      "2",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"2%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE \"2%\"",
    "query_toks": [
      "SELECT",
      "catalog_entry_name",
      "FROM",
      "catalog_contents",
      "WHERE",
      "product_stock_number",
      "LIKE",
      "``",
      "2",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "catalog_entry_name",
      "from",
      "catalog_contents",
      "where",
      "product_stock_number",
      "like",
      "value"
    ],
    "question": "Which catalog contents have a product stock number that starts from \"2\"? Show the catalog entry names.",
    "question_toks": [
      "Which",
      "catalog",
      "contents",
      "have",
      "a",
      "product",
      "stock",
      "number",
      "that",
      "starts",
      "from",
      "``",
      "2",
      "''",
      "?",
      "Show",
      "the",
      "catalog",
      "entry",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"2%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH  <  3 OR width  >  5",
    "query_toks": [
      "SELECT",
      "catalog_entry_name",
      "FROM",
      "catalog_contents",
      "WHERE",
      "LENGTH",
      "<",
      "3",
      "OR",
      "width",
      ">",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "catalog_entry_name",
      "from",
      "catalog_contents",
      "where",
      "length",
      "<",
      "value",
      "or",
      "width",
      ">",
      "value"
    ],
    "question": "Find the names of the products with length smaller than 3 or height greater than 5.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "the",
      "products",
      "with",
      "length",
      "smaller",
      "than",
      "3",
      "or",
      "height",
      "greater",
      "than",
      "5",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          3.0,
          null
        ],
        "or",
        [
          false,
          3,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          5.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH  <  3 OR width  >  5",
    "query_toks": [
      "SELECT",
      "catalog_entry_name",
      "FROM",
      "catalog_contents",
      "WHERE",
      "LENGTH",
      "<",
      "3",
      "OR",
      "width",
      ">",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "catalog_entry_name",
      "from",
      "catalog_contents",
      "where",
      "length",
      "<",
      "value",
      "or",
      "width",
      ">",
      "value"
    ],
    "question": "Which catalog contents have length below 3 or above 5? Find the catalog entry names.",
    "question_toks": [
      "Which",
      "catalog",
      "contents",
      "have",
      "length",
      "below",
      "3",
      "or",
      "above",
      "5",
      "?",
      "Find",
      "the",
      "catalog",
      "entry",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          3.0,
          null
        ],
        "or",
        [
          false,
          3,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          5.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT catalog_entry_name ,  capacity FROM Catalog_Contents WHERE price_in_dollars  >  700",
    "query_toks": [
      "SELECT",
      "catalog_entry_name",
      ",",
      "capacity",
      "FROM",
      "Catalog_Contents",
      "WHERE",
      "price_in_dollars",
      ">",
      "700"
    ],
    "query_toks_no_value": [
      "select",
      "catalog_entry_name",
      ",",
      "capacity",
      "from",
      "catalog_contents",
      "where",
      "price_in_dollars",
      ">",
      "value"
    ],
    "question": "Find the name and capacity of products with price greater than 700 (in USD).",
    "question_toks": [
      "Find",
      "the",
      "name",
      "and",
      "capacity",
      "of",
      "products",
      "with",
      "price",
      "greater",
      "than",
      "700",
      "(",
      "in",
      "USD",
      ")",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          700.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT catalog_entry_name ,  capacity FROM Catalog_Contents WHERE price_in_dollars  >  700",
    "query_toks": [
      "SELECT",
      "catalog_entry_name",
      ",",
      "capacity",
      "FROM",
      "Catalog_Contents",
      "WHERE",
      "price_in_dollars",
      ">",
      "700"
    ],
    "query_toks_no_value": [
      "select",
      "catalog_entry_name",
      ",",
      "capacity",
      "from",
      "catalog_contents",
      "where",
      "price_in_dollars",
      ">",
      "value"
    ],
    "question": "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities.",
    "question_toks": [
      "Which",
      "catalog",
      "contents",
      "has",
      "price",
      "above",
      "700",
      "dollars",
      "?",
      "Show",
      "their",
      "catalog",
      "entry",
      "names",
      "and",
      "capacities",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          700.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT count(*) FROM catalog_contents",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "catalog_contents"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "catalog_contents"
    ],
    "question": "How many products are there in the records?",
    "question_toks": [
      "How",
      "many",
      "products",
      "are",
      "there",
      "in",
      "the",
      "records",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT count(*) FROM catalog_contents",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "catalog_contents"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "catalog_contents"
    ],
    "question": "Find the total number of catalog contents.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "number",
      "of",
      "catalog",
      "contents",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id  >  8",
    "query_toks": [
      "SELECT",
      "catalog_entry_name",
      "FROM",
      "catalog_contents",
      "WHERE",
      "next_entry_id",
      ">",
      "8"
    ],
    "query_toks_no_value": [
      "select",
      "catalog_entry_name",
      "from",
      "catalog_contents",
      "where",
      "next_entry_id",
      ">",
      "value"
    ],
    "question": "Name all the products with next entry ID greater than 8.",
    "question_toks": [
      "Name",
      "all",
      "the",
      "products",
      "with",
      "next",
      "entry",
      "ID",
      "greater",
      "than",
      "8",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          8.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id  >  8",
    "query_toks": [
      "SELECT",
      "catalog_entry_name",
      "FROM",
      "catalog_contents",
      "WHERE",
      "next_entry_id",
      ">",
      "8"
    ],
    "query_toks_no_value": [
      "select",
      "catalog_entry_name",
      "from",
      "catalog_contents",
      "where",
      "next_entry_id",
      ">",
      "value"
    ],
    "question": "What are the catalog entry names of the products with next entry ID above 8?",
    "question_toks": [
      "What",
      "are",
      "the",
      "catalog",
      "entry",
      "names",
      "of",
      "the",
      "products",
      "with",
      "next",
      "entry",
      "ID",
      "above",
      "8",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          8.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM Aircraft",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Aircraft"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "aircraft"
    ],
    "question": "How many aircrafts do we have?",
    "question_toks": [
      "How",
      "many",
      "aircrafts",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM Aircraft",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Aircraft"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "aircraft"
    ],
    "question": "How many aircrafts exist in the database?",
    "question_toks": [
      "How",
      "many",
      "aircrafts",
      "exist",
      "in",
      "the",
      "database",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name ,  distance FROM Aircraft",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "Aircraft"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft"
    ],
    "question": "Show name and distance for all aircrafts.",
    "question_toks": [
      "Show",
      "name",
      "and",
      "distance",
      "for",
      "all",
      "aircrafts",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name ,  distance FROM Aircraft",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "Aircraft"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft"
    ],
    "question": "What are the names and distances for all airplanes?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "distances",
      "for",
      "all",
      "airplanes",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM Aircraft WHERE distance  >  1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Show ids for all aircrafts with more than 1000 distance.",
    "question_toks": [
      "Show",
      "ids",
      "for",
      "all",
      "aircrafts",
      "with",
      "more",
      "than",
      "1000",
      "distance",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          1000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM Aircraft WHERE distance  >  1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "What are the ids of all aircrafts that can cover a distance of more than 1000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "all",
      "aircrafts",
      "that",
      "can",
      "cover",
      "a",
      "distance",
      "of",
      "more",
      "than",
      "1000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          1000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM Aircraft WHERE distance BETWEEN 1000 AND 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      "BETWEEN",
      "1000",
      "AND",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "aircraft",
      "where",
      "distance",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "How many aircrafts have distance between 1000 and 5000?",
    "question_toks": [
      "How",
      "many",
      "aircrafts",
      "have",
      "distance",
      "between",
      "1000",
      "and",
      "5000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          1000.0,
          5000.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM Aircraft WHERE distance BETWEEN 1000 AND 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      "BETWEEN",
      "1000",
      "AND",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "aircraft",
      "where",
      "distance",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What is the count of aircrafts that have a distance between 1000 and 5000?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "aircrafts",
      "that",
      "have",
      "a",
      "distance",
      "between",
      "1000",
      "and",
      "5000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          1000.0,
          5000.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name ,  distance FROM Aircraft WHERE aid  =  12",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "Aircraft",
      "WHERE",
      "aid",
      "=",
      "12"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "aid",
      "=",
      "value"
    ],
    "question": "What is the name and distance for aircraft with id 12?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "and",
      "distance",
      "for",
      "aircraft",
      "with",
      "id",
      "12",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          12.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name ,  distance FROM Aircraft WHERE aid  =  12",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "Aircraft",
      "WHERE",
      "aid",
      "=",
      "12"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "aid",
      "=",
      "value"
    ],
    "question": "What is the name and distance for the aircraft that has an id of 12?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "and",
      "distance",
      "for",
      "the",
      "aircraft",
      "that",
      "has",
      "an",
      "id",
      "of",
      "12",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          12.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT min(distance) ,  avg(distance) ,  max(distance) FROM Aircraft",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "aircraft"
    ],
    "question": "What is the minimum, average, and maximum distance of all aircrafts.",
    "question_toks": [
      "What",
      "is",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "distance",
      "of",
      "all",
      "aircrafts",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT min(distance) ,  avg(distance) ,  max(distance) FROM Aircraft",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "aircraft"
    ],
    "question": "Return the minimum, average and maximum distances traveled across all aircrafts.",
    "question_toks": [
      "Return",
      "the",
      "minimum",
      ",",
      "average",
      "and",
      "maximum",
      "distances",
      "traveled",
      "across",
      "all",
      "aircrafts",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance  >  (SELECT avg(distance) FROM Aircraft)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")"
    ],
    "question": "Show names for all aircrafts with distances more than the average.",
    "question_toks": [
      "Show",
      "names",
      "for",
      "all",
      "aircrafts",
      "with",
      "distances",
      "more",
      "than",
      "the",
      "average",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      11,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance  >  (SELECT avg(distance) FROM Aircraft)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")"
    ],
    "question": "What are the names of all aircrafts that can cover more distances than average?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "aircrafts",
      "that",
      "can",
      "cover",
      "more",
      "distances",
      "than",
      "average",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      11,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM Employee",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Employee"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "employee"
    ],
    "question": "How many employees do we have?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM Employee",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Employee"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "employee"
    ],
    "question": "What is the number of employees?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "employees",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT eid FROM Employee WHERE salary  >  100000",
    "query_toks": [
      "SELECT",
      "eid",
      "FROM",
      "Employee",
      "WHERE",
      "salary",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "eid",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Show ids for all employees with at least 100000 salary.",
    "question_toks": [
      "Show",
      "ids",
      "for",
      "all",
      "employees",
      "with",
      "at",
      "least",
      "100000",
      "salary",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          100000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT eid FROM Employee WHERE salary  >  100000",
    "query_toks": [
      "SELECT",
      "eid",
      "FROM",
      "Employee",
      "WHERE",
      "salary",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "eid",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "What is the id of every employee who has at least a salary of  100000?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "of",
      "every",
      "employee",
      "who",
      "has",
      "at",
      "least",
      "a",
      "salary",
      "of",
      "100000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          100000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM Employee WHERE salary BETWEEN 100000 AND 200000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Employee",
      "WHERE",
      "salary",
      "BETWEEN",
      "100000",
      "AND",
      "200000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "employee",
      "where",
      "salary",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "How many employees have salary between 100000 and 200000?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "have",
      "salary",
      "between",
      "100000",
      "and",
      "200000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          100000.0,
          200000.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM Employee WHERE salary BETWEEN 100000 AND 200000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Employee",
      "WHERE",
      "salary",
      "BETWEEN",
      "100000",
      "AND",
      "200000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "employee",
      "where",
      "salary",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What is the number of employees that have a salary between 100000 and 200000?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "employees",
      "that",
      "have",
      "a",
      "salary",
      "between",
      "100000",
      "and",
      "200000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          100000.0,
          200000.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name ,  salary FROM Employee WHERE eid  =  242518965",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "Employee",
      "WHERE",
      "eid",
      "=",
      "242518965"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "eid",
      "=",
      "value"
    ],
    "question": "What is the name and salary for employee with id 242518965?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "and",
      "salary",
      "for",
      "employee",
      "with",
      "id",
      "242518965",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          242518965.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name ,  salary FROM Employee WHERE eid  =  242518965",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "Employee",
      "WHERE",
      "eid",
      "=",
      "242518965"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "eid",
      "=",
      "value"
    ],
    "question": "What is the name and salary of the employee with the id 242518965?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "and",
      "salary",
      "of",
      "the",
      "employee",
      "with",
      "the",
      "id",
      "242518965",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          242518965.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(salary) ,  max(salary) FROM Employee",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "salary",
      ")",
      ",",
      "max",
      "(",
      "salary",
      ")",
      "FROM",
      "Employee"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "salary",
      ")",
      ",",
      "max",
      "(",
      "salary",
      ")",
      "from",
      "employee"
    ],
    "question": "What is average and maximum salary of all employees.",
    "question_toks": [
      "What",
      "is",
      "average",
      "and",
      "maximum",
      "salary",
      "of",
      "all",
      "employees",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(salary) ,  max(salary) FROM Employee",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "salary",
      ")",
      ",",
      "max",
      "(",
      "salary",
      ")",
      "FROM",
      "Employee"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "salary",
      ")",
      ",",
      "max",
      "(",
      "salary",
      ")",
      "from",
      "employee"
    ],
    "question": "What is the average and largest salary of all employees?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "and",
      "largest",
      "salary",
      "of",
      "all",
      "employees",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Employee WHERE salary  >  (SELECT avg(salary) FROM Employee)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Employee",
      "WHERE",
      "salary",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "salary",
      ")",
      "FROM",
      "Employee",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "salary",
      ")",
      "from",
      "employee",
      ")"
    ],
    "question": "Show names for all employees with salary more than the average.",
    "question_toks": [
      "Show",
      "names",
      "for",
      "all",
      "employees",
      "with",
      "salary",
      "more",
      "than",
      "the",
      "average",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      14,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Employee WHERE salary  >  (SELECT avg(salary) FROM Employee)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Employee",
      "WHERE",
      "salary",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "salary",
      ")",
      "FROM",
      "Employee",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "salary",
      ")",
      "from",
      "employee",
      ")"
    ],
    "question": "What are the names of all employees who have a salary higher than average?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "employees",
      "who",
      "have",
      "a",
      "salary",
      "higher",
      "than",
      "average",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      14,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT eid ,  salary FROM Employee WHERE name  =  'Mark Young'",
    "query_toks": [
      "SELECT",
      "eid",
      ",",
      "salary",
      "FROM",
      "Employee",
      "WHERE",
      "name",
      "=",
      "'Mark",
      "Young",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "eid",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "Show the id and salary of Mark Young.",
    "question_toks": [
      "Show",
      "the",
      "id",
      "and",
      "salary",
      "of",
      "Mark",
      "Young",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"Mark Young\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT eid ,  salary FROM Employee WHERE name  =  'Mark Young'",
    "query_toks": [
      "SELECT",
      "eid",
      ",",
      "salary",
      "FROM",
      "Employee",
      "WHERE",
      "name",
      "=",
      "'Mark",
      "Young",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "eid",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "What is the id and salary of the employee named Mark Young?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "and",
      "salary",
      "of",
      "the",
      "employee",
      "named",
      "Mark",
      "Young",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"Mark Young\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM Flight",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Flight"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight"
    ],
    "question": "How many flights do we have?",
    "question_toks": [
      "How",
      "many",
      "flights",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM Flight",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Flight"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight"
    ],
    "question": "What is the number of flights?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "flights",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT flno FROM Flight WHERE origin  =  \"Los Angeles\"",
    "query_toks": [
      "SELECT",
      "flno",
      "FROM",
      "Flight",
      "WHERE",
      "origin",
      "=",
      "``",
      "Los",
      "Angeles",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "flno",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "value"
    ],
    "question": "Show all flight number from Los Angeles.",
    "question_toks": [
      "Show",
      "all",
      "flight",
      "number",
      "from",
      "Los",
      "Angeles",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT flno FROM Flight WHERE origin  =  \"Los Angeles\"",
    "query_toks": [
      "SELECT",
      "flno",
      "FROM",
      "Flight",
      "WHERE",
      "origin",
      "=",
      "``",
      "Los",
      "Angeles",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "flno",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "value"
    ],
    "question": "What are the numbers of all flights coming from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "numbers",
      "of",
      "all",
      "flights",
      "coming",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin FROM Flight WHERE destination  =  \"Honolulu\"",
    "query_toks": [
      "SELECT",
      "origin",
      "FROM",
      "Flight",
      "WHERE",
      "destination",
      "=",
      "``",
      "Honolulu",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "value"
    ],
    "question": "Show origins of all flights with destination Honolulu.",
    "question_toks": [
      "Show",
      "origins",
      "of",
      "all",
      "flights",
      "with",
      "destination",
      "Honolulu",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Honolulu\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin FROM Flight WHERE destination  =  \"Honolulu\"",
    "query_toks": [
      "SELECT",
      "origin",
      "FROM",
      "Flight",
      "WHERE",
      "destination",
      "=",
      "``",
      "Honolulu",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "value"
    ],
    "question": "What are the origins of all flights that are headed to Honolulu?",
    "question_toks": [
      "What",
      "are",
      "the",
      "origins",
      "of",
      "all",
      "flights",
      "that",
      "are",
      "headed",
      "to",
      "Honolulu",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Honolulu\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\"",
    "query_toks": [
      "SELECT",
      "departure_date",
      ",",
      "arrival_date",
      "FROM",
      "Flight",
      "WHERE",
      "origin",
      "=",
      "``",
      "Los",
      "Angeles",
      "''",
      "AND",
      "destination",
      "=",
      "``",
      "Honolulu",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "departure_date",
      ",",
      "arrival_date",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "value",
      "and",
      "destination",
      "=",
      "value"
    ],
    "question": "Show me the departure date and arrival date for all flights from Los Angeles to Honolulu.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "departure",
      "date",
      "and",
      "arrival",
      "date",
      "for",
      "all",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Honolulu",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Honolulu\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\"",
    "query_toks": [
      "SELECT",
      "departure_date",
      ",",
      "arrival_date",
      "FROM",
      "Flight",
      "WHERE",
      "origin",
      "=",
      "``",
      "Los",
      "Angeles",
      "''",
      "AND",
      "destination",
      "=",
      "``",
      "Honolulu",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "departure_date",
      ",",
      "arrival_date",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "value",
      "and",
      "destination",
      "=",
      "value"
    ],
    "question": "What are the departure and arrival dates of all flights from LA to Honolulu?",
    "question_toks": [
      "What",
      "are",
      "the",
      "departure",
      "and",
      "arrival",
      "dates",
      "of",
      "all",
      "flights",
      "from",
      "LA",
      "to",
      "Honolulu",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Honolulu\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT flno FROM Flight WHERE distance  >  2000",
    "query_toks": [
      "SELECT",
      "flno",
      "FROM",
      "Flight",
      "WHERE",
      "distance",
      ">",
      "2000"
    ],
    "query_toks_no_value": [
      "select",
      "flno",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Show flight number for all flights with more than 2000 distance.",
    "question_toks": [
      "Show",
      "flight",
      "number",
      "for",
      "all",
      "flights",
      "with",
      "more",
      "than",
      "2000",
      "distance",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT flno FROM Flight WHERE distance  >  2000",
    "query_toks": [
      "SELECT",
      "flno",
      "FROM",
      "Flight",
      "WHERE",
      "distance",
      ">",
      "2000"
    ],
    "query_toks_no_value": [
      "select",
      "flno",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "What are the numbers of all flights that can cover a distance of more than 2000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "numbers",
      "of",
      "all",
      "flights",
      "that",
      "can",
      "cover",
      "a",
      "distance",
      "of",
      "more",
      "than",
      "2000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\"",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "Flight",
      "WHERE",
      "origin",
      "=",
      "``",
      "Los",
      "Angeles",
      "''",
      "AND",
      "destination",
      "=",
      "``",
      "Honolulu",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "value",
      "and",
      "destination",
      "=",
      "value"
    ],
    "question": "What is the average price for flights from Los Angeles to Honolulu.",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "price",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Honolulu",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Honolulu\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\"",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "Flight",
      "WHERE",
      "origin",
      "=",
      "``",
      "Los",
      "Angeles",
      "''",
      "AND",
      "destination",
      "=",
      "``",
      "Honolulu",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "value",
      "and",
      "destination",
      "=",
      "value"
    ],
    "question": "What is the average price for flights from LA to Honolulu?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "price",
      "for",
      "flights",
      "from",
      "LA",
      "to",
      "Honolulu",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Honolulu\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin ,  destination FROM Flight WHERE price  >  300",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "Flight",
      "WHERE",
      "price",
      ">",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "price",
      ">",
      "value"
    ],
    "question": "Show origin and destination for flights with price higher than 300.",
    "question_toks": [
      "Show",
      "origin",
      "and",
      "destination",
      "for",
      "flights",
      "with",
      "price",
      "higher",
      "than",
      "300",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          300.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin ,  destination FROM Flight WHERE price  >  300",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "Flight",
      "WHERE",
      "price",
      ">",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "price",
      ">",
      "value"
    ],
    "question": "What is the origin and destination for all flights whose price is higher than 300?",
    "question_toks": [
      "What",
      "is",
      "the",
      "origin",
      "and",
      "destination",
      "for",
      "all",
      "flights",
      "whose",
      "price",
      "is",
      "higher",
      "than",
      "300",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          300.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance) ,  avg(price) FROM Flight WHERE origin  =  \"Los Angeles\"",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "Flight",
      "WHERE",
      "origin",
      "=",
      "``",
      "Los",
      "Angeles",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "value"
    ],
    "question": "What is the average distance and average price for flights from Los Angeles.",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "distance",
      "and",
      "average",
      "price",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance) ,  avg(price) FROM Flight WHERE origin  =  \"Los Angeles\"",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "Flight",
      "WHERE",
      "origin",
      "=",
      "``",
      "Los",
      "Angeles",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "value"
    ],
    "question": "What is the average distance and price for all flights from LA?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "for",
      "all",
      "flights",
      "from",
      "LA",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(DISTINCT eid) FROM Certificate",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "eid",
      ")",
      "FROM",
      "Certificate"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "eid",
      ")",
      "from",
      "certificate"
    ],
    "question": "How many employees have certificate.",
    "question_toks": [
      "How",
      "many",
      "employees",
      "have",
      "certificate",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                15,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(DISTINCT eid) FROM Certificate",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "eid",
      ")",
      "FROM",
      "Certificate"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "eid",
      ")",
      "from",
      "certificate"
    ],
    "question": "What is the count of distinct employees with certificates?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "distinct",
      "employees",
      "with",
      "certificates",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                15,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(DISTINCT allergy) FROM Allergy_type",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "allergy",
      ")",
      "FROM",
      "Allergy_type"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "allergy",
      ")",
      "from",
      "allergy_type"
    ],
    "question": "How many allergies are there?",
    "question_toks": [
      "How",
      "many",
      "allergies",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                1,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(DISTINCT allergy) FROM Allergy_type",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "allergy",
      ")",
      "FROM",
      "Allergy_type"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "allergy",
      ")",
      "from",
      "allergy_type"
    ],
    "question": "How many allergy entries are there?",
    "question_toks": [
      "How",
      "many",
      "allergy",
      "entries",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                1,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(DISTINCT allergytype) FROM Allergy_type",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "allergytype",
      ")",
      "FROM",
      "Allergy_type"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "allergytype",
      ")",
      "from",
      "allergy_type"
    ],
    "question": "How many different allergy types exist?",
    "question_toks": [
      "How",
      "many",
      "different",
      "allergy",
      "types",
      "exist",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                2,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(DISTINCT allergytype) FROM Allergy_type",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "allergytype",
      ")",
      "FROM",
      "Allergy_type"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "allergytype",
      ")",
      "from",
      "allergy_type"
    ],
    "question": "How many distinct allergies are there?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "allergies",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                2,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT allergy ,  allergytype FROM Allergy_type",
    "query_toks": [
      "SELECT",
      "allergy",
      ",",
      "allergytype",
      "FROM",
      "Allergy_type"
    ],
    "query_toks_no_value": [
      "select",
      "allergy",
      ",",
      "allergytype",
      "from",
      "allergy_type"
    ],
    "question": "Show all allergies and their types.",
    "question_toks": [
      "Show",
      "all",
      "allergies",
      "and",
      "their",
      "types",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT allergy ,  allergytype FROM Allergy_type",
    "query_toks": [
      "SELECT",
      "allergy",
      ",",
      "allergytype",
      "FROM",
      "Allergy_type"
    ],
    "query_toks_no_value": [
      "select",
      "allergy",
      ",",
      "allergytype",
      "from",
      "allergy_type"
    ],
    "question": "What are the allergies and their types?",
    "question_toks": [
      "What",
      "are",
      "the",
      "allergies",
      "and",
      "their",
      "types",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT allergytype FROM Allergy_type WHERE allergy  =  \"Cat\"",
    "query_toks": [
      "SELECT",
      "allergytype",
      "FROM",
      "Allergy_type",
      "WHERE",
      "allergy",
      "=",
      "``",
      "Cat",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "allergytype",
      "from",
      "allergy_type",
      "where",
      "allergy",
      "=",
      "value"
    ],
    "question": "What is the type of allergy Cat?",
    "question_toks": [
      "What",
      "is",
      "the",
      "type",
      "of",
      "allergy",
      "Cat",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"Cat\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT allergytype FROM Allergy_type WHERE allergy  =  \"Cat\"",
    "query_toks": [
      "SELECT",
      "allergytype",
      "FROM",
      "Allergy_type",
      "WHERE",
      "allergy",
      "=",
      "``",
      "Cat",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "allergytype",
      "from",
      "allergy_type",
      "where",
      "allergy",
      "=",
      "value"
    ],
    "question": "What is allergy type of a cat allergy?",
    "question_toks": [
      "What",
      "is",
      "allergy",
      "type",
      "of",
      "a",
      "cat",
      "allergy",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"Cat\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(*) FROM Allergy_type WHERE allergytype  =  \"animal\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Allergy_type",
      "WHERE",
      "allergytype",
      "=",
      "``",
      "animal",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "allergy_type",
      "where",
      "allergytype",
      "=",
      "value"
    ],
    "question": "How many allergies have type animal?",
    "question_toks": [
      "How",
      "many",
      "allergies",
      "have",
      "type",
      "animal",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"animal\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(*) FROM Allergy_type WHERE allergytype  =  \"animal\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Allergy_type",
      "WHERE",
      "allergytype",
      "=",
      "``",
      "animal",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "allergy_type",
      "where",
      "allergytype",
      "=",
      "value"
    ],
    "question": "How many animal type allergies exist?",
    "question_toks": [
      "How",
      "many",
      "animal",
      "type",
      "allergies",
      "exist",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"animal\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(*) FROM Student",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Student"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student"
    ],
    "question": "How many students are there?",
    "question_toks": [
      "How",
      "many",
      "students",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(*) FROM Student",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Student"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student"
    ],
    "question": "What is the total number of students?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "students",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT Fname ,  Lname FROM Student",
    "query_toks": [
      "SELECT",
      "Fname",
      ",",
      "Lname",
      "FROM",
      "Student"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      ",",
      "lname",
      "from",
      "student"
    ],
    "question": "Show first name and last name for all students.",
    "question_toks": [
      "Show",
      "first",
      "name",
      "and",
      "last",
      "name",
      "for",
      "all",
      "students",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT Fname ,  Lname FROM Student",
    "query_toks": [
      "SELECT",
      "Fname",
      ",",
      "Lname",
      "FROM",
      "Student"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      ",",
      "lname",
      "from",
      "student"
    ],
    "question": "What are the full names of all students",
    "question_toks": [
      "What",
      "are",
      "the",
      "full",
      "names",
      "of",
      "all",
      "students"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(DISTINCT advisor) FROM Student",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "advisor",
      ")",
      "FROM",
      "Student"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "advisor",
      ")",
      "from",
      "student"
    ],
    "question": "How many different advisors are listed?",
    "question_toks": [
      "How",
      "many",
      "different",
      "advisors",
      "are",
      "listed",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(DISTINCT advisor) FROM Student",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "advisor",
      ")",
      "FROM",
      "Student"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "advisor",
      ")",
      "from",
      "student"
    ],
    "question": "How many advisors are there?",
    "question_toks": [
      "How",
      "many",
      "advisors",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT Fname ,  Lname ,  Age FROM Student WHERE Sex  =  'F'",
    "query_toks": [
      "SELECT",
      "Fname",
      ",",
      "Lname",
      ",",
      "Age",
      "FROM",
      "Student",
      "WHERE",
      "Sex",
      "=",
      "'F",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      ",",
      "lname",
      ",",
      "age",
      "from",
      "student",
      "where",
      "sex",
      "=",
      "value"
    ],
    "question": "Show first name, last name, age for all female students. Their sex is F.",
    "question_toks": [
      "Show",
      "first",
      "name",
      ",",
      "last",
      "name",
      ",",
      "age",
      "for",
      "all",
      "female",
      "students",
      ".",
      "Their",
      "sex",
      "is",
      "F",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"F\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT Fname ,  Lname ,  Age FROM Student WHERE Sex  =  'F'",
    "query_toks": [
      "SELECT",
      "Fname",
      ",",
      "Lname",
      ",",
      "Age",
      "FROM",
      "Student",
      "WHERE",
      "Sex",
      "=",
      "'F",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      ",",
      "lname",
      ",",
      "age",
      "from",
      "student",
      "where",
      "sex",
      "=",
      "value"
    ],
    "question": "What are the full names and ages for all female students whose sex is F?",
    "question_toks": [
      "What",
      "are",
      "the",
      "full",
      "names",
      "and",
      "ages",
      "for",
      "all",
      "female",
      "students",
      "whose",
      "sex",
      "is",
      "F",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"F\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT StuID FROM Student WHERE Sex  =  'M'",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Student",
      "WHERE",
      "Sex",
      "=",
      "'M",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "student",
      "where",
      "sex",
      "=",
      "value"
    ],
    "question": "Show student ids for all male students.",
    "question_toks": [
      "Show",
      "student",
      "ids",
      "for",
      "all",
      "male",
      "students",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"M\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT StuID FROM Student WHERE Sex  =  'M'",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Student",
      "WHERE",
      "Sex",
      "=",
      "'M",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "student",
      "where",
      "sex",
      "=",
      "value"
    ],
    "question": "What are the student ids for all male students?",
    "question_toks": [
      "What",
      "are",
      "the",
      "student",
      "ids",
      "for",
      "all",
      "male",
      "students",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"M\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(*) FROM Student WHERE age  =  18",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Student",
      "WHERE",
      "age",
      "=",
      "18"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student",
      "where",
      "age",
      "=",
      "value"
    ],
    "question": "How many students are age 18?",
    "question_toks": [
      "How",
      "many",
      "students",
      "are",
      "age",
      "18",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          18.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(*) FROM Student WHERE age  =  18",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Student",
      "WHERE",
      "age",
      "=",
      "18"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student",
      "where",
      "age",
      "=",
      "value"
    ],
    "question": "How many students are 18 years old?",
    "question_toks": [
      "How",
      "many",
      "students",
      "are",
      "18",
      "years",
      "old",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          18.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT StuID FROM Student WHERE age  >  20",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Student",
      "WHERE",
      "age",
      ">",
      "20"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "student",
      "where",
      "age",
      ">",
      "value"
    ],
    "question": "Show all student ids who are older than 20.",
    "question_toks": [
      "Show",
      "all",
      "student",
      "ids",
      "who",
      "are",
      "older",
      "than",
      "20",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          20.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT StuID FROM Student WHERE age  >  20",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Student",
      "WHERE",
      "age",
      ">",
      "20"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "student",
      "where",
      "age",
      ">",
      "value"
    ],
    "question": "What are the student ids for students over 20 years old?",
    "question_toks": [
      "What",
      "are",
      "the",
      "student",
      "ids",
      "for",
      "students",
      "over",
      "20",
      "years",
      "old",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          20.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT city_code FROM Student WHERE LName  =  \"Kim\"",
    "query_toks": [
      "SELECT",
      "city_code",
      "FROM",
      "Student",
      "WHERE",
      "LName",
      "=",
      "``",
      "Kim",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "city_code",
      "from",
      "student",
      "where",
      "lname",
      "=",
      "value"
    ],
    "question": "Which city does the student whose last name is \"Kim\" live in?",
    "question_toks": [
      "Which",
      "city",
      "does",
      "the",
      "student",
      "whose",
      "last",
      "name",
      "is",
      "``",
      "Kim",
      "''",
      "live",
      "in",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Kim\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT city_code FROM Student WHERE LName  =  \"Kim\"",
    "query_toks": [
      "SELECT",
      "city_code",
      "FROM",
      "Student",
      "WHERE",
      "LName",
      "=",
      "``",
      "Kim",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "city_code",
      "from",
      "student",
      "where",
      "lname",
      "=",
      "value"
    ],
    "question": "Give the city that the student whose family name is Kim lives in.",
    "question_toks": [
      "Give",
      "the",
      "city",
      "that",
      "the",
      "student",
      "whose",
      "family",
      "name",
      "is",
      "Kim",
      "lives",
      "in",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Kim\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT Advisor FROM Student WHERE StuID  =  1004",
    "query_toks": [
      "SELECT",
      "Advisor",
      "FROM",
      "Student",
      "WHERE",
      "StuID",
      "=",
      "1004"
    ],
    "query_toks_no_value": [
      "select",
      "advisor",
      "from",
      "student",
      "where",
      "stuid",
      "=",
      "value"
    ],
    "question": "Who is the advisor of student with ID 1004?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "advisor",
      "of",
      "student",
      "with",
      "ID",
      "1004",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          1004.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT Advisor FROM Student WHERE StuID  =  1004",
    "query_toks": [
      "SELECT",
      "Advisor",
      "FROM",
      "Student",
      "WHERE",
      "StuID",
      "=",
      "1004"
    ],
    "query_toks_no_value": [
      "select",
      "advisor",
      "from",
      "student",
      "where",
      "stuid",
      "=",
      "value"
    ],
    "question": "Who advises student 1004?",
    "question_toks": [
      "Who",
      "advises",
      "student",
      "1004",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          1004.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(*) FROM Student WHERE city_code  =  \"HKG\" OR city_code  =  \"CHI\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Student",
      "WHERE",
      "city_code",
      "=",
      "``",
      "HKG",
      "''",
      "OR",
      "city_code",
      "=",
      "``",
      "CHI",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student",
      "where",
      "city_code",
      "=",
      "value",
      "or",
      "city_code",
      "=",
      "value"
    ],
    "question": "How many students live in HKG or CHI?",
    "question_toks": [
      "How",
      "many",
      "students",
      "live",
      "in",
      "HKG",
      "or",
      "CHI",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"HKG\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"CHI\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(*) FROM Student WHERE city_code  =  \"HKG\" OR city_code  =  \"CHI\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Student",
      "WHERE",
      "city_code",
      "=",
      "``",
      "HKG",
      "''",
      "OR",
      "city_code",
      "=",
      "``",
      "CHI",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student",
      "where",
      "city_code",
      "=",
      "value",
      "or",
      "city_code",
      "=",
      "value"
    ],
    "question": "Give the number of students living in either HKG or CHI.",
    "question_toks": [
      "Give",
      "the",
      "number",
      "of",
      "students",
      "living",
      "in",
      "either",
      "HKG",
      "or",
      "CHI",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"HKG\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"CHI\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT min(age) ,  avg(age) ,  max(age) FROM Student",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "age",
      ")",
      ",",
      "avg",
      "(",
      "age",
      ")",
      ",",
      "max",
      "(",
      "age",
      ")",
      "FROM",
      "Student"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "age",
      ")",
      ",",
      "avg",
      "(",
      "age",
      ")",
      ",",
      "max",
      "(",
      "age",
      ")",
      "from",
      "student"
    ],
    "question": "Show the minimum, average, and maximum age of all students.",
    "question_toks": [
      "Show",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "age",
      "of",
      "all",
      "students",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT min(age) ,  avg(age) ,  max(age) FROM Student",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "age",
      ")",
      ",",
      "avg",
      "(",
      "age",
      ")",
      ",",
      "max",
      "(",
      "age",
      ")",
      "FROM",
      "Student"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "age",
      ")",
      ",",
      "avg",
      "(",
      "age",
      ")",
      ",",
      "max",
      "(",
      "age",
      ")",
      "from",
      "student"
    ],
    "question": "What is the minimum, mean, and maximum age across all students?",
    "question_toks": [
      "What",
      "is",
      "the",
      "minimum",
      ",",
      "mean",
      ",",
      "and",
      "maximum",
      "age",
      "across",
      "all",
      "students",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT LName FROM Student WHERE age  =  (SELECT min(age) FROM Student)",
    "query_toks": [
      "SELECT",
      "LName",
      "FROM",
      "Student",
      "WHERE",
      "age",
      "=",
      "(",
      "SELECT",
      "min",
      "(",
      "age",
      ")",
      "FROM",
      "Student",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "lname",
      "from",
      "student",
      "where",
      "age",
      "=",
      "(",
      "select",
      "min",
      "(",
      "age",
      ")",
      "from",
      "student",
      ")"
    ],
    "question": "What is the last name of the youngest student?",
    "question_toks": [
      "What",
      "is",
      "the",
      "last",
      "name",
      "of",
      "the",
      "youngest",
      "student",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT LName FROM Student WHERE age  =  (SELECT min(age) FROM Student)",
    "query_toks": [
      "SELECT",
      "LName",
      "FROM",
      "Student",
      "WHERE",
      "age",
      "=",
      "(",
      "SELECT",
      "min",
      "(",
      "age",
      ")",
      "FROM",
      "Student",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "lname",
      "from",
      "student",
      "where",
      "age",
      "=",
      "(",
      "select",
      "min",
      "(",
      "age",
      ")",
      "from",
      "student",
      ")"
    ],
    "question": "Provide the last name of the youngest student.",
    "question_toks": [
      "Provide",
      "the",
      "last",
      "name",
      "of",
      "the",
      "youngest",
      "student",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT StuID FROM Student WHERE age  =  (SELECT max(age) FROM Student)",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Student",
      "WHERE",
      "age",
      "=",
      "(",
      "SELECT",
      "max",
      "(",
      "age",
      ")",
      "FROM",
      "Student",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "student",
      "where",
      "age",
      "=",
      "(",
      "select",
      "max",
      "(",
      "age",
      ")",
      "from",
      "student",
      ")"
    ],
    "question": "Show the student id of the oldest student.",
    "question_toks": [
      "Show",
      "the",
      "student",
      "id",
      "of",
      "the",
      "oldest",
      "student",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT StuID FROM Student WHERE age  =  (SELECT max(age) FROM Student)",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Student",
      "WHERE",
      "age",
      "=",
      "(",
      "SELECT",
      "max",
      "(",
      "age",
      ")",
      "FROM",
      "Student",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "student",
      "where",
      "age",
      "=",
      "(",
      "select",
      "max",
      "(",
      "age",
      ")",
      "from",
      "student",
      ")"
    ],
    "question": "What student id corresponds to the oldest student?",
    "question_toks": [
      "What",
      "student",
      "id",
      "corresponds",
      "to",
      "the",
      "oldest",
      "student",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(*) FROM Has_allergy WHERE Allergy  =  \"Cat\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Has_allergy",
      "WHERE",
      "Allergy",
      "=",
      "``",
      "Cat",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "has_allergy",
      "where",
      "allergy",
      "=",
      "value"
    ],
    "question": "How many students have cat allergies?",
    "question_toks": [
      "How",
      "many",
      "students",
      "have",
      "cat",
      "allergies",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Cat\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(*) FROM Has_allergy WHERE Allergy  =  \"Cat\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Has_allergy",
      "WHERE",
      "Allergy",
      "=",
      "``",
      "Cat",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "has_allergy",
      "where",
      "allergy",
      "=",
      "value"
    ],
    "question": "How many students are affected by cat allergies?",
    "question_toks": [
      "How",
      "many",
      "students",
      "are",
      "affected",
      "by",
      "cat",
      "allergies",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Cat\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT lname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")",
    "query_toks": [
      "SELECT",
      "lname",
      ",",
      "age",
      "FROM",
      "Student",
      "WHERE",
      "StuID",
      "IN",
      "(",
      "SELECT",
      "StuID",
      "FROM",
      "Has_allergy",
      "WHERE",
      "Allergy",
      "=",
      "``",
      "Milk",
      "''",
      "INTERSECT",
      "SELECT",
      "StuID",
      "FROM",
      "Has_allergy",
      "WHERE",
      "Allergy",
      "=",
      "``",
      "Cat",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "lname",
      ",",
      "age",
      "from",
      "student",
      "where",
      "stuid",
      "in",
      "(",
      "select",
      "stuid",
      "from",
      "has_allergy",
      "where",
      "allergy",
      "=",
      "value",
      "intersect",
      "select",
      "stuid",
      "from",
      "has_allergy",
      "where",
      "allergy",
      "=",
      "value",
      ")"
    ],
    "question": "Find the last name and age of the student who has allergy to both milk and cat.",
    "question_toks": [
      "Find",
      "the",
      "last",
      "name",
      "and",
      "age",
      "of",
      "the",
      "student",
      "who",
      "has",
      "allergy",
      "to",
      "both",
      "milk",
      "and",
      "cat",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    4,
                    false
                  ],
                  null
                ],
                "\"Milk\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
              "from": {
                "table_units": [
                  [
                    "table_unit",
                    1
                  ]
                ],
                "conds": []
              },
              "select": [
                false,
                [
                  [
                    0,
                    [
                      0,
                      [
                        0,
                        3,
                        false
                      ],
                      null
                    ]
                  ]
                ]
              ],
              "where": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ],
                  "\"Cat\"",
                  null
                ]
              ],
              "groupBy": [],
              "having": [],
              "orderBy": [],
              "limit": null,
              "intersect": null,
              "union": null,
              "except": null
            },
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT lname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")",
    "query_toks": [
      "SELECT",
      "lname",
      ",",
      "age",
      "FROM",
      "Student",
      "WHERE",
      "StuID",
      "IN",
      "(",
      "SELECT",
      "StuID",
      "FROM",
      "Has_allergy",
      "WHERE",
      "Allergy",
      "=",
      "``",
      "Milk",
      "''",
      "INTERSECT",
      "SELECT",
      "StuID",
      "FROM",
      "Has_allergy",
      "WHERE",
      "Allergy",
      "=",
      "``",
      "Cat",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "lname",
      ",",
      "age",
      "from",
      "student",
      "where",
      "stuid",
      "in",
      "(",
      "select",
      "stuid",
      "from",
      "has_allergy",
      "where",
      "allergy",
      "=",
      "value",
      "intersect",
      "select",
      "stuid",
      "from",
      "has_allergy",
      "where",
      "allergy",
      "=",
      "value",
      ")"
    ],
    "question": "What are the last names and ages of the students who are allergic to milk and cat?",
    "question_toks": [
      "What",
      "are",
      "the",
      "last",
      "names",
      "and",
      "ages",
      "of",
      "the",
      "students",
      "who",
      "are",
      "allergic",
      "to",
      "milk",
      "and",
      "cat",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    4,
                    false
                  ],
                  null
                ],
                "\"Milk\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
              "from": {
                "table_units": [
                  [
                    "table_unit",
                    1
                  ]
                ],
                "conds": []
              },
              "select": [
                false,
                [
                  [
                    0,
                    [
                      0,
                      [
                        0,
                        3,
                        false
                      ],
                      null
                    ]
                  ]
                ]
              ],
              "where": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ],
                  "\"Cat\"",
                  null
                ]
              ],
              "groupBy": [],
              "having": [],
              "orderBy": [],
              "limit": null,
              "intersect": null,
              "union": null,
              "except": null
            },
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT fname ,  sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" EXCEPT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")",
    "query_toks": [
      "SELECT",
      "fname",
      ",",
      "sex",
      "FROM",
      "Student",
      "WHERE",
      "StuID",
      "IN",
      "(",
      "SELECT",
      "StuID",
      "FROM",
      "Has_allergy",
      "WHERE",
      "Allergy",
      "=",
      "``",
      "Milk",
      "''",
      "EXCEPT",
      "SELECT",
      "StuID",
      "FROM",
      "Has_allergy",
      "WHERE",
      "Allergy",
      "=",
      "``",
      "Cat",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      ",",
      "sex",
      "from",
      "student",
      "where",
      "stuid",
      "in",
      "(",
      "select",
      "stuid",
      "from",
      "has_allergy",
      "where",
      "allergy",
      "=",
      "value",
      "except",
      "select",
      "stuid",
      "from",
      "has_allergy",
      "where",
      "allergy",
      "=",
      "value",
      ")"
    ],
    "question": "Find the first name and gender of the student who has allergy to milk but not cat.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "name",
      "and",
      "gender",
      "of",
      "the",
      "student",
      "who",
      "has",
      "allergy",
      "to",
      "milk",
      "but",
      "not",
      "cat",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    4,
                    false
                  ],
                  null
                ],
                "\"Milk\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
              "from": {
                "table_units": [
                  [
                    "table_unit",
                    1
                  ]
                ],
                "conds": []
              },
              "select": [
                false,
                [
                  [
                    0,
                    [
                      0,
                      [
                        0,
                        3,
                        false
                      ],
                      null
                    ]
                  ]
                ]
              ],
              "where": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ],
                  "\"Cat\"",
                  null
                ]
              ],
              "groupBy": [],
              "having": [],
              "orderBy": [],
              "limit": null,
              "intersect": null,
              "union": null,
              "except": null
            }
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT fname ,  sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" EXCEPT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")",
    "query_toks": [
      "SELECT",
      "fname",
      ",",
      "sex",
      "FROM",
      "Student",
      "WHERE",
      "StuID",
      "IN",
      "(",
      "SELECT",
      "StuID",
      "FROM",
      "Has_allergy",
      "WHERE",
      "Allergy",
      "=",
      "``",
      "Milk",
      "''",
      "EXCEPT",
      "SELECT",
      "StuID",
      "FROM",
      "Has_allergy",
      "WHERE",
      "Allergy",
      "=",
      "``",
      "Cat",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      ",",
      "sex",
      "from",
      "student",
      "where",
      "stuid",
      "in",
      "(",
      "select",
      "stuid",
      "from",
      "has_allergy",
      "where",
      "allergy",
      "=",
      "value",
      "except",
      "select",
      "stuid",
      "from",
      "has_allergy",
      "where",
      "allergy",
      "=",
      "value",
      ")"
    ],
    "question": "What are the first name and gender of the students who have allergy to milk but can put up with cats?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "name",
      "and",
      "gender",
      "of",
      "the",
      "students",
      "who",
      "have",
      "allergy",
      "to",
      "milk",
      "but",
      "can",
      "put",
      "up",
      "with",
      "cats",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    4,
                    false
                  ],
                  null
                ],
                "\"Milk\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
              "from": {
                "table_units": [
                  [
                    "table_unit",
                    1
                  ]
                ],
                "conds": []
              },
              "select": [
                false,
                [
                  [
                    0,
                    [
                      0,
                      [
                        0,
                        3,
                        false
                      ],
                      null
                    ]
                  ]
                ]
              ],
              "where": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ],
                  "\"Cat\"",
                  null
                ]
              ],
              "groupBy": [],
              "having": [],
              "orderBy": [],
              "limit": null,
              "intersect": null,
              "union": null,
              "except": null
            }
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT avg(age) FROM Student WHERE StuID IN ( SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"animal\")",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "age",
      ")",
      "FROM",
      "Student",
      "WHERE",
      "StuID",
      "IN",
      "(",
      "SELECT",
      "T1.StuID",
      "FROM",
      "Has_allergy",
      "AS",
      "T1",
      "JOIN",
      "Allergy_Type",
      "AS",
      "T2",
      "ON",
      "T1.Allergy",
      "=",
      "T2.Allergy",
      "WHERE",
      "T2.allergytype",
      "=",
      "``",
      "food",
      "''",
      "INTERSECT",
      "SELECT",
      "T1.StuID",
      "FROM",
      "Has_allergy",
      "AS",
      "T1",
      "JOIN",
      "Allergy_Type",
      "AS",
      "T2",
      "ON",
      "T1.Allergy",
      "=",
      "T2.Allergy",
      "WHERE",
      "T2.allergytype",
      "=",
      "``",
      "animal",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "age",
      ")",
      "from",
      "student",
      "where",
      "stuid",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "stuid",
      "from",
      "has_allergy",
      "as",
      "t1",
      "join",
      "allergy_type",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "allergy",
      "=",
      "t2",
      ".",
      "allergy",
      "where",
      "t2",
      ".",
      "allergytype",
      "=",
      "value",
      "intersect",
      "select",
      "t1",
      ".",
      "stuid",
      "from",
      "has_allergy",
      "as",
      "t1",
      "join",
      "allergy_type",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "allergy",
      "=",
      "t2",
      ".",
      "allergy",
      "where",
      "t2",
      ".",
      "allergytype",
      "=",
      "value",
      ")"
    ],
    "question": "Find the average age of the students who have allergies with food and animal types.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "age",
      "of",
      "the",
      "students",
      "who",
      "have",
      "allergies",
      "with",
      "food",
      "and",
      "animal",
      "types",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    1,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    2,
                    false
                  ],
                  null
                ],
                "\"food\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
              "from": {
                "table_units": [
                  [
                    "table_unit",
                    1
                  ],
                  [
                    "table_unit",
                    0
                  ]
                ],
                "conds": [
                  [
                    false,
                    2,
                    [
                      0,
                      [
                        0,
                        4,
                        false
                      ],
                      null
                    ],
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              },
              "select": [
                false,
                [
                  [
                    0,
                    [
                      0,
                      [
                        0,
                        3,
                        false
                      ],
                      null
                    ]
                  ]
                ]
              ],
              "where": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      2,
                      false
                    ],
                    null
                  ],
                  "\"animal\"",
                  null
                ]
              ],
              "groupBy": [],
              "having": [],
              "orderBy": [],
              "limit": null,
              "intersect": null,
              "union": null,
              "except": null
            },
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT avg(age) FROM Student WHERE StuID IN ( SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"animal\")",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "age",
      ")",
      "FROM",
      "Student",
      "WHERE",
      "StuID",
      "IN",
      "(",
      "SELECT",
      "T1.StuID",
      "FROM",
      "Has_allergy",
      "AS",
      "T1",
      "JOIN",
      "Allergy_Type",
      "AS",
      "T2",
      "ON",
      "T1.Allergy",
      "=",
      "T2.Allergy",
      "WHERE",
      "T2.allergytype",
      "=",
      "``",
      "food",
      "''",
      "INTERSECT",
      "SELECT",
      "T1.StuID",
      "FROM",
      "Has_allergy",
      "AS",
      "T1",
      "JOIN",
      "Allergy_Type",
      "AS",
      "T2",
      "ON",
      "T1.Allergy",
      "=",
      "T2.Allergy",
      "WHERE",
      "T2.allergytype",
      "=",
      "``",
      "animal",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "age",
      ")",
      "from",
      "student",
      "where",
      "stuid",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "stuid",
      "from",
      "has_allergy",
      "as",
      "t1",
      "join",
      "allergy_type",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "allergy",
      "=",
      "t2",
      ".",
      "allergy",
      "where",
      "t2",
      ".",
      "allergytype",
      "=",
      "value",
      "intersect",
      "select",
      "t1",
      ".",
      "stuid",
      "from",
      "has_allergy",
      "as",
      "t1",
      "join",
      "allergy_type",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "allergy",
      "=",
      "t2",
      ".",
      "allergy",
      "where",
      "t2",
      ".",
      "allergytype",
      "=",
      "value",
      ")"
    ],
    "question": "How old are the students with allergies to food and animal types on average?",
    "question_toks": [
      "How",
      "old",
      "are",
      "the",
      "students",
      "with",
      "allergies",
      "to",
      "food",
      "and",
      "animal",
      "types",
      "on",
      "average",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    1,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    2,
                    false
                  ],
                  null
                ],
                "\"food\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
              "from": {
                "table_units": [
                  [
                    "table_unit",
                    1
                  ],
                  [
                    "table_unit",
                    0
                  ]
                ],
                "conds": [
                  [
                    false,
                    2,
                    [
                      0,
                      [
                        0,
                        4,
                        false
                      ],
                      null
                    ],
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              },
              "select": [
                false,
                [
                  [
                    0,
                    [
                      0,
                      [
                        0,
                        3,
                        false
                      ],
                      null
                    ]
                  ]
                ]
              ],
              "where": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      2,
                      false
                    ],
                    null
                  ],
                  "\"animal\"",
                  null
                ]
              ],
              "groupBy": [],
              "having": [],
              "orderBy": [],
              "limit": null,
              "intersect": null,
              "union": null,
              "except": null
            },
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT fname ,  lname FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\")",
    "query_toks": [
      "SELECT",
      "fname",
      ",",
      "lname",
      "FROM",
      "Student",
      "WHERE",
      "StuID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "T1.StuID",
      "FROM",
      "Has_allergy",
      "AS",
      "T1",
      "JOIN",
      "Allergy_Type",
      "AS",
      "T2",
      "ON",
      "T1.Allergy",
      "=",
      "T2.Allergy",
      "WHERE",
      "T2.allergytype",
      "=",
      "``",
      "food",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      ",",
      "lname",
      "from",
      "student",
      "where",
      "stuid",
      "not",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "stuid",
      "from",
      "has_allergy",
      "as",
      "t1",
      "join",
      "allergy_type",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "allergy",
      "=",
      "t2",
      ".",
      "allergy",
      "where",
      "t2",
      ".",
      "allergytype",
      "=",
      "value",
      ")"
    ],
    "question": "List the first and last name of the students who do not have any food type allergy.",
    "question_toks": [
      "List",
      "the",
      "first",
      "and",
      "last",
      "name",
      "of",
      "the",
      "students",
      "who",
      "do",
      "not",
      "have",
      "any",
      "food",
      "type",
      "allergy",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    1,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    2,
                    false
                  ],
                  null
                ],
                "\"food\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT fname ,  lname FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\")",
    "query_toks": [
      "SELECT",
      "fname",
      ",",
      "lname",
      "FROM",
      "Student",
      "WHERE",
      "StuID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "T1.StuID",
      "FROM",
      "Has_allergy",
      "AS",
      "T1",
      "JOIN",
      "Allergy_Type",
      "AS",
      "T2",
      "ON",
      "T1.Allergy",
      "=",
      "T2.Allergy",
      "WHERE",
      "T2.allergytype",
      "=",
      "``",
      "food",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      ",",
      "lname",
      "from",
      "student",
      "where",
      "stuid",
      "not",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "stuid",
      "from",
      "has_allergy",
      "as",
      "t1",
      "join",
      "allergy_type",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "allergy",
      "=",
      "t2",
      ".",
      "allergy",
      "where",
      "t2",
      ".",
      "allergytype",
      "=",
      "value",
      ")"
    ],
    "question": "What is the full name of each student who is not allergic to any type of food.",
    "question_toks": [
      "What",
      "is",
      "the",
      "full",
      "name",
      "of",
      "each",
      "student",
      "who",
      "is",
      "not",
      "allergic",
      "to",
      "any",
      "type",
      "of",
      "food",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    1,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    2,
                    false
                  ],
                  null
                ],
                "\"food\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(*) FROM Student WHERE sex  =  \"M\" AND StuID IN (SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\")",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Student",
      "WHERE",
      "sex",
      "=",
      "``",
      "M",
      "''",
      "AND",
      "StuID",
      "IN",
      "(",
      "SELECT",
      "StuID",
      "FROM",
      "Has_allergy",
      "AS",
      "T1",
      "JOIN",
      "Allergy_Type",
      "AS",
      "T2",
      "ON",
      "T1.Allergy",
      "=",
      "T2.Allergy",
      "WHERE",
      "T2.allergytype",
      "=",
      "``",
      "food",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student",
      "where",
      "sex",
      "=",
      "value",
      "and",
      "stuid",
      "in",
      "(",
      "select",
      "stuid",
      "from",
      "has_allergy",
      "as",
      "t1",
      "join",
      "allergy_type",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "allergy",
      "=",
      "t2",
      ".",
      "allergy",
      "where",
      "t2",
      ".",
      "allergytype",
      "=",
      "value",
      ")"
    ],
    "question": "Find the number of male (sex is 'M') students who have some food type allery.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "male",
      "(",
      "sex",
      "is",
      "'M",
      "'",
      ")",
      "students",
      "who",
      "have",
      "some",
      "food",
      "type",
      "allery",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"M\"",
          null
        ],
        "and",
        [
          false,
          8,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    1,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    2,
                    false
                  ],
                  null
                ],
                "\"food\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(*) FROM Student WHERE sex  =  \"M\" AND StuID IN (SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\")",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Student",
      "WHERE",
      "sex",
      "=",
      "``",
      "M",
      "''",
      "AND",
      "StuID",
      "IN",
      "(",
      "SELECT",
      "StuID",
      "FROM",
      "Has_allergy",
      "AS",
      "T1",
      "JOIN",
      "Allergy_Type",
      "AS",
      "T2",
      "ON",
      "T1.Allergy",
      "=",
      "T2.Allergy",
      "WHERE",
      "T2.allergytype",
      "=",
      "``",
      "food",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student",
      "where",
      "sex",
      "=",
      "value",
      "and",
      "stuid",
      "in",
      "(",
      "select",
      "stuid",
      "from",
      "has_allergy",
      "as",
      "t1",
      "join",
      "allergy_type",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "allergy",
      "=",
      "t2",
      ".",
      "allergy",
      "where",
      "t2",
      ".",
      "allergytype",
      "=",
      "value",
      ")"
    ],
    "question": "How many male students (sex is 'M') are allergic to any type of food?",
    "question_toks": [
      "How",
      "many",
      "male",
      "students",
      "(",
      "sex",
      "is",
      "'M",
      "'",
      ")",
      "are",
      "allergic",
      "to",
      "any",
      "type",
      "of",
      "food",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"M\"",
          null
        ],
        "and",
        [
          false,
          8,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    1,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    2,
                    false
                  ],
                  null
                ],
                "\"food\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(*) FROM Student WHERE age  >  18 AND StuID NOT IN ( SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\" OR T2.allergytype  =  \"animal\")",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Student",
      "WHERE",
      "age",
      ">",
      "18",
      "AND",
      "StuID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "StuID",
      "FROM",
      "Has_allergy",
      "AS",
      "T1",
      "JOIN",
      "Allergy_Type",
      "AS",
      "T2",
      "ON",
      "T1.Allergy",
      "=",
      "T2.Allergy",
      "WHERE",
      "T2.allergytype",
      "=",
      "``",
      "food",
      "''",
      "OR",
      "T2.allergytype",
      "=",
      "``",
      "animal",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student",
      "where",
      "age",
      ">",
      "value",
      "and",
      "stuid",
      "not",
      "in",
      "(",
      "select",
      "stuid",
      "from",
      "has_allergy",
      "as",
      "t1",
      "join",
      "allergy_type",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "allergy",
      "=",
      "t2",
      ".",
      "allergy",
      "where",
      "t2",
      ".",
      "allergytype",
      "=",
      "value",
      "or",
      "t2",
      ".",
      "allergytype",
      "=",
      "value",
      ")"
    ],
    "question": "Find the number of students who are older than 18 and do not have allergy to either food or animal.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "students",
      "who",
      "are",
      "older",
      "than",
      "18",
      "and",
      "do",
      "not",
      "have",
      "allergy",
      "to",
      "either",
      "food",
      "or",
      "animal",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          18.0,
          null
        ],
        "and",
        [
          true,
          8,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    1,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    2,
                    false
                  ],
                  null
                ],
                "\"food\"",
                null
              ],
              "or",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    2,
                    false
                  ],
                  null
                ],
                "\"animal\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(*) FROM Student WHERE age  >  18 AND StuID NOT IN ( SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\" OR T2.allergytype  =  \"animal\")",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Student",
      "WHERE",
      "age",
      ">",
      "18",
      "AND",
      "StuID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "StuID",
      "FROM",
      "Has_allergy",
      "AS",
      "T1",
      "JOIN",
      "Allergy_Type",
      "AS",
      "T2",
      "ON",
      "T1.Allergy",
      "=",
      "T2.Allergy",
      "WHERE",
      "T2.allergytype",
      "=",
      "``",
      "food",
      "''",
      "OR",
      "T2.allergytype",
      "=",
      "``",
      "animal",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student",
      "where",
      "age",
      ">",
      "value",
      "and",
      "stuid",
      "not",
      "in",
      "(",
      "select",
      "stuid",
      "from",
      "has_allergy",
      "as",
      "t1",
      "join",
      "allergy_type",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "allergy",
      "=",
      "t2",
      ".",
      "allergy",
      "where",
      "t2",
      ".",
      "allergytype",
      "=",
      "value",
      "or",
      "t2",
      ".",
      "allergytype",
      "=",
      "value",
      ")"
    ],
    "question": "How many students are over 18 and do not have allergy to food type or animal type?",
    "question_toks": [
      "How",
      "many",
      "students",
      "are",
      "over",
      "18",
      "and",
      "do",
      "not",
      "have",
      "allergy",
      "to",
      "food",
      "type",
      "or",
      "animal",
      "type",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          18.0,
          null
        ],
        "and",
        [
          true,
          8,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    1,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    2,
                    false
                  ],
                  null
                ],
                "\"food\"",
                null
              ],
              "or",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    2,
                    false
                  ],
                  null
                ],
                "\"animal\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT fname ,  major FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Soy\")",
    "query_toks": [
      "SELECT",
      "fname",
      ",",
      "major",
      "FROM",
      "Student",
      "WHERE",
      "StuID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "StuID",
      "FROM",
      "Has_allergy",
      "WHERE",
      "Allergy",
      "=",
      "``",
      "Soy",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      ",",
      "major",
      "from",
      "student",
      "where",
      "stuid",
      "not",
      "in",
      "(",
      "select",
      "stuid",
      "from",
      "has_allergy",
      "where",
      "allergy",
      "=",
      "value",
      ")"
    ],
    "question": "Find the first name and major of the students who are not allegry to soy.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "name",
      "and",
      "major",
      "of",
      "the",
      "students",
      "who",
      "are",
      "not",
      "allegry",
      "to",
      "soy",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    4,
                    false
                  ],
                  null
                ],
                "\"Soy\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT fname ,  major FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Soy\")",
    "query_toks": [
      "SELECT",
      "fname",
      ",",
      "major",
      "FROM",
      "Student",
      "WHERE",
      "StuID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "StuID",
      "FROM",
      "Has_allergy",
      "WHERE",
      "Allergy",
      "=",
      "``",
      "Soy",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      ",",
      "major",
      "from",
      "student",
      "where",
      "stuid",
      "not",
      "in",
      "(",
      "select",
      "stuid",
      "from",
      "has_allergy",
      "where",
      "allergy",
      "=",
      "value",
      ")"
    ],
    "question": "What are the first name and major of the students who are able to consume soy?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "name",
      "and",
      "major",
      "of",
      "the",
      "students",
      "who",
      "are",
      "able",
      "to",
      "consume",
      "soy",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    4,
                    false
                  ],
                  null
                ],
                "\"Soy\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums;",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums"
    ],
    "question": "List every album's title.",
    "question_toks": [
      "List",
      "every",
      "album",
      "'s",
      "title",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums;",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums"
    ],
    "question": "What are the titles of all the albums?",
    "question_toks": [
      "What",
      "are",
      "the",
      "titles",
      "of",
      "all",
      "the",
      "albums",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT sum(total) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "total",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "``",
      "Chicago",
      "''",
      "AND",
      "billing_state",
      "=",
      "``",
      "IL",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "total",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "value",
      "and",
      "billing_state",
      "=",
      "value"
    ],
    "question": "List total amount of  invoice from Chicago, IL.",
    "question_toks": [
      "List",
      "total",
      "amount",
      "of",
      "invoice",
      "from",
      "Chicago",
      ",",
      "IL",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                46,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              42,
              false
            ],
            null
          ],
          "\"Chicago\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"IL\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT sum(total) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "total",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "``",
      "Chicago",
      "''",
      "AND",
      "billing_state",
      "=",
      "``",
      "IL",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "total",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "value",
      "and",
      "billing_state",
      "=",
      "value"
    ],
    "question": "What are the total amount of money in the invoices billed from Chicago, Illinois?",
    "question_toks": [
      "What",
      "are",
      "the",
      "total",
      "amount",
      "of",
      "money",
      "in",
      "the",
      "invoices",
      "billed",
      "from",
      "Chicago",
      ",",
      "Illinois",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                46,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              42,
              false
            ],
            null
          ],
          "\"Chicago\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"IL\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "``",
      "Chicago",
      "''",
      "AND",
      "billing_state",
      "=",
      "``",
      "IL",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "value",
      "and",
      "billing_state",
      "=",
      "value"
    ],
    "question": "List the number of invoices from Chicago, IL.",
    "question_toks": [
      "List",
      "the",
      "number",
      "of",
      "invoices",
      "from",
      "Chicago",
      ",",
      "IL",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              42,
              false
            ],
            null
          ],
          "\"Chicago\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"IL\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "``",
      "Chicago",
      "''",
      "AND",
      "billing_state",
      "=",
      "``",
      "IL",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "value",
      "and",
      "billing_state",
      "=",
      "value"
    ],
    "question": "How many invoices were billed from Chicago, IL?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "were",
      "billed",
      "from",
      "Chicago",
      ",",
      "IL",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              42,
              false
            ],
            null
          ],
          "\"Chicago\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"IL\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state ,  COUNT(*) ,  SUM(total) FROM invoices WHERE billing_state  =  \"CA\";",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      ",",
      "SUM",
      "(",
      "total",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_state",
      "=",
      "``",
      "CA",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "sum",
      "(",
      "total",
      ")",
      "from",
      "invoices",
      "where",
      "billing_state",
      "=",
      "value"
    ],
    "question": "List the number of invoices and the invoice total from California.",
    "question_toks": [
      "List",
      "the",
      "number",
      "of",
      "invoices",
      "and",
      "the",
      "invoice",
      "total",
      "from",
      "California",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            4,
            [
              0,
              [
                0,
                46,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"CA\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state ,  COUNT(*) ,  SUM(total) FROM invoices WHERE billing_state  =  \"CA\";",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      ",",
      "SUM",
      "(",
      "total",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_state",
      "=",
      "``",
      "CA",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "sum",
      "(",
      "total",
      ")",
      "from",
      "invoices",
      "where",
      "billing_state",
      "=",
      "value"
    ],
    "question": "What is the number of invoices and total money billed in them from CA?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "invoices",
      "and",
      "total",
      "money",
      "billed",
      "in",
      "them",
      "from",
      "CA",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            4,
            [
              0,
              [
                0,
                46,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"CA\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = \"Eduardo\" AND last_name = \"Martins\";",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Eduardo",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Martins",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "Eduardo Martins is a customer at which company?",
    "question_toks": [
      "Eduardo",
      "Martins",
      "is",
      "a",
      "customer",
      "at",
      "which",
      "company",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Eduardo\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"Martins\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = \"Eduardo\" AND last_name = \"Martins\";",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Eduardo",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Martins",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is the company where Eduardo Martins is a customer?",
    "question_toks": [
      "What",
      "is",
      "the",
      "company",
      "where",
      "Eduardo",
      "Martins",
      "is",
      "a",
      "customer",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Eduardo\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"Martins\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT email ,  phone FROM customers WHERE first_name = \"Astrid\" AND last_name = \"Gruber\";",
    "query_toks": [
      "SELECT",
      "email",
      ",",
      "phone",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Astrid",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Gruber",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "email",
      ",",
      "phone",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is Astrid Gruber's email and phone number?",
    "question_toks": [
      "What",
      "is",
      "Astrid",
      "Gruber",
      "'s",
      "email",
      "and",
      "phone",
      "number",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                32,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Astrid\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"Gruber\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT email ,  phone FROM customers WHERE first_name = \"Astrid\" AND last_name = \"Gruber\";",
    "query_toks": [
      "SELECT",
      "email",
      ",",
      "phone",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Astrid",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Gruber",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "email",
      ",",
      "phone",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is the email and phone number of Astrid Gruber the customer?",
    "question_toks": [
      "What",
      "is",
      "the",
      "email",
      "and",
      "phone",
      "number",
      "of",
      "Astrid",
      "Gruber",
      "the",
      "customer",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                32,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Astrid\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"Gruber\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*) FROM customers WHERE city = \"Prague\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customers",
      "WHERE",
      "city",
      "=",
      "``",
      "Prague",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "How many customers live in Prague city?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "live",
      "in",
      "Prague",
      "city",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              28,
              false
            ],
            null
          ],
          "\"Prague\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*) FROM customers WHERE city = \"Prague\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customers",
      "WHERE",
      "city",
      "=",
      "``",
      "Prague",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "How many customers live in the city of Prague?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "live",
      "in",
      "the",
      "city",
      "of",
      "Prague",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              28,
              false
            ],
            null
          ],
          "\"Prague\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*) FROM customers WHERE state = \"CA\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customers",
      "WHERE",
      "state",
      "=",
      "``",
      "CA",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers",
      "where",
      "state",
      "=",
      "value"
    ],
    "question": "How many customers in state of CA?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "in",
      "state",
      "of",
      "CA",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"CA\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*) FROM customers WHERE state = \"CA\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customers",
      "WHERE",
      "state",
      "=",
      "``",
      "CA",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers",
      "where",
      "state",
      "=",
      "value"
    ],
    "question": "How many customers are from California?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "are",
      "from",
      "California",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"CA\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = \"Roberto\" AND last_name = \"Almeida\";",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Roberto",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Almeida",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "What country does Roberto Almeida live?",
    "question_toks": [
      "What",
      "country",
      "does",
      "Roberto",
      "Almeida",
      "live",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Roberto\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"Almeida\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = \"Roberto\" AND last_name = \"Almeida\";",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Roberto",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Almeida",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "In which country does Roberto Almeida?",
    "question_toks": [
      "In",
      "which",
      "country",
      "does",
      "Roberto",
      "Almeida",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Roberto\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"Almeida\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title ,  phone ,  hire_date FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";",
    "query_toks": [
      "SELECT",
      "title",
      ",",
      "phone",
      ",",
      "hire_date",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Nancy",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Edwards",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      ",",
      "phone",
      ",",
      "hire_date",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is the title, phone and hire date of Nancy Edwards?",
    "question_toks": [
      "What",
      "is",
      "the",
      "title",
      ",",
      "phone",
      "and",
      "hire",
      "date",
      "of",
      "Nancy",
      "Edwards",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Nancy\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Edwards\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title ,  phone ,  hire_date FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";",
    "query_toks": [
      "SELECT",
      "title",
      ",",
      "phone",
      ",",
      "hire_date",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Nancy",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Edwards",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      ",",
      "phone",
      ",",
      "hire_date",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is the title, phone number and hire date for the employee named Nancy Edwards?",
    "question_toks": [
      "What",
      "is",
      "the",
      "title",
      ",",
      "phone",
      "number",
      "and",
      "hire",
      "date",
      "for",
      "the",
      "employee",
      "named",
      "Nancy",
      "Edwards",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Nancy\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Edwards\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT address FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";",
    "query_toks": [
      "SELECT",
      "address",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Nancy",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Edwards",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "address",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is the address of employee Nancy Edwards?",
    "question_toks": [
      "What",
      "is",
      "the",
      "address",
      "of",
      "employee",
      "Nancy",
      "Edwards",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Nancy\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Edwards\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT address FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";",
    "query_toks": [
      "SELECT",
      "address",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Nancy",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Edwards",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "address",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is Nancy Edwards's address?",
    "question_toks": [
      "What",
      "is",
      "Nancy",
      "Edwards",
      "'s",
      "address",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Nancy\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Edwards\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*) FROM employees WHERE country = \"Canada\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "employees",
      "WHERE",
      "country",
      "=",
      "``",
      "Canada",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "employees",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "How many employees are living in Canada?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "are",
      "living",
      "in",
      "Canada",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Canada\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*) FROM employees WHERE country = \"Canada\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "employees",
      "WHERE",
      "country",
      "=",
      "``",
      "Canada",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "employees",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "How many employees live in Canada?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "live",
      "in",
      "Canada",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Canada\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT phone FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";",
    "query_toks": [
      "SELECT",
      "phone",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Nancy",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Edwards",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "phone",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is employee Nancy Edwards's phone number?",
    "question_toks": [
      "What",
      "is",
      "employee",
      "Nancy",
      "Edwards",
      "'s",
      "phone",
      "number",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Nancy\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Edwards\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT phone FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";",
    "query_toks": [
      "SELECT",
      "phone",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Nancy",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Edwards",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "phone",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is the the phone number of Nancy Edwards?",
    "question_toks": [
      "What",
      "is",
      "the",
      "the",
      "phone",
      "number",
      "of",
      "Nancy",
      "Edwards",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Nancy\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Edwards\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT name FROM media_types;",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "media_types",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "media_types"
    ],
    "question": "List all media types.",
    "question_toks": [
      "List",
      "all",
      "media",
      "types",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                48,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT name FROM media_types;",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "media_types",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "media_types"
    ],
    "question": "What are the names of all the media types?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "the",
      "media",
      "types",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                48,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT name FROM playlists;",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "playlists",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "playlists"
    ],
    "question": "List the name of all playlist.",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "all",
      "playlist",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                64,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT name FROM playlists;",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "playlists",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "playlists"
    ],
    "question": "What are the names of all the playlists?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "the",
      "playlists",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                64,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = \"Fast As a Shark\";",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "``",
      "Fast",
      "As",
      "a",
      "Shark",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "Who is the composer of track Fast As a Shark?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "composer",
      "of",
      "track",
      "Fast",
      "As",
      "a",
      "Shark",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                54,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              50,
              false
            ],
            null
          ],
          "\"Fast As a Shark\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = \"Fast As a Shark\";",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "``",
      "Fast",
      "As",
      "a",
      "Shark",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "What is the composer who created the track \"Fast As a Shark\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "composer",
      "who",
      "created",
      "the",
      "track",
      "``",
      "Fast",
      "As",
      "a",
      "Shark",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                54,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              50,
              false
            ],
            null
          ],
          "\"Fast As a Shark\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = \"Fast As a Shark\";",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "``",
      "Fast",
      "As",
      "a",
      "Shark",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "How long does track Fast As a Shark has?",
    "question_toks": [
      "How",
      "long",
      "does",
      "track",
      "Fast",
      "As",
      "a",
      "Shark",
      "has",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                55,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              50,
              false
            ],
            null
          ],
          "\"Fast As a Shark\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = \"Fast As a Shark\";",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "``",
      "Fast",
      "As",
      "a",
      "Shark",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "How many milliseconds long is Fast As a Shark?",
    "question_toks": [
      "How",
      "many",
      "milliseconds",
      "long",
      "is",
      "Fast",
      "As",
      "a",
      "Shark",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                55,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              50,
              false
            ],
            null
          ],
          "\"Fast As a Shark\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT unit_price FROM tracks WHERE name = \"Fast As a Shark\";",
    "query_toks": [
      "SELECT",
      "unit_price",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "``",
      "Fast",
      "As",
      "a",
      "Shark",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "unit_price",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "How much is the track Fast As a Shark?",
    "question_toks": [
      "How",
      "much",
      "is",
      "the",
      "track",
      "Fast",
      "As",
      "a",
      "Shark",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                57,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              50,
              false
            ],
            null
          ],
          "\"Fast As a Shark\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT unit_price FROM tracks WHERE name = \"Fast As a Shark\";",
    "query_toks": [
      "SELECT",
      "unit_price",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "``",
      "Fast",
      "As",
      "a",
      "Shark",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "unit_price",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "What is the unit price of the tune \"Fast As a Shark\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "unit",
      "price",
      "of",
      "the",
      "tune",
      "``",
      "Fast",
      "As",
      "a",
      "Shark",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                57,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              50,
              false
            ],
            null
          ],
          "\"Fast As a Shark\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "journal_committee",
    "query": "SELECT count(*) FROM editor",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "editor"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "editor"
    ],
    "question": "How many editors are there?",
    "question_toks": [
      "How",
      "many",
      "editors",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "journal_committee",
    "query": "SELECT Name ,  Age FROM editor",
    "query_toks": [
      "SELECT",
      "Name",
      ",",
      "Age",
      "FROM",
      "editor"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "age",
      "from",
      "editor"
    ],
    "question": "What are the names and ages of editors?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "ages",
      "of",
      "editors",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "journal_committee",
    "query": "SELECT Name FROM editor WHERE Age  >  25",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "editor",
      "WHERE",
      "Age",
      ">",
      "25"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "editor",
      "where",
      "age",
      ">",
      "value"
    ],
    "question": "List the names of editors who are older than 25.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "editors",
      "who",
      "are",
      "older",
      "than",
      "25",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          25.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "journal_committee",
    "query": "SELECT Name FROM editor WHERE Age  =  24 OR Age  =  25",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "editor",
      "WHERE",
      "Age",
      "=",
      "24",
      "OR",
      "Age",
      "=",
      "25"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "editor",
      "where",
      "age",
      "=",
      "value",
      "or",
      "age",
      "=",
      "value"
    ],
    "question": "Show the names of editors of age either 24 or 25.",
    "question_toks": [
      "Show",
      "the",
      "names",
      "of",
      "editors",
      "of",
      "age",
      "either",
      "24",
      "or",
      "25",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          24.0,
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          25.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "journal_committee",
    "query": "SELECT Name FROM editor WHERE editor_id NOT IN (SELECT editor_id FROM journal_committee)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "editor",
      "WHERE",
      "editor_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "editor_id",
      "FROM",
      "journal_committee",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "editor",
      "where",
      "editor_id",
      "not",
      "in",
      "(",
      "select",
      "editor_id",
      "from",
      "journal_committee",
      ")"
    ],
    "question": "List the names of editors that are not on any journal committee.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "editors",
      "that",
      "are",
      "not",
      "on",
      "any",
      "journal",
      "committee",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT count(*) FROM Accounts",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Accounts"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "accounts"
    ],
    "question": "How many accounts do we have?",
    "question_toks": [
      "How",
      "many",
      "accounts",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT count(*) FROM Accounts",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Accounts"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "accounts"
    ],
    "question": "Count the number of accounts.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "accounts",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT account_id ,  customer_id ,  account_name FROM Accounts",
    "query_toks": [
      "SELECT",
      "account_id",
      ",",
      "customer_id",
      ",",
      "account_name",
      "FROM",
      "Accounts"
    ],
    "query_toks_no_value": [
      "select",
      "account_id",
      ",",
      "customer_id",
      ",",
      "account_name",
      "from",
      "accounts"
    ],
    "question": "Show ids, customer ids, names for all accounts.",
    "question_toks": [
      "Show",
      "ids",
      ",",
      "customer",
      "ids",
      ",",
      "names",
      "for",
      "all",
      "accounts",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT account_id ,  customer_id ,  account_name FROM Accounts",
    "query_toks": [
      "SELECT",
      "account_id",
      ",",
      "customer_id",
      ",",
      "account_name",
      "FROM",
      "Accounts"
    ],
    "query_toks_no_value": [
      "select",
      "account_id",
      ",",
      "customer_id",
      ",",
      "account_name",
      "from",
      "accounts"
    ],
    "question": "What are the account ids, customer ids, and account names for all the accounts?",
    "question_toks": [
      "What",
      "are",
      "the",
      "account",
      "ids",
      ",",
      "customer",
      "ids",
      ",",
      "and",
      "account",
      "names",
      "for",
      "all",
      "the",
      "accounts",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT other_account_details FROM Accounts WHERE account_name  =  \"338\"",
    "query_toks": [
      "SELECT",
      "other_account_details",
      "FROM",
      "Accounts",
      "WHERE",
      "account_name",
      "=",
      "``",
      "338",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "other_account_details",
      "from",
      "accounts",
      "where",
      "account_name",
      "=",
      "value"
    ],
    "question": "Show other account details for account with name 338.",
    "question_toks": [
      "Show",
      "other",
      "account",
      "details",
      "for",
      "account",
      "with",
      "name",
      "338",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"338\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT other_account_details FROM Accounts WHERE account_name  =  \"338\"",
    "query_toks": [
      "SELECT",
      "other_account_details",
      "FROM",
      "Accounts",
      "WHERE",
      "account_name",
      "=",
      "``",
      "338",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "other_account_details",
      "from",
      "accounts",
      "where",
      "account_name",
      "=",
      "value"
    ],
    "question": "What are the other account details for the account with the name 338?",
    "question_toks": [
      "What",
      "are",
      "the",
      "other",
      "account",
      "details",
      "for",
      "the",
      "account",
      "with",
      "the",
      "name",
      "338",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"338\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers",
      "WHERE",
      "customer_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "customer_id",
      "FROM",
      "Accounts",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers",
      "where",
      "customer_id",
      "not",
      "in",
      "(",
      "select",
      "customer_id",
      "from",
      "accounts",
      ")"
    ],
    "question": "Show the number of all customers without an account.",
    "question_toks": [
      "Show",
      "the",
      "number",
      "of",
      "all",
      "customers",
      "without",
      "an",
      "account",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      2,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers",
      "WHERE",
      "customer_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "customer_id",
      "FROM",
      "Accounts",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers",
      "where",
      "customer_id",
      "not",
      "in",
      "(",
      "select",
      "customer_id",
      "from",
      "accounts",
      ")"
    ],
    "question": "How many customers do not have an account?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "do",
      "not",
      "have",
      "an",
      "account",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      2,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT count(DISTINCT customer_id) FROM Accounts",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "customer_id",
      ")",
      "FROM",
      "Accounts"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "customer_id",
      ")",
      "from",
      "accounts"
    ],
    "question": "How many customers have an account?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "have",
      "an",
      "account",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                2,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT count(DISTINCT customer_id) FROM Accounts",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "customer_id",
      ")",
      "FROM",
      "Accounts"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "customer_id",
      ")",
      "from",
      "accounts"
    ],
    "question": "Count the number of customers who hold an account.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "customers",
      "who",
      "hold",
      "an",
      "account",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                2,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT count(*) FROM Customers",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers"
    ],
    "question": "How many customers do we have?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT count(*) FROM Customers",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers"
    ],
    "question": "Count the number of customers.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "customers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT customer_id ,  customer_first_name ,  customer_last_name ,  customer_phone FROM Customers",
    "query_toks": [
      "SELECT",
      "customer_id",
      ",",
      "customer_first_name",
      ",",
      "customer_last_name",
      ",",
      "customer_phone",
      "FROM",
      "Customers"
    ],
    "query_toks_no_value": [
      "select",
      "customer_id",
      ",",
      "customer_first_name",
      ",",
      "customer_last_name",
      ",",
      "customer_phone",
      "from",
      "customers"
    ],
    "question": "Show ids, first names, last names, and phones for all customers.",
    "question_toks": [
      "Show",
      "ids",
      ",",
      "first",
      "names",
      ",",
      "last",
      "names",
      ",",
      "and",
      "phones",
      "for",
      "all",
      "customers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT customer_id ,  customer_first_name ,  customer_last_name ,  customer_phone FROM Customers",
    "query_toks": [
      "SELECT",
      "customer_id",
      ",",
      "customer_first_name",
      ",",
      "customer_last_name",
      ",",
      "customer_phone",
      "FROM",
      "Customers"
    ],
    "query_toks_no_value": [
      "select",
      "customer_id",
      ",",
      "customer_first_name",
      ",",
      "customer_last_name",
      ",",
      "customer_phone",
      "from",
      "customers"
    ],
    "question": "What are the ids, full names, and phones of each customer?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      ",",
      "full",
      "names",
      ",",
      "and",
      "phones",
      "of",
      "each",
      "customer",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT customer_phone ,  customer_email FROM Customers WHERE customer_first_name  =  \"Aniyah\" AND customer_last_name  =  \"Feest\"",
    "query_toks": [
      "SELECT",
      "customer_phone",
      ",",
      "customer_email",
      "FROM",
      "Customers",
      "WHERE",
      "customer_first_name",
      "=",
      "``",
      "Aniyah",
      "''",
      "AND",
      "customer_last_name",
      "=",
      "``",
      "Feest",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_phone",
      ",",
      "customer_email",
      "from",
      "customers",
      "where",
      "customer_first_name",
      "=",
      "value",
      "and",
      "customer_last_name",
      "=",
      "value"
    ],
    "question": "What is the phone and email for customer with first name Aniyah and last name Feest?",
    "question_toks": [
      "What",
      "is",
      "the",
      "phone",
      "and",
      "email",
      "for",
      "customer",
      "with",
      "first",
      "name",
      "Aniyah",
      "and",
      "last",
      "name",
      "Feest",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Aniyah\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"Feest\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT customer_phone ,  customer_email FROM Customers WHERE customer_first_name  =  \"Aniyah\" AND customer_last_name  =  \"Feest\"",
    "query_toks": [
      "SELECT",
      "customer_phone",
      ",",
      "customer_email",
      "FROM",
      "Customers",
      "WHERE",
      "customer_first_name",
      "=",
      "``",
      "Aniyah",
      "''",
      "AND",
      "customer_last_name",
      "=",
      "``",
      "Feest",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_phone",
      ",",
      "customer_email",
      "from",
      "customers",
      "where",
      "customer_first_name",
      "=",
      "value",
      "and",
      "customer_last_name",
      "=",
      "value"
    ],
    "question": "Return the phone and email of the customer with the first name Aniyah and last name Feest.",
    "question_toks": [
      "Return",
      "the",
      "phone",
      "and",
      "email",
      "of",
      "the",
      "customer",
      "with",
      "the",
      "first",
      "name",
      "Aniyah",
      "and",
      "last",
      "name",
      "Feest",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Aniyah\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"Feest\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT count(*) FROM Customers_cards",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers_cards"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers_cards"
    ],
    "question": "Show the number of customer cards.",
    "question_toks": [
      "Show",
      "the",
      "number",
      "of",
      "customer",
      "cards",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT count(*) FROM Customers_cards",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers_cards"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers_cards"
    ],
    "question": "How many customer cards are there?",
    "question_toks": [
      "How",
      "many",
      "customer",
      "cards",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT card_id ,  customer_id ,  card_type_code ,  card_number FROM Customers_cards",
    "query_toks": [
      "SELECT",
      "card_id",
      ",",
      "customer_id",
      ",",
      "card_type_code",
      ",",
      "card_number",
      "FROM",
      "Customers_cards"
    ],
    "query_toks_no_value": [
      "select",
      "card_id",
      ",",
      "customer_id",
      ",",
      "card_type_code",
      ",",
      "card_number",
      "from",
      "customers_cards"
    ],
    "question": "Show ids, customer ids, card type codes, card numbers for all cards.",
    "question_toks": [
      "Show",
      "ids",
      ",",
      "customer",
      "ids",
      ",",
      "card",
      "type",
      "codes",
      ",",
      "card",
      "numbers",
      "for",
      "all",
      "cards",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT card_id ,  customer_id ,  card_type_code ,  card_number FROM Customers_cards",
    "query_toks": [
      "SELECT",
      "card_id",
      ",",
      "customer_id",
      ",",
      "card_type_code",
      ",",
      "card_number",
      "FROM",
      "Customers_cards"
    ],
    "query_toks_no_value": [
      "select",
      "card_id",
      ",",
      "customer_id",
      ",",
      "card_type_code",
      ",",
      "card_number",
      "from",
      "customers_cards"
    ],
    "question": "What are card ids, customer ids, card types, and card numbers for each customer card?",
    "question_toks": [
      "What",
      "are",
      "card",
      "ids",
      ",",
      "customer",
      "ids",
      ",",
      "card",
      "types",
      ",",
      "and",
      "card",
      "numbers",
      "for",
      "each",
      "customer",
      "card",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT date_valid_from ,  date_valid_to FROM Customers_cards WHERE card_number  =  \"4560596484842\"",
    "query_toks": [
      "SELECT",
      "date_valid_from",
      ",",
      "date_valid_to",
      "FROM",
      "Customers_cards",
      "WHERE",
      "card_number",
      "=",
      "``",
      "4560596484842",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "date_valid_from",
      ",",
      "date_valid_to",
      "from",
      "customers_cards",
      "where",
      "card_number",
      "=",
      "value"
    ],
    "question": "Show the date valid from and the date valid to for the card with card number '4560596484842'.",
    "question_toks": [
      "Show",
      "the",
      "date",
      "valid",
      "from",
      "and",
      "the",
      "date",
      "valid",
      "to",
      "for",
      "the",
      "card",
      "with",
      "card",
      "number",
      "'4560596484842",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"4560596484842\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT date_valid_from ,  date_valid_to FROM Customers_cards WHERE card_number  =  \"4560596484842\"",
    "query_toks": [
      "SELECT",
      "date_valid_from",
      ",",
      "date_valid_to",
      "FROM",
      "Customers_cards",
      "WHERE",
      "card_number",
      "=",
      "``",
      "4560596484842",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "date_valid_from",
      ",",
      "date_valid_to",
      "from",
      "customers_cards",
      "where",
      "card_number",
      "=",
      "value"
    ],
    "question": "What are the valid from and valid to dates for the card with the number 4560596484842?",
    "question_toks": [
      "What",
      "are",
      "the",
      "valid",
      "from",
      "and",
      "valid",
      "to",
      "dates",
      "for",
      "the",
      "card",
      "with",
      "the",
      "number",
      "4560596484842",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"4560596484842\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT count(*) FROM Customers_cards WHERE card_type_code  =  \"Debit\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers_cards",
      "WHERE",
      "card_type_code",
      "=",
      "``",
      "Debit",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers_cards",
      "where",
      "card_type_code",
      "=",
      "value"
    ],
    "question": "How many debit cards do we have?",
    "question_toks": [
      "How",
      "many",
      "debit",
      "cards",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"Debit\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT count(*) FROM Customers_cards WHERE card_type_code  =  \"Debit\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers_cards",
      "WHERE",
      "card_type_code",
      "=",
      "``",
      "Debit",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers_cards",
      "where",
      "card_type_code",
      "=",
      "value"
    ],
    "question": "Count the number of customer cards of the type Debit.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "customer",
      "cards",
      "of",
      "the",
      "type",
      "Debit",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"Debit\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT count(DISTINCT card_type_code) FROM Customers_Cards",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "card_type_code",
      ")",
      "FROM",
      "Customers_Cards"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "card_type_code",
      ")",
      "from",
      "customers_cards"
    ],
    "question": "Show the number of card types.",
    "question_toks": [
      "Show",
      "the",
      "number",
      "of",
      "card",
      "types",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                14,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT count(DISTINCT card_type_code) FROM Customers_Cards",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "card_type_code",
      ")",
      "FROM",
      "Customers_Cards"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "card_type_code",
      ")",
      "from",
      "customers_cards"
    ],
    "question": "How many different card types are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "card",
      "types",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                14,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT count(DISTINCT transaction_type) FROM Financial_Transactions",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "transaction_type",
      ")",
      "FROM",
      "Financial_Transactions"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "transaction_type",
      ")",
      "from",
      "financial_transactions"
    ],
    "question": "Show the number of transaction types.",
    "question_toks": [
      "Show",
      "the",
      "number",
      "of",
      "transaction",
      "types",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                23,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT count(DISTINCT transaction_type) FROM Financial_Transactions",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "transaction_type",
      ")",
      "FROM",
      "Financial_Transactions"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "transaction_type",
      ")",
      "from",
      "financial_transactions"
    ],
    "question": "How many different types of transactions are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "types",
      "of",
      "transactions",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                23,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT avg(transaction_amount) ,  sum(transaction_amount) FROM Financial_transactions",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "transaction_amount",
      ")",
      ",",
      "sum",
      "(",
      "transaction_amount",
      ")",
      "FROM",
      "Financial_transactions"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "transaction_amount",
      ")",
      ",",
      "sum",
      "(",
      "transaction_amount",
      ")",
      "from",
      "financial_transactions"
    ],
    "question": "What is the average and total transaction amount?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "and",
      "total",
      "transaction",
      "amount",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ],
          [
            4,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT avg(transaction_amount) ,  sum(transaction_amount) FROM Financial_transactions",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "transaction_amount",
      ")",
      ",",
      "sum",
      "(",
      "transaction_amount",
      ")",
      "FROM",
      "Financial_transactions"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "transaction_amount",
      ")",
      ",",
      "sum",
      "(",
      "transaction_amount",
      ")",
      "from",
      "financial_transactions"
    ],
    "question": "Return the average transaction amount, as well as the total amount of all transactions.",
    "question_toks": [
      "Return",
      "the",
      "average",
      "transaction",
      "amount",
      ",",
      "as",
      "well",
      "as",
      "the",
      "total",
      "amount",
      "of",
      "all",
      "transactions",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ],
          [
            4,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "race_track",
    "query": "SELECT count(*) FROM track",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "track"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "track"
    ],
    "question": "How many tracks do we have?",
    "question_toks": [
      "How",
      "many",
      "tracks",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "race_track",
    "query": "SELECT count(*) FROM track",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "track"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "track"
    ],
    "question": "Count the number of tracks.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "tracks",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "race_track",
    "query": "SELECT name ,  LOCATION FROM track",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "LOCATION",
      "FROM",
      "track"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "location",
      "from",
      "track"
    ],
    "question": "Show the name and location for all tracks.",
    "question_toks": [
      "Show",
      "the",
      "name",
      "and",
      "location",
      "for",
      "all",
      "tracks",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "race_track",
    "query": "SELECT name ,  LOCATION FROM track",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "LOCATION",
      "FROM",
      "track"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "location",
      "from",
      "track"
    ],
    "question": "What are the names and locations of all tracks?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "locations",
      "of",
      "all",
      "tracks",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "race_track",
    "query": "SELECT min(seating) ,  max(seating) ,  avg(seating) FROM track",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "seating",
      ")",
      ",",
      "max",
      "(",
      "seating",
      ")",
      ",",
      "avg",
      "(",
      "seating",
      ")",
      "FROM",
      "track"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "seating",
      ")",
      ",",
      "max",
      "(",
      "seating",
      ")",
      ",",
      "avg",
      "(",
      "seating",
      ")",
      "from",
      "track"
    ],
    "question": "What is the minimum, maximum, and average seating for all tracks.",
    "question_toks": [
      "What",
      "is",
      "the",
      "minimum",
      ",",
      "maximum",
      ",",
      "and",
      "average",
      "seating",
      "for",
      "all",
      "tracks",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "race_track",
    "query": "SELECT min(seating) ,  max(seating) ,  avg(seating) FROM track",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "seating",
      ")",
      ",",
      "max",
      "(",
      "seating",
      ")",
      ",",
      "avg",
      "(",
      "seating",
      ")",
      "FROM",
      "track"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "seating",
      ")",
      ",",
      "max",
      "(",
      "seating",
      ")",
      ",",
      "avg",
      "(",
      "seating",
      ")",
      "from",
      "track"
    ],
    "question": "Return the minimum, maximum, and average seating across all tracks.",
    "question_toks": [
      "Return",
      "the",
      "minimum",
      ",",
      "maximum",
      ",",
      "and",
      "average",
      "seating",
      "across",
      "all",
      "tracks",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "race_track",
    "query": "SELECT name ,  LOCATION ,  year_opened FROM track WHERE seating  >  (SELECT avg(seating) FROM track)",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "LOCATION",
      ",",
      "year_opened",
      "FROM",
      "track",
      "WHERE",
      "seating",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "seating",
      ")",
      "FROM",
      "track",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "location",
      ",",
      "year_opened",
      "from",
      "track",
      "where",
      "seating",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "seating",
      ")",
      "from",
      "track",
      ")"
    ],
    "question": "Show the name, location, open year for all tracks with a seating higher than the average.",
    "question_toks": [
      "Show",
      "the",
      "name",
      ",",
      "location",
      ",",
      "open",
      "year",
      "for",
      "all",
      "tracks",
      "with",
      "a",
      "seating",
      "higher",
      "than",
      "the",
      "average",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "race_track",
    "query": "SELECT name ,  LOCATION ,  year_opened FROM track WHERE seating  >  (SELECT avg(seating) FROM track)",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "LOCATION",
      ",",
      "year_opened",
      "FROM",
      "track",
      "WHERE",
      "seating",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "seating",
      ")",
      "FROM",
      "track",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "location",
      ",",
      "year_opened",
      "from",
      "track",
      "where",
      "seating",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "seating",
      ")",
      "from",
      "track",
      ")"
    ],
    "question": "What are the names, locations, and years of opening for tracks with seating higher than average?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      ",",
      "locations",
      ",",
      "and",
      "years",
      "of",
      "opening",
      "for",
      "tracks",
      "with",
      "seating",
      "higher",
      "than",
      "average",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "race_track",
    "query": "SELECT count(*) FROM race",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "race"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "race"
    ],
    "question": "How many races are there?",
    "question_toks": [
      "How",
      "many",
      "races",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "race_track",
    "query": "SELECT count(*) FROM race",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "race"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "race"
    ],
    "question": "Count the number of races.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "races",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "race_track",
    "query": "SELECT name ,  CLASS ,  date FROM race",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "CLASS",
      ",",
      "date",
      "FROM",
      "race"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "class",
      ",",
      "date",
      "from",
      "race"
    ],
    "question": "Show name, class, and date for all races.",
    "question_toks": [
      "Show",
      "name",
      ",",
      "class",
      ",",
      "and",
      "date",
      "for",
      "all",
      "races",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "race_track",
    "query": "SELECT name ,  CLASS ,  date FROM race",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "CLASS",
      ",",
      "date",
      "FROM",
      "race"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "class",
      ",",
      "date",
      "from",
      "race"
    ],
    "question": "What are the names, classes, and dates for all races?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      ",",
      "classes",
      ",",
      "and",
      "dates",
      "for",
      "all",
      "races",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "race_track",
    "query": "SELECT name FROM track WHERE track_id NOT IN (SELECT track_id FROM race)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "track",
      "WHERE",
      "track_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "track_id",
      "FROM",
      "race",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "track",
      "where",
      "track_id",
      "not",
      "in",
      "(",
      "select",
      "track_id",
      "from",
      "race",
      ")"
    ],
    "question": "Show all track names that have had no races.",
    "question_toks": [
      "Show",
      "all",
      "track",
      "names",
      "that",
      "have",
      "had",
      "no",
      "races",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "race_track",
    "query": "SELECT name FROM track WHERE track_id NOT IN (SELECT track_id FROM race)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "track",
      "WHERE",
      "track_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "track_id",
      "FROM",
      "race",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "track",
      "where",
      "track_id",
      "not",
      "in",
      "(",
      "select",
      "track_id",
      "from",
      "race",
      ")"
    ],
    "question": "Return the names of tracks that have no had any races.",
    "question_toks": [
      "Return",
      "the",
      "names",
      "of",
      "tracks",
      "that",
      "have",
      "no",
      "had",
      "any",
      "races",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "race_track",
    "query": "SELECT year_opened FROM track WHERE seating BETWEEN 4000 AND 5000",
    "query_toks": [
      "SELECT",
      "year_opened",
      "FROM",
      "track",
      "WHERE",
      "seating",
      "BETWEEN",
      "4000",
      "AND",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "year_opened",
      "from",
      "track",
      "where",
      "seating",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "Show year where a track with a seating at least 5000 opened and a track with seating no more than 4000 opened.",
    "question_toks": [
      "Show",
      "year",
      "where",
      "a",
      "track",
      "with",
      "a",
      "seating",
      "at",
      "least",
      "5000",
      "opened",
      "and",
      "a",
      "track",
      "with",
      "seating",
      "no",
      "more",
      "than",
      "4000",
      "opened",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          4000.0,
          5000.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "race_track",
    "query": "SELECT year_opened FROM track WHERE seating BETWEEN 4000 AND 5000",
    "query_toks": [
      "SELECT",
      "year_opened",
      "FROM",
      "track",
      "WHERE",
      "seating",
      "BETWEEN",
      "4000",
      "AND",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "year_opened",
      "from",
      "track",
      "where",
      "seating",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What are the years of opening for tracks with seating between 4000 and 5000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "years",
      "of",
      "opening",
      "for",
      "tracks",
      "with",
      "seating",
      "between",
      "4000",
      "and",
      "5000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          4000.0,
          5000.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "coffee_shop",
    "query": "SELECT count(*) FROM member WHERE Membership_card  =  'Black'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "member",
      "WHERE",
      "Membership_card",
      "=",
      "'Black",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "member",
      "where",
      "membership_card",
      "=",
      "value"
    ],
    "question": "How many members have the black membership card?",
    "question_toks": [
      "How",
      "many",
      "members",
      "have",
      "the",
      "black",
      "membership",
      "card",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Black\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "coffee_shop",
    "query": "SELECT name FROM member WHERE address  =  'Harford' OR address  =  'Waterbury'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "member",
      "WHERE",
      "address",
      "=",
      "'Harford",
      "'",
      "OR",
      "address",
      "=",
      "'Waterbury",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "member",
      "where",
      "address",
      "=",
      "value",
      "or",
      "address",
      "=",
      "value"
    ],
    "question": "Give me the names of members whose address is in Harford or Waterbury.",
    "question_toks": [
      "Give",
      "me",
      "the",
      "names",
      "of",
      "members",
      "whose",
      "address",
      "is",
      "in",
      "Harford",
      "or",
      "Waterbury",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Harford\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Waterbury\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "coffee_shop",
    "query": "SELECT name ,  member_id FROM member WHERE Membership_card  =  'Black' OR age  <  30",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "member_id",
      "FROM",
      "member",
      "WHERE",
      "Membership_card",
      "=",
      "'Black",
      "'",
      "OR",
      "age",
      "<",
      "30"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "member_id",
      "from",
      "member",
      "where",
      "membership_card",
      "=",
      "value",
      "or",
      "age",
      "<",
      "value"
    ],
    "question": "Find the ids and names of members who are under age 30 or with black membership card.",
    "question_toks": [
      "Find",
      "the",
      "ids",
      "and",
      "names",
      "of",
      "members",
      "who",
      "are",
      "under",
      "age",
      "30",
      "or",
      "with",
      "black",
      "membership",
      "card",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Black\"",
          null
        ],
        "or",
        [
          false,
          4,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          30.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "coffee_shop",
    "query": "SELECT count(*) FROM member WHERE address != 'Hartford'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "member",
      "WHERE",
      "address",
      "!",
      "=",
      "'Hartford",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "member",
      "where",
      "address",
      "!",
      "=",
      "value"
    ],
    "question": "How many members are not living in Hartford?",
    "question_toks": [
      "How",
      "many",
      "members",
      "are",
      "not",
      "living",
      "in",
      "Hartford",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Hartford\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "coffee_shop",
    "query": "SELECT avg(num_of_staff) ,  avg(score) FROM shop",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "num_of_staff",
      ")",
      ",",
      "avg",
      "(",
      "score",
      ")",
      "FROM",
      "shop"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "num_of_staff",
      ")",
      ",",
      "avg",
      "(",
      "score",
      ")",
      "from",
      "shop"
    ],
    "question": "What are the average score and average staff number of all shops?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "score",
      "and",
      "average",
      "staff",
      "number",
      "of",
      "all",
      "shops",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "coffee_shop",
    "query": "SELECT shop_id ,  address FROM shop WHERE score  <  (SELECT avg(score) FROM shop)",
    "query_toks": [
      "SELECT",
      "shop_id",
      ",",
      "address",
      "FROM",
      "shop",
      "WHERE",
      "score",
      "<",
      "(",
      "SELECT",
      "avg",
      "(",
      "score",
      ")",
      "FROM",
      "shop",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "shop_id",
      ",",
      "address",
      "from",
      "shop",
      "where",
      "score",
      "<",
      "(",
      "select",
      "avg",
      "(",
      "score",
      ")",
      "from",
      "shop",
      ")"
    ],
    "question": "Find the id and address of the shops whose score is below the average score.",
    "question_toks": [
      "Find",
      "the",
      "id",
      "and",
      "address",
      "of",
      "the",
      "shops",
      "whose",
      "score",
      "is",
      "below",
      "the",
      "average",
      "score",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "coffee_shop",
    "query": "SELECT address ,  num_of_staff FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM happy_hour)",
    "query_toks": [
      "SELECT",
      "address",
      ",",
      "num_of_staff",
      "FROM",
      "shop",
      "WHERE",
      "shop_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "shop_id",
      "FROM",
      "happy_hour",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "address",
      ",",
      "num_of_staff",
      "from",
      "shop",
      "where",
      "shop_id",
      "not",
      "in",
      "(",
      "select",
      "shop_id",
      "from",
      "happy_hour",
      ")"
    ],
    "question": "Find the address and staff number of the shops that do not have any happy hour.",
    "question_toks": [
      "Find",
      "the",
      "address",
      "and",
      "staff",
      "number",
      "of",
      "the",
      "shops",
      "that",
      "do",
      "not",
      "have",
      "any",
      "happy",
      "hour",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      14,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT count(*) FROM ALBUM",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "ALBUM"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "album"
    ],
    "question": "How many albums are there?",
    "question_toks": [
      "How",
      "many",
      "albums",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT count(*) FROM ALBUM",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "ALBUM"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "album"
    ],
    "question": "Find the number of albums.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "albums",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT Name FROM GENRE",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "GENRE"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "genre"
    ],
    "question": "List the names of all music genres.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "all",
      "music",
      "genres",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT Name FROM GENRE",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "GENRE"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "genre"
    ],
    "question": "What are the names of different music genres?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "different",
      "music",
      "genres",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT * FROM CUSTOMER WHERE State  =  \"NY\"",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "CUSTOMER",
      "WHERE",
      "State",
      "=",
      "``",
      "NY",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "customer",
      "where",
      "state",
      "=",
      "value"
    ],
    "question": "Find all the customer information in state NY.",
    "question_toks": [
      "Find",
      "all",
      "the",
      "customer",
      "information",
      "in",
      "state",
      "NY",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"NY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT * FROM CUSTOMER WHERE State  =  \"NY\"",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "CUSTOMER",
      "WHERE",
      "State",
      "=",
      "``",
      "NY",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "customer",
      "where",
      "state",
      "=",
      "value"
    ],
    "question": "What is all the customer information for customers in NY state?",
    "question_toks": [
      "What",
      "is",
      "all",
      "the",
      "customer",
      "information",
      "for",
      "customers",
      "in",
      "NY",
      "state",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"NY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT FirstName ,  LastName FROM EMPLOYEE WHERE City  =  \"Calgary\"",
    "query_toks": [
      "SELECT",
      "FirstName",
      ",",
      "LastName",
      "FROM",
      "EMPLOYEE",
      "WHERE",
      "City",
      "=",
      "``",
      "Calgary",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "firstname",
      ",",
      "lastname",
      "from",
      "employee",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "What are the first names and last names of the employees who live in Calgary city.",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "names",
      "and",
      "last",
      "names",
      "of",
      "the",
      "employees",
      "who",
      "live",
      "in",
      "Calgary",
      "city",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          "\"Calgary\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT FirstName ,  LastName FROM EMPLOYEE WHERE City  =  \"Calgary\"",
    "query_toks": [
      "SELECT",
      "FirstName",
      ",",
      "LastName",
      "FROM",
      "EMPLOYEE",
      "WHERE",
      "City",
      "=",
      "``",
      "Calgary",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "firstname",
      ",",
      "lastname",
      "from",
      "employee",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "Find the full names of employees living in the city of Calgary.",
    "question_toks": [
      "Find",
      "the",
      "full",
      "names",
      "of",
      "employees",
      "living",
      "in",
      "the",
      "city",
      "of",
      "Calgary",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          "\"Calgary\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT Name FROM ARTIST WHERE Name LIKE \"%a%\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "ARTIST",
      "WHERE",
      "Name",
      "LIKE",
      "``",
      "%",
      "a",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "artist",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "Find the names of all artists that have \"a\" in their names.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "all",
      "artists",
      "that",
      "have",
      "``",
      "a",
      "''",
      "in",
      "their",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"%a%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT Name FROM ARTIST WHERE Name LIKE \"%a%\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "ARTIST",
      "WHERE",
      "Name",
      "LIKE",
      "``",
      "%",
      "a",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "artist",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "What are the names of artist who have the letter 'a' in their names?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "artist",
      "who",
      "have",
      "the",
      "letter",
      "'a",
      "'",
      "in",
      "their",
      "names",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"%a%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT Name FROM TRACK WHERE Name LIKE '%you%'",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "TRACK",
      "WHERE",
      "Name",
      "LIKE",
      "'",
      "%",
      "you",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "track",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "Find the names of all the tracks that contain the word \"you\".",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "all",
      "the",
      "tracks",
      "that",
      "contain",
      "the",
      "word",
      "``",
      "you",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                57,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              57,
              false
            ],
            null
          ],
          "\"%you%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT Name FROM TRACK WHERE Name LIKE '%you%'",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "TRACK",
      "WHERE",
      "Name",
      "LIKE",
      "'",
      "%",
      "you",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "track",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "What are the names of tracks that contain the the word you in them?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "tracks",
      "that",
      "contain",
      "the",
      "the",
      "word",
      "you",
      "in",
      "them",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                57,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              57,
              false
            ],
            null
          ],
          "\"%you%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT AVG(UnitPrice) FROM TRACK",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "UnitPrice",
      ")",
      "FROM",
      "TRACK"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "unitprice",
      ")",
      "from",
      "track"
    ],
    "question": "What is the average unit price of all the tracks?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "unit",
      "price",
      "of",
      "all",
      "the",
      "tracks",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                64,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT AVG(UnitPrice) FROM TRACK",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "UnitPrice",
      ")",
      "FROM",
      "TRACK"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "unitprice",
      ")",
      "from",
      "track"
    ],
    "question": "Find the average unit price for a track.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "unit",
      "price",
      "for",
      "a",
      "track",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                64,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT max(Milliseconds) ,  min(Milliseconds) FROM TRACK",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Milliseconds",
      ")",
      ",",
      "min",
      "(",
      "Milliseconds",
      ")",
      "FROM",
      "TRACK"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "milliseconds",
      ")",
      ",",
      "min",
      "(",
      "milliseconds",
      ")",
      "from",
      "track"
    ],
    "question": "What are the durations of the longest and the shortest tracks in milliseconds?",
    "question_toks": [
      "What",
      "are",
      "the",
      "durations",
      "of",
      "the",
      "longest",
      "and",
      "the",
      "shortest",
      "tracks",
      "in",
      "milliseconds",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                62,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                62,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT max(Milliseconds) ,  min(Milliseconds) FROM TRACK",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Milliseconds",
      ")",
      ",",
      "min",
      "(",
      "Milliseconds",
      ")",
      "FROM",
      "TRACK"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "milliseconds",
      ")",
      ",",
      "min",
      "(",
      "milliseconds",
      ")",
      "from",
      "track"
    ],
    "question": "Find the maximum and minimum durations of tracks in milliseconds.",
    "question_toks": [
      "Find",
      "the",
      "maximum",
      "and",
      "minimum",
      "durations",
      "of",
      "tracks",
      "in",
      "milliseconds",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                62,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                62,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT FirstName ,  LastName FROM CUSTOMER WHERE Email  =  \"luisg@embraer.com.br\"",
    "query_toks": [
      "SELECT",
      "FirstName",
      ",",
      "LastName",
      "FROM",
      "CUSTOMER",
      "WHERE",
      "Email",
      "=",
      "``",
      "luisg",
      "@",
      "embraer.com.br",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "firstname",
      ",",
      "lastname",
      "from",
      "customer",
      "where",
      "email",
      "=",
      "value"
    ],
    "question": "What is the first name and last name of the customer that has email \"luisg@embraer.com.br\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "first",
      "name",
      "and",
      "last",
      "name",
      "of",
      "the",
      "customer",
      "that",
      "has",
      "email",
      "``",
      "luisg",
      "@",
      "embraer.com.br",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"luisg@embraer.com.br\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT FirstName ,  LastName FROM CUSTOMER WHERE Email  =  \"luisg@embraer.com.br\"",
    "query_toks": [
      "SELECT",
      "FirstName",
      ",",
      "LastName",
      "FROM",
      "CUSTOMER",
      "WHERE",
      "Email",
      "=",
      "``",
      "luisg",
      "@",
      "embraer.com.br",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "firstname",
      ",",
      "lastname",
      "from",
      "customer",
      "where",
      "email",
      "=",
      "value"
    ],
    "question": "Find the full name of the customer with the email \"luisg@embraer.com.br\".",
    "question_toks": [
      "Find",
      "the",
      "full",
      "name",
      "of",
      "the",
      "customer",
      "with",
      "the",
      "email",
      "``",
      "luisg",
      "@",
      "embraer.com.br",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"luisg@embraer.com.br\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT COUNT(*) FROM CUSTOMER WHERE Email LIKE \"%gmail.com%\"",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "CUSTOMER",
      "WHERE",
      "Email",
      "LIKE",
      "``",
      "%",
      "gmail.com",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customer",
      "where",
      "email",
      "like",
      "value"
    ],
    "question": "How many customers have email that contains \"gmail.com\"?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "have",
      "email",
      "that",
      "contains",
      "``",
      "gmail.com",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"%gmail.com%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT COUNT(*) FROM CUSTOMER WHERE Email LIKE \"%gmail.com%\"",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "CUSTOMER",
      "WHERE",
      "Email",
      "LIKE",
      "``",
      "%",
      "gmail.com",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customer",
      "where",
      "email",
      "like",
      "value"
    ],
    "question": "Count the number of customers that have an email containing \"gmail.com\".",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "customers",
      "that",
      "have",
      "an",
      "email",
      "containing",
      "``",
      "gmail.com",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"%gmail.com%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT COUNT(DISTINCT city) FROM EMPLOYEE",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "city",
      ")",
      "FROM",
      "EMPLOYEE"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "city",
      ")",
      "from",
      "employee"
    ],
    "question": "How many distinct cities does the employees live in?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "cities",
      "does",
      "the",
      "employees",
      "live",
      "in",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                27,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT COUNT(DISTINCT city) FROM EMPLOYEE",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "city",
      ")",
      "FROM",
      "EMPLOYEE"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "city",
      ")",
      "from",
      "employee"
    ],
    "question": "Find the number of different cities that employees live in.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "different",
      "cities",
      "that",
      "employees",
      "live",
      "in",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                27,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT Phone FROM EMPLOYEE",
    "query_toks": [
      "SELECT",
      "Phone",
      "FROM",
      "EMPLOYEE"
    ],
    "query_toks_no_value": [
      "select",
      "phone",
      "from",
      "employee"
    ],
    "question": "List the phone numbers of all employees.",
    "question_toks": [
      "List",
      "the",
      "phone",
      "numbers",
      "of",
      "all",
      "employees",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT Phone FROM EMPLOYEE",
    "query_toks": [
      "SELECT",
      "Phone",
      "FROM",
      "EMPLOYEE"
    ],
    "query_toks_no_value": [
      "select",
      "phone",
      "from",
      "employee"
    ],
    "question": "What are the phone numbers for each employee?",
    "question_toks": [
      "What",
      "are",
      "the",
      "phone",
      "numbers",
      "for",
      "each",
      "employee",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT BirthDate FROM EMPLOYEE WHERE City  =  \"Edmonton\"",
    "query_toks": [
      "SELECT",
      "BirthDate",
      "FROM",
      "EMPLOYEE",
      "WHERE",
      "City",
      "=",
      "``",
      "Edmonton",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "birthdate",
      "from",
      "employee",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "What are the birth dates of employees living in Edmonton?",
    "question_toks": [
      "What",
      "are",
      "the",
      "birth",
      "dates",
      "of",
      "employees",
      "living",
      "in",
      "Edmonton",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          "\"Edmonton\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT BirthDate FROM EMPLOYEE WHERE City  =  \"Edmonton\"",
    "query_toks": [
      "SELECT",
      "BirthDate",
      "FROM",
      "EMPLOYEE",
      "WHERE",
      "City",
      "=",
      "``",
      "Edmonton",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "birthdate",
      "from",
      "employee",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "Find the birth dates corresponding to employees who live in the city of Edmonton.",
    "question_toks": [
      "Find",
      "the",
      "birth",
      "dates",
      "corresponding",
      "to",
      "employees",
      "who",
      "live",
      "in",
      "the",
      "city",
      "of",
      "Edmonton",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          "\"Edmonton\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT count(*) FROM ARTIST WHERE artistid NOT IN(SELECT artistid FROM ALBUM)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "ARTIST",
      "WHERE",
      "artistid",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "artistid",
      "FROM",
      "ALBUM",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "artist",
      "where",
      "artistid",
      "not",
      "in",
      "(",
      "select",
      "artistid",
      "from",
      "album",
      ")"
    ],
    "question": "How many artists do not have any album?",
    "question_toks": [
      "How",
      "many",
      "artists",
      "do",
      "not",
      "have",
      "any",
      "album",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT count(*) FROM ARTIST WHERE artistid NOT IN(SELECT artistid FROM ALBUM)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "ARTIST",
      "WHERE",
      "artistid",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "artistid",
      "FROM",
      "ALBUM",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "artist",
      "where",
      "artistid",
      "not",
      "in",
      "(",
      "select",
      "artistid",
      "from",
      "album",
      ")"
    ],
    "question": "Cound the number of artists who have not released an album.",
    "question_toks": [
      "Cound",
      "the",
      "number",
      "of",
      "artists",
      "who",
      "have",
      "not",
      "released",
      "an",
      "album",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_fnol",
    "query": "SELECT customer_phone FROM available_policies",
    "query_toks": [
      "SELECT",
      "customer_phone",
      "FROM",
      "available_policies"
    ],
    "query_toks_no_value": [
      "select",
      "customer_phone",
      "from",
      "available_policies"
    ],
    "question": "Find all the phone numbers.",
    "question_toks": [
      "Find",
      "all",
      "the",
      "phone",
      "numbers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_fnol",
    "query": "SELECT customer_phone FROM available_policies",
    "query_toks": [
      "SELECT",
      "customer_phone",
      "FROM",
      "available_policies"
    ],
    "query_toks_no_value": [
      "select",
      "customer_phone",
      "from",
      "available_policies"
    ],
    "question": "What are all the phone numbers?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "phone",
      "numbers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_fnol",
    "query": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  \"Life Insurance\"",
    "query_toks": [
      "SELECT",
      "customer_phone",
      "FROM",
      "available_policies",
      "WHERE",
      "policy_type_code",
      "=",
      "``",
      "Life",
      "Insurance",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_phone",
      "from",
      "available_policies",
      "where",
      "policy_type_code",
      "=",
      "value"
    ],
    "question": "What are the customer phone numbers under the policy \"Life Insurance\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "customer",
      "phone",
      "numbers",
      "under",
      "the",
      "policy",
      "``",
      "Life",
      "Insurance",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Life Insurance\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_fnol",
    "query": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  \"Life Insurance\"",
    "query_toks": [
      "SELECT",
      "customer_phone",
      "FROM",
      "available_policies",
      "WHERE",
      "policy_type_code",
      "=",
      "``",
      "Life",
      "Insurance",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_phone",
      "from",
      "available_policies",
      "where",
      "policy_type_code",
      "=",
      "value"
    ],
    "question": "What are the phone numbers of customers using the policy with the code \"Life Insurance\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "phone",
      "numbers",
      "of",
      "customers",
      "using",
      "the",
      "policy",
      "with",
      "the",
      "code",
      "``",
      "Life",
      "Insurance",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Life Insurance\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_fnol",
    "query": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  (SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1)",
    "query_toks": [
      "SELECT",
      "customer_phone",
      "FROM",
      "available_policies",
      "WHERE",
      "policy_type_code",
      "=",
      "(",
      "SELECT",
      "policy_type_code",
      "FROM",
      "available_policies",
      "GROUP",
      "BY",
      "policy_type_code",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "customer_phone",
      "from",
      "available_policies",
      "where",
      "policy_type_code",
      "=",
      "(",
      "select",
      "policy_type_code",
      "from",
      "available_policies",
      "group",
      "by",
      "policy_type_code",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value",
      ")"
    ],
    "question": "What are all the customer phone numbers under the most popular policy type?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "customer",
      "phone",
      "numbers",
      "under",
      "the",
      "most",
      "popular",
      "policy",
      "type",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      6,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [
              [
                0,
                6,
                false
              ]
            ],
            "having": [],
            "orderBy": [
              "desc",
              [
                [
                  0,
                  [
                    3,
                    0,
                    false
                  ],
                  null
                ]
              ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_fnol",
    "query": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  (SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1)",
    "query_toks": [
      "SELECT",
      "customer_phone",
      "FROM",
      "available_policies",
      "WHERE",
      "policy_type_code",
      "=",
      "(",
      "SELECT",
      "policy_type_code",
      "FROM",
      "available_policies",
      "GROUP",
      "BY",
      "policy_type_code",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "customer_phone",
      "from",
      "available_policies",
      "where",
      "policy_type_code",
      "=",
      "(",
      "select",
      "policy_type_code",
      "from",
      "available_policies",
      "group",
      "by",
      "policy_type_code",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value",
      ")"
    ],
    "question": "Find the phone numbers of customers using the most common policy type among the available policies.",
    "question_toks": [
      "Find",
      "the",
      "phone",
      "numbers",
      "of",
      "customers",
      "using",
      "the",
      "most",
      "common",
      "policy",
      "type",
      "among",
      "the",
      "available",
      "policies",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      6,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [
              [
                0,
                6,
                false
              ]
            ],
            "having": [],
            "orderBy": [
              "desc",
              [
                [
                  0,
                  [
                    3,
                    0,
                    false
                  ],
                  null
                ]
              ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_fnol",
    "query": "SELECT sum(settlement_amount) ,  avg(settlement_amount) FROM settlements",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "settlement_amount",
      ")",
      ",",
      "avg",
      "(",
      "settlement_amount",
      ")",
      "FROM",
      "settlements"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "settlement_amount",
      ")",
      ",",
      "avg",
      "(",
      "settlement_amount",
      ")",
      "from",
      "settlements"
    ],
    "question": "Find the total and average amount of settlements.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "and",
      "average",
      "amount",
      "of",
      "settlements",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_fnol",
    "query": "SELECT sum(settlement_amount) ,  avg(settlement_amount) FROM settlements",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "settlement_amount",
      ")",
      ",",
      "avg",
      "(",
      "settlement_amount",
      ")",
      "FROM",
      "settlements"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "settlement_amount",
      ")",
      ",",
      "avg",
      "(",
      "settlement_amount",
      ")",
      "from",
      "settlements"
    ],
    "question": "Return the sum and average of all settlement amounts.",
    "question_toks": [
      "Return",
      "the",
      "sum",
      "and",
      "average",
      "of",
      "all",
      "settlement",
      "amounts",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_fnol",
    "query": "SELECT count(*) FROM services",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "services"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "services"
    ],
    "question": "How many services are there?",
    "question_toks": [
      "How",
      "many",
      "services",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_fnol",
    "query": "SELECT count(*) FROM services",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "services"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "services"
    ],
    "question": "Count the total number of available services.",
    "question_toks": [
      "Count",
      "the",
      "total",
      "number",
      "of",
      "available",
      "services",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_fnol",
    "query": "SELECT customer_id FROM customers WHERE customer_name LIKE \"%Diana%\"",
    "query_toks": [
      "SELECT",
      "customer_id",
      "FROM",
      "customers",
      "WHERE",
      "customer_name",
      "LIKE",
      "``",
      "%",
      "Diana",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_id",
      "from",
      "customers",
      "where",
      "customer_name",
      "like",
      "value"
    ],
    "question": "Find the IDs of customers whose name contains \"Diana\".",
    "question_toks": [
      "Find",
      "the",
      "IDs",
      "of",
      "customers",
      "whose",
      "name",
      "contains",
      "``",
      "Diana",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"%Diana%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_fnol",
    "query": "SELECT customer_id FROM customers WHERE customer_name LIKE \"%Diana%\"",
    "query_toks": [
      "SELECT",
      "customer_id",
      "FROM",
      "customers",
      "WHERE",
      "customer_name",
      "LIKE",
      "``",
      "%",
      "Diana",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_id",
      "from",
      "customers",
      "where",
      "customer_name",
      "like",
      "value"
    ],
    "question": "What are the IDs of customers who have \"Diana\" in part of their names?",
    "question_toks": [
      "What",
      "are",
      "the",
      "IDs",
      "of",
      "customers",
      "who",
      "have",
      "``",
      "Diana",
      "''",
      "in",
      "part",
      "of",
      "their",
      "names",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"%Diana%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_fnol",
    "query": "SELECT max(settlement_amount) ,  min(settlement_amount) FROM settlements",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "settlement_amount",
      ")",
      ",",
      "min",
      "(",
      "settlement_amount",
      ")",
      "FROM",
      "settlements"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "settlement_amount",
      ")",
      ",",
      "min",
      "(",
      "settlement_amount",
      ")",
      "from",
      "settlements"
    ],
    "question": "What are the maximum and minimum settlement amount on record?",
    "question_toks": [
      "What",
      "are",
      "the",
      "maximum",
      "and",
      "minimum",
      "settlement",
      "amount",
      "on",
      "record",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_fnol",
    "query": "SELECT max(settlement_amount) ,  min(settlement_amount) FROM settlements",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "settlement_amount",
      ")",
      ",",
      "min",
      "(",
      "settlement_amount",
      ")",
      "FROM",
      "settlements"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "settlement_amount",
      ")",
      ",",
      "min",
      "(",
      "settlement_amount",
      ")",
      "from",
      "settlements"
    ],
    "question": "Find the maximum and minimum settlement amount.",
    "question_toks": [
      "Find",
      "the",
      "maximum",
      "and",
      "minimum",
      "settlement",
      "amount",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT count(*) FROM enzyme",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "enzyme"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "enzyme"
    ],
    "question": "How many kinds of enzymes are there?",
    "question_toks": [
      "How",
      "many",
      "kinds",
      "of",
      "enzymes",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT count(*) FROM enzyme",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "enzyme"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "enzyme"
    ],
    "question": "What is the total count of enzymes?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "count",
      "of",
      "enzymes",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT name ,  LOCATION FROM enzyme",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "LOCATION",
      "FROM",
      "enzyme"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "location",
      "from",
      "enzyme"
    ],
    "question": "List the names and the locations that the enzymes can make an effect.",
    "question_toks": [
      "List",
      "the",
      "names",
      "and",
      "the",
      "locations",
      "that",
      "the",
      "enzymes",
      "can",
      "make",
      "an",
      "effect",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT name ,  LOCATION FROM enzyme",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "LOCATION",
      "FROM",
      "enzyme"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "location",
      "from",
      "enzyme"
    ],
    "question": "What are the names and locations of all enzymes listed?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "locations",
      "of",
      "all",
      "enzymes",
      "listed",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT max(OMIM) FROM enzyme",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "OMIM",
      ")",
      "FROM",
      "enzyme"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "omim",
      ")",
      "from",
      "enzyme"
    ],
    "question": "What is the maximum Online Mendelian Inheritance in Man (OMIM) value of the enzymes?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      "Online",
      "Mendelian",
      "Inheritance",
      "in",
      "Man",
      "(",
      "OMIM",
      ")",
      "value",
      "of",
      "the",
      "enzymes",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT max(OMIM) FROM enzyme",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "OMIM",
      ")",
      "FROM",
      "enzyme"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "omim",
      ")",
      "from",
      "enzyme"
    ],
    "question": "What is the maximum OMIM value in the database?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      "OMIM",
      "value",
      "in",
      "the",
      "database",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT product ,  chromosome ,  porphyria FROM enzyme WHERE LOCATION  =  'Cytosol'",
    "query_toks": [
      "SELECT",
      "product",
      ",",
      "chromosome",
      ",",
      "porphyria",
      "FROM",
      "enzyme",
      "WHERE",
      "LOCATION",
      "=",
      "'Cytosol",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "product",
      ",",
      "chromosome",
      ",",
      "porphyria",
      "from",
      "enzyme",
      "where",
      "location",
      "=",
      "value"
    ],
    "question": "What is the product, chromosome and porphyria related to the enzymes which take effect at the location 'Cytosol'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "product",
      ",",
      "chromosome",
      "and",
      "porphyria",
      "related",
      "to",
      "the",
      "enzymes",
      "which",
      "take",
      "effect",
      "at",
      "the",
      "location",
      "'Cytosol",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"Cytosol\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT product ,  chromosome ,  porphyria FROM enzyme WHERE LOCATION  =  'Cytosol'",
    "query_toks": [
      "SELECT",
      "product",
      ",",
      "chromosome",
      ",",
      "porphyria",
      "FROM",
      "enzyme",
      "WHERE",
      "LOCATION",
      "=",
      "'Cytosol",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "product",
      ",",
      "chromosome",
      ",",
      "porphyria",
      "from",
      "enzyme",
      "where",
      "location",
      "=",
      "value"
    ],
    "question": "What is the product, chromosome, and porphyria of the enzymes located at 'Cytosol'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "product",
      ",",
      "chromosome",
      ",",
      "and",
      "porphyria",
      "of",
      "the",
      "enzymes",
      "located",
      "at",
      "'Cytosol",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"Cytosol\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT name FROM enzyme WHERE product != 'Heme'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "enzyme",
      "WHERE",
      "product",
      "!",
      "=",
      "'Heme",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "enzyme",
      "where",
      "product",
      "!",
      "=",
      "value"
    ],
    "question": "What are the names of enzymes who does not produce 'Heme'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "enzymes",
      "who",
      "does",
      "not",
      "produce",
      "'Heme",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Heme\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT name FROM enzyme WHERE product != 'Heme'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "enzyme",
      "WHERE",
      "product",
      "!",
      "=",
      "'Heme",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "enzyme",
      "where",
      "product",
      "!",
      "=",
      "value"
    ],
    "question": "What are the names of enzymes whose product is not 'Heme'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "enzymes",
      "whose",
      "product",
      "is",
      "not",
      "'Heme",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Heme\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT name ,  trade_name FROM medicine WHERE FDA_approved  =  'Yes'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "trade_name",
      "FROM",
      "medicine",
      "WHERE",
      "FDA_approved",
      "=",
      "'Yes",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "trade_name",
      "from",
      "medicine",
      "where",
      "fda_approved",
      "=",
      "value"
    ],
    "question": "What are the names and trade names of the medicines which has 'Yes' value in the FDA record?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "trade",
      "names",
      "of",
      "the",
      "medicines",
      "which",
      "has",
      "'Yes",
      "'",
      "value",
      "in",
      "the",
      "FDA",
      "record",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Yes\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT name ,  trade_name FROM medicine WHERE FDA_approved  =  'Yes'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "trade_name",
      "FROM",
      "medicine",
      "WHERE",
      "FDA_approved",
      "=",
      "'Yes",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "trade_name",
      "from",
      "medicine",
      "where",
      "fda_approved",
      "=",
      "value"
    ],
    "question": "What are the names and trade names of the medcines that are FDA approved?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "trade",
      "names",
      "of",
      "the",
      "medcines",
      "that",
      "are",
      "FDA",
      "approved",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Yes\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT count(*) FROM medicine WHERE FDA_approved  =  'No'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "medicine",
      "WHERE",
      "FDA_approved",
      "=",
      "'No",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "medicine",
      "where",
      "fda_approved",
      "=",
      "value"
    ],
    "question": "How many medicines have the FDA approval status 'No' ?",
    "question_toks": [
      "How",
      "many",
      "medicines",
      "have",
      "the",
      "FDA",
      "approval",
      "status",
      "'No",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"No\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT count(*) FROM medicine WHERE FDA_approved  =  'No'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "medicine",
      "WHERE",
      "FDA_approved",
      "=",
      "'No",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "medicine",
      "where",
      "fda_approved",
      "=",
      "value"
    ],
    "question": "How many medicines were not approved by the FDA?",
    "question_toks": [
      "How",
      "many",
      "medicines",
      "were",
      "not",
      "approved",
      "by",
      "the",
      "FDA",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"No\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT count(*) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction );",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "enzyme",
      "WHERE",
      "id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "enzyme_id",
      "FROM",
      "medicine_enzyme_interaction",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "enzyme",
      "where",
      "id",
      "not",
      "in",
      "(",
      "select",
      "enzyme_id",
      "from",
      "medicine_enzyme_interaction",
      ")"
    ],
    "question": "How many enzymes do not have any interactions?",
    "question_toks": [
      "How",
      "many",
      "enzymes",
      "do",
      "not",
      "have",
      "any",
      "interactions",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      12,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT count(*) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction );",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "enzyme",
      "WHERE",
      "id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "enzyme_id",
      "FROM",
      "medicine_enzyme_interaction",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "enzyme",
      "where",
      "id",
      "not",
      "in",
      "(",
      "select",
      "enzyme_id",
      "from",
      "medicine_enzyme_interaction",
      ")"
    ],
    "question": "What is the count of enzymes without any interactions?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "enzymes",
      "without",
      "any",
      "interactions",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      12,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT count(DISTINCT FDA_approved) FROM medicine",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "FDA_approved",
      ")",
      "FROM",
      "medicine"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "fda_approved",
      ")",
      "from",
      "medicine"
    ],
    "question": "How many distinct FDA approval statuses are there for the medicines?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "FDA",
      "approval",
      "statuses",
      "are",
      "there",
      "for",
      "the",
      "medicines",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                4,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT count(DISTINCT FDA_approved) FROM medicine",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "FDA_approved",
      ")",
      "FROM",
      "medicine"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "fda_approved",
      ")",
      "from",
      "medicine"
    ],
    "question": "How many different FDA approval statuses exist for medicines?",
    "question_toks": [
      "How",
      "many",
      "different",
      "FDA",
      "approval",
      "statuses",
      "exist",
      "for",
      "medicines",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                4,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT name FROM enzyme WHERE name LIKE \"%ALA%\"",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "enzyme",
      "WHERE",
      "name",
      "LIKE",
      "``",
      "%",
      "ALA",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "enzyme",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "Which enzyme names have the substring \"ALA\"?",
    "question_toks": [
      "Which",
      "enzyme",
      "names",
      "have",
      "the",
      "substring",
      "``",
      "ALA",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"%ALA%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT name FROM enzyme WHERE name LIKE \"%ALA%\"",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "enzyme",
      "WHERE",
      "name",
      "LIKE",
      "``",
      "%",
      "ALA",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "enzyme",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "What are the names of enzymes that include the string 'ALA'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "enzymes",
      "that",
      "include",
      "the",
      "string",
      "'ALA",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"%ALA%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Public'",
    "query_toks": [
      "SELECT",
      "school",
      ",",
      "LOCATION",
      "FROM",
      "university",
      "WHERE",
      "affiliation",
      "=",
      "'Public",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "school",
      ",",
      "location",
      "from",
      "university",
      "where",
      "affiliation",
      "=",
      "value"
    ],
    "question": "List all public schools and their locations.",
    "question_toks": [
      "List",
      "all",
      "public",
      "schools",
      "and",
      "their",
      "locations",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Public\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Public'",
    "query_toks": [
      "SELECT",
      "school",
      ",",
      "LOCATION",
      "FROM",
      "university",
      "WHERE",
      "affiliation",
      "=",
      "'Public",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "school",
      ",",
      "location",
      "from",
      "university",
      "where",
      "affiliation",
      "=",
      "value"
    ],
    "question": "What are the public schools and what are their locations?",
    "question_toks": [
      "What",
      "are",
      "the",
      "public",
      "schools",
      "and",
      "what",
      "are",
      "their",
      "locations",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Public\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT count(DISTINCT school_id) FROM basketball_match",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "school_id",
      ")",
      "FROM",
      "basketball_match"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "school_id",
      ")",
      "from",
      "basketball_match"
    ],
    "question": "How many schools are in the basketball match?",
    "question_toks": [
      "How",
      "many",
      "schools",
      "are",
      "in",
      "the",
      "basketball",
      "match",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                2,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT count(DISTINCT school_id) FROM basketball_match",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "school_id",
      ")",
      "FROM",
      "basketball_match"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "school_id",
      ")",
      "from",
      "basketball_match"
    ],
    "question": "Count the number of schools that have had basketball matches.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "schools",
      "that",
      "have",
      "had",
      "basketball",
      "matches",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                2,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT avg(enrollment) FROM university WHERE founded  <  1850",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "enrollment",
      ")",
      "FROM",
      "university",
      "WHERE",
      "founded",
      "<",
      "1850"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "enrollment",
      ")",
      "from",
      "university",
      "where",
      "founded",
      "<",
      "value"
    ],
    "question": "What are the average enrollment size of the universities that are founded before 1850?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "enrollment",
      "size",
      "of",
      "the",
      "universities",
      "that",
      "are",
      "founded",
      "before",
      "1850",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          1850.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT avg(enrollment) FROM university WHERE founded  <  1850",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "enrollment",
      ")",
      "FROM",
      "university",
      "WHERE",
      "founded",
      "<",
      "1850"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "enrollment",
      ")",
      "from",
      "university",
      "where",
      "founded",
      "<",
      "value"
    ],
    "question": "Return the average enrollment of universities founded before 1850.",
    "question_toks": [
      "Return",
      "the",
      "average",
      "enrollment",
      "of",
      "universities",
      "founded",
      "before",
      "1850",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          1850.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT sum(enrollment) ,  min(enrollment) FROM university",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "enrollment",
      ")",
      ",",
      "min",
      "(",
      "enrollment",
      ")",
      "FROM",
      "university"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "enrollment",
      ")",
      ",",
      "min",
      "(",
      "enrollment",
      ")",
      "from",
      "university"
    ],
    "question": "What is the total and minimum enrollment of all schools?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "and",
      "minimum",
      "enrollment",
      "of",
      "all",
      "schools",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT sum(enrollment) ,  min(enrollment) FROM university",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "enrollment",
      ")",
      ",",
      "min",
      "(",
      "enrollment",
      ")",
      "FROM",
      "university"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "enrollment",
      ")",
      ",",
      "min",
      "(",
      "enrollment",
      ")",
      "from",
      "university"
    ],
    "question": "Return the total and minimum enrollments across all schools.",
    "question_toks": [
      "Return",
      "the",
      "total",
      "and",
      "minimum",
      "enrollments",
      "across",
      "all",
      "schools",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT count(*) FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "university",
      "WHERE",
      "school_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "school_id",
      "FROM",
      "basketball_match",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "university",
      "where",
      "school_id",
      "not",
      "in",
      "(",
      "select",
      "school_id",
      "from",
      "basketball_match",
      ")"
    ],
    "question": "How many schools do not participate in the basketball match?",
    "question_toks": [
      "How",
      "many",
      "schools",
      "do",
      "not",
      "participate",
      "in",
      "the",
      "basketball",
      "match",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      2,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT count(*) FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "university",
      "WHERE",
      "school_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "school_id",
      "FROM",
      "basketball_match",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "university",
      "where",
      "school_id",
      "not",
      "in",
      "(",
      "select",
      "school_id",
      "from",
      "basketball_match",
      ")"
    ],
    "question": "Count the number of universities that do not participate in the baketball match.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "universities",
      "that",
      "do",
      "not",
      "participate",
      "in",
      "the",
      "baketball",
      "match",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      2,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT school FROM university WHERE founded  >  1850 OR affiliation  =  'Public'",
    "query_toks": [
      "SELECT",
      "school",
      "FROM",
      "university",
      "WHERE",
      "founded",
      ">",
      "1850",
      "OR",
      "affiliation",
      "=",
      "'Public",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "school",
      "from",
      "university",
      "where",
      "founded",
      ">",
      "value",
      "or",
      "affiliation",
      "=",
      "value"
    ],
    "question": "Find the schools that were either founded after 1850 or public.",
    "question_toks": [
      "Find",
      "the",
      "schools",
      "that",
      "were",
      "either",
      "founded",
      "after",
      "1850",
      "or",
      "public",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          1850.0,
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Public\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT school FROM university WHERE founded  >  1850 OR affiliation  =  'Public'",
    "query_toks": [
      "SELECT",
      "school",
      "FROM",
      "university",
      "WHERE",
      "founded",
      ">",
      "1850",
      "OR",
      "affiliation",
      "=",
      "'Public",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "school",
      "from",
      "university",
      "where",
      "founded",
      ">",
      "value",
      "or",
      "affiliation",
      "=",
      "value"
    ],
    "question": "What are the schools that were either founded before 1850 or are public?",
    "question_toks": [
      "What",
      "are",
      "the",
      "schools",
      "that",
      "were",
      "either",
      "founded",
      "before",
      "1850",
      "or",
      "are",
      "public",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          1850.0,
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Public\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT count(DISTINCT affiliation) FROM university",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "affiliation",
      ")",
      "FROM",
      "university"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "affiliation",
      ")",
      "from",
      "university"
    ],
    "question": "Find how many different affiliation types there are.",
    "question_toks": [
      "Find",
      "how",
      "many",
      "different",
      "affiliation",
      "types",
      "there",
      "are",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                17,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT count(DISTINCT affiliation) FROM university",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "affiliation",
      ")",
      "FROM",
      "university"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "affiliation",
      ")",
      "from",
      "university"
    ],
    "question": "Count the number of different affiliation types.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "affiliation",
      "types",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                17,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT count(*) FROM university WHERE LOCATION LIKE \"%NY%\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "university",
      "WHERE",
      "LOCATION",
      "LIKE",
      "``",
      "%",
      "NY",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "university",
      "where",
      "location",
      "like",
      "value"
    ],
    "question": "Find how many school locations have the word 'NY'.",
    "question_toks": [
      "Find",
      "how",
      "many",
      "school",
      "locations",
      "have",
      "the",
      "word",
      "'NY",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"%NY%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT count(*) FROM university WHERE LOCATION LIKE \"%NY%\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "university",
      "WHERE",
      "LOCATION",
      "LIKE",
      "``",
      "%",
      "NY",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "university",
      "where",
      "location",
      "like",
      "value"
    ],
    "question": "How many universities have a location that contains NY?",
    "question_toks": [
      "How",
      "many",
      "universities",
      "have",
      "a",
      "location",
      "that",
      "contains",
      "NY",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"%NY%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT max(Enrollment) FROM university",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Enrollment",
      ")",
      "FROM",
      "university"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "enrollment",
      ")",
      "from",
      "university"
    ],
    "question": "What is the maximum enrollment across all schools?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      "enrollment",
      "across",
      "all",
      "schools",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT max(Enrollment) FROM university",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Enrollment",
      ")",
      "FROM",
      "university"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "enrollment",
      ")",
      "from",
      "university"
    ],
    "question": "Return the maximum enrollment across all schools.",
    "question_toks": [
      "Return",
      "the",
      "maximum",
      "enrollment",
      "across",
      "all",
      "schools",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT * FROM basketball_match",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "basketball_match"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "basketball_match"
    ],
    "question": "List all information regarding the basketball match.",
    "question_toks": [
      "List",
      "all",
      "information",
      "regarding",
      "the",
      "basketball",
      "match",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT * FROM basketball_match",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "basketball_match"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "basketball_match"
    ],
    "question": "What is all the information about the basketball match?",
    "question_toks": [
      "What",
      "is",
      "all",
      "the",
      "information",
      "about",
      "the",
      "basketball",
      "match",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "phone_1",
    "query": "SELECT Model_name FROM chip_model WHERE Launch_year BETWEEN 2002 AND 2004;",
    "query_toks": [
      "SELECT",
      "Model_name",
      "FROM",
      "chip_model",
      "WHERE",
      "Launch_year",
      "BETWEEN",
      "2002",
      "AND",
      "2004",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "model_name",
      "from",
      "chip_model",
      "where",
      "launch_year",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "the names of models that launched between 2002 and 2004.",
    "question_toks": [
      "the",
      "names",
      "of",
      "models",
      "that",
      "launched",
      "between",
      "2002",
      "and",
      "2004",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          2002.0,
          2004.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "phone_1",
    "query": "SELECT chip_model ,  screen_mode FROM phone WHERE Hardware_Model_name = \"LG-P760\";",
    "query_toks": [
      "SELECT",
      "chip_model",
      ",",
      "screen_mode",
      "FROM",
      "phone",
      "WHERE",
      "Hardware_Model_name",
      "=",
      "``",
      "LG-P760",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "chip_model",
      ",",
      "screen_mode",
      "from",
      "phone",
      "where",
      "hardware_model_name",
      "=",
      "value"
    ],
    "question": "What are the chip model and screen mode of the phone with hardware model name \"LG-P760\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "chip",
      "model",
      "and",
      "screen",
      "mode",
      "of",
      "the",
      "phone",
      "with",
      "hardware",
      "model",
      "name",
      "``",
      "LG-P760",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"LG-P760\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "phone_1",
    "query": "SELECT count(*) FROM phone WHERE Company_name = \"Nokia Corporation\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "phone",
      "WHERE",
      "Company_name",
      "=",
      "``",
      "Nokia",
      "Corporation",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "phone",
      "where",
      "company_name",
      "=",
      "value"
    ],
    "question": "How many phone hardware models are produced by the company named \"Nokia Corporation\"?",
    "question_toks": [
      "How",
      "many",
      "phone",
      "hardware",
      "models",
      "are",
      "produced",
      "by",
      "the",
      "company",
      "named",
      "``",
      "Nokia",
      "Corporation",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"Nokia Corporation\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "phone_1",
    "query": "SELECT Hardware_Model_name ,  Company_name FROM phone WHERE Accreditation_type LIKE 'Full';",
    "query_toks": [
      "SELECT",
      "Hardware_Model_name",
      ",",
      "Company_name",
      "FROM",
      "phone",
      "WHERE",
      "Accreditation_type",
      "LIKE",
      "'Full",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "hardware_model_name",
      ",",
      "company_name",
      "from",
      "phone",
      "where",
      "accreditation_type",
      "like",
      "value"
    ],
    "question": "Find all phones that have word 'Full' in their accreditation types. List the Hardware Model name and Company name.",
    "question_toks": [
      "Find",
      "all",
      "phones",
      "that",
      "have",
      "word",
      "'Full",
      "'",
      "in",
      "their",
      "accreditation",
      "types",
      ".",
      "List",
      "the",
      "Hardware",
      "Model",
      "name",
      "and",
      "Company",
      "name",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Full\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "phone_1",
    "query": "SELECT max(used_kb) , min(used_kb) , avg(used_kb) FROM screen_mode;",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "used_kb",
      ")",
      ",",
      "min",
      "(",
      "used_kb",
      ")",
      ",",
      "avg",
      "(",
      "used_kb",
      ")",
      "FROM",
      "screen_mode",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "used_kb",
      ")",
      ",",
      "min",
      "(",
      "used_kb",
      ")",
      ",",
      "avg",
      "(",
      "used_kb",
      ")",
      "from",
      "screen_mode"
    ],
    "question": "List the maximum, minimum and average number of used kb in screen mode.",
    "question_toks": [
      "List",
      "the",
      "maximum",
      ",",
      "minimum",
      "and",
      "average",
      "number",
      "of",
      "used",
      "kb",
      "in",
      "screen",
      "mode",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "phone_1",
    "query": "SELECT * FROM chip_model",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "chip_model"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "chip_model"
    ],
    "question": "Find the details for all chip models.",
    "question_toks": [
      "Find",
      "the",
      "details",
      "for",
      "all",
      "chip",
      "models",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "phone_1",
    "query": "SELECT count(*) FROM chip_model WHERE wifi  =  'No'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "chip_model",
      "WHERE",
      "wifi",
      "=",
      "'No",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "chip_model",
      "where",
      "wifi",
      "=",
      "value"
    ],
    "question": "How many models do not have the wifi function?",
    "question_toks": [
      "How",
      "many",
      "models",
      "do",
      "not",
      "have",
      "the",
      "wifi",
      "function",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"No\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "phone_1",
    "query": "SELECT count(*) FROM chip_model WHERE wifi  =  'No'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "chip_model",
      "WHERE",
      "wifi",
      "=",
      "'No",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "chip_model",
      "where",
      "wifi",
      "=",
      "value"
    ],
    "question": "Count the number of chip model that do not have wifi.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "chip",
      "model",
      "that",
      "do",
      "not",
      "have",
      "wifi",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"No\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "phone_1",
    "query": "SELECT avg(RAM_MiB) FROM chip_model WHERE model_name NOT IN (SELECT chip_model FROM phone)",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "RAM_MiB",
      ")",
      "FROM",
      "chip_model",
      "WHERE",
      "model_name",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "chip_model",
      "FROM",
      "phone",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "ram_mib",
      ")",
      "from",
      "chip_model",
      "where",
      "model_name",
      "not",
      "in",
      "(",
      "select",
      "chip_model",
      "from",
      "phone",
      ")"
    ],
    "question": "Find the average ram mib size of the chip models that are never used by any phone.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "ram",
      "mib",
      "size",
      "of",
      "the",
      "chip",
      "models",
      "that",
      "are",
      "never",
      "used",
      "by",
      "any",
      "phone",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      20,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT count(*) FROM country",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "country"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "country"
    ],
    "question": "How many countries are there in total?",
    "question_toks": [
      "How",
      "many",
      "countries",
      "are",
      "there",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT count(*) FROM country",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "country"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "country"
    ],
    "question": "Count the number of countries.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "countries",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT Country_name ,  Capital FROM country",
    "query_toks": [
      "SELECT",
      "Country_name",
      ",",
      "Capital",
      "FROM",
      "country"
    ],
    "query_toks_no_value": [
      "select",
      "country_name",
      ",",
      "capital",
      "from",
      "country"
    ],
    "question": "Show the country name and capital of all countries.",
    "question_toks": [
      "Show",
      "the",
      "country",
      "name",
      "and",
      "capital",
      "of",
      "all",
      "countries",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT Country_name ,  Capital FROM country",
    "query_toks": [
      "SELECT",
      "Country_name",
      ",",
      "Capital",
      "FROM",
      "country"
    ],
    "query_toks_no_value": [
      "select",
      "country_name",
      ",",
      "capital",
      "from",
      "country"
    ],
    "question": "What are the names and capitals of each country?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "capitals",
      "of",
      "each",
      "country",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT Official_native_language FROM country WHERE Official_native_language LIKE \"%English%\"",
    "query_toks": [
      "SELECT",
      "Official_native_language",
      "FROM",
      "country",
      "WHERE",
      "Official_native_language",
      "LIKE",
      "``",
      "%",
      "English",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "official_native_language",
      "from",
      "country",
      "where",
      "official_native_language",
      "like",
      "value"
    ],
    "question": "Show all official native languages that contain the word \"English\".",
    "question_toks": [
      "Show",
      "all",
      "official",
      "native",
      "languages",
      "that",
      "contain",
      "the",
      "word",
      "``",
      "English",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"%English%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT Official_native_language FROM country WHERE Official_native_language LIKE \"%English%\"",
    "query_toks": [
      "SELECT",
      "Official_native_language",
      "FROM",
      "country",
      "WHERE",
      "Official_native_language",
      "LIKE",
      "``",
      "%",
      "English",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "official_native_language",
      "from",
      "country",
      "where",
      "official_native_language",
      "like",
      "value"
    ],
    "question": "What are the official native languages that contain the string \"English\".",
    "question_toks": [
      "What",
      "are",
      "the",
      "official",
      "native",
      "languages",
      "that",
      "contain",
      "the",
      "string",
      "``",
      "English",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"%English%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT Player FROM match_season WHERE College  =  \"UCLA\"",
    "query_toks": [
      "SELECT",
      "Player",
      "FROM",
      "match_season",
      "WHERE",
      "College",
      "=",
      "``",
      "UCLA",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "player",
      "from",
      "match_season",
      "where",
      "college",
      "=",
      "value"
    ],
    "question": "Show the players from college UCLA.",
    "question_toks": [
      "Show",
      "the",
      "players",
      "from",
      "college",
      "UCLA",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"UCLA\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT Player FROM match_season WHERE College  =  \"UCLA\"",
    "query_toks": [
      "SELECT",
      "Player",
      "FROM",
      "match_season",
      "WHERE",
      "College",
      "=",
      "``",
      "UCLA",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "player",
      "from",
      "match_season",
      "where",
      "college",
      "=",
      "value"
    ],
    "question": "Who are the players from UCLA?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "players",
      "from",
      "UCLA",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"UCLA\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT Draft_Pick_Number ,  Draft_Class FROM match_season WHERE POSITION  =  \"Defender\"",
    "query_toks": [
      "SELECT",
      "Draft_Pick_Number",
      ",",
      "Draft_Class",
      "FROM",
      "match_season",
      "WHERE",
      "POSITION",
      "=",
      "``",
      "Defender",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "draft_pick_number",
      ",",
      "draft_class",
      "from",
      "match_season",
      "where",
      "position",
      "=",
      "value"
    ],
    "question": "Show the draft pick numbers and draft classes of players whose positions are defenders.",
    "question_toks": [
      "Show",
      "the",
      "draft",
      "pick",
      "numbers",
      "and",
      "draft",
      "classes",
      "of",
      "players",
      "whose",
      "positions",
      "are",
      "defenders",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Defender\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT Draft_Pick_Number ,  Draft_Class FROM match_season WHERE POSITION  =  \"Defender\"",
    "query_toks": [
      "SELECT",
      "Draft_Pick_Number",
      ",",
      "Draft_Class",
      "FROM",
      "match_season",
      "WHERE",
      "POSITION",
      "=",
      "``",
      "Defender",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "draft_pick_number",
      ",",
      "draft_class",
      "from",
      "match_season",
      "where",
      "position",
      "=",
      "value"
    ],
    "question": "What are the draft pick numbers and draft classes for players who play the Defender position?",
    "question_toks": [
      "What",
      "are",
      "the",
      "draft",
      "pick",
      "numbers",
      "and",
      "draft",
      "classes",
      "for",
      "players",
      "who",
      "play",
      "the",
      "Defender",
      "position",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Defender\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT count(DISTINCT Team) FROM match_season",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Team",
      ")",
      "FROM",
      "match_season"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "team",
      ")",
      "from",
      "match_season"
    ],
    "question": "How many distinct teams are involved in match seasons?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "teams",
      "are",
      "involved",
      "in",
      "match",
      "seasons",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT count(DISTINCT Team) FROM match_season",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Team",
      ")",
      "FROM",
      "match_season"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "team",
      ")",
      "from",
      "match_season"
    ],
    "question": "Count the number of different teams involved in match season.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "teams",
      "involved",
      "in",
      "match",
      "season",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT Player ,  Years_Played FROM player",
    "query_toks": [
      "SELECT",
      "Player",
      ",",
      "Years_Played",
      "FROM",
      "player"
    ],
    "query_toks_no_value": [
      "select",
      "player",
      ",",
      "years_played",
      "from",
      "player"
    ],
    "question": "Show the players and the years played.",
    "question_toks": [
      "Show",
      "the",
      "players",
      "and",
      "the",
      "years",
      "played",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT Player ,  Years_Played FROM player",
    "query_toks": [
      "SELECT",
      "Player",
      ",",
      "Years_Played",
      "FROM",
      "player"
    ],
    "query_toks_no_value": [
      "select",
      "player",
      ",",
      "years_played",
      "from",
      "player"
    ],
    "question": "Who are the different players and how many years has each played?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "different",
      "players",
      "and",
      "how",
      "many",
      "years",
      "has",
      "each",
      "played",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT Name FROM Team",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "Team"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "team"
    ],
    "question": "Show all team names.",
    "question_toks": [
      "Show",
      "all",
      "team",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT Name FROM Team",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "Team"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "team"
    ],
    "question": "What are the names of all teams?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "teams",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT Name FROM team WHERE Team_id NOT IN (SELECT Team FROM match_season)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "team",
      "WHERE",
      "Team_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Team",
      "FROM",
      "match_season",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "team",
      "where",
      "team_id",
      "not",
      "in",
      "(",
      "select",
      "team",
      "from",
      "match_season",
      ")"
    ],
    "question": "What are the names of teams that do no have match season record?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "teams",
      "that",
      "do",
      "no",
      "have",
      "match",
      "season",
      "record",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      11,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT Name FROM team WHERE Team_id NOT IN (SELECT Team FROM match_season)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "team",
      "WHERE",
      "Team_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Team",
      "FROM",
      "match_season",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "team",
      "where",
      "team_id",
      "not",
      "in",
      "(",
      "select",
      "team",
      "from",
      "match_season",
      ")"
    ],
    "question": "Return the names of teams that have no match season record.",
    "question_toks": [
      "Return",
      "the",
      "names",
      "of",
      "teams",
      "that",
      "have",
      "no",
      "match",
      "season",
      "record",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      11,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT count(*) FROM climber",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "climber"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "climber"
    ],
    "question": "How many climbers are there?",
    "question_toks": [
      "How",
      "many",
      "climbers",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT count(*) FROM climber",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "climber"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "climber"
    ],
    "question": "Count the number of climbers.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "climbers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT Name FROM climber WHERE Country != \"Switzerland\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "climber",
      "WHERE",
      "Country",
      "!",
      "=",
      "``",
      "Switzerland",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "climber",
      "where",
      "country",
      "!",
      "=",
      "value"
    ],
    "question": "List the names of climbers whose country is not Switzerland.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "climbers",
      "whose",
      "country",
      "is",
      "not",
      "Switzerland",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Switzerland\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT Name FROM climber WHERE Country != \"Switzerland\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "climber",
      "WHERE",
      "Country",
      "!",
      "=",
      "``",
      "Switzerland",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "climber",
      "where",
      "country",
      "!",
      "=",
      "value"
    ],
    "question": "What are the names of climbers who are not from the country of Switzerland?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "climbers",
      "who",
      "are",
      "not",
      "from",
      "the",
      "country",
      "of",
      "Switzerland",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Switzerland\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT max(Points) FROM climber WHERE Country  =  \"United Kingdom\"",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Points",
      ")",
      "FROM",
      "climber",
      "WHERE",
      "Country",
      "=",
      "``",
      "United",
      "Kingdom",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "points",
      ")",
      "from",
      "climber",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "What is the maximum point for climbers whose country is United Kingdom?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      "point",
      "for",
      "climbers",
      "whose",
      "country",
      "is",
      "United",
      "Kingdom",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"United Kingdom\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT max(Points) FROM climber WHERE Country  =  \"United Kingdom\"",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Points",
      ")",
      "FROM",
      "climber",
      "WHERE",
      "Country",
      "=",
      "``",
      "United",
      "Kingdom",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "points",
      ")",
      "from",
      "climber",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "Return the maximum number of points for climbers from the United Kingdom.",
    "question_toks": [
      "Return",
      "the",
      "maximum",
      "number",
      "of",
      "points",
      "for",
      "climbers",
      "from",
      "the",
      "United",
      "Kingdom",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"United Kingdom\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT COUNT(DISTINCT Country) FROM climber",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "Country",
      ")",
      "FROM",
      "climber"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "country",
      ")",
      "from",
      "climber"
    ],
    "question": "How many distinct countries are the climbers from?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "countries",
      "are",
      "the",
      "climbers",
      "from",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                9,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT COUNT(DISTINCT Country) FROM climber",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "Country",
      ")",
      "FROM",
      "climber"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "country",
      ")",
      "from",
      "climber"
    ],
    "question": "Count the number of different countries that climbers are from.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "countries",
      "that",
      "climbers",
      "are",
      "from",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                9,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT Country FROM mountain WHERE Height  >  5000",
    "query_toks": [
      "SELECT",
      "Country",
      "FROM",
      "mountain",
      "WHERE",
      "Height",
      ">",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "mountain",
      "where",
      "height",
      ">",
      "value"
    ],
    "question": "What are the countries of mountains with height bigger than 5000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "countries",
      "of",
      "mountains",
      "with",
      "height",
      "bigger",
      "than",
      "5000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          5000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT Country FROM mountain WHERE Height  >  5000",
    "query_toks": [
      "SELECT",
      "Country",
      "FROM",
      "mountain",
      "WHERE",
      "Height",
      ">",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "mountain",
      "where",
      "height",
      ">",
      "value"
    ],
    "question": "Return the countries of the mountains that have a height larger than 5000.",
    "question_toks": [
      "Return",
      "the",
      "countries",
      "of",
      "the",
      "mountains",
      "that",
      "have",
      "a",
      "height",
      "larger",
      "than",
      "5000",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          5000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "mountain",
      "WHERE",
      "Mountain_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Mountain_ID",
      "FROM",
      "climber",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "mountain",
      "where",
      "mountain_id",
      "not",
      "in",
      "(",
      "select",
      "mountain_id",
      "from",
      "climber",
      ")"
    ],
    "question": "List the names of mountains that do not have any climber.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "mountains",
      "that",
      "do",
      "not",
      "have",
      "any",
      "climber",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      12,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "mountain",
      "WHERE",
      "Mountain_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Mountain_ID",
      "FROM",
      "climber",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "mountain",
      "where",
      "mountain_id",
      "not",
      "in",
      "(",
      "select",
      "mountain_id",
      "from",
      "climber",
      ")"
    ],
    "question": "What are the names of countains that no climber has climbed?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "countains",
      "that",
      "no",
      "climber",
      "has",
      "climbed",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      12,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT Name FROM mountain WHERE Height  >  5000 OR Prominence  >  1000",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "mountain",
      "WHERE",
      "Height",
      ">",
      "5000",
      "OR",
      "Prominence",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "mountain",
      "where",
      "height",
      ">",
      "value",
      "or",
      "prominence",
      ">",
      "value"
    ],
    "question": "Show the names of mountains with height more than 5000 or prominence more than 1000.",
    "question_toks": [
      "Show",
      "the",
      "names",
      "of",
      "mountains",
      "with",
      "height",
      "more",
      "than",
      "5000",
      "or",
      "prominence",
      "more",
      "than",
      "1000",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          5000.0,
          null
        ],
        "or",
        [
          false,
          3,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          1000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT Name FROM mountain WHERE Height  >  5000 OR Prominence  >  1000",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "mountain",
      "WHERE",
      "Height",
      ">",
      "5000",
      "OR",
      "Prominence",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "mountain",
      "where",
      "height",
      ">",
      "value",
      "or",
      "prominence",
      ">",
      "value"
    ],
    "question": "What are the names of mountains that have a height of over 5000 or a prominence of over 1000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "mountains",
      "that",
      "have",
      "a",
      "height",
      "of",
      "over",
      "5000",
      "or",
      "a",
      "prominence",
      "of",
      "over",
      "1000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          5000.0,
          null
        ],
        "or",
        [
          false,
          3,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          1000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "body_builder",
    "query": "SELECT count(*) FROM body_builder",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "body_builder"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "body_builder"
    ],
    "question": "How many body builders are there?",
    "question_toks": [
      "How",
      "many",
      "body",
      "builders",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "body_builder",
    "query": "SELECT avg(Snatch) FROM body_builder",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Snatch",
      ")",
      "FROM",
      "body_builder"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "snatch",
      ")",
      "from",
      "body_builder"
    ],
    "question": "What is the average snatch score of body builders?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "snatch",
      "score",
      "of",
      "body",
      "builders",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "body_builder",
    "query": "SELECT * FROM body_builder",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "body_builder"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "body_builder"
    ],
    "question": "Show all information about each body builder.",
    "question_toks": [
      "Show",
      "all",
      "information",
      "about",
      "each",
      "body",
      "builder",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "body_builder",
    "query": "SELECT count(DISTINCT Birth_Place) FROM people",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Birth_Place",
      ")",
      "FROM",
      "people"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "birth_place",
      ")",
      "from",
      "people"
    ],
    "question": "How many distinct birth places are there?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "birth",
      "places",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "body_builder",
    "query": "SELECT count(*) FROM people WHERE people_id NOT IN (SELECT People_ID FROM body_builder)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "people",
      "WHERE",
      "people_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "People_ID",
      "FROM",
      "body_builder",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "people",
      "where",
      "people_id",
      "not",
      "in",
      "(",
      "select",
      "people_id",
      "from",
      "body_builder",
      ")"
    ],
    "question": "How many persons are not body builders?",
    "question_toks": [
      "How",
      "many",
      "persons",
      "are",
      "not",
      "body",
      "builders",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      2,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "body_builder",
    "query": "SELECT min(snatch) FROM body_builder",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "snatch",
      ")",
      "FROM",
      "body_builder"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "snatch",
      ")",
      "from",
      "body_builder"
    ],
    "question": "What is the minimum snatch score?",
    "question_toks": [
      "What",
      "is",
      "the",
      "minimum",
      "snatch",
      "score",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election_representative",
    "query": "SELECT count(*) FROM election",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "election"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "election"
    ],
    "question": "How many elections are there?",
    "question_toks": [
      "How",
      "many",
      "elections",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election_representative",
    "query": "SELECT Date ,  Vote_Percent FROM election",
    "query_toks": [
      "SELECT",
      "Date",
      ",",
      "Vote_Percent",
      "FROM",
      "election"
    ],
    "query_toks_no_value": [
      "select",
      "date",
      ",",
      "vote_percent",
      "from",
      "election"
    ],
    "question": "List the dates and vote percents of elections.",
    "question_toks": [
      "List",
      "the",
      "dates",
      "and",
      "vote",
      "percents",
      "of",
      "elections",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election_representative",
    "query": "SELECT min(Vote_Percent) ,  max(Vote_Percent) FROM election",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "Vote_Percent",
      ")",
      ",",
      "max",
      "(",
      "Vote_Percent",
      ")",
      "FROM",
      "election"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "vote_percent",
      ")",
      ",",
      "max",
      "(",
      "vote_percent",
      ")",
      "from",
      "election"
    ],
    "question": "What are the minimum and maximum vote percents of elections?",
    "question_toks": [
      "What",
      "are",
      "the",
      "minimum",
      "and",
      "maximum",
      "vote",
      "percents",
      "of",
      "elections",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election_representative",
    "query": "SELECT Name ,  Party FROM representative",
    "query_toks": [
      "SELECT",
      "Name",
      ",",
      "Party",
      "FROM",
      "representative"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "party",
      "from",
      "representative"
    ],
    "question": "What are the names and parties of representatives?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "parties",
      "of",
      "representatives",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election_representative",
    "query": "SELECT Name FROM Representative WHERE Party != \"Republican\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "Representative",
      "WHERE",
      "Party",
      "!",
      "=",
      "``",
      "Republican",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "representative",
      "where",
      "party",
      "!",
      "=",
      "value"
    ],
    "question": "What are the names of representatives whose party is not \"Republican\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "representatives",
      "whose",
      "party",
      "is",
      "not",
      "``",
      "Republican",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Republican\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election_representative",
    "query": "SELECT Lifespan FROM representative WHERE State  =  \"New York\" OR State  =  \"Indiana\"",
    "query_toks": [
      "SELECT",
      "Lifespan",
      "FROM",
      "representative",
      "WHERE",
      "State",
      "=",
      "``",
      "New",
      "York",
      "''",
      "OR",
      "State",
      "=",
      "``",
      "Indiana",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "lifespan",
      "from",
      "representative",
      "where",
      "state",
      "=",
      "value",
      "or",
      "state",
      "=",
      "value"
    ],
    "question": "What are the life spans of representatives from New York state or Indiana state?",
    "question_toks": [
      "What",
      "are",
      "the",
      "life",
      "spans",
      "of",
      "representatives",
      "from",
      "New",
      "York",
      "state",
      "or",
      "Indiana",
      "state",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"New York\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Indiana\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election_representative",
    "query": "SELECT Name FROM representative WHERE Representative_ID NOT IN (SELECT Representative_ID FROM election)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "representative",
      "WHERE",
      "Representative_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Representative_ID",
      "FROM",
      "election",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "representative",
      "where",
      "representative_id",
      "not",
      "in",
      "(",
      "select",
      "representative_id",
      "from",
      "election",
      ")"
    ],
    "question": "List the names of representatives that have not participated in elections listed here.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "representatives",
      "that",
      "have",
      "not",
      "participated",
      "in",
      "elections",
      "listed",
      "here",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      2,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election_representative",
    "query": "SELECT count(DISTINCT Party) FROM representative",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Party",
      ")",
      "FROM",
      "representative"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "party",
      ")",
      "from",
      "representative"
    ],
    "question": "How many distinct parties are there for representatives?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "parties",
      "are",
      "there",
      "for",
      "representatives",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT count(*) FROM Apartment_Bookings",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Apartment_Bookings"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "apartment_bookings"
    ],
    "question": "How many apartment bookings are there in total?",
    "question_toks": [
      "How",
      "many",
      "apartment",
      "bookings",
      "are",
      "there",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT count(*) FROM Apartment_Bookings",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Apartment_Bookings"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "apartment_bookings"
    ],
    "question": "Count the total number of apartment bookings.",
    "question_toks": [
      "Count",
      "the",
      "total",
      "number",
      "of",
      "apartment",
      "bookings",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT booking_start_date ,  booking_end_date FROM Apartment_Bookings",
    "query_toks": [
      "SELECT",
      "booking_start_date",
      ",",
      "booking_end_date",
      "FROM",
      "Apartment_Bookings"
    ],
    "query_toks_no_value": [
      "select",
      "booking_start_date",
      ",",
      "booking_end_date",
      "from",
      "apartment_bookings"
    ],
    "question": "Show the start dates and end dates of all the apartment bookings.",
    "question_toks": [
      "Show",
      "the",
      "start",
      "dates",
      "and",
      "end",
      "dates",
      "of",
      "all",
      "the",
      "apartment",
      "bookings",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT booking_start_date ,  booking_end_date FROM Apartment_Bookings",
    "query_toks": [
      "SELECT",
      "booking_start_date",
      ",",
      "booking_end_date",
      "FROM",
      "Apartment_Bookings"
    ],
    "query_toks_no_value": [
      "select",
      "booking_start_date",
      ",",
      "booking_end_date",
      "from",
      "apartment_bookings"
    ],
    "question": "What are the start date and end date of each apartment booking?",
    "question_toks": [
      "What",
      "are",
      "the",
      "start",
      "date",
      "and",
      "end",
      "date",
      "of",
      "each",
      "apartment",
      "booking",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager\t =  \"Emma\"",
    "query_toks": [
      "SELECT",
      "building_short_name",
      "FROM",
      "Apartment_Buildings",
      "WHERE",
      "building_manager",
      "=",
      "``",
      "Emma",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "building_short_name",
      "from",
      "apartment_buildings",
      "where",
      "building_manager",
      "=",
      "value"
    ],
    "question": "Show the short names of the buildings managed by \"Emma\".",
    "question_toks": [
      "Show",
      "the",
      "short",
      "names",
      "of",
      "the",
      "buildings",
      "managed",
      "by",
      "``",
      "Emma",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Emma\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager\t =  \"Emma\"",
    "query_toks": [
      "SELECT",
      "building_short_name",
      "FROM",
      "Apartment_Buildings",
      "WHERE",
      "building_manager",
      "=",
      "``",
      "Emma",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "building_short_name",
      "from",
      "apartment_buildings",
      "where",
      "building_manager",
      "=",
      "value"
    ],
    "question": "Which buildings does \"Emma\" manage? Give me the short names of the buildings.",
    "question_toks": [
      "Which",
      "buildings",
      "does",
      "``",
      "Emma",
      "''",
      "manage",
      "?",
      "Give",
      "me",
      "the",
      "short",
      "names",
      "of",
      "the",
      "buildings",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Emma\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT building_address ,  building_phone FROM Apartment_Buildings WHERE building_manager\t =  \"Brenden\"",
    "query_toks": [
      "SELECT",
      "building_address",
      ",",
      "building_phone",
      "FROM",
      "Apartment_Buildings",
      "WHERE",
      "building_manager",
      "=",
      "``",
      "Brenden",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "building_address",
      ",",
      "building_phone",
      "from",
      "apartment_buildings",
      "where",
      "building_manager",
      "=",
      "value"
    ],
    "question": "Show the addresses and phones of all the buildings managed by \"Brenden\".",
    "question_toks": [
      "Show",
      "the",
      "addresses",
      "and",
      "phones",
      "of",
      "all",
      "the",
      "buildings",
      "managed",
      "by",
      "``",
      "Brenden",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Brenden\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT building_address ,  building_phone FROM Apartment_Buildings WHERE building_manager\t =  \"Brenden\"",
    "query_toks": [
      "SELECT",
      "building_address",
      ",",
      "building_phone",
      "FROM",
      "Apartment_Buildings",
      "WHERE",
      "building_manager",
      "=",
      "``",
      "Brenden",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "building_address",
      ",",
      "building_phone",
      "from",
      "apartment_buildings",
      "where",
      "building_manager",
      "=",
      "value"
    ],
    "question": "What are the address and phone number of the buildings managed by \"Brenden\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "address",
      "and",
      "phone",
      "number",
      "of",
      "the",
      "buildings",
      "managed",
      "by",
      "``",
      "Brenden",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Brenden\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE \"%court%\"",
    "query_toks": [
      "SELECT",
      "building_full_name",
      "FROM",
      "Apartment_Buildings",
      "WHERE",
      "building_full_name",
      "LIKE",
      "``",
      "%",
      "court",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "building_full_name",
      "from",
      "apartment_buildings",
      "where",
      "building_full_name",
      "like",
      "value"
    ],
    "question": "What are the building full names that contain the word \"court\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "building",
      "full",
      "names",
      "that",
      "contain",
      "the",
      "word",
      "``",
      "court",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"%court%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE \"%court%\"",
    "query_toks": [
      "SELECT",
      "building_full_name",
      "FROM",
      "Apartment_Buildings",
      "WHERE",
      "building_full_name",
      "LIKE",
      "``",
      "%",
      "court",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "building_full_name",
      "from",
      "apartment_buildings",
      "where",
      "building_full_name",
      "like",
      "value"
    ],
    "question": "Find all the building full names containing the word \"court\".",
    "question_toks": [
      "Find",
      "all",
      "the",
      "building",
      "full",
      "names",
      "containing",
      "the",
      "word",
      "``",
      "court",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"%court%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT min(bathroom_count) ,  max(bathroom_count) FROM Apartments",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "bathroom_count",
      ")",
      ",",
      "max",
      "(",
      "bathroom_count",
      ")",
      "FROM",
      "Apartments"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "bathroom_count",
      ")",
      ",",
      "max",
      "(",
      "bathroom_count",
      ")",
      "from",
      "apartments"
    ],
    "question": "What is the minimum and maximum number of bathrooms of all the apartments?",
    "question_toks": [
      "What",
      "is",
      "the",
      "minimum",
      "and",
      "maximum",
      "number",
      "of",
      "bathrooms",
      "of",
      "all",
      "the",
      "apartments",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT min(bathroom_count) ,  max(bathroom_count) FROM Apartments",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "bathroom_count",
      ")",
      ",",
      "max",
      "(",
      "bathroom_count",
      ")",
      "FROM",
      "Apartments"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "bathroom_count",
      ")",
      ",",
      "max",
      "(",
      "bathroom_count",
      ")",
      "from",
      "apartments"
    ],
    "question": "Give me the minimum and maximum bathroom count among all the apartments.",
    "question_toks": [
      "Give",
      "me",
      "the",
      "minimum",
      "and",
      "maximum",
      "bathroom",
      "count",
      "among",
      "all",
      "the",
      "apartments",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT avg(bedroom_count) FROM Apartments",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "bedroom_count",
      ")",
      "FROM",
      "Apartments"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "bedroom_count",
      ")",
      "from",
      "apartments"
    ],
    "question": "What is the average number of bedrooms of all apartments?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "bedrooms",
      "of",
      "all",
      "apartments",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT avg(bedroom_count) FROM Apartments",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "bedroom_count",
      ")",
      "FROM",
      "Apartments"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "bedroom_count",
      ")",
      "from",
      "apartments"
    ],
    "question": "Find the average number of bedrooms of all the apartments.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "number",
      "of",
      "bedrooms",
      "of",
      "all",
      "the",
      "apartments",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT apt_number ,  room_count FROM Apartments",
    "query_toks": [
      "SELECT",
      "apt_number",
      ",",
      "room_count",
      "FROM",
      "Apartments"
    ],
    "query_toks_no_value": [
      "select",
      "apt_number",
      ",",
      "room_count",
      "from",
      "apartments"
    ],
    "question": "Return the apartment number and the number of rooms for each apartment.",
    "question_toks": [
      "Return",
      "the",
      "apartment",
      "number",
      "and",
      "the",
      "number",
      "of",
      "rooms",
      "for",
      "each",
      "apartment",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT apt_number ,  room_count FROM Apartments",
    "query_toks": [
      "SELECT",
      "apt_number",
      ",",
      "room_count",
      "FROM",
      "Apartments"
    ],
    "query_toks_no_value": [
      "select",
      "apt_number",
      ",",
      "room_count",
      "from",
      "apartments"
    ],
    "question": "What are the apartment number and the room count of each apartment?",
    "question_toks": [
      "What",
      "are",
      "the",
      "apartment",
      "number",
      "and",
      "the",
      "room",
      "count",
      "of",
      "each",
      "apartment",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT avg(room_count) FROM Apartments WHERE apt_type_code  =  \"Studio\"",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "room_count",
      ")",
      "FROM",
      "Apartments",
      "WHERE",
      "apt_type_code",
      "=",
      "``",
      "Studio",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "room_count",
      ")",
      "from",
      "apartments",
      "where",
      "apt_type_code",
      "=",
      "value"
    ],
    "question": "What is the average number of rooms of apartments with type code \"Studio\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "rooms",
      "of",
      "apartments",
      "with",
      "type",
      "code",
      "``",
      "Studio",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Studio\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT avg(room_count) FROM Apartments WHERE apt_type_code  =  \"Studio\"",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "room_count",
      ")",
      "FROM",
      "Apartments",
      "WHERE",
      "apt_type_code",
      "=",
      "``",
      "Studio",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "room_count",
      ")",
      "from",
      "apartments",
      "where",
      "apt_type_code",
      "=",
      "value"
    ],
    "question": "Find the average room count of the apartments that have the \"Studio\" type code.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "room",
      "count",
      "of",
      "the",
      "apartments",
      "that",
      "have",
      "the",
      "``",
      "Studio",
      "''",
      "type",
      "code",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Studio\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT apt_number FROM Apartments WHERE apt_type_code  =  \"Flat\"",
    "query_toks": [
      "SELECT",
      "apt_number",
      "FROM",
      "Apartments",
      "WHERE",
      "apt_type_code",
      "=",
      "``",
      "Flat",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "apt_number",
      "from",
      "apartments",
      "where",
      "apt_type_code",
      "=",
      "value"
    ],
    "question": "Return the apartment numbers of the apartments with type code \"Flat\".",
    "question_toks": [
      "Return",
      "the",
      "apartment",
      "numbers",
      "of",
      "the",
      "apartments",
      "with",
      "type",
      "code",
      "``",
      "Flat",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Flat\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT apt_number FROM Apartments WHERE apt_type_code  =  \"Flat\"",
    "query_toks": [
      "SELECT",
      "apt_number",
      "FROM",
      "Apartments",
      "WHERE",
      "apt_type_code",
      "=",
      "``",
      "Flat",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "apt_number",
      "from",
      "apartments",
      "where",
      "apt_type_code",
      "=",
      "value"
    ],
    "question": "Which apartments have type code \"Flat\"? Give me their apartment numbers.",
    "question_toks": [
      "Which",
      "apartments",
      "have",
      "type",
      "code",
      "``",
      "Flat",
      "''",
      "?",
      "Give",
      "me",
      "their",
      "apartment",
      "numbers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Flat\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT guest_first_name ,  guest_last_name FROM Guests",
    "query_toks": [
      "SELECT",
      "guest_first_name",
      ",",
      "guest_last_name",
      "FROM",
      "Guests"
    ],
    "query_toks_no_value": [
      "select",
      "guest_first_name",
      ",",
      "guest_last_name",
      "from",
      "guests"
    ],
    "question": "Return the first names and last names of all guests",
    "question_toks": [
      "Return",
      "the",
      "first",
      "names",
      "and",
      "last",
      "names",
      "of",
      "all",
      "guests"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT guest_first_name ,  guest_last_name FROM Guests",
    "query_toks": [
      "SELECT",
      "guest_first_name",
      ",",
      "guest_last_name",
      "FROM",
      "Guests"
    ],
    "query_toks_no_value": [
      "select",
      "guest_first_name",
      ",",
      "guest_last_name",
      "from",
      "guests"
    ],
    "question": "What are the first names and last names of all the guests?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "names",
      "and",
      "last",
      "names",
      "of",
      "all",
      "the",
      "guests",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT date_of_birth FROM Guests WHERE gender_code  =  \"Male\"",
    "query_toks": [
      "SELECT",
      "date_of_birth",
      "FROM",
      "Guests",
      "WHERE",
      "gender_code",
      "=",
      "``",
      "Male",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_birth",
      "from",
      "guests",
      "where",
      "gender_code",
      "=",
      "value"
    ],
    "question": "Return the date of birth for all the guests with gender code \"Male\".",
    "question_toks": [
      "Return",
      "the",
      "date",
      "of",
      "birth",
      "for",
      "all",
      "the",
      "guests",
      "with",
      "gender",
      "code",
      "``",
      "Male",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Male\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT date_of_birth FROM Guests WHERE gender_code  =  \"Male\"",
    "query_toks": [
      "SELECT",
      "date_of_birth",
      "FROM",
      "Guests",
      "WHERE",
      "gender_code",
      "=",
      "``",
      "Male",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_birth",
      "from",
      "guests",
      "where",
      "gender_code",
      "=",
      "value"
    ],
    "question": "What are dates of birth of all the guests whose gender is \"Male\"?",
    "question_toks": [
      "What",
      "are",
      "dates",
      "of",
      "birth",
      "of",
      "all",
      "the",
      "guests",
      "whose",
      "gender",
      "is",
      "``",
      "Male",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Male\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT count(*) FROM Apartments WHERE apt_id NOT IN (SELECT apt_id FROM Apartment_Facilities)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Apartments",
      "WHERE",
      "apt_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "apt_id",
      "FROM",
      "Apartment_Facilities",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "apartments",
      "where",
      "apt_id",
      "not",
      "in",
      "(",
      "select",
      "apt_id",
      "from",
      "apartment_facilities",
      ")"
    ],
    "question": "How many apartments do not have any facility?",
    "question_toks": [
      "How",
      "many",
      "apartments",
      "do",
      "not",
      "have",
      "any",
      "facility",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      15,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT count(*) FROM Apartments WHERE apt_id NOT IN (SELECT apt_id FROM Apartment_Facilities)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Apartments",
      "WHERE",
      "apt_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "apt_id",
      "FROM",
      "Apartment_Facilities",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "apartments",
      "where",
      "apt_id",
      "not",
      "in",
      "(",
      "select",
      "apt_id",
      "from",
      "apartment_facilities",
      ")"
    ],
    "question": "Find the number of apartments that have no facility.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "apartments",
      "that",
      "have",
      "no",
      "facility",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      15,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_injury",
    "query": "SELECT count(*) FROM game WHERE season  >  2007",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "game",
      "WHERE",
      "season",
      ">",
      "2007"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "game",
      "where",
      "season",
      ">",
      "value"
    ],
    "question": "How many games are held after season 2007?",
    "question_toks": [
      "How",
      "many",
      "games",
      "are",
      "held",
      "after",
      "season",
      "2007",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          2007.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_injury",
    "query": "SELECT season ,  home_team ,  away_team FROM game",
    "query_toks": [
      "SELECT",
      "season",
      ",",
      "home_team",
      ",",
      "away_team",
      "FROM",
      "game"
    ],
    "query_toks_no_value": [
      "select",
      "season",
      ",",
      "home_team",
      ",",
      "away_team",
      "from",
      "game"
    ],
    "question": "List the season, home team, away team of all the games.",
    "question_toks": [
      "List",
      "the",
      "season",
      ",",
      "home",
      "team",
      ",",
      "away",
      "team",
      "of",
      "all",
      "the",
      "games",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_injury",
    "query": "SELECT max(home_games) ,  min(home_games) ,  avg(home_games) FROM stadium",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "home_games",
      ")",
      ",",
      "min",
      "(",
      "home_games",
      ")",
      ",",
      "avg",
      "(",
      "home_games",
      ")",
      "FROM",
      "stadium"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "home_games",
      ")",
      ",",
      "min",
      "(",
      "home_games",
      ")",
      ",",
      "avg",
      "(",
      "home_games",
      ")",
      "from",
      "stadium"
    ],
    "question": "What are the maximum, minimum and average home games each stadium held?",
    "question_toks": [
      "What",
      "are",
      "the",
      "maximum",
      ",",
      "minimum",
      "and",
      "average",
      "home",
      "games",
      "each",
      "stadium",
      "held",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_injury",
    "query": "SELECT average_attendance FROM stadium WHERE capacity_percentage  >  100",
    "query_toks": [
      "SELECT",
      "average_attendance",
      "FROM",
      "stadium",
      "WHERE",
      "capacity_percentage",
      ">",
      "100"
    ],
    "query_toks_no_value": [
      "select",
      "average_attendance",
      "from",
      "stadium",
      "where",
      "capacity_percentage",
      ">",
      "value"
    ],
    "question": "What is the average attendance of stadiums with capacity percentage higher than 100%?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "attendance",
      "of",
      "stadiums",
      "with",
      "capacity",
      "percentage",
      "higher",
      "than",
      "100",
      "%",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          100.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_injury",
    "query": "SELECT player ,  number_of_matches ,  SOURCE FROM injury_accident WHERE injury != 'Knee problem'",
    "query_toks": [
      "SELECT",
      "player",
      ",",
      "number_of_matches",
      ",",
      "SOURCE",
      "FROM",
      "injury_accident",
      "WHERE",
      "injury",
      "!",
      "=",
      "'Knee",
      "problem",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "player",
      ",",
      "number_of_matches",
      ",",
      "source",
      "from",
      "injury_accident",
      "where",
      "injury",
      "!",
      "=",
      "value"
    ],
    "question": "What are the player name, number of matches, and information source for players who do not suffer from injury of 'Knee problem'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "player",
      "name",
      ",",
      "number",
      "of",
      "matches",
      ",",
      "and",
      "information",
      "source",
      "for",
      "players",
      "who",
      "do",
      "not",
      "suffer",
      "from",
      "injury",
      "of",
      "'Knee",
      "problem",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Knee problem\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_injury",
    "query": "SELECT count(DISTINCT SOURCE) FROM injury_accident",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "SOURCE",
      ")",
      "FROM",
      "injury_accident"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "source",
      ")",
      "from",
      "injury_accident"
    ],
    "question": "How many different kinds of information sources are there for injury accidents?",
    "question_toks": [
      "How",
      "many",
      "different",
      "kinds",
      "of",
      "information",
      "sources",
      "are",
      "there",
      "for",
      "injury",
      "accidents",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                20,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_injury",
    "query": "SELECT count(*) FROM game WHERE id NOT IN ( SELECT game_id FROM injury_accident )",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "game",
      "WHERE",
      "id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "game_id",
      "FROM",
      "injury_accident",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "game",
      "where",
      "id",
      "not",
      "in",
      "(",
      "select",
      "game_id",
      "from",
      "injury_accident",
      ")"
    ],
    "question": "How many games are free of injury accidents?",
    "question_toks": [
      "How",
      "many",
      "games",
      "are",
      "free",
      "of",
      "injury",
      "accidents",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      15,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_injury",
    "query": "SELECT name FROM stadium WHERE name LIKE \"%Bank%\"",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "stadium",
      "WHERE",
      "name",
      "LIKE",
      "``",
      "%",
      "Bank",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "stadium",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "Which stadium name contains the substring \"Bank\"?",
    "question_toks": [
      "Which",
      "stadium",
      "name",
      "contains",
      "the",
      "substring",
      "``",
      "Bank",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"%Bank%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_1",
    "query": "SELECT avg(weight) FROM Player",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "weight",
      ")",
      "FROM",
      "Player"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "weight",
      ")",
      "from",
      "player"
    ],
    "question": "What is the average weight of all players?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "weight",
      "of",
      "all",
      "players",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                51,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_1",
    "query": "SELECT max(weight) ,  min(weight) FROM Player",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "weight",
      ")",
      ",",
      "min",
      "(",
      "weight",
      ")",
      "FROM",
      "Player"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "weight",
      ")",
      ",",
      "min",
      "(",
      "weight",
      ")",
      "from",
      "player"
    ],
    "question": "What is the maximum and minimum height of all players?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      "and",
      "minimum",
      "height",
      "of",
      "all",
      "players",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                51,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                51,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "performance_attendance",
    "query": "SELECT count(*) FROM performance",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "performance"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "performance"
    ],
    "question": "How many performances are there?",
    "question_toks": [
      "How",
      "many",
      "performances",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "performance_attendance",
    "query": "SELECT Date ,  LOCATION FROM performance",
    "query_toks": [
      "SELECT",
      "Date",
      ",",
      "LOCATION",
      "FROM",
      "performance"
    ],
    "query_toks_no_value": [
      "select",
      "date",
      ",",
      "location",
      "from",
      "performance"
    ],
    "question": "What are the dates and locations of performances?",
    "question_toks": [
      "What",
      "are",
      "the",
      "dates",
      "and",
      "locations",
      "of",
      "performances",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "performance_attendance",
    "query": "SELECT Attendance FROM performance WHERE LOCATION  =  \"TD Garden\" OR LOCATION  =  \"Bell Centre\"",
    "query_toks": [
      "SELECT",
      "Attendance",
      "FROM",
      "performance",
      "WHERE",
      "LOCATION",
      "=",
      "``",
      "TD",
      "Garden",
      "''",
      "OR",
      "LOCATION",
      "=",
      "``",
      "Bell",
      "Centre",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "attendance",
      "from",
      "performance",
      "where",
      "location",
      "=",
      "value",
      "or",
      "location",
      "=",
      "value"
    ],
    "question": "Show the attendances of the performances at location \"TD Garden\" or \"Bell Centre\"",
    "question_toks": [
      "Show",
      "the",
      "attendances",
      "of",
      "the",
      "performances",
      "at",
      "location",
      "``",
      "TD",
      "Garden",
      "''",
      "or",
      "``",
      "Bell",
      "Centre",
      "''"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"TD Garden\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Bell Centre\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "performance_attendance",
    "query": "SELECT avg(Attendance) FROM performance",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Attendance",
      ")",
      "FROM",
      "performance"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "attendance",
      ")",
      "from",
      "performance"
    ],
    "question": "What is the average number of attendees for performances?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "attendees",
      "for",
      "performances",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "performance_attendance",
    "query": "SELECT Name FROM member WHERE Member_ID NOT IN (SELECT Member_ID FROM member_attendance)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "member",
      "WHERE",
      "Member_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Member_ID",
      "FROM",
      "member_attendance",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "member",
      "where",
      "member_id",
      "not",
      "in",
      "(",
      "select",
      "member_id",
      "from",
      "member_attendance",
      ")"
    ],
    "question": "List the names of members who did not attend any performance.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "members",
      "who",
      "did",
      "not",
      "attend",
      "any",
      "performance",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      10,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT count(*) FROM classroom WHERE building != 'Lamberton'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "classroom",
      "WHERE",
      "building",
      "!",
      "=",
      "'Lamberton",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "classroom",
      "where",
      "building",
      "!",
      "=",
      "value"
    ],
    "question": "Count the number of rooms that are not in the Lamberton building.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "rooms",
      "that",
      "are",
      "not",
      "in",
      "the",
      "Lamberton",
      "building",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"Lamberton\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT count(*) FROM classroom WHERE building != 'Lamberton'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "classroom",
      "WHERE",
      "building",
      "!",
      "=",
      "'Lamberton",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "classroom",
      "where",
      "building",
      "!",
      "=",
      "value"
    ],
    "question": "How many classrooms are not in Lamberton?",
    "question_toks": [
      "How",
      "many",
      "classrooms",
      "are",
      "not",
      "in",
      "Lamberton",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"Lamberton\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT dept_name ,  building FROM department WHERE budget  >  (SELECT avg(budget) FROM department)",
    "query_toks": [
      "SELECT",
      "dept_name",
      ",",
      "building",
      "FROM",
      "department",
      "WHERE",
      "budget",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "budget",
      ")",
      "FROM",
      "department",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "dept_name",
      ",",
      "building",
      "from",
      "department",
      "where",
      "budget",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "budget",
      ")",
      "from",
      "department",
      ")"
    ],
    "question": "What is the name and building of the departments whose budget is more than the average budget?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "and",
      "building",
      "of",
      "the",
      "departments",
      "whose",
      "budget",
      "is",
      "more",
      "than",
      "the",
      "average",
      "budget",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      6,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT dept_name ,  building FROM department WHERE budget  >  (SELECT avg(budget) FROM department)",
    "query_toks": [
      "SELECT",
      "dept_name",
      ",",
      "building",
      "FROM",
      "department",
      "WHERE",
      "budget",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "budget",
      ")",
      "FROM",
      "department",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "dept_name",
      ",",
      "building",
      "from",
      "department",
      "where",
      "budget",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "budget",
      ")",
      "from",
      "department",
      ")"
    ],
    "question": "Give the name and building of the departments with greater than average budget.",
    "question_toks": [
      "Give",
      "the",
      "name",
      "and",
      "building",
      "of",
      "the",
      "departments",
      "with",
      "greater",
      "than",
      "average",
      "budget",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      6,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT building ,  room_number FROM classroom WHERE capacity BETWEEN 50 AND 100",
    "query_toks": [
      "SELECT",
      "building",
      ",",
      "room_number",
      "FROM",
      "classroom",
      "WHERE",
      "capacity",
      "BETWEEN",
      "50",
      "AND",
      "100"
    ],
    "query_toks_no_value": [
      "select",
      "building",
      ",",
      "room_number",
      "from",
      "classroom",
      "where",
      "capacity",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "Find the room number of the rooms which can sit 50 to 100 students and their buildings.",
    "question_toks": [
      "Find",
      "the",
      "room",
      "number",
      "of",
      "the",
      "rooms",
      "which",
      "can",
      "sit",
      "50",
      "to",
      "100",
      "students",
      "and",
      "their",
      "buildings",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          50.0,
          100.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT building ,  room_number FROM classroom WHERE capacity BETWEEN 50 AND 100",
    "query_toks": [
      "SELECT",
      "building",
      ",",
      "room_number",
      "FROM",
      "classroom",
      "WHERE",
      "capacity",
      "BETWEEN",
      "50",
      "AND",
      "100"
    ],
    "query_toks_no_value": [
      "select",
      "building",
      ",",
      "room_number",
      "from",
      "classroom",
      "where",
      "capacity",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What are the room numbers and corresponding buildings for classrooms which can seat between 50 to 100 students?",
    "question_toks": [
      "What",
      "are",
      "the",
      "room",
      "numbers",
      "and",
      "corresponding",
      "buildings",
      "for",
      "classrooms",
      "which",
      "can",
      "seat",
      "between",
      "50",
      "to",
      "100",
      "students",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          50.0,
          100.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT count(*) FROM classroom WHERE building  =  'Lamberton'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "classroom",
      "WHERE",
      "building",
      "=",
      "'Lamberton",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "classroom",
      "where",
      "building",
      "=",
      "value"
    ],
    "question": "How many rooms does the Lamberton building have?",
    "question_toks": [
      "How",
      "many",
      "rooms",
      "does",
      "the",
      "Lamberton",
      "building",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"Lamberton\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT count(*) FROM classroom WHERE building  =  'Lamberton'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "classroom",
      "WHERE",
      "building",
      "=",
      "'Lamberton",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "classroom",
      "where",
      "building",
      "=",
      "value"
    ],
    "question": "Count the number of classrooms in Lamberton.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "classrooms",
      "in",
      "Lamberton",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"Lamberton\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT count(DISTINCT s_id) FROM advisor",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "s_id",
      ")",
      "FROM",
      "advisor"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "s_id",
      ")",
      "from",
      "advisor"
    ],
    "question": "How many students have advisors?",
    "question_toks": [
      "How",
      "many",
      "students",
      "have",
      "advisors",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                37,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT count(DISTINCT s_id) FROM advisor",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "s_id",
      ")",
      "FROM",
      "advisor"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "s_id",
      ")",
      "from",
      "advisor"
    ],
    "question": "Count the number of students who have advisors.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "students",
      "who",
      "have",
      "advisors",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                37,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT count(DISTINCT dept_name) FROM course",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "dept_name",
      ")",
      "FROM",
      "course"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "dept_name",
      ")",
      "from",
      "course"
    ],
    "question": "How many departments offer courses?",
    "question_toks": [
      "How",
      "many",
      "departments",
      "offer",
      "courses",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                9,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT count(DISTINCT dept_name) FROM course",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "dept_name",
      ")",
      "FROM",
      "course"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "dept_name",
      ")",
      "from",
      "course"
    ],
    "question": "Count the number of departments which offer courses.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "departments",
      "which",
      "offer",
      "courses",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                9,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT count(DISTINCT course_id) FROM course WHERE dept_name  =  'Physics'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "course_id",
      ")",
      "FROM",
      "course",
      "WHERE",
      "dept_name",
      "=",
      "'Physics",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "course_id",
      ")",
      "from",
      "course",
      "where",
      "dept_name",
      "=",
      "value"
    ],
    "question": "How many different courses offered by Physics department?",
    "question_toks": [
      "How",
      "many",
      "different",
      "courses",
      "offered",
      "by",
      "Physics",
      "department",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                7,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Physics\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT count(DISTINCT course_id) FROM course WHERE dept_name  =  'Physics'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "course_id",
      ")",
      "FROM",
      "course",
      "WHERE",
      "dept_name",
      "=",
      "'Physics",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "course_id",
      ")",
      "from",
      "course",
      "where",
      "dept_name",
      "=",
      "value"
    ],
    "question": "Count the number of courses in the Physics department.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "courses",
      "in",
      "the",
      "Physics",
      "department",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                7,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Physics\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT count(*) FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "course",
      "WHERE",
      "course_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "course_id",
      "FROM",
      "prereq",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "course",
      "where",
      "course_id",
      "not",
      "in",
      "(",
      "select",
      "course_id",
      "from",
      "prereq",
      ")"
    ],
    "question": "How many courses that do not have prerequisite?",
    "question_toks": [
      "How",
      "many",
      "courses",
      "that",
      "do",
      "not",
      "have",
      "prerequisite",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  10
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      45,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT count(*) FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "course",
      "WHERE",
      "course_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "course_id",
      "FROM",
      "prereq",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "course",
      "where",
      "course_id",
      "not",
      "in",
      "(",
      "select",
      "course_id",
      "from",
      "prereq",
      ")"
    ],
    "question": "Count the number of courses without prerequisites.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "courses",
      "without",
      "prerequisites",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  10
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      45,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "course",
      "WHERE",
      "course_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "course_id",
      "FROM",
      "prereq",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "course",
      "where",
      "course_id",
      "not",
      "in",
      "(",
      "select",
      "course_id",
      "from",
      "prereq",
      ")"
    ],
    "question": "Find the name of the courses that do not have any prerequisite?",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "the",
      "courses",
      "that",
      "do",
      "not",
      "have",
      "any",
      "prerequisite",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  10
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      45,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "course",
      "WHERE",
      "course_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "course_id",
      "FROM",
      "prereq",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "course",
      "where",
      "course_id",
      "not",
      "in",
      "(",
      "select",
      "course_id",
      "from",
      "prereq",
      ")"
    ],
    "question": "What are the titles of courses without prerequisites?",
    "question_toks": [
      "What",
      "are",
      "the",
      "titles",
      "of",
      "courses",
      "without",
      "prerequisites",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  10
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      45,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT COUNT (DISTINCT id) FROM teaches",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "id",
      ")",
      "FROM",
      "teaches"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "id",
      ")",
      "from",
      "teaches"
    ],
    "question": "How many different instructors have taught some course?",
    "question_toks": [
      "How",
      "many",
      "different",
      "instructors",
      "have",
      "taught",
      "some",
      "course",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                22,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT COUNT (DISTINCT id) FROM teaches",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "id",
      ")",
      "FROM",
      "teaches"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "id",
      ")",
      "from",
      "teaches"
    ],
    "question": "Count the number of distinct instructors who have taught a course.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "distinct",
      "instructors",
      "who",
      "have",
      "taught",
      "a",
      "course",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                22,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT sum(budget) FROM department WHERE dept_name  =  'Marketing' OR dept_name  =  'Finance'",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "budget",
      ")",
      "FROM",
      "department",
      "WHERE",
      "dept_name",
      "=",
      "'Marketing",
      "'",
      "OR",
      "dept_name",
      "=",
      "'Finance",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "budget",
      ")",
      "from",
      "department",
      "where",
      "dept_name",
      "=",
      "value",
      "or",
      "dept_name",
      "=",
      "value"
    ],
    "question": "Find the total budgets of the Marketing or Finance department.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "budgets",
      "of",
      "the",
      "Marketing",
      "or",
      "Finance",
      "department",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Marketing\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Finance\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT sum(budget) FROM department WHERE dept_name  =  'Marketing' OR dept_name  =  'Finance'",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "budget",
      ")",
      "FROM",
      "department",
      "WHERE",
      "dept_name",
      "=",
      "'Marketing",
      "'",
      "OR",
      "dept_name",
      "=",
      "'Finance",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "budget",
      ")",
      "from",
      "department",
      "where",
      "dept_name",
      "=",
      "value",
      "or",
      "dept_name",
      "=",
      "value"
    ],
    "question": "What is the sum of budgets of the Marketing and Finance departments?",
    "question_toks": [
      "What",
      "is",
      "the",
      "sum",
      "of",
      "budgets",
      "of",
      "the",
      "Marketing",
      "and",
      "Finance",
      "departments",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Marketing\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Finance\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%'",
    "query_toks": [
      "SELECT",
      "dept_name",
      "FROM",
      "instructor",
      "WHERE",
      "name",
      "LIKE",
      "'",
      "%",
      "Soisalon",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "dept_name",
      "from",
      "instructor",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "Find the department name of the instructor whose name contains 'Soisalon'.",
    "question_toks": [
      "Find",
      "the",
      "department",
      "name",
      "of",
      "the",
      "instructor",
      "whose",
      "name",
      "contains",
      "'Soisalon",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"%Soisalon%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%'",
    "query_toks": [
      "SELECT",
      "dept_name",
      "FROM",
      "instructor",
      "WHERE",
      "name",
      "LIKE",
      "'",
      "%",
      "Soisalon",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "dept_name",
      "from",
      "instructor",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "What is the name of the department with an instructure who has a name like 'Soisalon'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "department",
      "with",
      "an",
      "instructure",
      "who",
      "has",
      "a",
      "name",
      "like",
      "'Soisalon",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"%Soisalon%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT count(*) FROM classroom WHERE building  =  'Lamberton' AND capacity  <  50",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "classroom",
      "WHERE",
      "building",
      "=",
      "'Lamberton",
      "'",
      "AND",
      "capacity",
      "<",
      "50"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "classroom",
      "where",
      "building",
      "=",
      "value",
      "and",
      "capacity",
      "<",
      "value"
    ],
    "question": "How many rooms whose capacity is less than 50 does the Lamberton building have?",
    "question_toks": [
      "How",
      "many",
      "rooms",
      "whose",
      "capacity",
      "is",
      "less",
      "than",
      "50",
      "does",
      "the",
      "Lamberton",
      "building",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"Lamberton\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          50.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT count(*) FROM classroom WHERE building  =  'Lamberton' AND capacity  <  50",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "classroom",
      "WHERE",
      "building",
      "=",
      "'Lamberton",
      "'",
      "AND",
      "capacity",
      "<",
      "50"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "classroom",
      "where",
      "building",
      "=",
      "value",
      "and",
      "capacity",
      "<",
      "value"
    ],
    "question": "Count the number of rooms in Lamberton with capacity lower than 50.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "rooms",
      "in",
      "Lamberton",
      "with",
      "capacity",
      "lower",
      "than",
      "50",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"Lamberton\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          50.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT dept_name ,  budget FROM department WHERE budget  >  (SELECT avg(budget) FROM department)",
    "query_toks": [
      "SELECT",
      "dept_name",
      ",",
      "budget",
      "FROM",
      "department",
      "WHERE",
      "budget",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "budget",
      ")",
      "FROM",
      "department",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "dept_name",
      ",",
      "budget",
      "from",
      "department",
      "where",
      "budget",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "budget",
      ")",
      "from",
      "department",
      ")"
    ],
    "question": "Find the name and budget of departments whose budgets are more than the average budget.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "and",
      "budget",
      "of",
      "departments",
      "whose",
      "budgets",
      "are",
      "more",
      "than",
      "the",
      "average",
      "budget",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      6,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT dept_name ,  budget FROM department WHERE budget  >  (SELECT avg(budget) FROM department)",
    "query_toks": [
      "SELECT",
      "dept_name",
      ",",
      "budget",
      "FROM",
      "department",
      "WHERE",
      "budget",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "budget",
      ")",
      "FROM",
      "department",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "dept_name",
      ",",
      "budget",
      "from",
      "department",
      "where",
      "budget",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "budget",
      ")",
      "from",
      "department",
      ")"
    ],
    "question": "What are the names and budgets of departments with budgets greater than the average?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "budgets",
      "of",
      "departments",
      "with",
      "budgets",
      "greater",
      "than",
      "the",
      "average",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      6,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "course",
      "WHERE",
      "course_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "course_id",
      "FROM",
      "prereq",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "course",
      "where",
      "course_id",
      "not",
      "in",
      "(",
      "select",
      "course_id",
      "from",
      "prereq",
      ")"
    ],
    "question": "Find the name of the courses that do not have any prerequisite?",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "the",
      "courses",
      "that",
      "do",
      "not",
      "have",
      "any",
      "prerequisite",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  10
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      45,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "course",
      "WHERE",
      "course_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "course_id",
      "FROM",
      "prereq",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "course",
      "where",
      "course_id",
      "not",
      "in",
      "(",
      "select",
      "course_id",
      "from",
      "prereq",
      ")"
    ],
    "question": "What are the names of courses without prerequisites?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "courses",
      "without",
      "prerequisites",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  10
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      45,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'International Finance')",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "course",
      "WHERE",
      "course_id",
      "IN",
      "(",
      "SELECT",
      "T1.prereq_id",
      "FROM",
      "prereq",
      "AS",
      "T1",
      "JOIN",
      "course",
      "AS",
      "T2",
      "ON",
      "T1.course_id",
      "=",
      "T2.course_id",
      "WHERE",
      "T2.title",
      "=",
      "'International",
      "Finance",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "course",
      "where",
      "course_id",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "prereq_id",
      "from",
      "prereq",
      "as",
      "t1",
      "join",
      "course",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "course_id",
      "=",
      "t2",
      ".",
      "course_id",
      "where",
      "t2",
      ".",
      "title",
      "=",
      "value",
      ")"
    ],
    "question": "What is the title of the prerequisite class of International Finance course?",
    "question_toks": [
      "What",
      "is",
      "the",
      "title",
      "of",
      "the",
      "prerequisite",
      "class",
      "of",
      "International",
      "Finance",
      "course",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  10
                ],
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      45,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    7,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      46,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    8,
                    false
                  ],
                  null
                ],
                "\"International Finance\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'International Finance')",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "course",
      "WHERE",
      "course_id",
      "IN",
      "(",
      "SELECT",
      "T1.prereq_id",
      "FROM",
      "prereq",
      "AS",
      "T1",
      "JOIN",
      "course",
      "AS",
      "T2",
      "ON",
      "T1.course_id",
      "=",
      "T2.course_id",
      "WHERE",
      "T2.title",
      "=",
      "'International",
      "Finance",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "course",
      "where",
      "course_id",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "prereq_id",
      "from",
      "prereq",
      "as",
      "t1",
      "join",
      "course",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "course_id",
      "=",
      "t2",
      ".",
      "course_id",
      "where",
      "t2",
      ".",
      "title",
      "=",
      "value",
      ")"
    ],
    "question": "Give the title of the prerequisite to the course International Finance.",
    "question_toks": [
      "Give",
      "the",
      "title",
      "of",
      "the",
      "prerequisite",
      "to",
      "the",
      "course",
      "International",
      "Finance",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  10
                ],
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      45,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    7,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      46,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    8,
                    false
                  ],
                  null
                ],
                "\"International Finance\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT title FROM course WHERE course_id IN (SELECT T1.course_id FROM prereq AS T1 JOIN course AS T2 ON T1.prereq_id  =  T2.course_id WHERE T2.title  =  'Differential Geometry')",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "course",
      "WHERE",
      "course_id",
      "IN",
      "(",
      "SELECT",
      "T1.course_id",
      "FROM",
      "prereq",
      "AS",
      "T1",
      "JOIN",
      "course",
      "AS",
      "T2",
      "ON",
      "T1.prereq_id",
      "=",
      "T2.course_id",
      "WHERE",
      "T2.title",
      "=",
      "'Differential",
      "Geometry",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "course",
      "where",
      "course_id",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "course_id",
      "from",
      "prereq",
      "as",
      "t1",
      "join",
      "course",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "prereq_id",
      "=",
      "t2",
      ".",
      "course_id",
      "where",
      "t2",
      ".",
      "title",
      "=",
      "value",
      ")"
    ],
    "question": "Find the title of course whose prerequisite is course Differential Geometry.",
    "question_toks": [
      "Find",
      "the",
      "title",
      "of",
      "course",
      "whose",
      "prerequisite",
      "is",
      "course",
      "Differential",
      "Geometry",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  10
                ],
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      46,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    7,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      45,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    8,
                    false
                  ],
                  null
                ],
                "\"Differential Geometry\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT title FROM course WHERE course_id IN (SELECT T1.course_id FROM prereq AS T1 JOIN course AS T2 ON T1.prereq_id  =  T2.course_id WHERE T2.title  =  'Differential Geometry')",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "course",
      "WHERE",
      "course_id",
      "IN",
      "(",
      "SELECT",
      "T1.course_id",
      "FROM",
      "prereq",
      "AS",
      "T1",
      "JOIN",
      "course",
      "AS",
      "T2",
      "ON",
      "T1.prereq_id",
      "=",
      "T2.course_id",
      "WHERE",
      "T2.title",
      "=",
      "'Differential",
      "Geometry",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "course",
      "where",
      "course_id",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "course_id",
      "from",
      "prereq",
      "as",
      "t1",
      "join",
      "course",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "prereq_id",
      "=",
      "t2",
      ".",
      "course_id",
      "where",
      "t2",
      ".",
      "title",
      "=",
      "value",
      ")"
    ],
    "question": "What is the title of the course with Differential Geometry as a prerequisite?",
    "question_toks": [
      "What",
      "is",
      "the",
      "title",
      "of",
      "the",
      "course",
      "with",
      "Differential",
      "Geometry",
      "as",
      "a",
      "prerequisite",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  10
                ],
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      46,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    7,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      45,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    8,
                    false
                  ],
                  null
                ],
                "\"Differential Geometry\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester  =  'Fall' AND YEAR  =  2003)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "student",
      "WHERE",
      "id",
      "IN",
      "(",
      "SELECT",
      "id",
      "FROM",
      "takes",
      "WHERE",
      "semester",
      "=",
      "'Fall",
      "'",
      "AND",
      "YEAR",
      "=",
      "2003",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "student",
      "where",
      "id",
      "in",
      "(",
      "select",
      "id",
      "from",
      "takes",
      "where",
      "semester",
      "=",
      "value",
      "and",
      "year",
      "=",
      "value",
      ")"
    ],
    "question": "Find the names of students who have taken any course in the fall semester of year 2003.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "students",
      "who",
      "have",
      "taken",
      "any",
      "course",
      "in",
      "the",
      "fall",
      "semester",
      "of",
      "year",
      "2003",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  7
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      31,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    34,
                    false
                  ],
                  null
                ],
                "\"Fall\"",
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    35,
                    false
                  ],
                  null
                ],
                2003.0,
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester  =  'Fall' AND YEAR  =  2003)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "student",
      "WHERE",
      "id",
      "IN",
      "(",
      "SELECT",
      "id",
      "FROM",
      "takes",
      "WHERE",
      "semester",
      "=",
      "'Fall",
      "'",
      "AND",
      "YEAR",
      "=",
      "2003",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "student",
      "where",
      "id",
      "in",
      "(",
      "select",
      "id",
      "from",
      "takes",
      "where",
      "semester",
      "=",
      "value",
      "and",
      "year",
      "=",
      "value",
      ")"
    ],
    "question": "What are the names of students who took a course in the Fall of 2003?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "students",
      "who",
      "took",
      "a",
      "course",
      "in",
      "the",
      "Fall",
      "of",
      "2003",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  7
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      31,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    34,
                    false
                  ],
                  null
                ],
                "\"Fall\"",
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    35,
                    false
                  ],
                  null
                ],
                2003.0,
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'Mobile Computing')",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "course",
      "WHERE",
      "course_id",
      "IN",
      "(",
      "SELECT",
      "T1.prereq_id",
      "FROM",
      "prereq",
      "AS",
      "T1",
      "JOIN",
      "course",
      "AS",
      "T2",
      "ON",
      "T1.course_id",
      "=",
      "T2.course_id",
      "WHERE",
      "T2.title",
      "=",
      "'Mobile",
      "Computing",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "course",
      "where",
      "course_id",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "prereq_id",
      "from",
      "prereq",
      "as",
      "t1",
      "join",
      "course",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "course_id",
      "=",
      "t2",
      ".",
      "course_id",
      "where",
      "t2",
      ".",
      "title",
      "=",
      "value",
      ")"
    ],
    "question": "What is the course title of the prerequisite of course Mobile Computing?",
    "question_toks": [
      "What",
      "is",
      "the",
      "course",
      "title",
      "of",
      "the",
      "prerequisite",
      "of",
      "course",
      "Mobile",
      "Computing",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  10
                ],
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      45,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    7,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      46,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    8,
                    false
                  ],
                  null
                ],
                "\"Mobile Computing\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'Mobile Computing')",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "course",
      "WHERE",
      "course_id",
      "IN",
      "(",
      "SELECT",
      "T1.prereq_id",
      "FROM",
      "prereq",
      "AS",
      "T1",
      "JOIN",
      "course",
      "AS",
      "T2",
      "ON",
      "T1.course_id",
      "=",
      "T2.course_id",
      "WHERE",
      "T2.title",
      "=",
      "'Mobile",
      "Computing",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "course",
      "where",
      "course_id",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "prereq_id",
      "from",
      "prereq",
      "as",
      "t1",
      "join",
      "course",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "course_id",
      "=",
      "t2",
      ".",
      "course_id",
      "where",
      "t2",
      ".",
      "title",
      "=",
      "value",
      ")"
    ],
    "question": "What is the title of the course that is a prerequisite for Mobile Computing?",
    "question_toks": [
      "What",
      "is",
      "the",
      "title",
      "of",
      "the",
      "course",
      "that",
      "is",
      "a",
      "prerequisite",
      "for",
      "Mobile",
      "Computing",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  10
                ],
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      45,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    7,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      46,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    8,
                    false
                  ],
                  null
                ],
                "\"Mobile Computing\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "instructor",
      "WHERE",
      "id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "id",
      "FROM",
      "teaches",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "instructor",
      "where",
      "id",
      "not",
      "in",
      "(",
      "select",
      "id",
      "from",
      "teaches",
      ")"
    ],
    "question": "Find the name of instructors who didn't teach any courses?",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "instructors",
      "who",
      "did",
      "n't",
      "teach",
      "any",
      "courses",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  5
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      22,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "instructor",
      "WHERE",
      "id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "id",
      "FROM",
      "teaches",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "instructor",
      "where",
      "id",
      "not",
      "in",
      "(",
      "select",
      "id",
      "from",
      "teaches",
      ")"
    ],
    "question": "What are the names of instructors who didn't teach?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "instructors",
      "who",
      "did",
      "n't",
      "teach",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  5
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      22,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches WHERE semester  =  'Spring')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "instructor",
      "WHERE",
      "id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "id",
      "FROM",
      "teaches",
      "WHERE",
      "semester",
      "=",
      "'Spring",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "instructor",
      "where",
      "id",
      "not",
      "in",
      "(",
      "select",
      "id",
      "from",
      "teaches",
      "where",
      "semester",
      "=",
      "value",
      ")"
    ],
    "question": "Find the names of instructors who didn't each any courses in any Spring semester.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "instructors",
      "who",
      "did",
      "n't",
      "each",
      "any",
      "courses",
      "in",
      "any",
      "Spring",
      "semester",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  5
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      22,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    25,
                    false
                  ],
                  null
                ],
                "\"Spring\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches WHERE semester  =  'Spring')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "instructor",
      "WHERE",
      "id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "id",
      "FROM",
      "teaches",
      "WHERE",
      "semester",
      "=",
      "'Spring",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "instructor",
      "where",
      "id",
      "not",
      "in",
      "(",
      "select",
      "id",
      "from",
      "teaches",
      "where",
      "semester",
      "=",
      "value",
      ")"
    ],
    "question": "What are the names of instructors who didn't teach courses in the Spring?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "instructors",
      "who",
      "did",
      "n't",
      "teach",
      "courses",
      "in",
      "the",
      "Spring",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  5
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      22,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    25,
                    false
                  ],
                  null
                ],
                "\"Spring\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT name FROM student WHERE id NOT IN (SELECT T1.id FROM takes AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.dept_name  =  'Biology')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "student",
      "WHERE",
      "id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "T1.id",
      "FROM",
      "takes",
      "AS",
      "T1",
      "JOIN",
      "course",
      "AS",
      "T2",
      "ON",
      "T1.course_id",
      "=",
      "T2.course_id",
      "WHERE",
      "T2.dept_name",
      "=",
      "'Biology",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "student",
      "where",
      "id",
      "not",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "id",
      "from",
      "takes",
      "as",
      "t1",
      "join",
      "course",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "course_id",
      "=",
      "t2",
      ".",
      "course_id",
      "where",
      "t2",
      ".",
      "dept_name",
      "=",
      "value",
      ")"
    ],
    "question": "Find the name of students who didn't take any course from Biology department.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "students",
      "who",
      "did",
      "n't",
      "take",
      "any",
      "course",
      "from",
      "Biology",
      "department",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  7
                ],
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      32,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    7,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      31,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    9,
                    false
                  ],
                  null
                ],
                "\"Biology\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT name FROM student WHERE id NOT IN (SELECT T1.id FROM takes AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.dept_name  =  'Biology')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "student",
      "WHERE",
      "id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "T1.id",
      "FROM",
      "takes",
      "AS",
      "T1",
      "JOIN",
      "course",
      "AS",
      "T2",
      "ON",
      "T1.course_id",
      "=",
      "T2.course_id",
      "WHERE",
      "T2.dept_name",
      "=",
      "'Biology",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "student",
      "where",
      "id",
      "not",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "id",
      "from",
      "takes",
      "as",
      "t1",
      "join",
      "course",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "course_id",
      "=",
      "t2",
      ".",
      "course_id",
      "where",
      "t2",
      ".",
      "dept_name",
      "=",
      "value",
      ")"
    ],
    "question": "What are the names of students who haven't taken any Biology courses?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "students",
      "who",
      "have",
      "n't",
      "taken",
      "any",
      "Biology",
      "courses",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  7
                ],
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      32,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    7,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      31,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    9,
                    false
                  ],
                  null
                ],
                "\"Biology\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT name ,  salary FROM instructor WHERE salary  <  (SELECT avg(salary) FROM instructor WHERE dept_name  =  'Physics')",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "instructor",
      "WHERE",
      "salary",
      "<",
      "(",
      "SELECT",
      "avg",
      "(",
      "salary",
      ")",
      "FROM",
      "instructor",
      "WHERE",
      "dept_name",
      "=",
      "'Physics",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "instructor",
      "where",
      "salary",
      "<",
      "(",
      "select",
      "avg",
      "(",
      "salary",
      ")",
      "from",
      "instructor",
      "where",
      "dept_name",
      "=",
      "value",
      ")"
    ],
    "question": "Find the name and salary of instructors whose salary is below the average salary of the instructors in the Physics department.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "and",
      "salary",
      "of",
      "instructors",
      "whose",
      "salary",
      "is",
      "below",
      "the",
      "average",
      "salary",
      "of",
      "the",
      "instructors",
      "in",
      "the",
      "Physics",
      "department",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      14,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    13,
                    false
                  ],
                  null
                ],
                "\"Physics\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT name ,  salary FROM instructor WHERE salary  <  (SELECT avg(salary) FROM instructor WHERE dept_name  =  'Physics')",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "instructor",
      "WHERE",
      "salary",
      "<",
      "(",
      "SELECT",
      "avg",
      "(",
      "salary",
      ")",
      "FROM",
      "instructor",
      "WHERE",
      "dept_name",
      "=",
      "'Physics",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "instructor",
      "where",
      "salary",
      "<",
      "(",
      "select",
      "avg",
      "(",
      "salary",
      ")",
      "from",
      "instructor",
      "where",
      "dept_name",
      "=",
      "value",
      ")"
    ],
    "question": "What are the names and salaries for instructors who earn less than the average salary of instructors in the Physics department?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "salaries",
      "for",
      "instructors",
      "who",
      "earn",
      "less",
      "than",
      "the",
      "average",
      "salary",
      "of",
      "instructors",
      "in",
      "the",
      "Physics",
      "department",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      14,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    13,
                    false
                  ],
                  null
                ],
                "\"Physics\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "instructor",
      "WHERE",
      "dept_name",
      "=",
      "'Comp",
      ".",
      "Sci",
      ".",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "instructor",
      "where",
      "dept_name",
      "=",
      "value"
    ],
    "question": "Find the names of all instructors in computer science department",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "all",
      "instructors",
      "in",
      "computer",
      "science",
      "department"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"Comp. Sci.\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "instructor",
      "WHERE",
      "dept_name",
      "=",
      "'Comp",
      ".",
      "Sci",
      ".",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "instructor",
      "where",
      "dept_name",
      "=",
      "value"
    ],
    "question": "What are the names of all instructors in the Comp. Sci. department?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "instructors",
      "in",
      "the",
      "Comp",
      ".",
      "Sci",
      ".",
      "department",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"Comp. Sci.\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "instructor",
      "WHERE",
      "dept_name",
      "=",
      "'Comp",
      ".",
      "Sci",
      ".",
      "'",
      "AND",
      "salary",
      ">",
      "80000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "instructor",
      "where",
      "dept_name",
      "=",
      "value",
      "and",
      "salary",
      ">",
      "value"
    ],
    "question": "Find the names of all instructors in Comp. Sci. department with salary > 80000.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "all",
      "instructors",
      "in",
      "Comp",
      ".",
      "Sci",
      ".",
      "department",
      "with",
      "salary",
      ">",
      "80000",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"Comp. Sci.\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          80000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "instructor",
      "WHERE",
      "dept_name",
      "=",
      "'Comp",
      ".",
      "Sci",
      ".",
      "'",
      "AND",
      "salary",
      ">",
      "80000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "instructor",
      "where",
      "dept_name",
      "=",
      "value",
      "and",
      "salary",
      ">",
      "value"
    ],
    "question": "What are the names of the instructors in the Comp. Sci. department who earn more than 80000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "instructors",
      "in",
      "the",
      "Comp",
      ".",
      "Sci",
      ".",
      "department",
      "who",
      "earn",
      "more",
      "than",
      "80000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"Comp. Sci.\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          80000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT name FROM instructor WHERE name LIKE '%dar%'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "instructor",
      "WHERE",
      "name",
      "LIKE",
      "'",
      "%",
      "dar",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "instructor",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "Find the names of all instructors whose name includes the substring \u201cdar\u201d.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "all",
      "instructors",
      "whose",
      "name",
      "includes",
      "the",
      "substring",
      "\u201cdar\u201d",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"%dar%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT name FROM instructor WHERE name LIKE '%dar%'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "instructor",
      "WHERE",
      "name",
      "LIKE",
      "'",
      "%",
      "dar",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "instructor",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "What are the names of all instructors with names that include \"dar\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "instructors",
      "with",
      "names",
      "that",
      "include",
      "``",
      "dar",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"%dar%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT COUNT (DISTINCT ID) FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "ID",
      ")",
      "FROM",
      "teaches",
      "WHERE",
      "semester",
      "=",
      "'Spring",
      "'",
      "AND",
      "YEAR",
      "=",
      "2010"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "id",
      ")",
      "from",
      "teaches",
      "where",
      "semester",
      "=",
      "value",
      "and",
      "year",
      "=",
      "value"
    ],
    "question": "Find the total number of instructors who teach a course in the Spring 2010 semester.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "number",
      "of",
      "instructors",
      "who",
      "teach",
      "a",
      "course",
      "in",
      "the",
      "Spring",
      "2010",
      "semester",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                22,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"Spring\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT COUNT (DISTINCT ID) FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "ID",
      ")",
      "FROM",
      "teaches",
      "WHERE",
      "semester",
      "=",
      "'Spring",
      "'",
      "AND",
      "YEAR",
      "=",
      "2010"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "id",
      ")",
      "from",
      "teaches",
      "where",
      "semester",
      "=",
      "value",
      "and",
      "year",
      "=",
      "value"
    ],
    "question": "How many instructors teach a course in the Spring of 2010?",
    "question_toks": [
      "How",
      "many",
      "instructors",
      "teach",
      "a",
      "course",
      "in",
      "the",
      "Spring",
      "of",
      "2010",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                22,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"Spring\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT name FROM instructor WHERE salary  >  (SELECT min(salary) FROM instructor WHERE dept_name  =  'Biology')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "instructor",
      "WHERE",
      "salary",
      ">",
      "(",
      "SELECT",
      "min",
      "(",
      "salary",
      ")",
      "FROM",
      "instructor",
      "WHERE",
      "dept_name",
      "=",
      "'Biology",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "instructor",
      "where",
      "salary",
      ">",
      "(",
      "select",
      "min",
      "(",
      "salary",
      ")",
      "from",
      "instructor",
      "where",
      "dept_name",
      "=",
      "value",
      ")"
    ],
    "question": "Find names of instructors with salary greater than that of some (at least one) instructor in the Biology department.",
    "question_toks": [
      "Find",
      "names",
      "of",
      "instructors",
      "with",
      "salary",
      "greater",
      "than",
      "that",
      "of",
      "some",
      "(",
      "at",
      "least",
      "one",
      ")",
      "instructor",
      "in",
      "the",
      "Biology",
      "department",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      14,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    13,
                    false
                  ],
                  null
                ],
                "\"Biology\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT name FROM instructor WHERE salary  >  (SELECT min(salary) FROM instructor WHERE dept_name  =  'Biology')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "instructor",
      "WHERE",
      "salary",
      ">",
      "(",
      "SELECT",
      "min",
      "(",
      "salary",
      ")",
      "FROM",
      "instructor",
      "WHERE",
      "dept_name",
      "=",
      "'Biology",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "instructor",
      "where",
      "salary",
      ">",
      "(",
      "select",
      "min",
      "(",
      "salary",
      ")",
      "from",
      "instructor",
      "where",
      "dept_name",
      "=",
      "value",
      ")"
    ],
    "question": "What are the names of instructors who earn more than at least one instructor from the Biology department?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "instructors",
      "who",
      "earn",
      "more",
      "than",
      "at",
      "least",
      "one",
      "instructor",
      "from",
      "the",
      "Biology",
      "department",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      14,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    13,
                    false
                  ],
                  null
                ],
                "\"Biology\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT name FROM instructor WHERE salary  >  (SELECT max(salary) FROM instructor WHERE dept_name  =  'Biology')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "instructor",
      "WHERE",
      "salary",
      ">",
      "(",
      "SELECT",
      "max",
      "(",
      "salary",
      ")",
      "FROM",
      "instructor",
      "WHERE",
      "dept_name",
      "=",
      "'Biology",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "instructor",
      "where",
      "salary",
      ">",
      "(",
      "select",
      "max",
      "(",
      "salary",
      ")",
      "from",
      "instructor",
      "where",
      "dept_name",
      "=",
      "value",
      ")"
    ],
    "question": "Find the names of all instructors whose salary is greater than the salary of all instructors in the Biology department.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "all",
      "instructors",
      "whose",
      "salary",
      "is",
      "greater",
      "than",
      "the",
      "salary",
      "of",
      "all",
      "instructors",
      "in",
      "the",
      "Biology",
      "department",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      14,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    13,
                    false
                  ],
                  null
                ],
                "\"Biology\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT name FROM instructor WHERE salary  >  (SELECT max(salary) FROM instructor WHERE dept_name  =  'Biology')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "instructor",
      "WHERE",
      "salary",
      ">",
      "(",
      "SELECT",
      "max",
      "(",
      "salary",
      ")",
      "FROM",
      "instructor",
      "WHERE",
      "dept_name",
      "=",
      "'Biology",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "instructor",
      "where",
      "salary",
      ">",
      "(",
      "select",
      "max",
      "(",
      "salary",
      ")",
      "from",
      "instructor",
      "where",
      "dept_name",
      "=",
      "value",
      ")"
    ],
    "question": "What are the names of all instructors with a higher salary than any of the instructors in the Biology department?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "instructors",
      "with",
      "a",
      "higher",
      "salary",
      "than",
      "any",
      "of",
      "the",
      "instructors",
      "in",
      "the",
      "Biology",
      "department",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      14,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    13,
                    false
                  ],
                  null
                ],
                "\"Biology\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "debate",
    "query": "SELECT count(*) FROM debate",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "debate"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "debate"
    ],
    "question": "How many debates are there?",
    "question_toks": [
      "How",
      "many",
      "debates",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "debate",
    "query": "SELECT Date ,  Venue FROM debate",
    "query_toks": [
      "SELECT",
      "Date",
      ",",
      "Venue",
      "FROM",
      "debate"
    ],
    "query_toks_no_value": [
      "select",
      "date",
      ",",
      "venue",
      "from",
      "debate"
    ],
    "question": "What are the date and venue of each debate?",
    "question_toks": [
      "What",
      "are",
      "the",
      "date",
      "and",
      "venue",
      "of",
      "each",
      "debate",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "debate",
    "query": "SELECT Date FROM debate WHERE Num_of_Audience  >  150",
    "query_toks": [
      "SELECT",
      "Date",
      "FROM",
      "debate",
      "WHERE",
      "Num_of_Audience",
      ">",
      "150"
    ],
    "query_toks_no_value": [
      "select",
      "date",
      "from",
      "debate",
      "where",
      "num_of_audience",
      ">",
      "value"
    ],
    "question": "List the dates of debates with number of audience bigger than 150",
    "question_toks": [
      "List",
      "the",
      "dates",
      "of",
      "debates",
      "with",
      "number",
      "of",
      "audience",
      "bigger",
      "than",
      "150"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          150.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "debate",
    "query": "SELECT Name FROM  people WHERE Age  =  35 OR Age  =  36",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "people",
      "WHERE",
      "Age",
      "=",
      "35",
      "OR",
      "Age",
      "=",
      "36"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "people",
      "where",
      "age",
      "=",
      "value",
      "or",
      "age",
      "=",
      "value"
    ],
    "question": "Show the names of people aged either 35 or 36.",
    "question_toks": [
      "Show",
      "the",
      "names",
      "of",
      "people",
      "aged",
      "either",
      "35",
      "or",
      "36",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          35.0,
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          36.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "debate",
    "query": "SELECT Name FROM people WHERE People_id NOT IN (SELECT Affirmative FROM debate_people)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "people",
      "WHERE",
      "People_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Affirmative",
      "FROM",
      "debate_people",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "people",
      "where",
      "people_id",
      "not",
      "in",
      "(",
      "select",
      "affirmative",
      "from",
      "debate_people",
      ")"
    ],
    "question": "List the names of people that have not been on the affirmative side of debates.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "people",
      "that",
      "have",
      "not",
      "been",
      "on",
      "the",
      "affirmative",
      "side",
      "of",
      "debates",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      11,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_and_eClaims",
    "query": "SELECT sum(amount_piad) ,  avg(amount_piad) FROM claim_headers",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "amount_piad",
      ")",
      ",",
      "avg",
      "(",
      "amount_piad",
      ")",
      "FROM",
      "claim_headers"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "amount_piad",
      ")",
      ",",
      "avg",
      "(",
      "amount_piad",
      ")",
      "from",
      "claim_headers"
    ],
    "question": "Find the total and average amount paid in claim headers.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "and",
      "average",
      "amount",
      "paid",
      "in",
      "claim",
      "headers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_and_eClaims",
    "query": "SELECT sum(amount_piad) ,  avg(amount_piad) FROM claim_headers",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "amount_piad",
      ")",
      ",",
      "avg",
      "(",
      "amount_piad",
      ")",
      "FROM",
      "claim_headers"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "amount_piad",
      ")",
      ",",
      "avg",
      "(",
      "amount_piad",
      ")",
      "from",
      "claim_headers"
    ],
    "question": "What are the total amount and average amount paid in claim headers?",
    "question_toks": [
      "What",
      "are",
      "the",
      "total",
      "amount",
      "and",
      "average",
      "amount",
      "paid",
      "in",
      "claim",
      "headers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_and_eClaims",
    "query": "SELECT count(*) FROM claims_processing_stages",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "claims_processing_stages"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "claims_processing_stages"
    ],
    "question": "How many claim processing stages are there in total?",
    "question_toks": [
      "How",
      "many",
      "claim",
      "processing",
      "stages",
      "are",
      "there",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_and_eClaims",
    "query": "SELECT count(*) FROM claims_processing_stages",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "claims_processing_stages"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "claims_processing_stages"
    ],
    "question": "Find the number of distinct stages in claim processing.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "distinct",
      "stages",
      "in",
      "claim",
      "processing",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_and_eClaims",
    "query": "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Diana%\"",
    "query_toks": [
      "SELECT",
      "customer_details",
      "FROM",
      "customers",
      "WHERE",
      "customer_details",
      "LIKE",
      "``",
      "%",
      "Diana",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_details",
      "from",
      "customers",
      "where",
      "customer_details",
      "like",
      "value"
    ],
    "question": "Find the names of customers whose name contains \"Diana\".",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "customers",
      "whose",
      "name",
      "contains",
      "``",
      "Diana",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"%Diana%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_and_eClaims",
    "query": "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Diana%\"",
    "query_toks": [
      "SELECT",
      "customer_details",
      "FROM",
      "customers",
      "WHERE",
      "customer_details",
      "LIKE",
      "``",
      "%",
      "Diana",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_details",
      "from",
      "customers",
      "where",
      "customer_details",
      "like",
      "value"
    ],
    "question": "Which customers have the substring \"Diana\" in their names? Return the customer details.",
    "question_toks": [
      "Which",
      "customers",
      "have",
      "the",
      "substring",
      "``",
      "Diana",
      "''",
      "in",
      "their",
      "names",
      "?",
      "Return",
      "the",
      "customer",
      "details",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"%Diana%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_and_eClaims",
    "query": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name  =  \"Open\"",
    "query_toks": [
      "SELECT",
      "claim_status_description",
      "FROM",
      "claims_processing_stages",
      "WHERE",
      "claim_status_name",
      "=",
      "``",
      "Open",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "claim_status_description",
      "from",
      "claims_processing_stages",
      "where",
      "claim_status_name",
      "=",
      "value"
    ],
    "question": "What is the description of the claim status \"Open\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "description",
      "of",
      "the",
      "claim",
      "status",
      "``",
      "Open",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Open\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_and_eClaims",
    "query": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name  =  \"Open\"",
    "query_toks": [
      "SELECT",
      "claim_status_description",
      "FROM",
      "claims_processing_stages",
      "WHERE",
      "claim_status_name",
      "=",
      "``",
      "Open",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "claim_status_description",
      "from",
      "claims_processing_stages",
      "where",
      "claim_status_name",
      "=",
      "value"
    ],
    "question": "Find the description of the claim status \"Open\".",
    "question_toks": [
      "Find",
      "the",
      "description",
      "of",
      "the",
      "claim",
      "status",
      "``",
      "Open",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Open\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_and_eClaims",
    "query": "SELECT count(DISTINCT claim_outcome_code) FROM claims_processing",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "claim_outcome_code",
      ")",
      "FROM",
      "claims_processing"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "claim_outcome_code",
      ")",
      "from",
      "claims_processing"
    ],
    "question": "How many distinct claim outcome codes are there?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "claim",
      "outcome",
      "codes",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                28,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_and_eClaims",
    "query": "SELECT count(DISTINCT claim_outcome_code) FROM claims_processing",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "claim_outcome_code",
      ")",
      "FROM",
      "claims_processing"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "claim_outcome_code",
      ")",
      "from",
      "claims_processing"
    ],
    "question": "Count the number of distinct claim outcome codes.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "distinct",
      "claim",
      "outcome",
      "codes",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                28,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT count(*) FROM Accounts",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Accounts"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "accounts"
    ],
    "question": "Show the number of accounts.",
    "question_toks": [
      "Show",
      "the",
      "number",
      "of",
      "accounts",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT count(*) FROM Accounts",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Accounts"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "accounts"
    ],
    "question": "How many accounts are there?",
    "question_toks": [
      "How",
      "many",
      "accounts",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT count(DISTINCT customer_id) FROM Accounts",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "customer_id",
      ")",
      "FROM",
      "Accounts"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "customer_id",
      ")",
      "from",
      "accounts"
    ],
    "question": "How many customers have opened an account?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "have",
      "opened",
      "an",
      "account",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                21,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT count(DISTINCT customer_id) FROM Accounts",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "customer_id",
      ")",
      "FROM",
      "Accounts"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "customer_id",
      ")",
      "from",
      "accounts"
    ],
    "question": "Count the number of customers who have an account.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "customers",
      "who",
      "have",
      "an",
      "account",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                21,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT account_id ,  date_account_opened ,  account_name ,  other_account_details FROM Accounts",
    "query_toks": [
      "SELECT",
      "account_id",
      ",",
      "date_account_opened",
      ",",
      "account_name",
      ",",
      "other_account_details",
      "FROM",
      "Accounts"
    ],
    "query_toks_no_value": [
      "select",
      "account_id",
      ",",
      "date_account_opened",
      ",",
      "account_name",
      ",",
      "other_account_details",
      "from",
      "accounts"
    ],
    "question": "Show the id, the date of account opened, the account name, and other account detail for all accounts.",
    "question_toks": [
      "Show",
      "the",
      "id",
      ",",
      "the",
      "date",
      "of",
      "account",
      "opened",
      ",",
      "the",
      "account",
      "name",
      ",",
      "and",
      "other",
      "account",
      "detail",
      "for",
      "all",
      "accounts",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT account_id ,  date_account_opened ,  account_name ,  other_account_details FROM Accounts",
    "query_toks": [
      "SELECT",
      "account_id",
      ",",
      "date_account_opened",
      ",",
      "account_name",
      ",",
      "other_account_details",
      "FROM",
      "Accounts"
    ],
    "query_toks_no_value": [
      "select",
      "account_id",
      ",",
      "date_account_opened",
      ",",
      "account_name",
      ",",
      "other_account_details",
      "from",
      "accounts"
    ],
    "question": "What are the ids, date opened, name, and other details for all accounts?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      ",",
      "date",
      "opened",
      ",",
      "name",
      ",",
      "and",
      "other",
      "details",
      "for",
      "all",
      "accounts",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers",
      "WHERE",
      "customer_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "customer_id",
      "FROM",
      "Accounts",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers",
      "where",
      "customer_id",
      "not",
      "in",
      "(",
      "select",
      "customer_id",
      "from",
      "accounts",
      ")"
    ],
    "question": "How many customers don't have an account?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "do",
      "n't",
      "have",
      "an",
      "account",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      21,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers",
      "WHERE",
      "customer_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "customer_id",
      "FROM",
      "Accounts",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers",
      "where",
      "customer_id",
      "not",
      "in",
      "(",
      "select",
      "customer_id",
      "from",
      "accounts",
      ")"
    ],
    "question": "Count the number of customers who do not have an account.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "customers",
      "who",
      "do",
      "not",
      "have",
      "an",
      "account",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      21,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT count(*) FROM Customers",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers"
    ],
    "question": "Show the number of customers.",
    "question_toks": [
      "Show",
      "the",
      "number",
      "of",
      "customers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT count(*) FROM Customers",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers"
    ],
    "question": "Count the number of customers.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "customers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT count(*) FROM Financial_transactions",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Financial_transactions"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "financial_transactions"
    ],
    "question": "How many transactions do we have?",
    "question_toks": [
      "How",
      "many",
      "transactions",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT count(*) FROM Financial_transactions",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Financial_transactions"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "financial_transactions"
    ],
    "question": "Count the number of transactions.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "transactions",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT count(*) ,  account_id FROM Financial_transactions",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "account_id",
      "FROM",
      "Financial_transactions"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "account_id",
      "from",
      "financial_transactions"
    ],
    "question": "How many transaction does each account have? Show the number and account id.",
    "question_toks": [
      "How",
      "many",
      "transaction",
      "does",
      "each",
      "account",
      "have",
      "?",
      "Show",
      "the",
      "number",
      "and",
      "account",
      "id",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT count(*) ,  account_id FROM Financial_transactions",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "account_id",
      "FROM",
      "Financial_transactions"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "account_id",
      "from",
      "financial_transactions"
    ],
    "question": "Count the number of financial transactions that correspond to each account id.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "financial",
      "transactions",
      "that",
      "correspond",
      "to",
      "each",
      "account",
      "id",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT avg(transaction_amount) ,  min(transaction_amount) ,  max(transaction_amount) ,   sum(transaction_amount) FROM Financial_transactions",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "transaction_amount",
      ")",
      ",",
      "min",
      "(",
      "transaction_amount",
      ")",
      ",",
      "max",
      "(",
      "transaction_amount",
      ")",
      ",",
      "sum",
      "(",
      "transaction_amount",
      ")",
      "FROM",
      "Financial_transactions"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "transaction_amount",
      ")",
      ",",
      "min",
      "(",
      "transaction_amount",
      ")",
      ",",
      "max",
      "(",
      "transaction_amount",
      ")",
      ",",
      "sum",
      "(",
      "transaction_amount",
      ")",
      "from",
      "financial_transactions"
    ],
    "question": "What is the average, minimum, maximum, and total transaction amount?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      ",",
      "minimum",
      ",",
      "maximum",
      ",",
      "and",
      "total",
      "transaction",
      "amount",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                40,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                40,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                40,
                false
              ],
              null
            ]
          ],
          [
            4,
            [
              0,
              [
                0,
                40,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT avg(transaction_amount) ,  min(transaction_amount) ,  max(transaction_amount) ,   sum(transaction_amount) FROM Financial_transactions",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "transaction_amount",
      ")",
      ",",
      "min",
      "(",
      "transaction_amount",
      ")",
      ",",
      "max",
      "(",
      "transaction_amount",
      ")",
      ",",
      "sum",
      "(",
      "transaction_amount",
      ")",
      "FROM",
      "Financial_transactions"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "transaction_amount",
      ")",
      ",",
      "min",
      "(",
      "transaction_amount",
      ")",
      ",",
      "max",
      "(",
      "transaction_amount",
      ")",
      ",",
      "sum",
      "(",
      "transaction_amount",
      ")",
      "from",
      "financial_transactions"
    ],
    "question": "Return the average, minimum, maximum, and total transaction amounts.",
    "question_toks": [
      "Return",
      "the",
      "average",
      ",",
      "minimum",
      ",",
      "maximum",
      ",",
      "and",
      "total",
      "transaction",
      "amounts",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                40,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                40,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                40,
                false
              ],
              null
            ]
          ],
          [
            4,
            [
              0,
              [
                0,
                40,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT transaction_id FROM Financial_transactions WHERE transaction_amount  >  (SELECT avg(transaction_amount) FROM Financial_transactions)",
    "query_toks": [
      "SELECT",
      "transaction_id",
      "FROM",
      "Financial_transactions",
      "WHERE",
      "transaction_amount",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "transaction_amount",
      ")",
      "FROM",
      "Financial_transactions",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "transaction_id",
      "from",
      "financial_transactions",
      "where",
      "transaction_amount",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "transaction_amount",
      ")",
      "from",
      "financial_transactions",
      ")"
    ],
    "question": "Show ids for all transactions whose amounts are greater than the average.",
    "question_toks": [
      "Show",
      "ids",
      "for",
      "all",
      "transactions",
      "whose",
      "amounts",
      "are",
      "greater",
      "than",
      "the",
      "average",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              40,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  6
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      40,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT transaction_id FROM Financial_transactions WHERE transaction_amount  >  (SELECT avg(transaction_amount) FROM Financial_transactions)",
    "query_toks": [
      "SELECT",
      "transaction_id",
      "FROM",
      "Financial_transactions",
      "WHERE",
      "transaction_amount",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "transaction_amount",
      ")",
      "FROM",
      "Financial_transactions",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "transaction_id",
      "from",
      "financial_transactions",
      "where",
      "transaction_amount",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "transaction_amount",
      ")",
      "from",
      "financial_transactions",
      ")"
    ],
    "question": "What are the ids for transactions that have an amount greater than the average amount of a transaction?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "for",
      "transactions",
      "that",
      "have",
      "an",
      "amount",
      "greater",
      "than",
      "the",
      "average",
      "amount",
      "of",
      "a",
      "transaction",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              40,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  6
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      40,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT count(*) FROM Invoices",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Invoices"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices"
    ],
    "question": "How many invoices do we have?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT count(*) FROM Invoices",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Invoices"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices"
    ],
    "question": "Count the number of invoices.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "invoices",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT count(*) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "products",
      "WHERE",
      "product_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "product_id",
      "FROM",
      "Order_items",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "products",
      "where",
      "product_id",
      "not",
      "in",
      "(",
      "select",
      "product_id",
      "from",
      "order_items",
      ")"
    ],
    "question": "How many products were not included in any order?",
    "question_toks": [
      "How",
      "many",
      "products",
      "were",
      "not",
      "included",
      "in",
      "any",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              28,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  7
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      45,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT count(*) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "products",
      "WHERE",
      "product_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "product_id",
      "FROM",
      "Order_items",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "products",
      "where",
      "product_id",
      "not",
      "in",
      "(",
      "select",
      "product_id",
      "from",
      "order_items",
      ")"
    ],
    "question": "Count the number of products that were never ordered.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "products",
      "that",
      "were",
      "never",
      "ordered",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              28,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  7
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      45,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wedding",
    "query": "SELECT count(*) FROM Church WHERE Open_Date  <  1850",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Church",
      "WHERE",
      "Open_Date",
      "<",
      "1850"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "church",
      "where",
      "open_date",
      "<",
      "value"
    ],
    "question": "How many churches opened before 1850 are there?",
    "question_toks": [
      "How",
      "many",
      "churches",
      "opened",
      "before",
      "1850",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          1850.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wedding",
    "query": "SELECT name ,  open_date ,  organized_by FROM Church",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "open_date",
      ",",
      "organized_by",
      "FROM",
      "Church"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "open_date",
      ",",
      "organized_by",
      "from",
      "church"
    ],
    "question": "Show the name, open date, and organizer for all churches.",
    "question_toks": [
      "Show",
      "the",
      "name",
      ",",
      "open",
      "date",
      ",",
      "and",
      "organizer",
      "for",
      "all",
      "churches",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wedding",
    "query": "SELECT organized_by ,  name FROM church WHERE open_date BETWEEN 1830 AND 1840",
    "query_toks": [
      "SELECT",
      "organized_by",
      ",",
      "name",
      "FROM",
      "church",
      "WHERE",
      "open_date",
      "BETWEEN",
      "1830",
      "AND",
      "1840"
    ],
    "query_toks_no_value": [
      "select",
      "organized_by",
      ",",
      "name",
      "from",
      "church",
      "where",
      "open_date",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "Show the organizer and name for churches that opened between 1830 and 1840.",
    "question_toks": [
      "Show",
      "the",
      "organizer",
      "and",
      "name",
      "for",
      "churches",
      "that",
      "opened",
      "between",
      "1830",
      "and",
      "1840",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          1830.0,
          1840.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wedding",
    "query": "SELECT count(*) FROM people WHERE is_male  =  'F' AND age  >  30",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "people",
      "WHERE",
      "is_male",
      "=",
      "'F",
      "'",
      "AND",
      "age",
      ">",
      "30"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "people",
      "where",
      "is_male",
      "=",
      "value",
      "and",
      "age",
      ">",
      "value"
    ],
    "question": "How many female people are older than 30 in our record?",
    "question_toks": [
      "How",
      "many",
      "female",
      "people",
      "are",
      "older",
      "than",
      "30",
      "in",
      "our",
      "record",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"F\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          30.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wedding",
    "query": "SELECT min(age) ,  max(age) ,  avg(age) FROM people",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "age",
      ")",
      ",",
      "max",
      "(",
      "age",
      ")",
      ",",
      "avg",
      "(",
      "age",
      ")",
      "FROM",
      "people"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "age",
      ")",
      ",",
      "max",
      "(",
      "age",
      ")",
      ",",
      "avg",
      "(",
      "age",
      ")",
      "from",
      "people"
    ],
    "question": "Show the minimum, maximum, and average age for all people.",
    "question_toks": [
      "Show",
      "the",
      "minimum",
      ",",
      "maximum",
      ",",
      "and",
      "average",
      "age",
      "for",
      "all",
      "people",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wedding",
    "query": "SELECT name ,  country FROM people WHERE age  <  (SELECT avg(age) FROM people)",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "country",
      "FROM",
      "people",
      "WHERE",
      "age",
      "<",
      "(",
      "SELECT",
      "avg",
      "(",
      "age",
      ")",
      "FROM",
      "people",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "country",
      "from",
      "people",
      "where",
      "age",
      "<",
      "(",
      "select",
      "avg",
      "(",
      "age",
      ")",
      "from",
      "people",
      ")"
    ],
    "question": "Show the name and country for all people whose age is smaller than the average.",
    "question_toks": [
      "Show",
      "the",
      "name",
      "and",
      "country",
      "for",
      "all",
      "people",
      "whose",
      "age",
      "is",
      "smaller",
      "than",
      "the",
      "average",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wedding",
    "query": "SELECT name ,  age FROM people WHERE is_male  =  'T' AND people_id NOT IN (SELECT male_id FROM wedding)",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "age",
      "FROM",
      "people",
      "WHERE",
      "is_male",
      "=",
      "'T",
      "'",
      "AND",
      "people_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "male_id",
      "FROM",
      "wedding",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "age",
      "from",
      "people",
      "where",
      "is_male",
      "=",
      "value",
      "and",
      "people_id",
      "not",
      "in",
      "(",
      "select",
      "male_id",
      "from",
      "wedding",
      ")"
    ],
    "question": "Show the name and age for all male people who don't have a wedding.",
    "question_toks": [
      "Show",
      "the",
      "name",
      "and",
      "age",
      "for",
      "all",
      "male",
      "people",
      "who",
      "do",
      "n't",
      "have",
      "a",
      "wedding",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"T\"",
          null
        ],
        "and",
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      12,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wedding",
    "query": "SELECT count(*) FROM wedding WHERE YEAR  =  2016",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "wedding",
      "WHERE",
      "YEAR",
      "=",
      "2016"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "wedding",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "How many weddings are there in year 2016?",
    "question_toks": [
      "How",
      "many",
      "weddings",
      "are",
      "there",
      "in",
      "year",
      "2016",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2016.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wedding",
    "query": "SELECT COUNT (DISTINCT church_id) FROM wedding WHERE YEAR  =  2016",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "church_id",
      ")",
      "FROM",
      "wedding",
      "WHERE",
      "YEAR",
      "=",
      "2016"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "church_id",
      ")",
      "from",
      "wedding",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "How many churches have a wedding in year 2016?",
    "question_toks": [
      "How",
      "many",
      "churches",
      "have",
      "a",
      "wedding",
      "in",
      "year",
      "2016",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2016.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "theme_gallery",
    "query": "SELECT count(*) FROM artist",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "artist"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "artist"
    ],
    "question": "How many artists do we have?",
    "question_toks": [
      "How",
      "many",
      "artists",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "theme_gallery",
    "query": "SELECT count(*) FROM artist",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "artist"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "artist"
    ],
    "question": "Count the number of artists.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "artists",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "theme_gallery",
    "query": "SELECT name ,  year_join FROM artist WHERE country != 'United States'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "year_join",
      "FROM",
      "artist",
      "WHERE",
      "country",
      "!",
      "=",
      "'United",
      "States",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "year_join",
      "from",
      "artist",
      "where",
      "country",
      "!",
      "=",
      "value"
    ],
    "question": "Show all artist names and the year joined who are not from United States.",
    "question_toks": [
      "Show",
      "all",
      "artist",
      "names",
      "and",
      "the",
      "year",
      "joined",
      "who",
      "are",
      "not",
      "from",
      "United",
      "States",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"United States\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "theme_gallery",
    "query": "SELECT name ,  year_join FROM artist WHERE country != 'United States'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "year_join",
      "FROM",
      "artist",
      "WHERE",
      "country",
      "!",
      "=",
      "'United",
      "States",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "year_join",
      "from",
      "artist",
      "where",
      "country",
      "!",
      "=",
      "value"
    ],
    "question": "What are the names and year of joining for artists that do not have the country \"United States\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "year",
      "of",
      "joining",
      "for",
      "artists",
      "that",
      "do",
      "not",
      "have",
      "the",
      "country",
      "``",
      "United",
      "States",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"United States\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "theme_gallery",
    "query": "SELECT count(*) FROM artist WHERE age  >  46 AND year_join  >  1990",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "artist",
      "WHERE",
      "age",
      ">",
      "46",
      "AND",
      "year_join",
      ">",
      "1990"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "artist",
      "where",
      "age",
      ">",
      "value",
      "and",
      "year_join",
      ">",
      "value"
    ],
    "question": "How many artists are above age 46 and joined after 1990?",
    "question_toks": [
      "How",
      "many",
      "artists",
      "are",
      "above",
      "age",
      "46",
      "and",
      "joined",
      "after",
      "1990",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          46.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          1990.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "theme_gallery",
    "query": "SELECT count(*) FROM artist WHERE age  >  46 AND year_join  >  1990",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "artist",
      "WHERE",
      "age",
      ">",
      "46",
      "AND",
      "year_join",
      ">",
      "1990"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "artist",
      "where",
      "age",
      ">",
      "value",
      "and",
      "year_join",
      ">",
      "value"
    ],
    "question": "Count the number of artists who are older than 46 and joined after 1990.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "artists",
      "who",
      "are",
      "older",
      "than",
      "46",
      "and",
      "joined",
      "after",
      "1990",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          46.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          1990.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "theme_gallery",
    "query": "SELECT avg(age) ,  min(age) FROM artist WHERE country  =  'United States'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "age",
      ")",
      ",",
      "min",
      "(",
      "age",
      ")",
      "FROM",
      "artist",
      "WHERE",
      "country",
      "=",
      "'United",
      "States",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "age",
      ")",
      ",",
      "min",
      "(",
      "age",
      ")",
      "from",
      "artist",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "What is the average and minimum age of all artists from United States.",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "and",
      "minimum",
      "age",
      "of",
      "all",
      "artists",
      "from",
      "United",
      "States",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"United States\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "theme_gallery",
    "query": "SELECT avg(age) ,  min(age) FROM artist WHERE country  =  'United States'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "age",
      ")",
      ",",
      "min",
      "(",
      "age",
      ")",
      "FROM",
      "artist",
      "WHERE",
      "country",
      "=",
      "'United",
      "States",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "age",
      ")",
      ",",
      "min",
      "(",
      "age",
      ")",
      "from",
      "artist",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "Return the average and minimum ages across artists from the United States.",
    "question_toks": [
      "Return",
      "the",
      "average",
      "and",
      "minimum",
      "ages",
      "across",
      "artists",
      "from",
      "the",
      "United",
      "States",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"United States\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "theme_gallery",
    "query": "SELECT count(*) FROM exhibition WHERE YEAR  >=  2005",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "exhibition",
      "WHERE",
      "YEAR",
      ">",
      "=",
      "2005"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "exhibition",
      "where",
      "year",
      ">",
      "=",
      "value"
    ],
    "question": "How many exhibition are there in year 2005 or after?",
    "question_toks": [
      "How",
      "many",
      "exhibition",
      "are",
      "there",
      "in",
      "year",
      "2005",
      "or",
      "after",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          2005.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "theme_gallery",
    "query": "SELECT count(*) FROM exhibition WHERE YEAR  >=  2005",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "exhibition",
      "WHERE",
      "YEAR",
      ">",
      "=",
      "2005"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "exhibition",
      "where",
      "year",
      ">",
      "=",
      "value"
    ],
    "question": "Count the number of exhibitions that happened in or after 2005.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "exhibitions",
      "that",
      "happened",
      "in",
      "or",
      "after",
      "2005",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          2005.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "theme_gallery",
    "query": "SELECT theme ,  YEAR FROM exhibition WHERE ticket_price  <  15",
    "query_toks": [
      "SELECT",
      "theme",
      ",",
      "YEAR",
      "FROM",
      "exhibition",
      "WHERE",
      "ticket_price",
      "<",
      "15"
    ],
    "query_toks_no_value": [
      "select",
      "theme",
      ",",
      "year",
      "from",
      "exhibition",
      "where",
      "ticket_price",
      "<",
      "value"
    ],
    "question": "Show theme and year for all exhibitions with ticket prices lower than 15.",
    "question_toks": [
      "Show",
      "theme",
      "and",
      "year",
      "for",
      "all",
      "exhibitions",
      "with",
      "ticket",
      "prices",
      "lower",
      "than",
      "15",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          15.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "theme_gallery",
    "query": "SELECT theme ,  YEAR FROM exhibition WHERE ticket_price  <  15",
    "query_toks": [
      "SELECT",
      "theme",
      ",",
      "YEAR",
      "FROM",
      "exhibition",
      "WHERE",
      "ticket_price",
      "<",
      "15"
    ],
    "query_toks_no_value": [
      "select",
      "theme",
      ",",
      "year",
      "from",
      "exhibition",
      "where",
      "ticket_price",
      "<",
      "value"
    ],
    "question": "What are the theme and year for all exhibitions that have a ticket price under 15?",
    "question_toks": [
      "What",
      "are",
      "the",
      "theme",
      "and",
      "year",
      "for",
      "all",
      "exhibitions",
      "that",
      "have",
      "a",
      "ticket",
      "price",
      "under",
      "15",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          15.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "theme_gallery",
    "query": "SELECT name FROM artist WHERE artist_id NOT IN (SELECT artist_id FROM exhibition)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "artist",
      "WHERE",
      "artist_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "artist_id",
      "FROM",
      "exhibition",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "artist",
      "where",
      "artist_id",
      "not",
      "in",
      "(",
      "select",
      "artist_id",
      "from",
      "exhibition",
      ")"
    ],
    "question": "Show names for artists without any exhibition.",
    "question_toks": [
      "Show",
      "names",
      "for",
      "artists",
      "without",
      "any",
      "exhibition",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "theme_gallery",
    "query": "SELECT name FROM artist WHERE artist_id NOT IN (SELECT artist_id FROM exhibition)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "artist",
      "WHERE",
      "artist_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "artist_id",
      "FROM",
      "exhibition",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "artist",
      "where",
      "artist_id",
      "not",
      "in",
      "(",
      "select",
      "artist_id",
      "from",
      "exhibition",
      ")"
    ],
    "question": "What are the names of artists that have not had any exhibitions?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "artists",
      "that",
      "have",
      "not",
      "had",
      "any",
      "exhibitions",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "theme_gallery",
    "query": "SELECT avg(ticket_price) ,  min(ticket_price) ,  max(ticket_price) FROM exhibition WHERE YEAR  <  2009",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "ticket_price",
      ")",
      ",",
      "min",
      "(",
      "ticket_price",
      ")",
      ",",
      "max",
      "(",
      "ticket_price",
      ")",
      "FROM",
      "exhibition",
      "WHERE",
      "YEAR",
      "<",
      "2009"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "ticket_price",
      ")",
      ",",
      "min",
      "(",
      "ticket_price",
      ")",
      ",",
      "max",
      "(",
      "ticket_price",
      ")",
      "from",
      "exhibition",
      "where",
      "year",
      "<",
      "value"
    ],
    "question": "Show the average, minimum, and maximum ticket prices for exhibitions for all years before 2009.",
    "question_toks": [
      "Show",
      "the",
      "average",
      ",",
      "minimum",
      ",",
      "and",
      "maximum",
      "ticket",
      "prices",
      "for",
      "exhibitions",
      "for",
      "all",
      "years",
      "before",
      "2009",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          2009.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "theme_gallery",
    "query": "SELECT avg(ticket_price) ,  min(ticket_price) ,  max(ticket_price) FROM exhibition WHERE YEAR  <  2009",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "ticket_price",
      ")",
      ",",
      "min",
      "(",
      "ticket_price",
      ")",
      ",",
      "max",
      "(",
      "ticket_price",
      ")",
      "FROM",
      "exhibition",
      "WHERE",
      "YEAR",
      "<",
      "2009"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "ticket_price",
      ")",
      ",",
      "min",
      "(",
      "ticket_price",
      ")",
      ",",
      "max",
      "(",
      "ticket_price",
      ")",
      "from",
      "exhibition",
      "where",
      "year",
      "<",
      "value"
    ],
    "question": "What are the average, minimum, and maximum ticket prices for exhibitions that happened prior to 2009?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      ",",
      "minimum",
      ",",
      "and",
      "maximum",
      "ticket",
      "prices",
      "for",
      "exhibitions",
      "that",
      "happened",
      "prior",
      "to",
      "2009",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          2009.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "epinions_1",
    "query": "SELECT i_id FROM item WHERE title  =  \"orange\"",
    "query_toks": [
      "SELECT",
      "i_id",
      "FROM",
      "item",
      "WHERE",
      "title",
      "=",
      "``",
      "orange",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "i_id",
      "from",
      "item",
      "where",
      "title",
      "=",
      "value"
    ],
    "question": "Find the id of the item whose title is \"orange\".",
    "question_toks": [
      "Find",
      "the",
      "id",
      "of",
      "the",
      "item",
      "whose",
      "title",
      "is",
      "``",
      "orange",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"orange\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "epinions_1",
    "query": "SELECT * FROM item",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "item"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "item"
    ],
    "question": "List all information in the item table.",
    "question_toks": [
      "List",
      "all",
      "information",
      "in",
      "the",
      "item",
      "table",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "epinions_1",
    "query": "SELECT count(*) FROM review",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "review"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "review"
    ],
    "question": "Find the number of reviews.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "reviews",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "epinions_1",
    "query": "SELECT count(*) FROM useracct",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "useracct"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "useracct"
    ],
    "question": "How many users are there?",
    "question_toks": [
      "How",
      "many",
      "users",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "epinions_1",
    "query": "SELECT avg(rating) ,  max(rating) FROM review",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "rating",
      ")",
      ",",
      "max",
      "(",
      "rating",
      ")",
      "FROM",
      "review"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "rating",
      ")",
      ",",
      "max",
      "(",
      "rating",
      ")",
      "from",
      "review"
    ],
    "question": "Find the average and maximum rating of all reviews.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "and",
      "maximum",
      "rating",
      "of",
      "all",
      "reviews",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "epinions_1",
    "query": "SELECT min(rank) FROM review",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "rank",
      ")",
      "FROM",
      "review"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "rank",
      ")",
      "from",
      "review"
    ],
    "question": "Find the highest rank of all reviews.",
    "question_toks": [
      "Find",
      "the",
      "highest",
      "rank",
      "of",
      "all",
      "reviews",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "epinions_1",
    "query": "SELECT count(DISTINCT u_id) FROM review",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "u_id",
      ")",
      "FROM",
      "review"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "u_id",
      ")",
      "from",
      "review"
    ],
    "question": "How many different users wrote some reviews?",
    "question_toks": [
      "How",
      "many",
      "different",
      "users",
      "wrote",
      "some",
      "reviews",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                4,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "epinions_1",
    "query": "SELECT count(DISTINCT i_id) FROM review",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "i_id",
      ")",
      "FROM",
      "review"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "i_id",
      ")",
      "from",
      "review"
    ],
    "question": "How many different items were reviewed by some users?",
    "question_toks": [
      "How",
      "many",
      "different",
      "items",
      "were",
      "reviewed",
      "by",
      "some",
      "users",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                5,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "epinions_1",
    "query": "SELECT count(*) FROM item WHERE i_id NOT IN (SELECT i_id FROM review)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "item",
      "WHERE",
      "i_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "i_id",
      "FROM",
      "review",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "item",
      "where",
      "i_id",
      "not",
      "in",
      "(",
      "select",
      "i_id",
      "from",
      "review",
      ")"
    ],
    "question": "Find the number of items that did not receive any review.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "items",
      "that",
      "did",
      "not",
      "receive",
      "any",
      "review",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "epinions_1",
    "query": "SELECT name FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "useracct",
      "WHERE",
      "u_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "u_id",
      "FROM",
      "review",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "useracct",
      "where",
      "u_id",
      "not",
      "in",
      "(",
      "select",
      "u_id",
      "from",
      "review",
      ")"
    ],
    "question": "Find the names of users who did not leave any review.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "users",
      "who",
      "did",
      "not",
      "leave",
      "any",
      "review",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "epinions_1",
    "query": "SELECT title FROM item WHERE i_id NOT IN (SELECT i_id FROM review)",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "item",
      "WHERE",
      "i_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "i_id",
      "FROM",
      "review",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "item",
      "where",
      "i_id",
      "not",
      "in",
      "(",
      "select",
      "i_id",
      "from",
      "review",
      ")"
    ],
    "question": "Find the names of the items that did not receive any review.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "the",
      "items",
      "that",
      "did",
      "not",
      "receive",
      "any",
      "review",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "epinions_1",
    "query": "SELECT name FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "useracct",
      "WHERE",
      "u_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "u_id",
      "FROM",
      "review",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "useracct",
      "where",
      "u_id",
      "not",
      "in",
      "(",
      "select",
      "u_id",
      "from",
      "review",
      ")"
    ],
    "question": "Find the names of users who did not leave any review.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "users",
      "who",
      "did",
      "not",
      "leave",
      "any",
      "review",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "epinions_1",
    "query": "SELECT count(*) FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "useracct",
      "WHERE",
      "u_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "u_id",
      "FROM",
      "review",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "useracct",
      "where",
      "u_id",
      "not",
      "in",
      "(",
      "select",
      "u_id",
      "from",
      "review",
      ")"
    ],
    "question": "Find the number of users who did not write any review.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "users",
      "who",
      "did",
      "not",
      "write",
      "any",
      "review",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "epinions_1",
    "query": "SELECT count(*) FROM item WHERE i_id NOT IN (SELECT i_id FROM review)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "item",
      "WHERE",
      "i_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "i_id",
      "FROM",
      "review",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "item",
      "where",
      "i_id",
      "not",
      "in",
      "(",
      "select",
      "i_id",
      "from",
      "review",
      ")"
    ],
    "question": "Find the number of items without any review.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "items",
      "without",
      "any",
      "review",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "riding_club",
    "query": "SELECT count(*) FROM player",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "player"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "player"
    ],
    "question": "How many players are there?",
    "question_toks": [
      "How",
      "many",
      "players",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "riding_club",
    "query": "SELECT Gender ,  Occupation FROM player",
    "query_toks": [
      "SELECT",
      "Gender",
      ",",
      "Occupation",
      "FROM",
      "player"
    ],
    "query_toks_no_value": [
      "select",
      "gender",
      ",",
      "occupation",
      "from",
      "player"
    ],
    "question": "What are the gender and occupation of players?",
    "question_toks": [
      "What",
      "are",
      "the",
      "gender",
      "and",
      "occupation",
      "of",
      "players",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "riding_club",
    "query": "SELECT Player_name ,  residence FROM player WHERE Occupation != \"Researcher\"",
    "query_toks": [
      "SELECT",
      "Player_name",
      ",",
      "residence",
      "FROM",
      "player",
      "WHERE",
      "Occupation",
      "!",
      "=",
      "``",
      "Researcher",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "player_name",
      ",",
      "residence",
      "from",
      "player",
      "where",
      "occupation",
      "!",
      "=",
      "value"
    ],
    "question": "List the name and residence for players whose occupation is not \"Researcher\".",
    "question_toks": [
      "List",
      "the",
      "name",
      "and",
      "residence",
      "for",
      "players",
      "whose",
      "occupation",
      "is",
      "not",
      "``",
      "Researcher",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Researcher\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "riding_club",
    "query": "SELECT Sponsor_name FROM player WHERE Residence  =  \"Brandon\" OR Residence  =  \"Birtle\"",
    "query_toks": [
      "SELECT",
      "Sponsor_name",
      "FROM",
      "player",
      "WHERE",
      "Residence",
      "=",
      "``",
      "Brandon",
      "''",
      "OR",
      "Residence",
      "=",
      "``",
      "Birtle",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "sponsor_name",
      "from",
      "player",
      "where",
      "residence",
      "=",
      "value",
      "or",
      "residence",
      "=",
      "value"
    ],
    "question": "Show the names of sponsors of players whose residence is either \"Brandon\" or \"Birtle\".",
    "question_toks": [
      "Show",
      "the",
      "names",
      "of",
      "sponsors",
      "of",
      "players",
      "whose",
      "residence",
      "is",
      "either",
      "``",
      "Brandon",
      "''",
      "or",
      "``",
      "Birtle",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Brandon\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Birtle\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "riding_club",
    "query": "SELECT Player_name FROM player WHERE Player_ID NOT IN (SELECT Player_ID FROM player_coach)",
    "query_toks": [
      "SELECT",
      "Player_name",
      "FROM",
      "player",
      "WHERE",
      "Player_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Player_ID",
      "FROM",
      "player_coach",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "player_name",
      "from",
      "player",
      "where",
      "player_id",
      "not",
      "in",
      "(",
      "select",
      "player_id",
      "from",
      "player_coach",
      ")"
    ],
    "question": "List the names of players that do not have coaches.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "players",
      "that",
      "do",
      "not",
      "have",
      "coaches",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      18,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gymnast",
    "query": "SELECT count(*) FROM gymnast",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "gymnast"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "gymnast"
    ],
    "question": "How many gymnasts are there?",
    "question_toks": [
      "How",
      "many",
      "gymnasts",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gymnast",
    "query": "SELECT count(*) FROM gymnast",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "gymnast"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "gymnast"
    ],
    "question": "Count the number of gymnasts.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "gymnasts",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gymnast",
    "query": "SELECT avg(Horizontal_Bar_Points) FROM gymnast",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Horizontal_Bar_Points",
      ")",
      "FROM",
      "gymnast"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "horizontal_bar_points",
      ")",
      "from",
      "gymnast"
    ],
    "question": "What is the average horizontal bar points for all gymnasts?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "horizontal",
      "bar",
      "points",
      "for",
      "all",
      "gymnasts",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gymnast",
    "query": "SELECT avg(Horizontal_Bar_Points) FROM gymnast",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Horizontal_Bar_Points",
      ")",
      "FROM",
      "gymnast"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "horizontal_bar_points",
      ")",
      "from",
      "gymnast"
    ],
    "question": "Return the average horizontal bar points across all gymnasts.",
    "question_toks": [
      "Return",
      "the",
      "average",
      "horizontal",
      "bar",
      "points",
      "across",
      "all",
      "gymnasts",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gymnast",
    "query": "SELECT count(DISTINCT Hometown) FROM people",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Hometown",
      ")",
      "FROM",
      "people"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "hometown",
      ")",
      "from",
      "people"
    ],
    "question": "How many distinct hometowns did these people have?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "hometowns",
      "did",
      "these",
      "people",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                13,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gymnast",
    "query": "SELECT count(DISTINCT Hometown) FROM people",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Hometown",
      ")",
      "FROM",
      "people"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "hometown",
      ")",
      "from",
      "people"
    ],
    "question": "Count the number of different hometowns of these people.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "hometowns",
      "of",
      "these",
      "people",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                13,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "small_bank_1",
    "query": "SELECT count(*) FROM accounts",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "accounts"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "accounts"
    ],
    "question": "How many accounts are there in total?",
    "question_toks": [
      "How",
      "many",
      "accounts",
      "are",
      "there",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "small_bank_1",
    "query": "SELECT count(*) FROM accounts",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "accounts"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "accounts"
    ],
    "question": "Count the number of accounts.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "accounts",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "small_bank_1",
    "query": "SELECT sum(balance) FROM checking",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "balance",
      ")",
      "FROM",
      "checking"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "balance",
      ")",
      "from",
      "checking"
    ],
    "question": "What is the total checking balance in all accounts?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "checking",
      "balance",
      "in",
      "all",
      "accounts",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "small_bank_1",
    "query": "SELECT sum(balance) FROM checking",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "balance",
      ")",
      "FROM",
      "checking"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "balance",
      ")",
      "from",
      "checking"
    ],
    "question": "Find the total balance across checking accounts.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "balance",
      "across",
      "checking",
      "accounts",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "small_bank_1",
    "query": "SELECT avg(balance) FROM checking",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "balance",
      ")",
      "FROM",
      "checking"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "balance",
      ")",
      "from",
      "checking"
    ],
    "question": "Find the average checking balance.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "checking",
      "balance",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "small_bank_1",
    "query": "SELECT avg(balance) FROM checking",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "balance",
      ")",
      "FROM",
      "checking"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "balance",
      ")",
      "from",
      "checking"
    ],
    "question": "What is the average balance in checking accounts?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "balance",
      "in",
      "checking",
      "accounts",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "small_bank_1",
    "query": "SELECT count(*) FROM savings WHERE balance  >  (SELECT avg(balance) FROM savings)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "savings",
      "WHERE",
      "balance",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "balance",
      ")",
      "FROM",
      "savings",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "savings",
      "where",
      "balance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "balance",
      ")",
      "from",
      "savings",
      ")"
    ],
    "question": "How many accounts have a savings balance above the average savings balance?",
    "question_toks": [
      "How",
      "many",
      "accounts",
      "have",
      "a",
      "savings",
      "balance",
      "above",
      "the",
      "average",
      "savings",
      "balance",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "small_bank_1",
    "query": "SELECT count(*) FROM savings WHERE balance  >  (SELECT avg(balance) FROM savings)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "savings",
      "WHERE",
      "balance",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "balance",
      ")",
      "FROM",
      "savings",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "savings",
      "where",
      "balance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "balance",
      ")",
      "from",
      "savings",
      ")"
    ],
    "question": "Find the number of accounts with a savings balance that is higher than the average savings balance.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "accounts",
      "with",
      "a",
      "savings",
      "balance",
      "that",
      "is",
      "higher",
      "than",
      "the",
      "average",
      "savings",
      "balance",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "browser_web",
    "query": "SELECT count(*) FROM browser WHERE market_share  >=  5",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "browser",
      "WHERE",
      "market_share",
      ">",
      "=",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "browser",
      "where",
      "market_share",
      ">",
      "=",
      "value"
    ],
    "question": "How many main stream browsers whose market share is at least 5 exist?",
    "question_toks": [
      "How",
      "many",
      "main",
      "stream",
      "browsers",
      "whose",
      "market",
      "share",
      "is",
      "at",
      "least",
      "5",
      "exist",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          5.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "browser_web",
    "query": "SELECT id ,  name ,  market_share FROM browser",
    "query_toks": [
      "SELECT",
      "id",
      ",",
      "name",
      ",",
      "market_share",
      "FROM",
      "browser"
    ],
    "query_toks_no_value": [
      "select",
      "id",
      ",",
      "name",
      ",",
      "market_share",
      "from",
      "browser"
    ],
    "question": "List the ids, names and market shares of all browsers.",
    "question_toks": [
      "List",
      "the",
      "ids",
      ",",
      "names",
      "and",
      "market",
      "shares",
      "of",
      "all",
      "browsers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "browser_web",
    "query": "SELECT max(market_share) ,  min(market_share) ,  avg(market_share) FROM browser",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "market_share",
      ")",
      ",",
      "min",
      "(",
      "market_share",
      ")",
      ",",
      "avg",
      "(",
      "market_share",
      ")",
      "FROM",
      "browser"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "market_share",
      ")",
      ",",
      "min",
      "(",
      "market_share",
      ")",
      ",",
      "avg",
      "(",
      "market_share",
      ")",
      "from",
      "browser"
    ],
    "question": "What is the maximum, minimum and average market share of the listed browsers?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      ",",
      "minimum",
      "and",
      "average",
      "market",
      "share",
      "of",
      "the",
      "listed",
      "browsers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "browser_web",
    "query": "SELECT id ,  market_share FROM browser WHERE name  =  'Safari'",
    "query_toks": [
      "SELECT",
      "id",
      ",",
      "market_share",
      "FROM",
      "browser",
      "WHERE",
      "name",
      "=",
      "'Safari",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "id",
      ",",
      "market_share",
      "from",
      "browser",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "What is the id and market share of the browser Safari?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "and",
      "market",
      "share",
      "of",
      "the",
      "browser",
      "Safari",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"Safari\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "browser_web",
    "query": "SELECT name ,  operating_system FROM web_client_accelerator WHERE CONNECTION != 'Broadband'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "operating_system",
      "FROM",
      "web_client_accelerator",
      "WHERE",
      "CONNECTION",
      "!",
      "=",
      "'Broadband",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "operating_system",
      "from",
      "web_client_accelerator",
      "where",
      "connection",
      "!",
      "=",
      "value"
    ],
    "question": "What are the name and os of web client accelerators that do not work with only a 'Broadband' type connection?",
    "question_toks": [
      "What",
      "are",
      "the",
      "name",
      "and",
      "os",
      "of",
      "web",
      "client",
      "accelerators",
      "that",
      "do",
      "not",
      "work",
      "with",
      "only",
      "a",
      "'Broadband",
      "'",
      "type",
      "connection",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Broadband\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "browser_web",
    "query": "SELECT count(DISTINCT client) FROM web_client_accelerator",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "client",
      ")",
      "FROM",
      "web_client_accelerator"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "client",
      ")",
      "from",
      "web_client_accelerator"
    ],
    "question": "How many different kinds of clients are supported by the web clients accelerators?",
    "question_toks": [
      "How",
      "many",
      "different",
      "kinds",
      "of",
      "clients",
      "are",
      "supported",
      "by",
      "the",
      "web",
      "clients",
      "accelerators",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                4,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "browser_web",
    "query": "SELECT count(*) FROM web_client_accelerator WHERE id NOT IN ( SELECT accelerator_id FROM accelerator_compatible_browser );",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "web_client_accelerator",
      "WHERE",
      "id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "accelerator_id",
      "FROM",
      "accelerator_compatible_browser",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "web_client_accelerator",
      "where",
      "id",
      "not",
      "in",
      "(",
      "select",
      "accelerator_id",
      "from",
      "accelerator_compatible_browser",
      ")"
    ],
    "question": "How many accelerators are not compatible with the browsers listed ?",
    "question_toks": [
      "How",
      "many",
      "accelerators",
      "are",
      "not",
      "compatible",
      "with",
      "the",
      "browsers",
      "listed",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "browser_web",
    "query": "SELECT name FROM web_client_accelerator WHERE name LIKE \"%Opera%\"",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "web_client_accelerator",
      "WHERE",
      "name",
      "LIKE",
      "``",
      "%",
      "Opera",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "web_client_accelerator",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "Which accelerator name contains substring \"Opera\"?",
    "question_toks": [
      "Which",
      "accelerator",
      "name",
      "contains",
      "substring",
      "``",
      "Opera",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"%Opera%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT count(*) FROM wrestler",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "wrestler"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "wrestler"
    ],
    "question": "How many wrestlers are there?",
    "question_toks": [
      "How",
      "many",
      "wrestlers",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT count(*) FROM wrestler",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "wrestler"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "wrestler"
    ],
    "question": "Count the number of wrestlers.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "wrestlers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT Name ,  LOCATION FROM wrestler",
    "query_toks": [
      "SELECT",
      "Name",
      ",",
      "LOCATION",
      "FROM",
      "wrestler"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "location",
      "from",
      "wrestler"
    ],
    "question": "What are the names and location of the wrestlers?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "location",
      "of",
      "the",
      "wrestlers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT Name ,  LOCATION FROM wrestler",
    "query_toks": [
      "SELECT",
      "Name",
      ",",
      "LOCATION",
      "FROM",
      "wrestler"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "location",
      "from",
      "wrestler"
    ],
    "question": "Give the names and locations of all wrestlers.",
    "question_toks": [
      "Give",
      "the",
      "names",
      "and",
      "locations",
      "of",
      "all",
      "wrestlers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT Elimination_Move FROM Elimination WHERE Team  =  \"Team Orton\"",
    "query_toks": [
      "SELECT",
      "Elimination_Move",
      "FROM",
      "Elimination",
      "WHERE",
      "Team",
      "=",
      "``",
      "Team",
      "Orton",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "elimination_move",
      "from",
      "elimination",
      "where",
      "team",
      "=",
      "value"
    ],
    "question": "What are the elimination moves of wrestlers whose team is \"Team Orton\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "elimination",
      "moves",
      "of",
      "wrestlers",
      "whose",
      "team",
      "is",
      "``",
      "Team",
      "Orton",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Team Orton\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT Elimination_Move FROM Elimination WHERE Team  =  \"Team Orton\"",
    "query_toks": [
      "SELECT",
      "Elimination_Move",
      "FROM",
      "Elimination",
      "WHERE",
      "Team",
      "=",
      "``",
      "Team",
      "Orton",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "elimination_move",
      "from",
      "elimination",
      "where",
      "team",
      "=",
      "value"
    ],
    "question": "Return the elimination movies of wrestlers on Team Orton.",
    "question_toks": [
      "Return",
      "the",
      "elimination",
      "movies",
      "of",
      "wrestlers",
      "on",
      "Team",
      "Orton",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Team Orton\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT Reign ,  Days_held FROM wrestler",
    "query_toks": [
      "SELECT",
      "Reign",
      ",",
      "Days_held",
      "FROM",
      "wrestler"
    ],
    "query_toks_no_value": [
      "select",
      "reign",
      ",",
      "days_held",
      "from",
      "wrestler"
    ],
    "question": "Show the reign and days held of wrestlers.",
    "question_toks": [
      "Show",
      "the",
      "reign",
      "and",
      "days",
      "held",
      "of",
      "wrestlers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT Reign ,  Days_held FROM wrestler",
    "query_toks": [
      "SELECT",
      "Reign",
      ",",
      "Days_held",
      "FROM",
      "wrestler"
    ],
    "query_toks_no_value": [
      "select",
      "reign",
      ",",
      "days_held",
      "from",
      "wrestler"
    ],
    "question": "What are the reigns and days held of all wrestlers?",
    "question_toks": [
      "What",
      "are",
      "the",
      "reigns",
      "and",
      "days",
      "held",
      "of",
      "all",
      "wrestlers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT Name FROM wrestler WHERE Days_held  <  100",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "wrestler",
      "WHERE",
      "Days_held",
      "<",
      "100"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wrestler",
      "where",
      "days_held",
      "<",
      "value"
    ],
    "question": "What are the names of wrestlers days held less than 100?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "wrestlers",
      "days",
      "held",
      "less",
      "than",
      "100",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          100.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT Name FROM wrestler WHERE Days_held  <  100",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "wrestler",
      "WHERE",
      "Days_held",
      "<",
      "100"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wrestler",
      "where",
      "days_held",
      "<",
      "value"
    ],
    "question": "Return the names of wrestlers with fewer than 100 days held.",
    "question_toks": [
      "Return",
      "the",
      "names",
      "of",
      "wrestlers",
      "with",
      "fewer",
      "than",
      "100",
      "days",
      "held",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          100.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT Name FROM wrestler WHERE Wrestler_ID NOT IN (SELECT Wrestler_ID FROM elimination)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "wrestler",
      "WHERE",
      "Wrestler_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Wrestler_ID",
      "FROM",
      "elimination",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wrestler",
      "where",
      "wrestler_id",
      "not",
      "in",
      "(",
      "select",
      "wrestler_id",
      "from",
      "elimination",
      ")"
    ],
    "question": "List the names of wrestlers that have not been eliminated.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "wrestlers",
      "that",
      "have",
      "not",
      "been",
      "eliminated",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT Name FROM wrestler WHERE Wrestler_ID NOT IN (SELECT Wrestler_ID FROM elimination)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "wrestler",
      "WHERE",
      "Wrestler_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Wrestler_ID",
      "FROM",
      "elimination",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wrestler",
      "where",
      "wrestler_id",
      "not",
      "in",
      "(",
      "select",
      "wrestler_id",
      "from",
      "elimination",
      ")"
    ],
    "question": "What are the names of wrestlers who have never been eliminated?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "wrestlers",
      "who",
      "have",
      "never",
      "been",
      "eliminated",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT COUNT (DISTINCT team) FROM elimination",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "team",
      ")",
      "FROM",
      "elimination"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "team",
      ")",
      "from",
      "elimination"
    ],
    "question": "What is the number of distinct teams that suffer elimination?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "distinct",
      "teams",
      "that",
      "suffer",
      "elimination",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                9,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT COUNT (DISTINCT team) FROM elimination",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "team",
      ")",
      "FROM",
      "elimination"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "team",
      ")",
      "from",
      "elimination"
    ],
    "question": "How many different teams have had eliminated wrestlers?",
    "question_toks": [
      "How",
      "many",
      "different",
      "teams",
      "have",
      "had",
      "eliminated",
      "wrestlers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                9,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT TIME FROM elimination WHERE Eliminated_By  =  \"Punk\" OR Eliminated_By  =  \"Orton\"",
    "query_toks": [
      "SELECT",
      "TIME",
      "FROM",
      "elimination",
      "WHERE",
      "Eliminated_By",
      "=",
      "``",
      "Punk",
      "''",
      "OR",
      "Eliminated_By",
      "=",
      "``",
      "Orton",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "time",
      "from",
      "elimination",
      "where",
      "eliminated_by",
      "=",
      "value",
      "or",
      "eliminated_by",
      "=",
      "value"
    ],
    "question": "Show the times of elimination by \"Punk\" or \"Orton\".",
    "question_toks": [
      "Show",
      "the",
      "times",
      "of",
      "elimination",
      "by",
      "``",
      "Punk",
      "''",
      "or",
      "``",
      "Orton",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Punk\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Orton\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT TIME FROM elimination WHERE Eliminated_By  =  \"Punk\" OR Eliminated_By  =  \"Orton\"",
    "query_toks": [
      "SELECT",
      "TIME",
      "FROM",
      "elimination",
      "WHERE",
      "Eliminated_By",
      "=",
      "``",
      "Punk",
      "''",
      "OR",
      "Eliminated_By",
      "=",
      "``",
      "Orton",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "time",
      "from",
      "elimination",
      "where",
      "eliminated_by",
      "=",
      "value",
      "or",
      "eliminated_by",
      "=",
      "value"
    ],
    "question": "What are the times of elimination for any instances in which the elimination was done by Punk or Orton?",
    "question_toks": [
      "What",
      "are",
      "the",
      "times",
      "of",
      "elimination",
      "for",
      "any",
      "instances",
      "in",
      "which",
      "the",
      "elimination",
      "was",
      "done",
      "by",
      "Punk",
      "or",
      "Orton",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Punk\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Orton\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_finance",
    "query": "SELECT count(*) FROM school",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "school"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "school"
    ],
    "question": "How many schools are there?",
    "question_toks": [
      "How",
      "many",
      "schools",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_finance",
    "query": "SELECT count(*) FROM school",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "school"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "school"
    ],
    "question": "Count the number of schools.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "schools",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_finance",
    "query": "SELECT school_name ,  LOCATION ,  mascot FROM school",
    "query_toks": [
      "SELECT",
      "school_name",
      ",",
      "LOCATION",
      ",",
      "mascot",
      "FROM",
      "school"
    ],
    "query_toks_no_value": [
      "select",
      "school_name",
      ",",
      "location",
      ",",
      "mascot",
      "from",
      "school"
    ],
    "question": "List the name, location, mascot for all schools.",
    "question_toks": [
      "List",
      "the",
      "name",
      ",",
      "location",
      ",",
      "mascot",
      "for",
      "all",
      "schools",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_finance",
    "query": "SELECT sum(enrollment) ,  avg(enrollment) FROM school",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "enrollment",
      ")",
      ",",
      "avg",
      "(",
      "enrollment",
      ")",
      "FROM",
      "school"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "enrollment",
      ")",
      ",",
      "avg",
      "(",
      "enrollment",
      ")",
      "from",
      "school"
    ],
    "question": "What are the total and average enrollment of all schools?",
    "question_toks": [
      "What",
      "are",
      "the",
      "total",
      "and",
      "average",
      "enrollment",
      "of",
      "all",
      "schools",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_finance",
    "query": "SELECT mascot FROM school WHERE enrollment  >  (SELECT avg(enrollment) FROM school)",
    "query_toks": [
      "SELECT",
      "mascot",
      "FROM",
      "school",
      "WHERE",
      "enrollment",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "enrollment",
      ")",
      "FROM",
      "school",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "mascot",
      "from",
      "school",
      "where",
      "enrollment",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "enrollment",
      ")",
      "from",
      "school",
      ")"
    ],
    "question": "What are the mascots for schools with enrollments above the average?",
    "question_toks": [
      "What",
      "are",
      "the",
      "mascots",
      "for",
      "schools",
      "with",
      "enrollments",
      "above",
      "the",
      "average",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_finance",
    "query": "SELECT avg(enrollment) ,  max(enrollment) ,  min(enrollment) FROM school",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "enrollment",
      ")",
      ",",
      "max",
      "(",
      "enrollment",
      ")",
      ",",
      "min",
      "(",
      "enrollment",
      ")",
      "FROM",
      "school"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "enrollment",
      ")",
      ",",
      "max",
      "(",
      "enrollment",
      ")",
      ",",
      "min",
      "(",
      "enrollment",
      ")",
      "from",
      "school"
    ],
    "question": "Show the average, maximum, minimum enrollment of all schools.",
    "question_toks": [
      "Show",
      "the",
      "average",
      ",",
      "maximum",
      ",",
      "minimum",
      "enrollment",
      "of",
      "all",
      "schools",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_finance",
    "query": "SELECT school_name FROM school WHERE school_id NOT IN (SELECT school_id FROM endowment)",
    "query_toks": [
      "SELECT",
      "school_name",
      "FROM",
      "school",
      "WHERE",
      "school_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "school_id",
      "FROM",
      "endowment",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "school_name",
      "from",
      "school",
      "where",
      "school_id",
      "not",
      "in",
      "(",
      "select",
      "school_id",
      "from",
      "endowment",
      ")"
    ],
    "question": "List the names of the schools without any endowment.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "the",
      "schools",
      "without",
      "any",
      "endowment",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      17,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_finance",
    "query": "SELECT count(*) FROM budget WHERE budgeted  >  3000 AND YEAR  <=  2001",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "budget",
      "WHERE",
      "budgeted",
      ">",
      "3000",
      "AND",
      "YEAR",
      "<",
      "=",
      "2001"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "budget",
      "where",
      "budgeted",
      ">",
      "value",
      "and",
      "year",
      "<",
      "=",
      "value"
    ],
    "question": "How many budgets are above 3000 in year 2001 or before?",
    "question_toks": [
      "How",
      "many",
      "budgets",
      "are",
      "above",
      "3000",
      "in",
      "year",
      "2001",
      "or",
      "before",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          3000.0,
          null
        ],
        "and",
        [
          false,
          6,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          2001.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_finance",
    "query": "SELECT count(*) FROM budget WHERE budgeted  >  3000 AND YEAR  <=  2001",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "budget",
      "WHERE",
      "budgeted",
      ">",
      "3000",
      "AND",
      "YEAR",
      "<",
      "=",
      "2001"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "budget",
      "where",
      "budgeted",
      ">",
      "value",
      "and",
      "year",
      "<",
      "=",
      "value"
    ],
    "question": "Count the number of budgets in year 2001 or before whose budgeted amount is greater than 3000",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "budgets",
      "in",
      "year",
      "2001",
      "or",
      "before",
      "whose",
      "budgeted",
      "amount",
      "is",
      "greater",
      "than",
      "3000"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          3000.0,
          null
        ],
        "and",
        [
          false,
          6,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          2001.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_finance",
    "query": "SELECT count(*) FROM budget WHERE budgeted  <  invested",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "budget",
      "WHERE",
      "budgeted",
      "<",
      "invested"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "budget",
      "where",
      "budgeted",
      "<",
      "invested"
    ],
    "question": "How many budget record has a budget amount smaller than the invested amount?",
    "question_toks": [
      "How",
      "many",
      "budget",
      "record",
      "has",
      "a",
      "budget",
      "amount",
      "smaller",
      "than",
      "the",
      "invested",
      "amount",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          [
            0,
            13,
            false
          ],
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_finance",
    "query": "SELECT count(*) FROM (SELECT * FROM endowment WHERE amount  >  8.5 GROUP BY school_id HAVING count(*)  >  1)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "(",
      "SELECT",
      "*",
      "FROM",
      "endowment",
      "WHERE",
      "amount",
      ">",
      "8.5",
      "GROUP",
      "BY",
      "school_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "1",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "(",
      "select",
      "*",
      "from",
      "endowment",
      "where",
      "amount",
      ">",
      "value",
      "group",
      "by",
      "school_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value",
      ")"
    ],
    "question": "Find the number of schools that have more than one donator whose donation amount is less than 8.5.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "schools",
      "that",
      "have",
      "more",
      "than",
      "one",
      "donator",
      "whose",
      "donation",
      "amount",
      "is",
      "less",
      "than",
      "8.5",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "sql",
            {
              "from": {
                "table_units": [
                  [
                    "table_unit",
                    2
                  ]
                ],
                "conds": []
              },
              "select": [
                false,
                [
                  [
                    0,
                    [
                      0,
                      [
                        0,
                        0,
                        false
                      ],
                      null
                    ]
                  ]
                ]
              ],
              "where": [
                [
                  false,
                  3,
                  [
                    0,
                    [
                      0,
                      19,
                      false
                    ],
                    null
                  ],
                  8.5,
                  null
                ]
              ],
              "groupBy": [
                [
                  0,
                  17,
                  false
                ]
              ],
              "having": [
                [
                  false,
                  3,
                  [
                    0,
                    [
                      3,
                      0,
                      false
                    ],
                    null
                  ],
                  1.0,
                  null
                ]
              ],
              "orderBy": [],
              "limit": null,
              "intersect": null,
              "union": null,
              "except": null
            }
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "protein_institute",
    "query": "SELECT count(*) FROM building",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "building"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "building"
    ],
    "question": "How many buildings are there?",
    "question_toks": [
      "How",
      "many",
      "buildings",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "protein_institute",
    "query": "SELECT avg(floors) ,  max(floors) ,  min(floors) FROM building",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "floors",
      ")",
      ",",
      "max",
      "(",
      "floors",
      ")",
      ",",
      "min",
      "(",
      "floors",
      ")",
      "FROM",
      "building"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "floors",
      ")",
      ",",
      "max",
      "(",
      "floors",
      ")",
      ",",
      "min",
      "(",
      "floors",
      ")",
      "from",
      "building"
    ],
    "question": "What are the average, maximum, and minimum number of floors for all buildings?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      ",",
      "maximum",
      ",",
      "and",
      "minimum",
      "number",
      "of",
      "floors",
      "for",
      "all",
      "buildings",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "protein_institute",
    "query": "SELECT count(*) FROM building WHERE height_feet  >  (SELECT avg(height_feet) FROM building) OR floors  >  (SELECT avg(floors) FROM building)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "building",
      "WHERE",
      "height_feet",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "height_feet",
      ")",
      "FROM",
      "building",
      ")",
      "OR",
      "floors",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "floors",
      ")",
      "FROM",
      "building",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "building",
      "where",
      "height_feet",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "height_feet",
      ")",
      "from",
      "building",
      ")",
      "or",
      "floors",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "floors",
      ")",
      "from",
      "building",
      ")"
    ],
    "question": "Show the number of buildings with a height above the average or a number of floors above the average.",
    "question_toks": [
      "Show",
      "the",
      "number",
      "of",
      "buildings",
      "with",
      "a",
      "height",
      "above",
      "the",
      "average",
      "or",
      "a",
      "number",
      "of",
      "floors",
      "above",
      "the",
      "average",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ],
        "or",
        [
          false,
          3,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      6,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "protein_institute",
    "query": "SELECT name FROM building WHERE height_feet  >=  200 AND floors  >=  20",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "building",
      "WHERE",
      "height_feet",
      ">",
      "=",
      "200",
      "AND",
      "floors",
      ">",
      "=",
      "20"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "building",
      "where",
      "height_feet",
      ">",
      "=",
      "value",
      "and",
      "floors",
      ">",
      "=",
      "value"
    ],
    "question": "List the names of buildings with at least 200 feet of height and with at least 20 floors.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "buildings",
      "with",
      "at",
      "least",
      "200",
      "feet",
      "of",
      "height",
      "and",
      "with",
      "at",
      "least",
      "20",
      "floors",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          200.0,
          null
        ],
        "and",
        [
          false,
          5,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          20.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "protein_institute",
    "query": "SELECT institution ,  LOCATION FROM institution WHERE founded  >  1990 AND TYPE  =  'Private'",
    "query_toks": [
      "SELECT",
      "institution",
      ",",
      "LOCATION",
      "FROM",
      "institution",
      "WHERE",
      "founded",
      ">",
      "1990",
      "AND",
      "TYPE",
      "=",
      "'Private",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "institution",
      ",",
      "location",
      "from",
      "institution",
      "where",
      "founded",
      ">",
      "value",
      "and",
      "type",
      "=",
      "value"
    ],
    "question": "Show the names and locations of institutions that are founded after 1990 and have the type \"Private\".",
    "question_toks": [
      "Show",
      "the",
      "names",
      "and",
      "locations",
      "of",
      "institutions",
      "that",
      "are",
      "founded",
      "after",
      "1990",
      "and",
      "have",
      "the",
      "type",
      "``",
      "Private",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          1990.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Private\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "protein_institute",
    "query": "SELECT TYPE FROM institution WHERE founded  >  1990 AND enrollment  >=  1000",
    "query_toks": [
      "SELECT",
      "TYPE",
      "FROM",
      "institution",
      "WHERE",
      "founded",
      ">",
      "1990",
      "AND",
      "enrollment",
      ">",
      "=",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "type",
      "from",
      "institution",
      "where",
      "founded",
      ">",
      "value",
      "and",
      "enrollment",
      ">",
      "=",
      "value"
    ],
    "question": "Show the institution type with an institution founded after 1990 and an institution with at least 1000 enrollment.",
    "question_toks": [
      "Show",
      "the",
      "institution",
      "type",
      "with",
      "an",
      "institution",
      "founded",
      "after",
      "1990",
      "and",
      "an",
      "institution",
      "with",
      "at",
      "least",
      "1000",
      "enrollment",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          1990.0,
          null
        ],
        "and",
        [
          false,
          5,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          1000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "protein_institute",
    "query": "SELECT name FROM building WHERE building_id NOT IN (SELECT building_id FROM institution)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "building",
      "WHERE",
      "building_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "building_id",
      "FROM",
      "institution",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "building",
      "where",
      "building_id",
      "not",
      "in",
      "(",
      "select",
      "building_id",
      "from",
      "institution",
      ")"
    ],
    "question": "Show the name of buildings that do not have any institution.",
    "question_toks": [
      "Show",
      "the",
      "name",
      "of",
      "buildings",
      "that",
      "do",
      "not",
      "have",
      "any",
      "institution",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      15,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "protein_institute",
    "query": "SELECT count(*) FROM institution WHERE institution_id NOT IN (SELECT institution_id FROM protein)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "institution",
      "WHERE",
      "institution_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "institution_id",
      "FROM",
      "protein",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "institution",
      "where",
      "institution_id",
      "not",
      "in",
      "(",
      "select",
      "institution_id",
      "from",
      "protein",
      ")"
    ],
    "question": "How many institutions do not have an associated protein in our record?",
    "question_toks": [
      "How",
      "many",
      "institutions",
      "do",
      "not",
      "have",
      "an",
      "associated",
      "protein",
      "in",
      "our",
      "record",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      22,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cinema",
    "query": "SELECT count(*) FROM cinema",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "cinema"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "cinema"
    ],
    "question": "How many cinema do we have?",
    "question_toks": [
      "How",
      "many",
      "cinema",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cinema",
    "query": "SELECT count(*) FROM cinema",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "cinema"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "cinema"
    ],
    "question": "Count the number of cinemas.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "cinemas",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cinema",
    "query": "SELECT name ,  openning_year ,  capacity FROM cinema",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "openning_year",
      ",",
      "capacity",
      "FROM",
      "cinema"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "openning_year",
      ",",
      "capacity",
      "from",
      "cinema"
    ],
    "question": "Show name, opening year, and capacity for each cinema.",
    "question_toks": [
      "Show",
      "name",
      ",",
      "opening",
      "year",
      ",",
      "and",
      "capacity",
      "for",
      "each",
      "cinema",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cinema",
    "query": "SELECT name ,  LOCATION FROM cinema WHERE capacity  >  (SELECT avg(capacity) FROM cinema)",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "LOCATION",
      "FROM",
      "cinema",
      "WHERE",
      "capacity",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "capacity",
      ")",
      "FROM",
      "cinema",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "location",
      "from",
      "cinema",
      "where",
      "capacity",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "capacity",
      ")",
      "from",
      "cinema",
      ")"
    ],
    "question": "Show the cinema name and location for cinemas with capacity above average.",
    "question_toks": [
      "Show",
      "the",
      "cinema",
      "name",
      "and",
      "location",
      "for",
      "cinemas",
      "with",
      "capacity",
      "above",
      "average",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      11,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cinema",
    "query": "SELECT avg(capacity) ,  min(capacity) ,  max(capacity) FROM cinema WHERE openning_year  >=  2011",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "capacity",
      ")",
      ",",
      "min",
      "(",
      "capacity",
      ")",
      ",",
      "max",
      "(",
      "capacity",
      ")",
      "FROM",
      "cinema",
      "WHERE",
      "openning_year",
      ">",
      "=",
      "2011"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "capacity",
      ")",
      ",",
      "min",
      "(",
      "capacity",
      ")",
      ",",
      "max",
      "(",
      "capacity",
      ")",
      "from",
      "cinema",
      "where",
      "openning_year",
      ">",
      "=",
      "value"
    ],
    "question": "Show the average, minimum, and maximum capacity for all the cinemas opened in year 2011 or later.",
    "question_toks": [
      "Show",
      "the",
      "average",
      ",",
      "minimum",
      ",",
      "and",
      "maximum",
      "capacity",
      "for",
      "all",
      "the",
      "cinemas",
      "opened",
      "in",
      "year",
      "2011",
      "or",
      "later",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          2011.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cinema",
    "query": "SELECT title ,  directed_by FROM film",
    "query_toks": [
      "SELECT",
      "title",
      ",",
      "directed_by",
      "FROM",
      "film"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      ",",
      "directed_by",
      "from",
      "film"
    ],
    "question": "Show the title and director for all films.",
    "question_toks": [
      "Show",
      "the",
      "title",
      "and",
      "director",
      "for",
      "all",
      "films",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cinema",
    "query": "SELECT title ,  directed_by FROM film",
    "query_toks": [
      "SELECT",
      "title",
      ",",
      "directed_by",
      "FROM",
      "film"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      ",",
      "directed_by",
      "from",
      "film"
    ],
    "question": "What are the title and director of each film?",
    "question_toks": [
      "What",
      "are",
      "the",
      "title",
      "and",
      "director",
      "of",
      "each",
      "film",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cinema",
    "query": "SELECT title ,  directed_by FROM film WHERE film_id NOT IN (SELECT film_id FROM schedule)",
    "query_toks": [
      "SELECT",
      "title",
      ",",
      "directed_by",
      "FROM",
      "film",
      "WHERE",
      "film_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "film_id",
      "FROM",
      "schedule",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      ",",
      "directed_by",
      "from",
      "film",
      "where",
      "film_id",
      "not",
      "in",
      "(",
      "select",
      "film_id",
      "from",
      "schedule",
      ")"
    ],
    "question": "What are the title and director of the films without any schedule?",
    "question_toks": [
      "What",
      "are",
      "the",
      "title",
      "and",
      "director",
      "of",
      "the",
      "films",
      "without",
      "any",
      "schedule",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      14,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cinema",
    "query": "SELECT count(*) FROM film WHERE title LIKE \"%Dummy%\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "film",
      "WHERE",
      "title",
      "LIKE",
      "``",
      "%",
      "Dummy",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "film",
      "where",
      "title",
      "like",
      "value"
    ],
    "question": "How many films have the word 'Dummy' in their titles?",
    "question_toks": [
      "How",
      "many",
      "films",
      "have",
      "the",
      "word",
      "'Dummy",
      "'",
      "in",
      "their",
      "titles",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"%Dummy%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cinema",
    "query": "SELECT count(*) FROM film WHERE title LIKE \"%Dummy%\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "film",
      "WHERE",
      "title",
      "LIKE",
      "``",
      "%",
      "Dummy",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "film",
      "where",
      "title",
      "like",
      "value"
    ],
    "question": "Count the number of films whose title contains the word 'Dummy'.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "films",
      "whose",
      "title",
      "contains",
      "the",
      "word",
      "'Dummy",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"%Dummy%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_for_hire",
    "query": "SELECT count(DISTINCT product_type_code) FROM products_for_hire",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "product_type_code",
      ")",
      "FROM",
      "products_for_hire"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "product_type_code",
      ")",
      "from",
      "products_for_hire"
    ],
    "question": "How many different product types are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "product",
      "types",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                24,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_for_hire",
    "query": "SELECT avg(amount_due) FROM payments",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "amount_due",
      ")",
      "FROM",
      "payments"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "amount_due",
      ")",
      "from",
      "payments"
    ],
    "question": "What is the average amount due for all the payments?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "amount",
      "due",
      "for",
      "all",
      "the",
      "payments",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_for_hire",
    "query": "SELECT max(booked_count) ,  min(booked_count) ,  avg(booked_count) FROM products_booked",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "booked_count",
      ")",
      ",",
      "min",
      "(",
      "booked_count",
      ")",
      ",",
      "avg",
      "(",
      "booked_count",
      ")",
      "FROM",
      "products_booked"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "booked_count",
      ")",
      ",",
      "min",
      "(",
      "booked_count",
      ")",
      ",",
      "avg",
      "(",
      "booked_count",
      ")",
      "from",
      "products_booked"
    ],
    "question": "What are the maximum, minimum, and average booked count for the products booked?",
    "question_toks": [
      "What",
      "are",
      "the",
      "maximum",
      ",",
      "minimum",
      ",",
      "and",
      "average",
      "booked",
      "count",
      "for",
      "the",
      "products",
      "booked",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                40,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                40,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                40,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_for_hire",
    "query": "SELECT daily_hire_cost FROM Products_for_hire WHERE product_name LIKE '%Book%'",
    "query_toks": [
      "SELECT",
      "daily_hire_cost",
      "FROM",
      "Products_for_hire",
      "WHERE",
      "product_name",
      "LIKE",
      "'",
      "%",
      "Book",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "daily_hire_cost",
      "from",
      "products_for_hire",
      "where",
      "product_name",
      "like",
      "value"
    ],
    "question": "What are the daily hire costs for the products with substring 'Book' in its name?",
    "question_toks": [
      "What",
      "are",
      "the",
      "daily",
      "hire",
      "costs",
      "for",
      "the",
      "products",
      "with",
      "substring",
      "'Book",
      "'",
      "in",
      "its",
      "name",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"%Book%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_for_hire",
    "query": "SELECT count(*) FROM Products_for_hire WHERE product_id NOT IN ( SELECT product_id FROM products_booked WHERE booked_amount  >  200 )",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Products_for_hire",
      "WHERE",
      "product_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "product_id",
      "FROM",
      "products_booked",
      "WHERE",
      "booked_amount",
      ">",
      "200",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "products_for_hire",
      "where",
      "product_id",
      "not",
      "in",
      "(",
      "select",
      "product_id",
      "from",
      "products_booked",
      "where",
      "booked_amount",
      ">",
      "value",
      ")"
    ],
    "question": "How many products are never booked with amount higher than 200?",
    "question_toks": [
      "How",
      "many",
      "products",
      "are",
      "never",
      "booked",
      "with",
      "amount",
      "higher",
      "than",
      "200",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  5
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      37,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                3,
                [
                  0,
                  [
                    0,
                    41,
                    false
                  ],
                  null
                ],
                200.0,
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_for_hire",
    "query": "SELECT payment_date FROM payments WHERE amount_paid  >  300 OR payment_type_code  =  'Check'",
    "query_toks": [
      "SELECT",
      "payment_date",
      "FROM",
      "payments",
      "WHERE",
      "amount_paid",
      ">",
      "300",
      "OR",
      "payment_type_code",
      "=",
      "'Check",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "payment_date",
      "from",
      "payments",
      "where",
      "amount_paid",
      ">",
      "value",
      "or",
      "payment_type_code",
      "=",
      "value"
    ],
    "question": "What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check'",
    "question_toks": [
      "What",
      "are",
      "the",
      "payment",
      "date",
      "of",
      "the",
      "payment",
      "with",
      "amount",
      "paid",
      "higher",
      "than",
      "300",
      "or",
      "with",
      "payment",
      "type",
      "is",
      "'Check",
      "'"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                33,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          300.0,
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              31,
              false
            ],
            null
          ],
          "\"Check\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_for_hire",
    "query": "SELECT product_name ,  product_description FROM products_for_hire WHERE product_type_code  =  'Cutlery' AND daily_hire_cost  <  20",
    "query_toks": [
      "SELECT",
      "product_name",
      ",",
      "product_description",
      "FROM",
      "products_for_hire",
      "WHERE",
      "product_type_code",
      "=",
      "'Cutlery",
      "'",
      "AND",
      "daily_hire_cost",
      "<",
      "20"
    ],
    "query_toks_no_value": [
      "select",
      "product_name",
      ",",
      "product_description",
      "from",
      "products_for_hire",
      "where",
      "product_type_code",
      "=",
      "value",
      "and",
      "daily_hire_cost",
      "<",
      "value"
    ],
    "question": "What are the names and descriptions of the products that are of 'Cutlery' type and have daily hire cost lower than 20?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "descriptions",
      "of",
      "the",
      "products",
      "that",
      "are",
      "of",
      "'Cutlery",
      "'",
      "type",
      "and",
      "have",
      "daily",
      "hire",
      "cost",
      "lower",
      "than",
      "20",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Cutlery\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          20.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "phone_market",
    "query": "SELECT count(*) FROM phone",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "phone"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "phone"
    ],
    "question": "How many phones are there?",
    "question_toks": [
      "How",
      "many",
      "phones",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "phone_market",
    "query": "SELECT Memory_in_G ,  Carrier FROM phone",
    "query_toks": [
      "SELECT",
      "Memory_in_G",
      ",",
      "Carrier",
      "FROM",
      "phone"
    ],
    "query_toks_no_value": [
      "select",
      "memory_in_g",
      ",",
      "carrier",
      "from",
      "phone"
    ],
    "question": "What are the memories and carriers of phones?",
    "question_toks": [
      "What",
      "are",
      "the",
      "memories",
      "and",
      "carriers",
      "of",
      "phones",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "phone_market",
    "query": "SELECT Name FROM phone WHERE Carrier  =  \"Sprint\" OR Carrier  =  \"TMobile\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "phone",
      "WHERE",
      "Carrier",
      "=",
      "``",
      "Sprint",
      "''",
      "OR",
      "Carrier",
      "=",
      "``",
      "TMobile",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "phone",
      "where",
      "carrier",
      "=",
      "value",
      "or",
      "carrier",
      "=",
      "value"
    ],
    "question": "Show the names of phones with carrier either \"Sprint\" or \"TMobile\".",
    "question_toks": [
      "Show",
      "the",
      "names",
      "of",
      "phones",
      "with",
      "carrier",
      "either",
      "``",
      "Sprint",
      "''",
      "or",
      "``",
      "TMobile",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Sprint\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"TMobile\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "phone_market",
    "query": "SELECT Name FROM phone WHERE Phone_id NOT IN (SELECT Phone_ID FROM phone_market)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "phone",
      "WHERE",
      "Phone_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Phone_ID",
      "FROM",
      "phone_market",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "phone",
      "where",
      "phone_id",
      "not",
      "in",
      "(",
      "select",
      "phone_id",
      "from",
      "phone_market",
      ")"
    ],
    "question": "List the names of phones that are not on any market.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "phones",
      "that",
      "are",
      "not",
      "on",
      "any",
      "market",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      12,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gas_company",
    "query": "SELECT count(*) FROM company",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "company"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "company"
    ],
    "question": "How many gas companies are there?",
    "question_toks": [
      "How",
      "many",
      "gas",
      "companies",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gas_company",
    "query": "SELECT count(*) FROM company",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "company"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "company"
    ],
    "question": "What is the total number of companies?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "companies",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gas_company",
    "query": "SELECT company ,  main_industry FROM company WHERE headquarters != 'USA'",
    "query_toks": [
      "SELECT",
      "company",
      ",",
      "main_industry",
      "FROM",
      "company",
      "WHERE",
      "headquarters",
      "!",
      "=",
      "'USA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      ",",
      "main_industry",
      "from",
      "company",
      "where",
      "headquarters",
      "!",
      "=",
      "value"
    ],
    "question": "Show the company name and the main industry for all companies whose headquarters are not from USA.",
    "question_toks": [
      "Show",
      "the",
      "company",
      "name",
      "and",
      "the",
      "main",
      "industry",
      "for",
      "all",
      "companies",
      "whose",
      "headquarters",
      "are",
      "not",
      "from",
      "USA",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"USA\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gas_company",
    "query": "SELECT company ,  main_industry FROM company WHERE headquarters != 'USA'",
    "query_toks": [
      "SELECT",
      "company",
      ",",
      "main_industry",
      "FROM",
      "company",
      "WHERE",
      "headquarters",
      "!",
      "=",
      "'USA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      ",",
      "main_industry",
      "from",
      "company",
      "where",
      "headquarters",
      "!",
      "=",
      "value"
    ],
    "question": "What are the companies and main industries of all companies that are not headquartered in the United States?",
    "question_toks": [
      "What",
      "are",
      "the",
      "companies",
      "and",
      "main",
      "industries",
      "of",
      "all",
      "companies",
      "that",
      "are",
      "not",
      "headquartered",
      "in",
      "the",
      "United",
      "States",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"USA\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gas_company",
    "query": "SELECT min(market_value) ,  max(market_value) ,  avg(market_value) FROM company",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "market_value",
      ")",
      ",",
      "max",
      "(",
      "market_value",
      ")",
      ",",
      "avg",
      "(",
      "market_value",
      ")",
      "FROM",
      "company"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "market_value",
      ")",
      ",",
      "max",
      "(",
      "market_value",
      ")",
      ",",
      "avg",
      "(",
      "market_value",
      ")",
      "from",
      "company"
    ],
    "question": "Show minimum, maximum, and average market value for all companies.",
    "question_toks": [
      "Show",
      "minimum",
      ",",
      "maximum",
      ",",
      "and",
      "average",
      "market",
      "value",
      "for",
      "all",
      "companies",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gas_company",
    "query": "SELECT min(market_value) ,  max(market_value) ,  avg(market_value) FROM company",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "market_value",
      ")",
      ",",
      "max",
      "(",
      "market_value",
      ")",
      ",",
      "avg",
      "(",
      "market_value",
      ")",
      "FROM",
      "company"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "market_value",
      ")",
      ",",
      "max",
      "(",
      "market_value",
      ")",
      ",",
      "avg",
      "(",
      "market_value",
      ")",
      "from",
      "company"
    ],
    "question": "What is the minimum, maximum, and average market value for every company?",
    "question_toks": [
      "What",
      "is",
      "the",
      "minimum",
      ",",
      "maximum",
      ",",
      "and",
      "average",
      "market",
      "value",
      "for",
      "every",
      "company",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gas_company",
    "query": "SELECT count(*) FROM gas_station WHERE open_year BETWEEN 2000 AND 2005",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "gas_station",
      "WHERE",
      "open_year",
      "BETWEEN",
      "2000",
      "AND",
      "2005"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "gas_station",
      "where",
      "open_year",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "How many gas station are opened between 2000 and 2005?",
    "question_toks": [
      "How",
      "many",
      "gas",
      "station",
      "are",
      "opened",
      "between",
      "2000",
      "and",
      "2005",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          2000.0,
          2005.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gas_company",
    "query": "SELECT count(*) FROM gas_station WHERE open_year BETWEEN 2000 AND 2005",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "gas_station",
      "WHERE",
      "open_year",
      "BETWEEN",
      "2000",
      "AND",
      "2005"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "gas_station",
      "where",
      "open_year",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What is the total number of gas stations that opened between 2000 and 2005?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "gas",
      "stations",
      "that",
      "opened",
      "between",
      "2000",
      "and",
      "2005",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          2000.0,
          2005.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gas_company",
    "query": "SELECT company ,  main_industry FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company)",
    "query_toks": [
      "SELECT",
      "company",
      ",",
      "main_industry",
      "FROM",
      "company",
      "WHERE",
      "company_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "company_id",
      "FROM",
      "station_company",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      ",",
      "main_industry",
      "from",
      "company",
      "where",
      "company_id",
      "not",
      "in",
      "(",
      "select",
      "company_id",
      "from",
      "station_company",
      ")"
    ],
    "question": "Show company name and main industry without a gas station.",
    "question_toks": [
      "Show",
      "company",
      "name",
      "and",
      "main",
      "industry",
      "without",
      "a",
      "gas",
      "station",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      17,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gas_company",
    "query": "SELECT company ,  main_industry FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company)",
    "query_toks": [
      "SELECT",
      "company",
      ",",
      "main_industry",
      "FROM",
      "company",
      "WHERE",
      "company_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "company_id",
      "FROM",
      "station_company",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      ",",
      "main_industry",
      "from",
      "company",
      "where",
      "company_id",
      "not",
      "in",
      "(",
      "select",
      "company_id",
      "from",
      "station_company",
      ")"
    ],
    "question": "What are the main industries of the companies without gas stations and what are the companies?",
    "question_toks": [
      "What",
      "are",
      "the",
      "main",
      "industries",
      "of",
      "the",
      "companies",
      "without",
      "gas",
      "stations",
      "and",
      "what",
      "are",
      "the",
      "companies",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      17,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_people",
    "query": "SELECT count(*) FROM region",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "region"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "region"
    ],
    "question": "How many regions do we have?",
    "question_toks": [
      "How",
      "many",
      "regions",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_people",
    "query": "SELECT count(*) FROM region",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "region"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "region"
    ],
    "question": "Count the number of regions.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "regions",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_people",
    "query": "SELECT count(DISTINCT party_name) FROM party",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "party_name",
      ")",
      "FROM",
      "party"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "party_name",
      ")",
      "from",
      "party"
    ],
    "question": "How many parties do we have?",
    "question_toks": [
      "How",
      "many",
      "parties",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_people",
    "query": "SELECT count(DISTINCT party_name) FROM party",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "party_name",
      ")",
      "FROM",
      "party"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "party_name",
      ")",
      "from",
      "party"
    ],
    "question": "Count the number of different parties.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "parties",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_people",
    "query": "SELECT minister FROM party WHERE took_office  >  1961 OR took_office  <  1959",
    "query_toks": [
      "SELECT",
      "minister",
      "FROM",
      "party",
      "WHERE",
      "took_office",
      ">",
      "1961",
      "OR",
      "took_office",
      "<",
      "1959"
    ],
    "query_toks_no_value": [
      "select",
      "minister",
      "from",
      "party",
      "where",
      "took_office",
      ">",
      "value",
      "or",
      "took_office",
      "<",
      "value"
    ],
    "question": "Show the minister who took office after 1961 or before 1959.",
    "question_toks": [
      "Show",
      "the",
      "minister",
      "who",
      "took",
      "office",
      "after",
      "1961",
      "or",
      "before",
      "1959",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          1961.0,
          null
        ],
        "or",
        [
          false,
          4,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          1959.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_people",
    "query": "SELECT minister FROM party WHERE took_office  >  1961 OR took_office  <  1959",
    "query_toks": [
      "SELECT",
      "minister",
      "FROM",
      "party",
      "WHERE",
      "took_office",
      ">",
      "1961",
      "OR",
      "took_office",
      "<",
      "1959"
    ],
    "query_toks_no_value": [
      "select",
      "minister",
      "from",
      "party",
      "where",
      "took_office",
      ">",
      "value",
      "or",
      "took_office",
      "<",
      "value"
    ],
    "question": "Who are the ministers who took office after 1961 or before 1959?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "ministers",
      "who",
      "took",
      "office",
      "after",
      "1961",
      "or",
      "before",
      "1959",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          1961.0,
          null
        ],
        "or",
        [
          false,
          4,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          1959.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_people",
    "query": "SELECT minister FROM party WHERE party_name != 'Progress Party'",
    "query_toks": [
      "SELECT",
      "minister",
      "FROM",
      "party",
      "WHERE",
      "party_name",
      "!",
      "=",
      "'Progress",
      "Party",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "minister",
      "from",
      "party",
      "where",
      "party_name",
      "!",
      "=",
      "value"
    ],
    "question": "Show all ministers who do not belong to Progress Party.",
    "question_toks": [
      "Show",
      "all",
      "ministers",
      "who",
      "do",
      "not",
      "belong",
      "to",
      "Progress",
      "Party",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Progress Party\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_people",
    "query": "SELECT minister FROM party WHERE party_name != 'Progress Party'",
    "query_toks": [
      "SELECT",
      "minister",
      "FROM",
      "party",
      "WHERE",
      "party_name",
      "!",
      "=",
      "'Progress",
      "Party",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "minister",
      "from",
      "party",
      "where",
      "party_name",
      "!",
      "=",
      "value"
    ],
    "question": "Which ministers are not a part of the Progress Party?",
    "question_toks": [
      "Which",
      "ministers",
      "are",
      "not",
      "a",
      "part",
      "of",
      "the",
      "Progress",
      "Party",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Progress Party\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_people",
    "query": "SELECT party_name FROM party WHERE party_id NOT IN (SELECT party_id FROM Member)",
    "query_toks": [
      "SELECT",
      "party_name",
      "FROM",
      "party",
      "WHERE",
      "party_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "party_id",
      "FROM",
      "Member",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "party_name",
      "from",
      "party",
      "where",
      "party_id",
      "not",
      "in",
      "(",
      "select",
      "party_id",
      "from",
      "member",
      ")"
    ],
    "question": "Show names of parties that does not have any members.",
    "question_toks": [
      "Show",
      "names",
      "of",
      "parties",
      "that",
      "does",
      "not",
      "have",
      "any",
      "members",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      15,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_people",
    "query": "SELECT party_name FROM party WHERE party_id NOT IN (SELECT party_id FROM Member)",
    "query_toks": [
      "SELECT",
      "party_name",
      "FROM",
      "party",
      "WHERE",
      "party_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "party_id",
      "FROM",
      "Member",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "party_name",
      "from",
      "party",
      "where",
      "party_id",
      "not",
      "in",
      "(",
      "select",
      "party_id",
      "from",
      "member",
      ")"
    ],
    "question": "What are the names of parties that have no members?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "parties",
      "that",
      "have",
      "no",
      "members",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      15,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_people",
    "query": "SELECT count(*) FROM party_events",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "party_events"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "party_events"
    ],
    "question": "How many party events do we have?",
    "question_toks": [
      "How",
      "many",
      "party",
      "events",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_people",
    "query": "SELECT count(*) FROM party_events",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "party_events"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "party_events"
    ],
    "question": "Count the number of party events.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "party",
      "events",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pilot_record",
    "query": "SELECT count(*) FROM pilot",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "pilot"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "pilot"
    ],
    "question": "How many pilots are there?",
    "question_toks": [
      "How",
      "many",
      "pilots",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pilot_record",
    "query": "SELECT POSITION ,  Team FROM pilot",
    "query_toks": [
      "SELECT",
      "POSITION",
      ",",
      "Team",
      "FROM",
      "pilot"
    ],
    "query_toks_no_value": [
      "select",
      "position",
      ",",
      "team",
      "from",
      "pilot"
    ],
    "question": "What are the positions and teams of pilots?",
    "question_toks": [
      "What",
      "are",
      "the",
      "positions",
      "and",
      "teams",
      "of",
      "pilots",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pilot_record",
    "query": "SELECT Pilot_name FROM pilot WHERE Team  =  \"Bradley\" OR Team  =  \"Fordham\"",
    "query_toks": [
      "SELECT",
      "Pilot_name",
      "FROM",
      "pilot",
      "WHERE",
      "Team",
      "=",
      "``",
      "Bradley",
      "''",
      "OR",
      "Team",
      "=",
      "``",
      "Fordham",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "pilot_name",
      "from",
      "pilot",
      "where",
      "team",
      "=",
      "value",
      "or",
      "team",
      "=",
      "value"
    ],
    "question": "Show the names of pilots from team \"Bradley\" or \"Fordham\".",
    "question_toks": [
      "Show",
      "the",
      "names",
      "of",
      "pilots",
      "from",
      "team",
      "``",
      "Bradley",
      "''",
      "or",
      "``",
      "Fordham",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"Bradley\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"Fordham\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pilot_record",
    "query": "SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record)",
    "query_toks": [
      "SELECT",
      "Pilot_name",
      "FROM",
      "pilot",
      "WHERE",
      "Pilot_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Pilot_ID",
      "FROM",
      "pilot_record",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "pilot_name",
      "from",
      "pilot",
      "where",
      "pilot_id",
      "not",
      "in",
      "(",
      "select",
      "pilot_id",
      "from",
      "pilot_record",
      ")"
    ],
    "question": "List the names of pilots that do not have any record.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "pilots",
      "that",
      "do",
      "not",
      "have",
      "any",
      "record",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      17,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT document_status_code FROM Ref_Document_Status;",
    "query_toks": [
      "SELECT",
      "document_status_code",
      "FROM",
      "Ref_Document_Status",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "document_status_code",
      "from",
      "ref_document_status"
    ],
    "question": "What document status codes do we have?",
    "question_toks": [
      "What",
      "document",
      "status",
      "codes",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT document_status_description FROM Ref_Document_Status WHERE document_status_code = \"working\";",
    "query_toks": [
      "SELECT",
      "document_status_description",
      "FROM",
      "Ref_Document_Status",
      "WHERE",
      "document_status_code",
      "=",
      "``",
      "working",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "document_status_description",
      "from",
      "ref_document_status",
      "where",
      "document_status_code",
      "=",
      "value"
    ],
    "question": "What is the description of document status code 'working'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "description",
      "of",
      "document",
      "status",
      "code",
      "'working",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"working\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT document_type_code FROM Ref_Document_Types;",
    "query_toks": [
      "SELECT",
      "document_type_code",
      "FROM",
      "Ref_Document_Types",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      "from",
      "ref_document_types"
    ],
    "question": "What document type codes do we have?",
    "question_toks": [
      "What",
      "document",
      "type",
      "codes",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT document_type_description FROM Ref_Document_Types WHERE document_type_code = \"Paper\";",
    "query_toks": [
      "SELECT",
      "document_type_description",
      "FROM",
      "Ref_Document_Types",
      "WHERE",
      "document_type_code",
      "=",
      "``",
      "Paper",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_description",
      "from",
      "ref_document_types",
      "where",
      "document_type_code",
      "=",
      "value"
    ],
    "question": "What is the description of document type 'Paper'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "description",
      "of",
      "document",
      "type",
      "'Paper",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"Paper\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT shipping_agent_name FROM Ref_Shipping_Agents;",
    "query_toks": [
      "SELECT",
      "shipping_agent_name",
      "FROM",
      "Ref_Shipping_Agents",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "shipping_agent_name",
      "from",
      "ref_shipping_agents"
    ],
    "question": "What are the shipping agent names?",
    "question_toks": [
      "What",
      "are",
      "the",
      "shipping",
      "agent",
      "names",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT shipping_agent_code FROM Ref_Shipping_Agents WHERE shipping_agent_name = \"UPS\";",
    "query_toks": [
      "SELECT",
      "shipping_agent_code",
      "FROM",
      "Ref_Shipping_Agents",
      "WHERE",
      "shipping_agent_name",
      "=",
      "``",
      "UPS",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "shipping_agent_code",
      "from",
      "ref_shipping_agents",
      "where",
      "shipping_agent_name",
      "=",
      "value"
    ],
    "question": "What is the shipping agent code of shipping agent UPS?",
    "question_toks": [
      "What",
      "is",
      "the",
      "shipping",
      "agent",
      "code",
      "of",
      "shipping",
      "agent",
      "UPS",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"UPS\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT role_code FROM ROLES;",
    "query_toks": [
      "SELECT",
      "role_code",
      "FROM",
      "ROLES",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "role_code",
      "from",
      "roles"
    ],
    "question": "What are all role codes?",
    "question_toks": [
      "What",
      "are",
      "all",
      "role",
      "codes",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT role_description FROM ROLES WHERE role_code = \"ED\";",
    "query_toks": [
      "SELECT",
      "role_description",
      "FROM",
      "ROLES",
      "WHERE",
      "role_code",
      "=",
      "``",
      "ED",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "role_description",
      "from",
      "roles",
      "where",
      "role_code",
      "=",
      "value"
    ],
    "question": "What is the description of role code ED?",
    "question_toks": [
      "What",
      "is",
      "the",
      "description",
      "of",
      "role",
      "code",
      "ED",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"ED\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT count(*) FROM Employees;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Employees",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "employees"
    ],
    "question": "How many employees do we have?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT document_id ,  receipt_date FROM Documents;",
    "query_toks": [
      "SELECT",
      "document_id",
      ",",
      "receipt_date",
      "FROM",
      "Documents",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "document_id",
      ",",
      "receipt_date",
      "from",
      "documents"
    ],
    "question": "List all document ids and receipt dates of documents.",
    "question_toks": [
      "List",
      "all",
      "document",
      "ids",
      "and",
      "receipt",
      "dates",
      "of",
      "documents",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT count(*) FROM Documents WHERE document_status_code = \"done\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Documents",
      "WHERE",
      "document_status_code",
      "=",
      "``",
      "done",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "documents",
      "where",
      "document_status_code",
      "=",
      "value"
    ],
    "question": "How many documents have the status code done?",
    "question_toks": [
      "How",
      "many",
      "documents",
      "have",
      "the",
      "status",
      "code",
      "done",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"done\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT document_type_code FROM Documents WHERE document_id = 2;",
    "query_toks": [
      "SELECT",
      "document_type_code",
      "FROM",
      "Documents",
      "WHERE",
      "document_id",
      "=",
      "2",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      "from",
      "documents",
      "where",
      "document_id",
      "=",
      "value"
    ],
    "question": "List the document type code for the document with the id 2.",
    "question_toks": [
      "List",
      "the",
      "document",
      "type",
      "code",
      "for",
      "the",
      "document",
      "with",
      "the",
      "id",
      "2",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT document_id FROM Documents WHERE document_status_code = \"done\" AND document_type_code = \"Paper\";",
    "query_toks": [
      "SELECT",
      "document_id",
      "FROM",
      "Documents",
      "WHERE",
      "document_status_code",
      "=",
      "``",
      "done",
      "''",
      "AND",
      "document_type_code",
      "=",
      "``",
      "Paper",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "document_id",
      "from",
      "documents",
      "where",
      "document_status_code",
      "=",
      "value",
      "and",
      "document_type_code",
      "=",
      "value"
    ],
    "question": "List the document ids for any documents with the status code done and the type code paper.",
    "question_toks": [
      "List",
      "the",
      "document",
      "ids",
      "for",
      "any",
      "documents",
      "with",
      "the",
      "status",
      "code",
      "done",
      "and",
      "the",
      "type",
      "code",
      "paper",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"done\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"Paper\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT receipt_date FROM Documents WHERE document_id = 3;",
    "query_toks": [
      "SELECT",
      "receipt_date",
      "FROM",
      "Documents",
      "WHERE",
      "document_id",
      "=",
      "3",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "receipt_date",
      "from",
      "documents",
      "where",
      "document_id",
      "=",
      "value"
    ],
    "question": "What is the receipt date of the document with id 3?",
    "question_toks": [
      "What",
      "is",
      "the",
      "receipt",
      "date",
      "of",
      "the",
      "document",
      "with",
      "id",
      "3",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT mailing_date FROM Documents_Mailed WHERE document_id = 7;",
    "query_toks": [
      "SELECT",
      "mailing_date",
      "FROM",
      "Documents_Mailed",
      "WHERE",
      "document_id",
      "=",
      "7",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "mailing_date",
      "from",
      "documents_mailed",
      "where",
      "document_id",
      "=",
      "value"
    ],
    "question": "What is the mail date of the document with id 7?",
    "question_toks": [
      "What",
      "is",
      "the",
      "mail",
      "date",
      "of",
      "the",
      "document",
      "with",
      "id",
      "7",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              33,
              false
            ],
            null
          ],
          7.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT draft_details FROM Document_Drafts WHERE document_id = 7;",
    "query_toks": [
      "SELECT",
      "draft_details",
      "FROM",
      "Document_Drafts",
      "WHERE",
      "document_id",
      "=",
      "7",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "draft_details",
      "from",
      "document_drafts",
      "where",
      "document_id",
      "=",
      "value"
    ],
    "question": "What is draft detail of the document with id 7?",
    "question_toks": [
      "What",
      "is",
      "draft",
      "detail",
      "of",
      "the",
      "document",
      "with",
      "id",
      "7",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          7.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT count(*) FROM Draft_Copies WHERE document_id = 2;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Draft_Copies",
      "WHERE",
      "document_id",
      "=",
      "2",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "draft_copies",
      "where",
      "document_id",
      "=",
      "value"
    ],
    "question": "How many draft copies does the document with id 2 have?",
    "question_toks": [
      "How",
      "many",
      "draft",
      "copies",
      "does",
      "the",
      "document",
      "with",
      "id",
      "2",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_1",
    "query": "SELECT Dependent_name FROM dependent WHERE relationship  =  'Spouse'",
    "query_toks": [
      "SELECT",
      "Dependent_name",
      "FROM",
      "dependent",
      "WHERE",
      "relationship",
      "=",
      "'Spouse",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "dependent_name",
      "from",
      "dependent",
      "where",
      "relationship",
      "=",
      "value"
    ],
    "question": "find all dependent names who have a spouse relation with some employee.",
    "question_toks": [
      "find",
      "all",
      "dependent",
      "names",
      "who",
      "have",
      "a",
      "spouse",
      "relation",
      "with",
      "some",
      "employee",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"Spouse\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_1",
    "query": "SELECT count(*) FROM dependent WHERE sex  =  'F'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "dependent",
      "WHERE",
      "sex",
      "=",
      "'F",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "dependent",
      "where",
      "sex",
      "=",
      "value"
    ],
    "question": "how many female dependents are there?",
    "question_toks": [
      "how",
      "many",
      "female",
      "dependents",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"F\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_1",
    "query": "SELECT fname ,  lname FROM employee WHERE salary  >  30000",
    "query_toks": [
      "SELECT",
      "fname",
      ",",
      "lname",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "30000"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      ",",
      "lname",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Return the first names and last names of employees who earn more than 30000 in salary.",
    "question_toks": [
      "Return",
      "the",
      "first",
      "names",
      "and",
      "last",
      "names",
      "of",
      "employees",
      "who",
      "earn",
      "more",
      "than",
      "30000",
      "in",
      "salary",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          30000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "local_govt_in_alabama",
    "query": "SELECT Participant_ID ,  Participant_Type_Code ,  Participant_Details FROM  Participants",
    "query_toks": [
      "SELECT",
      "Participant_ID",
      ",",
      "Participant_Type_Code",
      ",",
      "Participant_Details",
      "FROM",
      "Participants"
    ],
    "query_toks_no_value": [
      "select",
      "participant_id",
      ",",
      "participant_type_code",
      ",",
      "participant_details",
      "from",
      "participants"
    ],
    "question": "What are all the the participant ids, type code and details?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "the",
      "participant",
      "ids",
      ",",
      "type",
      "code",
      "and",
      "details",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "local_govt_in_alabama",
    "query": "SELECT count(*) FROM participants WHERE participant_type_code  =  'Organizer'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "participants",
      "WHERE",
      "participant_type_code",
      "=",
      "'Organizer",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "participants",
      "where",
      "participant_type_code",
      "=",
      "value"
    ],
    "question": "How many participants belong to the type 'Organizer'?",
    "question_toks": [
      "How",
      "many",
      "participants",
      "belong",
      "to",
      "the",
      "type",
      "'Organizer",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Organizer\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "local_govt_in_alabama",
    "query": "SELECT service_id ,  event_details FROM EVENTS",
    "query_toks": [
      "SELECT",
      "service_id",
      ",",
      "event_details",
      "FROM",
      "EVENTS"
    ],
    "query_toks_no_value": [
      "select",
      "service_id",
      ",",
      "event_details",
      "from",
      "events"
    ],
    "question": "List the service id and details for the events.",
    "question_toks": [
      "List",
      "the",
      "service",
      "id",
      "and",
      "details",
      "for",
      "the",
      "events",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "local_govt_in_alabama",
    "query": "SELECT count(*) FROM EVENTS WHERE event_id NOT IN (SELECT event_id FROM Participants_in_Events)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "EVENTS",
      "WHERE",
      "event_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "event_id",
      "FROM",
      "Participants_in_Events",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "events",
      "where",
      "event_id",
      "not",
      "in",
      "(",
      "select",
      "event_id",
      "from",
      "participants_in_events",
      ")"
    ],
    "question": "How many events did not have any participants?",
    "question_toks": [
      "How",
      "many",
      "events",
      "did",
      "not",
      "have",
      "any",
      "participants",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "local_govt_in_alabama",
    "query": "SELECT count(DISTINCT participant_id) FROM participants_in_Events",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "participant_id",
      ")",
      "FROM",
      "participants_in_Events"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "participant_id",
      ")",
      "from",
      "participants_in_events"
    ],
    "question": "What are all the distinct participant ids who attended any events?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "distinct",
      "participant",
      "ids",
      "who",
      "attended",
      "any",
      "events",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                10,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "formula_1",
    "query": "SELECT name FROM races WHERE YEAR = 2017",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "races",
      "WHERE",
      "YEAR",
      "=",
      "2017"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "races",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "Find the names of all races held in 2017.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "all",
      "races",
      "held",
      "in",
      "2017",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          2017.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "formula_1",
    "query": "SELECT name FROM races WHERE YEAR = 2017",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "races",
      "WHERE",
      "YEAR",
      "=",
      "2017"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "races",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "What are the names of all the races that occurred in the year 2017?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "the",
      "races",
      "that",
      "occurred",
      "in",
      "the",
      "year",
      "2017",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          2017.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "formula_1",
    "query": "SELECT count(DISTINCT driverId) FROM results WHERE raceId NOT IN( SELECT raceId FROM races WHERE YEAR != 2009 )",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "driverId",
      ")",
      "FROM",
      "results",
      "WHERE",
      "raceId",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "raceId",
      "FROM",
      "races",
      "WHERE",
      "YEAR",
      "!",
      "=",
      "2009",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "driverid",
      ")",
      "from",
      "results",
      "where",
      "raceid",
      "not",
      "in",
      "(",
      "select",
      "raceid",
      "from",
      "races",
      "where",
      "year",
      "!",
      "=",
      "value",
      ")"
    ],
    "question": "How many drivers did not participate in the races held in 2009?",
    "question_toks": [
      "How",
      "many",
      "drivers",
      "did",
      "not",
      "participate",
      "in",
      "the",
      "races",
      "held",
      "in",
      "2009",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                45,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              44,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      10,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                7,
                [
                  0,
                  [
                    0,
                    11,
                    false
                  ],
                  null
                ],
                2009.0,
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "formula_1",
    "query": "SELECT count(DISTINCT driverId) FROM results WHERE raceId NOT IN( SELECT raceId FROM races WHERE YEAR != 2009 )",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "driverId",
      ")",
      "FROM",
      "results",
      "WHERE",
      "raceId",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "raceId",
      "FROM",
      "races",
      "WHERE",
      "YEAR",
      "!",
      "=",
      "2009",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "driverid",
      ")",
      "from",
      "results",
      "where",
      "raceid",
      "not",
      "in",
      "(",
      "select",
      "raceid",
      "from",
      "races",
      "where",
      "year",
      "!",
      "=",
      "value",
      ")"
    ],
    "question": "How many drivers did not race in 2009?",
    "question_toks": [
      "How",
      "many",
      "drivers",
      "did",
      "not",
      "race",
      "in",
      "2009",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                45,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              44,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      10,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                7,
                [
                  0,
                  [
                    0,
                    11,
                    false
                  ],
                  null
                ],
                2009.0,
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "formula_1",
    "query": "SELECT forename ,  surname FROM drivers WHERE nationality = \"German\"",
    "query_toks": [
      "SELECT",
      "forename",
      ",",
      "surname",
      "FROM",
      "drivers",
      "WHERE",
      "nationality",
      "=",
      "``",
      "German",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "forename",
      ",",
      "surname",
      "from",
      "drivers",
      "where",
      "nationality",
      "=",
      "value"
    ],
    "question": "Find the forename and surname of drivers whose nationality is German?",
    "question_toks": [
      "Find",
      "the",
      "forename",
      "and",
      "surname",
      "of",
      "drivers",
      "whose",
      "nationality",
      "is",
      "German",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"German\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "formula_1",
    "query": "SELECT forename ,  surname FROM drivers WHERE nationality = \"German\"",
    "query_toks": [
      "SELECT",
      "forename",
      ",",
      "surname",
      "FROM",
      "drivers",
      "WHERE",
      "nationality",
      "=",
      "``",
      "German",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "forename",
      ",",
      "surname",
      "from",
      "drivers",
      "where",
      "nationality",
      "=",
      "value"
    ],
    "question": "What is the first and last name of all the German drivers?",
    "question_toks": [
      "What",
      "is",
      "the",
      "first",
      "and",
      "last",
      "name",
      "of",
      "all",
      "the",
      "German",
      "drivers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"German\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "formula_1",
    "query": "SELECT name FROM races WHERE YEAR BETWEEN 2009 AND 2011",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "races",
      "WHERE",
      "YEAR",
      "BETWEEN",
      "2009",
      "AND",
      "2011"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "races",
      "where",
      "year",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What are the names of races held between 2009 and 2011?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "races",
      "held",
      "between",
      "2009",
      "and",
      "2011",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          2009.0,
          2011.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "formula_1",
    "query": "SELECT name FROM races WHERE YEAR BETWEEN 2009 AND 2011",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "races",
      "WHERE",
      "YEAR",
      "BETWEEN",
      "2009",
      "AND",
      "2011"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "races",
      "where",
      "year",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What are the names of all races held between 2009 and 2011?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "races",
      "held",
      "between",
      "2009",
      "and",
      "2011",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          2009.0,
          2011.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "formula_1",
    "query": "SELECT name FROM races WHERE TIME > \"12:00:00\" OR TIME < \"09:00:00\"",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "races",
      "WHERE",
      "TIME",
      ">",
      "``",
      "12:00:00",
      "''",
      "OR",
      "TIME",
      "<",
      "``",
      "09:00:00",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "races",
      "where",
      "time",
      ">",
      "value",
      "or",
      "time",
      "<",
      "value"
    ],
    "question": "What are the names of races held after 12:00:00 or before 09:00:00?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "races",
      "held",
      "after",
      "12:00:00",
      "or",
      "before",
      "09:00:00",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"12:00:00\"",
          null
        ],
        "or",
        [
          false,
          4,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"09:00:00\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "formula_1",
    "query": "SELECT name FROM races WHERE TIME > \"12:00:00\" OR TIME < \"09:00:00\"",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "races",
      "WHERE",
      "TIME",
      ">",
      "``",
      "12:00:00",
      "''",
      "OR",
      "TIME",
      "<",
      "``",
      "09:00:00",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "races",
      "where",
      "time",
      ">",
      "value",
      "or",
      "time",
      "<",
      "value"
    ],
    "question": "What are the names of all races that occurred after 12:00:00 or before 09:00:00?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "races",
      "that",
      "occurred",
      "after",
      "12:00:00",
      "or",
      "before",
      "09:00:00",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"12:00:00\"",
          null
        ],
        "or",
        [
          false,
          4,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"09:00:00\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "formula_1",
    "query": "SELECT name FROM circuits WHERE country = \"UK\" OR country = \"Malaysia\"",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "circuits",
      "WHERE",
      "country",
      "=",
      "``",
      "UK",
      "''",
      "OR",
      "country",
      "=",
      "``",
      "Malaysia",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "circuits",
      "where",
      "country",
      "=",
      "value",
      "or",
      "country",
      "=",
      "value"
    ],
    "question": "What are the names of circuits that belong to UK or Malaysia?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "circuits",
      "that",
      "belong",
      "to",
      "UK",
      "or",
      "Malaysia",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"UK\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Malaysia\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "formula_1",
    "query": "SELECT name FROM circuits WHERE country = \"UK\" OR country = \"Malaysia\"",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "circuits",
      "WHERE",
      "country",
      "=",
      "``",
      "UK",
      "''",
      "OR",
      "country",
      "=",
      "``",
      "Malaysia",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "circuits",
      "where",
      "country",
      "=",
      "value",
      "or",
      "country",
      "=",
      "value"
    ],
    "question": "What are the names of all the circuits that are in the UK or Malaysia?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "the",
      "circuits",
      "that",
      "are",
      "in",
      "the",
      "UK",
      "or",
      "Malaysia",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"UK\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Malaysia\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "formula_1",
    "query": "SELECT circuitid ,  LOCATION FROM circuits WHERE country = \"France\" OR country = \"Belgium\"",
    "query_toks": [
      "SELECT",
      "circuitid",
      ",",
      "LOCATION",
      "FROM",
      "circuits",
      "WHERE",
      "country",
      "=",
      "``",
      "France",
      "''",
      "OR",
      "country",
      "=",
      "``",
      "Belgium",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "circuitid",
      ",",
      "location",
      "from",
      "circuits",
      "where",
      "country",
      "=",
      "value",
      "or",
      "country",
      "=",
      "value"
    ],
    "question": "Find the id and location of circuits that belong to France or Belgium?",
    "question_toks": [
      "Find",
      "the",
      "id",
      "and",
      "location",
      "of",
      "circuits",
      "that",
      "belong",
      "to",
      "France",
      "or",
      "Belgium",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"France\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Belgium\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "formula_1",
    "query": "SELECT circuitid ,  LOCATION FROM circuits WHERE country = \"France\" OR country = \"Belgium\"",
    "query_toks": [
      "SELECT",
      "circuitid",
      ",",
      "LOCATION",
      "FROM",
      "circuits",
      "WHERE",
      "country",
      "=",
      "``",
      "France",
      "''",
      "OR",
      "country",
      "=",
      "``",
      "Belgium",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "circuitid",
      ",",
      "location",
      "from",
      "circuits",
      "where",
      "country",
      "=",
      "value",
      "or",
      "country",
      "=",
      "value"
    ],
    "question": "What are the ids and locations of all circuits in France or Belgium?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "and",
      "locations",
      "of",
      "all",
      "circuits",
      "in",
      "France",
      "or",
      "Belgium",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"France\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Belgium\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "machine_repair",
    "query": "SELECT count(*) FROM technician",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "technician"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "technician"
    ],
    "question": "How many technicians are there?",
    "question_toks": [
      "How",
      "many",
      "technicians",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "machine_repair",
    "query": "SELECT count(*) FROM technician",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "technician"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "technician"
    ],
    "question": "What is the number of technicians?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "technicians",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "machine_repair",
    "query": "SELECT Team ,  Starting_Year FROM technician",
    "query_toks": [
      "SELECT",
      "Team",
      ",",
      "Starting_Year",
      "FROM",
      "technician"
    ],
    "query_toks_no_value": [
      "select",
      "team",
      ",",
      "starting_year",
      "from",
      "technician"
    ],
    "question": "What are the team and starting year of technicians?",
    "question_toks": [
      "What",
      "are",
      "the",
      "team",
      "and",
      "starting",
      "year",
      "of",
      "technicians",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "machine_repair",
    "query": "SELECT Team ,  Starting_Year FROM technician",
    "query_toks": [
      "SELECT",
      "Team",
      ",",
      "Starting_Year",
      "FROM",
      "technician"
    ],
    "query_toks_no_value": [
      "select",
      "team",
      ",",
      "starting_year",
      "from",
      "technician"
    ],
    "question": "What is the team and starting year for each technician?",
    "question_toks": [
      "What",
      "is",
      "the",
      "team",
      "and",
      "starting",
      "year",
      "for",
      "each",
      "technician",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "machine_repair",
    "query": "SELECT Name FROM technician WHERE Team != \"NYY\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "technician",
      "WHERE",
      "Team",
      "!",
      "=",
      "``",
      "NYY",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "technician",
      "where",
      "team",
      "!",
      "=",
      "value"
    ],
    "question": "List the name of technicians whose team is not \"NYY\".",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "technicians",
      "whose",
      "team",
      "is",
      "not",
      "``",
      "NYY",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"NYY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "machine_repair",
    "query": "SELECT Name FROM technician WHERE Team != \"NYY\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "technician",
      "WHERE",
      "Team",
      "!",
      "=",
      "``",
      "NYY",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "technician",
      "where",
      "team",
      "!",
      "=",
      "value"
    ],
    "question": "What is the name of the technician whose team is not 'NYY'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "technician",
      "whose",
      "team",
      "is",
      "not",
      "'NYY",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"NYY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "machine_repair",
    "query": "SELECT Name FROM technician WHERE Age  =  36 OR Age  =  37",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "technician",
      "WHERE",
      "Age",
      "=",
      "36",
      "OR",
      "Age",
      "=",
      "37"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "technician",
      "where",
      "age",
      "=",
      "value",
      "or",
      "age",
      "=",
      "value"
    ],
    "question": "Show the name of technicians aged either 36 or 37",
    "question_toks": [
      "Show",
      "the",
      "name",
      "of",
      "technicians",
      "aged",
      "either",
      "36",
      "or",
      "37"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          36.0,
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          37.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "machine_repair",
    "query": "SELECT Name FROM technician WHERE Age  =  36 OR Age  =  37",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "technician",
      "WHERE",
      "Age",
      "=",
      "36",
      "OR",
      "Age",
      "=",
      "37"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "technician",
      "where",
      "age",
      "=",
      "value",
      "or",
      "age",
      "=",
      "value"
    ],
    "question": "What are the names of the technicians aged either 36 or 37?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "technicians",
      "aged",
      "either",
      "36",
      "or",
      "37",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          36.0,
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          37.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "machine_repair",
    "query": "SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "technician",
      "WHERE",
      "technician_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "technician_id",
      "FROM",
      "repair_assignment",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "technician",
      "where",
      "technician_id",
      "not",
      "in",
      "(",
      "select",
      "technician_id",
      "from",
      "repair_assignment",
      ")"
    ],
    "question": "List the names of technicians who have not been assigned to repair machines.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "technicians",
      "who",
      "have",
      "not",
      "been",
      "assigned",
      "to",
      "repair",
      "machines",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      17,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "machine_repair",
    "query": "SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "technician",
      "WHERE",
      "technician_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "technician_id",
      "FROM",
      "repair_assignment",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "technician",
      "where",
      "technician_id",
      "not",
      "in",
      "(",
      "select",
      "technician_id",
      "from",
      "repair_assignment",
      ")"
    ],
    "question": "What are the names of the technicians that have not been assigned to repair machines?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "technicians",
      "that",
      "have",
      "not",
      "been",
      "assigned",
      "to",
      "repair",
      "machines",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      17,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entrepreneur",
    "query": "SELECT count(*) FROM entrepreneur",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "entrepreneur"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "entrepreneur"
    ],
    "question": "How many entrepreneurs are there?",
    "question_toks": [
      "How",
      "many",
      "entrepreneurs",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entrepreneur",
    "query": "SELECT count(*) FROM entrepreneur",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "entrepreneur"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "entrepreneur"
    ],
    "question": "Count the number of entrepreneurs.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "entrepreneurs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entrepreneur",
    "query": "SELECT Company ,  Investor FROM entrepreneur",
    "query_toks": [
      "SELECT",
      "Company",
      ",",
      "Investor",
      "FROM",
      "entrepreneur"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      ",",
      "investor",
      "from",
      "entrepreneur"
    ],
    "question": "List the companies and the investors of entrepreneurs.",
    "question_toks": [
      "List",
      "the",
      "companies",
      "and",
      "the",
      "investors",
      "of",
      "entrepreneurs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entrepreneur",
    "query": "SELECT Company ,  Investor FROM entrepreneur",
    "query_toks": [
      "SELECT",
      "Company",
      ",",
      "Investor",
      "FROM",
      "entrepreneur"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      ",",
      "investor",
      "from",
      "entrepreneur"
    ],
    "question": "What are the companies and investors that correspond to each entrepreneur?",
    "question_toks": [
      "What",
      "are",
      "the",
      "companies",
      "and",
      "investors",
      "that",
      "correspond",
      "to",
      "each",
      "entrepreneur",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entrepreneur",
    "query": "SELECT avg(Money_Requested) FROM entrepreneur",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Money_Requested",
      ")",
      "FROM",
      "entrepreneur"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "money_requested",
      ")",
      "from",
      "entrepreneur"
    ],
    "question": "What is the average money requested by all entrepreneurs?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "money",
      "requested",
      "by",
      "all",
      "entrepreneurs",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entrepreneur",
    "query": "SELECT avg(Money_Requested) FROM entrepreneur",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Money_Requested",
      ")",
      "FROM",
      "entrepreneur"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "money_requested",
      ")",
      "from",
      "entrepreneur"
    ],
    "question": "Return the average money requested across all entrepreneurs.",
    "question_toks": [
      "Return",
      "the",
      "average",
      "money",
      "requested",
      "across",
      "all",
      "entrepreneurs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entrepreneur",
    "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM entrepreneur)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "people",
      "WHERE",
      "People_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "People_ID",
      "FROM",
      "entrepreneur",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "people",
      "where",
      "people_id",
      "not",
      "in",
      "(",
      "select",
      "people_id",
      "from",
      "entrepreneur",
      ")"
    ],
    "question": "List the names of people that are not entrepreneurs.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "people",
      "that",
      "are",
      "not",
      "entrepreneurs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      2,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entrepreneur",
    "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM entrepreneur)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "people",
      "WHERE",
      "People_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "People_ID",
      "FROM",
      "entrepreneur",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "people",
      "where",
      "people_id",
      "not",
      "in",
      "(",
      "select",
      "people_id",
      "from",
      "entrepreneur",
      ")"
    ],
    "question": "What are the names of people who are not entrepreneurs?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "people",
      "who",
      "are",
      "not",
      "entrepreneurs",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      2,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entrepreneur",
    "query": "SELECT count(DISTINCT Company) FROM entrepreneur",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Company",
      ")",
      "FROM",
      "entrepreneur"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "company",
      ")",
      "from",
      "entrepreneur"
    ],
    "question": "How many distinct companies are there?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "companies",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entrepreneur",
    "query": "SELECT count(DISTINCT Company) FROM entrepreneur",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Company",
      ")",
      "FROM",
      "entrepreneur"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "company",
      ")",
      "from",
      "entrepreneur"
    ],
    "question": "Count the number of different companies.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "companies",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "perpetrator",
    "query": "SELECT count(*) FROM perpetrator",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "perpetrator"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "perpetrator"
    ],
    "question": "How many perpetrators are there?",
    "question_toks": [
      "How",
      "many",
      "perpetrators",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "perpetrator",
    "query": "SELECT avg(Injured) FROM perpetrator",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Injured",
      ")",
      "FROM",
      "perpetrator"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "injured",
      ")",
      "from",
      "perpetrator"
    ],
    "question": "What is the average number of people injured by all perpetrators?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "people",
      "injured",
      "by",
      "all",
      "perpetrators",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "perpetrator",
    "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM perpetrator)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "people",
      "WHERE",
      "People_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "People_ID",
      "FROM",
      "perpetrator",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "people",
      "where",
      "people_id",
      "not",
      "in",
      "(",
      "select",
      "people_id",
      "from",
      "perpetrator",
      ")"
    ],
    "question": "List the names of people that are not perpetrators.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "people",
      "that",
      "are",
      "not",
      "perpetrators",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      2,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "perpetrator",
    "query": "SELECT count(DISTINCT LOCATION) FROM perpetrator",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "LOCATION",
      ")",
      "FROM",
      "perpetrator"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "location",
      ")",
      "from",
      "perpetrator"
    ],
    "question": "How many distinct locations of perpetrators are there?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "locations",
      "of",
      "perpetrators",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                5,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "perpetrator",
    "query": "SELECT max(YEAR) FROM perpetrator;",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "YEAR",
      ")",
      "FROM",
      "perpetrator",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "year",
      ")",
      "from",
      "perpetrator"
    ],
    "question": "In which year did the most recent crime happen?",
    "question_toks": [
      "In",
      "which",
      "year",
      "did",
      "the",
      "most",
      "recent",
      "crime",
      "happen",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\"",
    "query_toks": [
      "SELECT",
      "campus",
      "FROM",
      "campuses",
      "WHERE",
      "county",
      "=",
      "``",
      "Los",
      "Angeles",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "campus",
      "from",
      "campuses",
      "where",
      "county",
      "=",
      "value"
    ],
    "question": "Report the name of all campuses in Los Angeles county.",
    "question_toks": [
      "Report",
      "the",
      "name",
      "of",
      "all",
      "campuses",
      "in",
      "Los",
      "Angeles",
      "county",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\"",
    "query_toks": [
      "SELECT",
      "campus",
      "FROM",
      "campuses",
      "WHERE",
      "county",
      "=",
      "``",
      "Los",
      "Angeles",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "campus",
      "from",
      "campuses",
      "where",
      "county",
      "=",
      "value"
    ],
    "question": "What campuses are located in the county of Los Angeles?",
    "question_toks": [
      "What",
      "campuses",
      "are",
      "located",
      "in",
      "the",
      "county",
      "of",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT campus FROM campuses WHERE LOCATION  =  \"Chico\"",
    "query_toks": [
      "SELECT",
      "campus",
      "FROM",
      "campuses",
      "WHERE",
      "LOCATION",
      "=",
      "``",
      "Chico",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "campus",
      "from",
      "campuses",
      "where",
      "location",
      "=",
      "value"
    ],
    "question": "What are the names of all campuses located at Chico?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "campuses",
      "located",
      "at",
      "Chico",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Chico\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT campus FROM campuses WHERE LOCATION  =  \"Chico\"",
    "query_toks": [
      "SELECT",
      "campus",
      "FROM",
      "campuses",
      "WHERE",
      "LOCATION",
      "=",
      "``",
      "Chico",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "campus",
      "from",
      "campuses",
      "where",
      "location",
      "=",
      "value"
    ],
    "question": "What campuses are located in Chico?",
    "question_toks": [
      "What",
      "campuses",
      "are",
      "located",
      "in",
      "Chico",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Chico\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT campus FROM campuses WHERE YEAR  =  1958",
    "query_toks": [
      "SELECT",
      "campus",
      "FROM",
      "campuses",
      "WHERE",
      "YEAR",
      "=",
      "1958"
    ],
    "query_toks_no_value": [
      "select",
      "campus",
      "from",
      "campuses",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "Find all the campuses opened in 1958.",
    "question_toks": [
      "Find",
      "all",
      "the",
      "campuses",
      "opened",
      "in",
      "1958",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          1958.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT campus FROM campuses WHERE YEAR  =  1958",
    "query_toks": [
      "SELECT",
      "campus",
      "FROM",
      "campuses",
      "WHERE",
      "YEAR",
      "=",
      "1958"
    ],
    "query_toks_no_value": [
      "select",
      "campus",
      "from",
      "campuses",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "What are the campuses that opened in 1958?",
    "question_toks": [
      "What",
      "are",
      "the",
      "campuses",
      "that",
      "opened",
      "in",
      "1958",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          1958.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT campus FROM campuses WHERE YEAR  <  1800",
    "query_toks": [
      "SELECT",
      "campus",
      "FROM",
      "campuses",
      "WHERE",
      "YEAR",
      "<",
      "1800"
    ],
    "query_toks_no_value": [
      "select",
      "campus",
      "from",
      "campuses",
      "where",
      "year",
      "<",
      "value"
    ],
    "question": "Find the name of the campuses opened before 1800.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "the",
      "campuses",
      "opened",
      "before",
      "1800",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          1800.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT campus FROM campuses WHERE YEAR  <  1800",
    "query_toks": [
      "SELECT",
      "campus",
      "FROM",
      "campuses",
      "WHERE",
      "YEAR",
      "<",
      "1800"
    ],
    "query_toks_no_value": [
      "select",
      "campus",
      "from",
      "campuses",
      "where",
      "year",
      "<",
      "value"
    ],
    "question": "What campuses opened before 1800?",
    "question_toks": [
      "What",
      "campuses",
      "opened",
      "before",
      "1800",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          1800.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT campus FROM campuses WHERE YEAR  >=  1935 AND YEAR  <=  1939",
    "query_toks": [
      "SELECT",
      "campus",
      "FROM",
      "campuses",
      "WHERE",
      "YEAR",
      ">",
      "=",
      "1935",
      "AND",
      "YEAR",
      "<",
      "=",
      "1939"
    ],
    "query_toks_no_value": [
      "select",
      "campus",
      "from",
      "campuses",
      "where",
      "year",
      ">",
      "=",
      "value",
      "and",
      "year",
      "<",
      "=",
      "value"
    ],
    "question": "Which campus was opened between 1935 and 1939?",
    "question_toks": [
      "Which",
      "campus",
      "was",
      "opened",
      "between",
      "1935",
      "and",
      "1939",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          1935.0,
          null
        ],
        "and",
        [
          false,
          6,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          1939.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT campus FROM campuses WHERE YEAR  >=  1935 AND YEAR  <=  1939",
    "query_toks": [
      "SELECT",
      "campus",
      "FROM",
      "campuses",
      "WHERE",
      "YEAR",
      ">",
      "=",
      "1935",
      "AND",
      "YEAR",
      "<",
      "=",
      "1939"
    ],
    "query_toks_no_value": [
      "select",
      "campus",
      "from",
      "campuses",
      "where",
      "year",
      ">",
      "=",
      "value",
      "and",
      "year",
      "<",
      "=",
      "value"
    ],
    "question": "What campuses opened between 1935 and 1939?",
    "question_toks": [
      "What",
      "campuses",
      "opened",
      "between",
      "1935",
      "and",
      "1939",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          1935.0,
          null
        ],
        "and",
        [
          false,
          6,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          1939.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "csu_fees",
      "WHERE",
      "campusfee",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "campusfee",
      ")",
      "FROM",
      "csu_fees",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "csu_fees",
      "where",
      "campusfee",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "campusfee",
      ")",
      "from",
      "csu_fees",
      ")"
    ],
    "question": "Find the count of universities whose campus fee is greater than the average campus fee.",
    "question_toks": [
      "Find",
      "the",
      "count",
      "of",
      "universities",
      "whose",
      "campus",
      "fee",
      "is",
      "greater",
      "than",
      "the",
      "average",
      "campus",
      "fee",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "csu_fees",
      "WHERE",
      "campusfee",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "campusfee",
      ")",
      "FROM",
      "csu_fees",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "csu_fees",
      "where",
      "campusfee",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "campusfee",
      ")",
      "from",
      "csu_fees",
      ")"
    ],
    "question": "How many universities have a campus fee higher than average?",
    "question_toks": [
      "How",
      "many",
      "universities",
      "have",
      "a",
      "campus",
      "fee",
      "higher",
      "than",
      "average",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "csu_fees",
      "WHERE",
      "campusfee",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "campusfee",
      ")",
      "FROM",
      "csu_fees",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "csu_fees",
      "where",
      "campusfee",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "campusfee",
      ")",
      "from",
      "csu_fees",
      ")"
    ],
    "question": "Find the count of universities whose campus fee is greater than the average campus fee.",
    "question_toks": [
      "Find",
      "the",
      "count",
      "of",
      "universities",
      "whose",
      "campus",
      "fee",
      "is",
      "greater",
      "than",
      "the",
      "average",
      "campus",
      "fee",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "csu_fees",
      "WHERE",
      "campusfee",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "campusfee",
      ")",
      "FROM",
      "csu_fees",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "csu_fees",
      "where",
      "campusfee",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "campusfee",
      ")",
      "from",
      "csu_fees",
      ")"
    ],
    "question": "How many universities have a campus fee greater than the average?",
    "question_toks": [
      "How",
      "many",
      "universities",
      "have",
      "a",
      "campus",
      "fee",
      "greater",
      "than",
      "the",
      "average",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\" AND YEAR  >  1950",
    "query_toks": [
      "SELECT",
      "campus",
      "FROM",
      "campuses",
      "WHERE",
      "county",
      "=",
      "``",
      "Los",
      "Angeles",
      "''",
      "AND",
      "YEAR",
      ">",
      "1950"
    ],
    "query_toks_no_value": [
      "select",
      "campus",
      "from",
      "campuses",
      "where",
      "county",
      "=",
      "value",
      "and",
      "year",
      ">",
      "value"
    ],
    "question": "Which university is in Los Angeles county and opened after 1950?",
    "question_toks": [
      "Which",
      "university",
      "is",
      "in",
      "Los",
      "Angeles",
      "county",
      "and",
      "opened",
      "after",
      "1950",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          1950.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\" AND YEAR  >  1950",
    "query_toks": [
      "SELECT",
      "campus",
      "FROM",
      "campuses",
      "WHERE",
      "county",
      "=",
      "``",
      "Los",
      "Angeles",
      "''",
      "AND",
      "YEAR",
      ">",
      "1950"
    ],
    "query_toks_no_value": [
      "select",
      "campus",
      "from",
      "campuses",
      "where",
      "county",
      "=",
      "value",
      "and",
      "year",
      ">",
      "value"
    ],
    "question": "What campuses are located in Los Angeles county and opened after 1950?",
    "question_toks": [
      "What",
      "campuses",
      "are",
      "located",
      "in",
      "Los",
      "Angeles",
      "county",
      "and",
      "opened",
      "after",
      "1950",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          1950.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  1996",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "campusfee",
      ")",
      "FROM",
      "csu_fees",
      "WHERE",
      "YEAR",
      "=",
      "1996"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "campusfee",
      ")",
      "from",
      "csu_fees",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "Find the average fee on a CSU campus in 1996",
    "question_toks": [
      "Find",
      "the",
      "average",
      "fee",
      "on",
      "a",
      "CSU",
      "campus",
      "in",
      "1996"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          1996.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  1996",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "campusfee",
      ")",
      "FROM",
      "csu_fees",
      "WHERE",
      "YEAR",
      "=",
      "1996"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "campusfee",
      ")",
      "from",
      "csu_fees",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "What is the average fee for a CSU campus in the year of 1996?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "fee",
      "for",
      "a",
      "CSU",
      "campus",
      "in",
      "the",
      "year",
      "of",
      "1996",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          1996.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  2005",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "campusfee",
      ")",
      "FROM",
      "csu_fees",
      "WHERE",
      "YEAR",
      "=",
      "2005"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "campusfee",
      ")",
      "from",
      "csu_fees",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "What is the average fee on a CSU campus in 2005?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "fee",
      "on",
      "a",
      "CSU",
      "campus",
      "in",
      "2005",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          2005.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  2005",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "campusfee",
      ")",
      "FROM",
      "csu_fees",
      "WHERE",
      "YEAR",
      "=",
      "2005"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "campusfee",
      ")",
      "from",
      "csu_fees",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "What is the average fee for a CSU campus in the year of 2005?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "fee",
      "for",
      "a",
      "CSU",
      "campus",
      "in",
      "the",
      "year",
      "of",
      "2005",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          2005.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT count(*) FROM campuses WHERE county  =  \"Los Angeles\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "campuses",
      "WHERE",
      "county",
      "=",
      "``",
      "Los",
      "Angeles",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "campuses",
      "where",
      "county",
      "=",
      "value"
    ],
    "question": "How many campuses are there in Los Angeles county?",
    "question_toks": [
      "How",
      "many",
      "campuses",
      "are",
      "there",
      "in",
      "Los",
      "Angeles",
      "county",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT count(*) FROM campuses WHERE county  =  \"Los Angeles\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "campuses",
      "WHERE",
      "county",
      "=",
      "``",
      "Los",
      "Angeles",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "campuses",
      "where",
      "county",
      "=",
      "value"
    ],
    "question": "How many campuses exist are in the county of LA?",
    "question_toks": [
      "How",
      "many",
      "campuses",
      "exist",
      "are",
      "in",
      "the",
      "county",
      "of",
      "LA",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\"",
    "query_toks": [
      "SELECT",
      "campus",
      "FROM",
      "campuses",
      "WHERE",
      "county",
      "=",
      "``",
      "Los",
      "Angeles",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "campus",
      "from",
      "campuses",
      "where",
      "county",
      "=",
      "value"
    ],
    "question": "List the campuses in Los Angeles county.",
    "question_toks": [
      "List",
      "the",
      "campuses",
      "in",
      "Los",
      "Angeles",
      "county",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\"",
    "query_toks": [
      "SELECT",
      "campus",
      "FROM",
      "campuses",
      "WHERE",
      "county",
      "=",
      "``",
      "Los",
      "Angeles",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "campus",
      "from",
      "campuses",
      "where",
      "county",
      "=",
      "value"
    ],
    "question": "What campuses are in Los Angeles county?",
    "question_toks": [
      "What",
      "campuses",
      "are",
      "in",
      "Los",
      "Angeles",
      "county",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT sum(faculty) FROM faculty WHERE YEAR  =  2002",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "faculty",
      ")",
      "FROM",
      "faculty",
      "WHERE",
      "YEAR",
      "=",
      "2002"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "faculty",
      ")",
      "from",
      "faculty",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "How many faculty is there in total in the year of 2002?",
    "question_toks": [
      "How",
      "many",
      "faculty",
      "is",
      "there",
      "in",
      "total",
      "in",
      "the",
      "year",
      "of",
      "2002",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          2002.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT sum(faculty) FROM faculty WHERE YEAR  =  2002",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "faculty",
      ")",
      "FROM",
      "faculty",
      "WHERE",
      "YEAR",
      "=",
      "2002"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "faculty",
      ")",
      "from",
      "faculty",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "How many faculty, in total, are there in the year 2002?",
    "question_toks": [
      "How",
      "many",
      "faculty",
      ",",
      "in",
      "total",
      ",",
      "are",
      "there",
      "in",
      "the",
      "year",
      "2002",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          2002.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT count(*) FROM campuses",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "campuses"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "campuses"
    ],
    "question": "How many CSU campuses are there?",
    "question_toks": [
      "How",
      "many",
      "CSU",
      "campuses",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT count(*) FROM campuses",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "campuses"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "campuses"
    ],
    "question": "What is the total number of campuses?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "campuses",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "candidate_poll",
    "query": "SELECT count(*) FROM candidate",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "candidate"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "candidate"
    ],
    "question": "How many candidates are there?",
    "question_toks": [
      "How",
      "many",
      "candidates",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "candidate_poll",
    "query": "SELECT count(*) FROM candidate",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "candidate"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "candidate"
    ],
    "question": "Count the number of candidates.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "candidates",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "candidate_poll",
    "query": "SELECT avg(height) ,  avg(weight) FROM people WHERE sex  =  'M'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "height",
      ")",
      ",",
      "avg",
      "(",
      "weight",
      ")",
      "FROM",
      "people",
      "WHERE",
      "sex",
      "=",
      "'M",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "height",
      ")",
      ",",
      "avg",
      "(",
      "weight",
      ")",
      "from",
      "people",
      "where",
      "sex",
      "=",
      "value"
    ],
    "question": "Find the average height and weight for all males (sex is M).",
    "question_toks": [
      "Find",
      "the",
      "average",
      "height",
      "and",
      "weight",
      "for",
      "all",
      "males",
      "(",
      "sex",
      "is",
      "M",
      ")",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"M\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "candidate_poll",
    "query": "SELECT avg(height) ,  avg(weight) FROM people WHERE sex  =  'M'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "height",
      ")",
      ",",
      "avg",
      "(",
      "weight",
      ")",
      "FROM",
      "people",
      "WHERE",
      "sex",
      "=",
      "'M",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "height",
      ")",
      ",",
      "avg",
      "(",
      "weight",
      ")",
      "from",
      "people",
      "where",
      "sex",
      "=",
      "value"
    ],
    "question": "What are the average height and weight across males (sex is M)?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "height",
      "and",
      "weight",
      "across",
      "males",
      "(",
      "sex",
      "is",
      "M",
      ")",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"M\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "candidate_poll",
    "query": "SELECT name FROM people WHERE height  >  200 OR height  <  190",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "people",
      "WHERE",
      "height",
      ">",
      "200",
      "OR",
      "height",
      "<",
      "190"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "people",
      "where",
      "height",
      ">",
      "value",
      "or",
      "height",
      "<",
      "value"
    ],
    "question": "find the names of people who are taller than 200 or lower than 190.",
    "question_toks": [
      "find",
      "the",
      "names",
      "of",
      "people",
      "who",
      "are",
      "taller",
      "than",
      "200",
      "or",
      "lower",
      "than",
      "190",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          200.0,
          null
        ],
        "or",
        [
          false,
          4,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          190.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "candidate_poll",
    "query": "SELECT name FROM people WHERE height  >  200 OR height  <  190",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "people",
      "WHERE",
      "height",
      ">",
      "200",
      "OR",
      "height",
      "<",
      "190"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "people",
      "where",
      "height",
      ">",
      "value",
      "or",
      "height",
      "<",
      "value"
    ],
    "question": "What are the names of people who have a height greater than 200 or less than 190?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "people",
      "who",
      "have",
      "a",
      "height",
      "greater",
      "than",
      "200",
      "or",
      "less",
      "than",
      "190",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          200.0,
          null
        ],
        "or",
        [
          false,
          4,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          190.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "candidate_poll",
    "query": "SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM candidate)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "people",
      "WHERE",
      "people_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "people_id",
      "FROM",
      "candidate",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "people",
      "where",
      "people_id",
      "not",
      "in",
      "(",
      "select",
      "people_id",
      "from",
      "candidate",
      ")"
    ],
    "question": "what are the names of people who did not participate in the candidate election.",
    "question_toks": [
      "what",
      "are",
      "the",
      "names",
      "of",
      "people",
      "who",
      "did",
      "not",
      "participate",
      "in",
      "the",
      "candidate",
      "election",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      2,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "candidate_poll",
    "query": "SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM candidate)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "people",
      "WHERE",
      "people_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "people_id",
      "FROM",
      "candidate",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "people",
      "where",
      "people_id",
      "not",
      "in",
      "(",
      "select",
      "people_id",
      "from",
      "candidate",
      ")"
    ],
    "question": "Give the names of people who did not participate in the candidate election.",
    "question_toks": [
      "Give",
      "the",
      "names",
      "of",
      "people",
      "who",
      "did",
      "not",
      "participate",
      "in",
      "the",
      "candidate",
      "election",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      2,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "candidate_poll",
    "query": "SELECT max(support_rate) ,  min(consider_rate) ,  min(oppose_rate) FROM candidate",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "support_rate",
      ")",
      ",",
      "min",
      "(",
      "consider_rate",
      ")",
      ",",
      "min",
      "(",
      "oppose_rate",
      ")",
      "FROM",
      "candidate"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "support_rate",
      ")",
      ",",
      "min",
      "(",
      "consider_rate",
      ")",
      ",",
      "min",
      "(",
      "oppose_rate",
      ")",
      "from",
      "candidate"
    ],
    "question": "find the highest support percentage, lowest consider rate and oppose rate of all candidates.",
    "question_toks": [
      "find",
      "the",
      "highest",
      "support",
      "percentage",
      ",",
      "lowest",
      "consider",
      "rate",
      "and",
      "oppose",
      "rate",
      "of",
      "all",
      "candidates",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "candidate_poll",
    "query": "SELECT max(support_rate) ,  min(consider_rate) ,  min(oppose_rate) FROM candidate",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "support_rate",
      ")",
      ",",
      "min",
      "(",
      "consider_rate",
      ")",
      ",",
      "min",
      "(",
      "oppose_rate",
      ")",
      "FROM",
      "candidate"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "support_rate",
      ")",
      ",",
      "min",
      "(",
      "consider_rate",
      ")",
      ",",
      "min",
      "(",
      "oppose_rate",
      ")",
      "from",
      "candidate"
    ],
    "question": "Return the maximum support rate, minimum consider rate, and minimum oppose rate across all candidates?",
    "question_toks": [
      "Return",
      "the",
      "maximum",
      "support",
      "rate",
      ",",
      "minimum",
      "consider",
      "rate",
      ",",
      "and",
      "minimum",
      "oppose",
      "rate",
      "across",
      "all",
      "candidates",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "candidate_poll",
    "query": "SELECT name FROM people WHERE height  <  (SELECT avg(height) FROM people)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "people",
      "WHERE",
      "height",
      "<",
      "(",
      "SELECT",
      "avg",
      "(",
      "height",
      ")",
      "FROM",
      "people",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "people",
      "where",
      "height",
      "<",
      "(",
      "select",
      "avg",
      "(",
      "height",
      ")",
      "from",
      "people",
      ")"
    ],
    "question": "find the name of people whose height is lower than the average.",
    "question_toks": [
      "find",
      "the",
      "name",
      "of",
      "people",
      "whose",
      "height",
      "is",
      "lower",
      "than",
      "the",
      "average",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      13,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "candidate_poll",
    "query": "SELECT name FROM people WHERE height  <  (SELECT avg(height) FROM people)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "people",
      "WHERE",
      "height",
      "<",
      "(",
      "SELECT",
      "avg",
      "(",
      "height",
      ")",
      "FROM",
      "people",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "people",
      "where",
      "height",
      "<",
      "(",
      "select",
      "avg",
      "(",
      "height",
      ")",
      "from",
      "people",
      ")"
    ],
    "question": "What are the names of people who are shorter than average?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "people",
      "who",
      "are",
      "shorter",
      "than",
      "average",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      13,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "candidate_poll",
    "query": "SELECT * FROM people",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "people"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "people"
    ],
    "question": "List all info about all people.",
    "question_toks": [
      "List",
      "all",
      "info",
      "about",
      "all",
      "people",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "candidate_poll",
    "query": "SELECT * FROM people",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "people"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "people"
    ],
    "question": "What is all the information about all people?",
    "question_toks": [
      "What",
      "is",
      "all",
      "the",
      "information",
      "about",
      "all",
      "people",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT title FROM Movie WHERE director = 'Steven Spielberg'",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "Movie",
      "WHERE",
      "director",
      "=",
      "'Steven",
      "Spielberg",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "movie",
      "where",
      "director",
      "=",
      "value"
    ],
    "question": "Find the titles of all movies directed by steven spielberg.",
    "question_toks": [
      "Find",
      "the",
      "titles",
      "of",
      "all",
      "movies",
      "directed",
      "by",
      "steven",
      "spielberg",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Steven Spielberg\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT title FROM Movie WHERE director = 'Steven Spielberg'",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "Movie",
      "WHERE",
      "director",
      "=",
      "'Steven",
      "Spielberg",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "movie",
      "where",
      "director",
      "=",
      "value"
    ],
    "question": "What are the names of all movies directed by Steven Spielberg?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "movies",
      "directed",
      "by",
      "Steven",
      "Spielberg",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Steven Spielberg\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT title FROM Movie WHERE director = 'James Cameron' AND YEAR  >  2000",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "Movie",
      "WHERE",
      "director",
      "=",
      "'James",
      "Cameron",
      "'",
      "AND",
      "YEAR",
      ">",
      "2000"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "movie",
      "where",
      "director",
      "=",
      "value",
      "and",
      "year",
      ">",
      "value"
    ],
    "question": "What is the name of the movie produced after 2000 and directed by James Cameron?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "movie",
      "produced",
      "after",
      "2000",
      "and",
      "directed",
      "by",
      "James",
      "Cameron",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"James Cameron\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT title FROM Movie WHERE director = 'James Cameron' AND YEAR  >  2000",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "Movie",
      "WHERE",
      "director",
      "=",
      "'James",
      "Cameron",
      "'",
      "AND",
      "YEAR",
      ">",
      "2000"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "movie",
      "where",
      "director",
      "=",
      "value",
      "and",
      "year",
      ">",
      "value"
    ],
    "question": "What are the titles of all movies that James Cameron directed after 2000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "titles",
      "of",
      "all",
      "movies",
      "that",
      "James",
      "Cameron",
      "directed",
      "after",
      "2000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"James Cameron\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT count(*) FROM Movie WHERE YEAR  <  2000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Movie",
      "WHERE",
      "YEAR",
      "<",
      "2000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "movie",
      "where",
      "year",
      "<",
      "value"
    ],
    "question": "How many movies were made before 2000?",
    "question_toks": [
      "How",
      "many",
      "movies",
      "were",
      "made",
      "before",
      "2000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT count(*) FROM Movie WHERE YEAR  <  2000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Movie",
      "WHERE",
      "YEAR",
      "<",
      "2000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "movie",
      "where",
      "year",
      "<",
      "value"
    ],
    "question": "How many movies were made before 2000?",
    "question_toks": [
      "How",
      "many",
      "movies",
      "were",
      "made",
      "before",
      "2000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT director FROM Movie WHERE title  = 'Avatar'",
    "query_toks": [
      "SELECT",
      "director",
      "FROM",
      "Movie",
      "WHERE",
      "title",
      "=",
      "'Avatar",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "director",
      "from",
      "movie",
      "where",
      "title",
      "=",
      "value"
    ],
    "question": "Who is the director of movie Avatar?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "director",
      "of",
      "movie",
      "Avatar",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Avatar\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT director FROM Movie WHERE title  = 'Avatar'",
    "query_toks": [
      "SELECT",
      "director",
      "FROM",
      "Movie",
      "WHERE",
      "title",
      "=",
      "'Avatar",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "director",
      "from",
      "movie",
      "where",
      "title",
      "=",
      "value"
    ],
    "question": "Who directed Avatar?",
    "question_toks": [
      "Who",
      "directed",
      "Avatar",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Avatar\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT count(*) FROM Reviewer",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Reviewer"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "reviewer"
    ],
    "question": "How many reviewers listed?",
    "question_toks": [
      "How",
      "many",
      "reviewers",
      "listed",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT count(*) FROM Reviewer",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Reviewer"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "reviewer"
    ],
    "question": "How many reviewers are there?",
    "question_toks": [
      "How",
      "many",
      "reviewers",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT rID FROM Reviewer WHERE name LIKE \"%Mike%\"",
    "query_toks": [
      "SELECT",
      "rID",
      "FROM",
      "Reviewer",
      "WHERE",
      "name",
      "LIKE",
      "``",
      "%",
      "Mike",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "rid",
      "from",
      "reviewer",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "What is the id of the reviewer whose name has substring \u201cMike\u201d?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "of",
      "the",
      "reviewer",
      "whose",
      "name",
      "has",
      "substring",
      "\u201cMike\u201d",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"%Mike%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT rID FROM Reviewer WHERE name LIKE \"%Mike%\"",
    "query_toks": [
      "SELECT",
      "rID",
      "FROM",
      "Reviewer",
      "WHERE",
      "name",
      "LIKE",
      "``",
      "%",
      "Mike",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "rid",
      "from",
      "reviewer",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "What is the id of the reviewer whose name includes the word \"Mike\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "of",
      "the",
      "reviewer",
      "whose",
      "name",
      "includes",
      "the",
      "word",
      "``",
      "Mike",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"%Mike%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT rID FROM Reviewer WHERE name  =  \"Daniel Lewis\"",
    "query_toks": [
      "SELECT",
      "rID",
      "FROM",
      "Reviewer",
      "WHERE",
      "name",
      "=",
      "``",
      "Daniel",
      "Lewis",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "rid",
      "from",
      "reviewer",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "What is the reviewer id of Daniel Lewis?",
    "question_toks": [
      "What",
      "is",
      "the",
      "reviewer",
      "id",
      "of",
      "Daniel",
      "Lewis",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Daniel Lewis\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT rID FROM Reviewer WHERE name  =  \"Daniel Lewis\"",
    "query_toks": [
      "SELECT",
      "rID",
      "FROM",
      "Reviewer",
      "WHERE",
      "name",
      "=",
      "``",
      "Daniel",
      "Lewis",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "rid",
      "from",
      "reviewer",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "What is the id of the reviewer named Daniel Lewis?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "of",
      "the",
      "reviewer",
      "named",
      "Daniel",
      "Lewis",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Daniel Lewis\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT count(*) FROM Rating WHERE stars  >  3",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Rating",
      "WHERE",
      "stars",
      ">",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "rating",
      "where",
      "stars",
      ">",
      "value"
    ],
    "question": "What is the total number of ratings that has more than 3 stars?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "ratings",
      "that",
      "has",
      "more",
      "than",
      "3",
      "stars",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT count(*) FROM Rating WHERE stars  >  3",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Rating",
      "WHERE",
      "stars",
      ">",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "rating",
      "where",
      "stars",
      ">",
      "value"
    ],
    "question": "How many movie ratings have more than 3 stars?",
    "question_toks": [
      "How",
      "many",
      "movie",
      "ratings",
      "have",
      "more",
      "than",
      "3",
      "stars",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT max(stars) ,  min(stars) FROM Rating",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "stars",
      ")",
      ",",
      "min",
      "(",
      "stars",
      ")",
      "FROM",
      "Rating"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "stars",
      ")",
      ",",
      "min",
      "(",
      "stars",
      ")",
      "from",
      "rating"
    ],
    "question": "What is the lowest and highest rating star?",
    "question_toks": [
      "What",
      "is",
      "the",
      "lowest",
      "and",
      "highest",
      "rating",
      "star",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT max(stars) ,  min(stars) FROM Rating",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "stars",
      ")",
      ",",
      "min",
      "(",
      "stars",
      ")",
      "FROM",
      "Rating"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "stars",
      ")",
      ",",
      "min",
      "(",
      "stars",
      ")",
      "from",
      "rating"
    ],
    "question": "What is the maximum and mininum number of stars a rating can receive?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      "and",
      "mininum",
      "number",
      "of",
      "stars",
      "a",
      "rating",
      "can",
      "receive",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT title FROM Movie WHERE mID NOT IN (SELECT mID FROM Rating)",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "Movie",
      "WHERE",
      "mID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "mID",
      "FROM",
      "Rating",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "movie",
      "where",
      "mid",
      "not",
      "in",
      "(",
      "select",
      "mid",
      "from",
      "rating",
      ")"
    ],
    "question": "Find the titles of all movies that have no ratings.",
    "question_toks": [
      "Find",
      "the",
      "titles",
      "of",
      "all",
      "movies",
      "that",
      "have",
      "no",
      "ratings",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT title FROM Movie WHERE mID NOT IN (SELECT mID FROM Rating)",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "Movie",
      "WHERE",
      "mID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "mID",
      "FROM",
      "Rating",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "movie",
      "where",
      "mid",
      "not",
      "in",
      "(",
      "select",
      "mid",
      "from",
      "rating",
      ")"
    ],
    "question": "What are the titles of all movies that have not been rated?",
    "question_toks": [
      "What",
      "are",
      "the",
      "titles",
      "of",
      "all",
      "movies",
      "that",
      "have",
      "not",
      "been",
      "rated",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT title FROM Movie WHERE YEAR  =  (SELECT max(YEAR) FROM Movie)",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "Movie",
      "WHERE",
      "YEAR",
      "=",
      "(",
      "SELECT",
      "max",
      "(",
      "YEAR",
      ")",
      "FROM",
      "Movie",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "movie",
      "where",
      "year",
      "=",
      "(",
      "select",
      "max",
      "(",
      "year",
      ")",
      "from",
      "movie",
      ")"
    ],
    "question": "What is the name of the most recent movie?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "most",
      "recent",
      "movie",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT title FROM Movie WHERE YEAR  =  (SELECT max(YEAR) FROM Movie)",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "Movie",
      "WHERE",
      "YEAR",
      "=",
      "(",
      "SELECT",
      "max",
      "(",
      "YEAR",
      ")",
      "FROM",
      "Movie",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "movie",
      "where",
      "year",
      "=",
      "(",
      "select",
      "max",
      "(",
      "year",
      ")",
      "from",
      "movie",
      ")"
    ],
    "question": "What is the title of the newest movie?",
    "question_toks": [
      "What",
      "is",
      "the",
      "title",
      "of",
      "the",
      "newest",
      "movie",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT title FROM Movie WHERE YEAR  >  (SELECT max(YEAR) FROM Movie WHERE director  =  \"Steven Spielberg\")",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "Movie",
      "WHERE",
      "YEAR",
      ">",
      "(",
      "SELECT",
      "max",
      "(",
      "YEAR",
      ")",
      "FROM",
      "Movie",
      "WHERE",
      "director",
      "=",
      "``",
      "Steven",
      "Spielberg",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "movie",
      "where",
      "year",
      ">",
      "(",
      "select",
      "max",
      "(",
      "year",
      ")",
      "from",
      "movie",
      "where",
      "director",
      "=",
      "value",
      ")"
    ],
    "question": "What is the names of movies whose created year is after all movies directed by Steven Spielberg?",
    "question_toks": [
      "What",
      "is",
      "the",
      "names",
      "of",
      "movies",
      "whose",
      "created",
      "year",
      "is",
      "after",
      "all",
      "movies",
      "directed",
      "by",
      "Steven",
      "Spielberg",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    4,
                    false
                  ],
                  null
                ],
                "\"Steven Spielberg\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT title FROM Movie WHERE YEAR  >  (SELECT max(YEAR) FROM Movie WHERE director  =  \"Steven Spielberg\")",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "Movie",
      "WHERE",
      "YEAR",
      ">",
      "(",
      "SELECT",
      "max",
      "(",
      "YEAR",
      ")",
      "FROM",
      "Movie",
      "WHERE",
      "director",
      "=",
      "``",
      "Steven",
      "Spielberg",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "movie",
      "where",
      "year",
      ">",
      "(",
      "select",
      "max",
      "(",
      "year",
      ")",
      "from",
      "movie",
      "where",
      "director",
      "=",
      "value",
      ")"
    ],
    "question": "What are the names of all movies that were created after the most recent Steven Spielberg film?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "movies",
      "that",
      "were",
      "created",
      "after",
      "the",
      "most",
      "recent",
      "Steven",
      "Spielberg",
      "film",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    4,
                    false
                  ],
                  null
                ],
                "\"Steven Spielberg\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT rID FROM Rating WHERE stars != 4",
    "query_toks": [
      "SELECT",
      "rID",
      "FROM",
      "Rating",
      "WHERE",
      "stars",
      "!",
      "=",
      "4"
    ],
    "query_toks_no_value": [
      "select",
      "rid",
      "from",
      "rating",
      "where",
      "stars",
      "!",
      "=",
      "value"
    ],
    "question": "Find the ids of reviewers who didn't only give 4 star.",
    "question_toks": [
      "Find",
      "the",
      "ids",
      "of",
      "reviewers",
      "who",
      "did",
      "n't",
      "only",
      "give",
      "4",
      "star",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          4.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT rID FROM Rating WHERE stars != 4",
    "query_toks": [
      "SELECT",
      "rID",
      "FROM",
      "Rating",
      "WHERE",
      "stars",
      "!",
      "=",
      "4"
    ],
    "query_toks_no_value": [
      "select",
      "rid",
      "from",
      "rating",
      "where",
      "stars",
      "!",
      "=",
      "value"
    ],
    "question": "What are the ids of all reviewers who have not given 4 stars at least once?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "all",
      "reviewers",
      "who",
      "have",
      "not",
      "given",
      "4",
      "stars",
      "at",
      "least",
      "once",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          4.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT title FROM Movie WHERE director  =  \"James Cameron\" OR YEAR   <  1980",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "Movie",
      "WHERE",
      "director",
      "=",
      "``",
      "James",
      "Cameron",
      "''",
      "OR",
      "YEAR",
      "<",
      "1980"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "movie",
      "where",
      "director",
      "=",
      "value",
      "or",
      "year",
      "<",
      "value"
    ],
    "question": "What are names of the movies that are either made before 1980 or directed by James Cameron?",
    "question_toks": [
      "What",
      "are",
      "names",
      "of",
      "the",
      "movies",
      "that",
      "are",
      "either",
      "made",
      "before",
      "1980",
      "or",
      "directed",
      "by",
      "James",
      "Cameron",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"James Cameron\"",
          null
        ],
        "or",
        [
          false,
          4,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          1980.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT title FROM Movie WHERE director  =  \"James Cameron\" OR YEAR   <  1980",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "Movie",
      "WHERE",
      "director",
      "=",
      "``",
      "James",
      "Cameron",
      "''",
      "OR",
      "YEAR",
      "<",
      "1980"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "movie",
      "where",
      "director",
      "=",
      "value",
      "or",
      "year",
      "<",
      "value"
    ],
    "question": "What are the names of all movies made before 1980 or had James Cameron as the director?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "movies",
      "made",
      "before",
      "1980",
      "or",
      "had",
      "James",
      "Cameron",
      "as",
      "the",
      "director",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"James Cameron\"",
          null
        ],
        "or",
        [
          false,
          4,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          1980.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT count(*) FROM county_public_safety",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "county_public_safety"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "county_public_safety"
    ],
    "question": "How many counties are there?",
    "question_toks": [
      "How",
      "many",
      "counties",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT count(*) FROM county_public_safety",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "county_public_safety"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "county_public_safety"
    ],
    "question": "Count the number of countries.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "countries",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT min(Crime_rate) ,  max(Crime_rate) FROM county_public_safety",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "Crime_rate",
      ")",
      ",",
      "max",
      "(",
      "Crime_rate",
      ")",
      "FROM",
      "county_public_safety"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "crime_rate",
      ")",
      ",",
      "max",
      "(",
      "crime_rate",
      ")",
      "from",
      "county_public_safety"
    ],
    "question": "What are the minimum and maximum crime rate of counties?",
    "question_toks": [
      "What",
      "are",
      "the",
      "minimum",
      "and",
      "maximum",
      "crime",
      "rate",
      "of",
      "counties",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT min(Crime_rate) ,  max(Crime_rate) FROM county_public_safety",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "Crime_rate",
      ")",
      ",",
      "max",
      "(",
      "Crime_rate",
      ")",
      "FROM",
      "county_public_safety"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "crime_rate",
      ")",
      ",",
      "max",
      "(",
      "crime_rate",
      ")",
      "from",
      "county_public_safety"
    ],
    "question": "Return the minimum and maximum crime rates across all counties.",
    "question_toks": [
      "Return",
      "the",
      "minimum",
      "and",
      "maximum",
      "crime",
      "rates",
      "across",
      "all",
      "counties",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT Hispanic FROM city WHERE Black  >  10",
    "query_toks": [
      "SELECT",
      "Hispanic",
      "FROM",
      "city",
      "WHERE",
      "Black",
      ">",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "hispanic",
      "from",
      "city",
      "where",
      "black",
      ">",
      "value"
    ],
    "question": "What are the percentage of hispanics in cities with the black percentage higher than 10?",
    "question_toks": [
      "What",
      "are",
      "the",
      "percentage",
      "of",
      "hispanics",
      "in",
      "cities",
      "with",
      "the",
      "black",
      "percentage",
      "higher",
      "than",
      "10",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT Hispanic FROM city WHERE Black  >  10",
    "query_toks": [
      "SELECT",
      "Hispanic",
      "FROM",
      "city",
      "WHERE",
      "Black",
      ">",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "hispanic",
      "from",
      "city",
      "where",
      "black",
      ">",
      "value"
    ],
    "question": "Return the hispanic percentage for cities in which the black percentage is greater than 10.",
    "question_toks": [
      "Return",
      "the",
      "hispanic",
      "percentage",
      "for",
      "cities",
      "in",
      "which",
      "the",
      "black",
      "percentage",
      "is",
      "greater",
      "than",
      "10",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT name FROM city WHERE county_ID  =  (SELECT county_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "city",
      "WHERE",
      "county_ID",
      "=",
      "(",
      "SELECT",
      "county_ID",
      "FROM",
      "county_public_safety",
      "ORDER",
      "BY",
      "Police_officers",
      "DESC",
      "LIMIT",
      "1",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "city",
      "where",
      "county_id",
      "=",
      "(",
      "select",
      "county_id",
      "from",
      "county_public_safety",
      "order",
      "by",
      "police_officers",
      "desc",
      "limit",
      "value",
      ")"
    ],
    "question": "Show the name of cities in the county that has the largest number of police officers.",
    "question_toks": [
      "Show",
      "the",
      "name",
      "of",
      "cities",
      "in",
      "the",
      "county",
      "that",
      "has",
      "the",
      "largest",
      "number",
      "of",
      "police",
      "officers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
              "desc",
              [
                [
                  0,
                  [
                    0,
                    4,
                    false
                  ],
                  null
                ]
              ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT name FROM city WHERE county_ID  =  (SELECT county_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "city",
      "WHERE",
      "county_ID",
      "=",
      "(",
      "SELECT",
      "county_ID",
      "FROM",
      "county_public_safety",
      "ORDER",
      "BY",
      "Police_officers",
      "DESC",
      "LIMIT",
      "1",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "city",
      "where",
      "county_id",
      "=",
      "(",
      "select",
      "county_id",
      "from",
      "county_public_safety",
      "order",
      "by",
      "police_officers",
      "desc",
      "limit",
      "value",
      ")"
    ],
    "question": "What are the names of cities that are in the county with the most police officers?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "cities",
      "that",
      "are",
      "in",
      "the",
      "county",
      "with",
      "the",
      "most",
      "police",
      "officers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
              "desc",
              [
                [
                  0,
                  [
                    0,
                    4,
                    false
                  ],
                  null
                ]
              ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT count(*) FROM city WHERE county_ID IN (SELECT county_ID FROM county_public_safety WHERE population  >  20000)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "city",
      "WHERE",
      "county_ID",
      "IN",
      "(",
      "SELECT",
      "county_ID",
      "FROM",
      "county_public_safety",
      "WHERE",
      "population",
      ">",
      "20000",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "city",
      "where",
      "county_id",
      "in",
      "(",
      "select",
      "county_id",
      "from",
      "county_public_safety",
      "where",
      "population",
      ">",
      "value",
      ")"
    ],
    "question": "Show the number of cities in counties that have a population more than 20000.",
    "question_toks": [
      "Show",
      "the",
      "number",
      "of",
      "cities",
      "in",
      "counties",
      "that",
      "have",
      "a",
      "population",
      "more",
      "than",
      "20000",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                3,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                20000.0,
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT count(*) FROM city WHERE county_ID IN (SELECT county_ID FROM county_public_safety WHERE population  >  20000)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "city",
      "WHERE",
      "county_ID",
      "IN",
      "(",
      "SELECT",
      "county_ID",
      "FROM",
      "county_public_safety",
      "WHERE",
      "population",
      ">",
      "20000",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "city",
      "where",
      "county_id",
      "in",
      "(",
      "select",
      "county_id",
      "from",
      "county_public_safety",
      "where",
      "population",
      ">",
      "value",
      ")"
    ],
    "question": "How many cities are in counties that have populations of over 20000?",
    "question_toks": [
      "How",
      "many",
      "cities",
      "are",
      "in",
      "counties",
      "that",
      "have",
      "populations",
      "of",
      "over",
      "20000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                3,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                20000.0,
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "county_public_safety",
      "WHERE",
      "County_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "County_ID",
      "FROM",
      "city",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "county_public_safety",
      "where",
      "county_id",
      "not",
      "in",
      "(",
      "select",
      "county_id",
      "from",
      "city",
      ")"
    ],
    "question": "List the names of counties that do not have any cities.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "counties",
      "that",
      "do",
      "not",
      "have",
      "any",
      "cities",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      11,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "county_public_safety",
      "WHERE",
      "County_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "County_ID",
      "FROM",
      "city",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "county_public_safety",
      "where",
      "county_id",
      "not",
      "in",
      "(",
      "select",
      "county_id",
      "from",
      "city",
      ")"
    ],
    "question": "What are the names of counties that do not contain any cities?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "counties",
      "that",
      "do",
      "not",
      "contain",
      "any",
      "cities",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      11,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT name FROM city WHERE county_id IN (SELECT county_id FROM county_public_safety WHERE Crime_rate  <  100)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "city",
      "WHERE",
      "county_id",
      "IN",
      "(",
      "SELECT",
      "county_id",
      "FROM",
      "county_public_safety",
      "WHERE",
      "Crime_rate",
      "<",
      "100",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "city",
      "where",
      "county_id",
      "in",
      "(",
      "select",
      "county_id",
      "from",
      "county_public_safety",
      "where",
      "crime_rate",
      "<",
      "value",
      ")"
    ],
    "question": "Show the names of cities in counties that have a crime rate less than 100.",
    "question_toks": [
      "Show",
      "the",
      "names",
      "of",
      "cities",
      "in",
      "counties",
      "that",
      "have",
      "a",
      "crime",
      "rate",
      "less",
      "than",
      "100",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                4,
                [
                  0,
                  [
                    0,
                    7,
                    false
                  ],
                  null
                ],
                100.0,
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT name FROM city WHERE county_id IN (SELECT county_id FROM county_public_safety WHERE Crime_rate  <  100)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "city",
      "WHERE",
      "county_id",
      "IN",
      "(",
      "SELECT",
      "county_id",
      "FROM",
      "county_public_safety",
      "WHERE",
      "Crime_rate",
      "<",
      "100",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "city",
      "where",
      "county_id",
      "in",
      "(",
      "select",
      "county_id",
      "from",
      "county_public_safety",
      "where",
      "crime_rate",
      "<",
      "value",
      ")"
    ],
    "question": "What are the names of cities that are in counties that have a crime rate below 100?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "cities",
      "that",
      "are",
      "in",
      "counties",
      "that",
      "have",
      "a",
      "crime",
      "rate",
      "below",
      "100",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                4,
                [
                  0,
                  [
                    0,
                    7,
                    false
                  ],
                  null
                ],
                100.0,
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT roomName FROM Rooms WHERE basePrice  <  160 AND beds =  2 AND decor  =  'modern';",
    "query_toks": [
      "SELECT",
      "roomName",
      "FROM",
      "Rooms",
      "WHERE",
      "basePrice",
      "<",
      "160",
      "AND",
      "beds",
      "=",
      "2",
      "AND",
      "decor",
      "=",
      "'modern",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "roomname",
      "from",
      "rooms",
      "where",
      "baseprice",
      "<",
      "value",
      "and",
      "beds",
      "=",
      "value",
      "and",
      "decor",
      "=",
      "value"
    ],
    "question": "Find the names of all modern rooms with a base price below $160 and two beds.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "all",
      "modern",
      "rooms",
      "with",
      "a",
      "base",
      "price",
      "below",
      "$",
      "160",
      "and",
      "two",
      "beds",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          160.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          2.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"modern\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT roomName FROM Rooms WHERE basePrice  <  160 AND beds =  2 AND decor  =  'modern';",
    "query_toks": [
      "SELECT",
      "roomName",
      "FROM",
      "Rooms",
      "WHERE",
      "basePrice",
      "<",
      "160",
      "AND",
      "beds",
      "=",
      "2",
      "AND",
      "decor",
      "=",
      "'modern",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "roomname",
      "from",
      "rooms",
      "where",
      "baseprice",
      "<",
      "value",
      "and",
      "beds",
      "=",
      "value",
      "and",
      "decor",
      "=",
      "value"
    ],
    "question": "What are the names of modern rooms that have a base price lower than $160 and two beds.",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "modern",
      "rooms",
      "that",
      "have",
      "a",
      "base",
      "price",
      "lower",
      "than",
      "$",
      "160",
      "and",
      "two",
      "beds",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          160.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          2.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"modern\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT roomName ,  RoomId FROM Rooms WHERE basePrice  >  160 AND maxOccupancy  >  2;",
    "query_toks": [
      "SELECT",
      "roomName",
      ",",
      "RoomId",
      "FROM",
      "Rooms",
      "WHERE",
      "basePrice",
      ">",
      "160",
      "AND",
      "maxOccupancy",
      ">",
      "2",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "roomname",
      ",",
      "roomid",
      "from",
      "rooms",
      "where",
      "baseprice",
      ">",
      "value",
      "and",
      "maxoccupancy",
      ">",
      "value"
    ],
    "question": "Find all the rooms that have a price higher than 160 and can accommodate more than 2 people. Report room names and ids.",
    "question_toks": [
      "Find",
      "all",
      "the",
      "rooms",
      "that",
      "have",
      "a",
      "price",
      "higher",
      "than",
      "160",
      "and",
      "can",
      "accommodate",
      "more",
      "than",
      "2",
      "people",
      ".",
      "Report",
      "room",
      "names",
      "and",
      "ids",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          160.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT roomName ,  RoomId FROM Rooms WHERE basePrice  >  160 AND maxOccupancy  >  2;",
    "query_toks": [
      "SELECT",
      "roomName",
      ",",
      "RoomId",
      "FROM",
      "Rooms",
      "WHERE",
      "basePrice",
      ">",
      "160",
      "AND",
      "maxOccupancy",
      ">",
      "2",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "roomname",
      ",",
      "roomid",
      "from",
      "rooms",
      "where",
      "baseprice",
      ">",
      "value",
      "and",
      "maxoccupancy",
      ">",
      "value"
    ],
    "question": "What are the room names and ids of all the rooms that cost more than 160 and can accommodate more than two people.",
    "question_toks": [
      "What",
      "are",
      "the",
      "room",
      "names",
      "and",
      "ids",
      "of",
      "all",
      "the",
      "rooms",
      "that",
      "cost",
      "more",
      "than",
      "160",
      "and",
      "can",
      "accommodate",
      "more",
      "than",
      "two",
      "people",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          160.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT kids FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";",
    "query_toks": [
      "SELECT",
      "kids",
      "FROM",
      "Reservations",
      "WHERE",
      "FirstName",
      "=",
      "``",
      "ROY",
      "''",
      "AND",
      "LastName",
      "=",
      "``",
      "SWEAZY",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "kids",
      "from",
      "reservations",
      "where",
      "firstname",
      "=",
      "value",
      "and",
      "lastname",
      "=",
      "value"
    ],
    "question": "How many kids stay in the rooms reserved by ROY SWEAZY?",
    "question_toks": [
      "How",
      "many",
      "kids",
      "stay",
      "in",
      "the",
      "rooms",
      "reserved",
      "by",
      "ROY",
      "SWEAZY",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"ROY\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"SWEAZY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT kids FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";",
    "query_toks": [
      "SELECT",
      "kids",
      "FROM",
      "Reservations",
      "WHERE",
      "FirstName",
      "=",
      "``",
      "ROY",
      "''",
      "AND",
      "LastName",
      "=",
      "``",
      "SWEAZY",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "kids",
      "from",
      "reservations",
      "where",
      "firstname",
      "=",
      "value",
      "and",
      "lastname",
      "=",
      "value"
    ],
    "question": "Find the number of kids staying in the rooms reserved by a person called ROY SWEAZ.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "kids",
      "staying",
      "in",
      "the",
      "rooms",
      "reserved",
      "by",
      "a",
      "person",
      "called",
      "ROY",
      "SWEAZ",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"ROY\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"SWEAZY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT count(*) FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Reservations",
      "WHERE",
      "FirstName",
      "=",
      "``",
      "ROY",
      "''",
      "AND",
      "LastName",
      "=",
      "``",
      "SWEAZY",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "reservations",
      "where",
      "firstname",
      "=",
      "value",
      "and",
      "lastname",
      "=",
      "value"
    ],
    "question": "How many times does ROY SWEAZY has reserved a room.",
    "question_toks": [
      "How",
      "many",
      "times",
      "does",
      "ROY",
      "SWEAZY",
      "has",
      "reserved",
      "a",
      "room",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"ROY\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"SWEAZY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT count(*) FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Reservations",
      "WHERE",
      "FirstName",
      "=",
      "``",
      "ROY",
      "''",
      "AND",
      "LastName",
      "=",
      "``",
      "SWEAZY",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "reservations",
      "where",
      "firstname",
      "=",
      "value",
      "and",
      "lastname",
      "=",
      "value"
    ],
    "question": "Find the number of times ROY SWEAZY has reserved a room.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "times",
      "ROY",
      "SWEAZY",
      "has",
      "reserved",
      "a",
      "room",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"ROY\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"SWEAZY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT Adults FROM Reservations WHERE CheckIn  =  \"2010-10-23\" AND FirstName  =  \"CONRAD\" AND LastName  =  \"SELBIG\";",
    "query_toks": [
      "SELECT",
      "Adults",
      "FROM",
      "Reservations",
      "WHERE",
      "CheckIn",
      "=",
      "``",
      "2010-10-23",
      "''",
      "AND",
      "FirstName",
      "=",
      "``",
      "CONRAD",
      "''",
      "AND",
      "LastName",
      "=",
      "``",
      "SELBIG",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "adults",
      "from",
      "reservations",
      "where",
      "checkin",
      "=",
      "value",
      "and",
      "firstname",
      "=",
      "value",
      "and",
      "lastname",
      "=",
      "value"
    ],
    "question": "How many adults stay in the room CONRAD SELBIG checked in on Oct 23, 2010?",
    "question_toks": [
      "How",
      "many",
      "adults",
      "stay",
      "in",
      "the",
      "room",
      "CONRAD",
      "SELBIG",
      "checked",
      "in",
      "on",
      "Oct",
      "23",
      ",",
      "2010",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"2010-10-23\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"CONRAD\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"SELBIG\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT Adults FROM Reservations WHERE CheckIn  =  \"2010-10-23\" AND FirstName  =  \"CONRAD\" AND LastName  =  \"SELBIG\";",
    "query_toks": [
      "SELECT",
      "Adults",
      "FROM",
      "Reservations",
      "WHERE",
      "CheckIn",
      "=",
      "``",
      "2010-10-23",
      "''",
      "AND",
      "FirstName",
      "=",
      "``",
      "CONRAD",
      "''",
      "AND",
      "LastName",
      "=",
      "``",
      "SELBIG",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "adults",
      "from",
      "reservations",
      "where",
      "checkin",
      "=",
      "value",
      "and",
      "firstname",
      "=",
      "value",
      "and",
      "lastname",
      "=",
      "value"
    ],
    "question": "Find the number of adults for the room reserved and checked in by CONRAD SELBIG on Oct 23, 2010.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "adults",
      "for",
      "the",
      "room",
      "reserved",
      "and",
      "checked",
      "in",
      "by",
      "CONRAD",
      "SELBIG",
      "on",
      "Oct",
      "23",
      ",",
      "2010",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"2010-10-23\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"CONRAD\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"SELBIG\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT Kids FROM Reservations WHERE CheckIn  =  \"2010-09-21\" AND FirstName  =  \"DAMIEN\" AND LastName  =  \"TRACHSEL\";",
    "query_toks": [
      "SELECT",
      "Kids",
      "FROM",
      "Reservations",
      "WHERE",
      "CheckIn",
      "=",
      "``",
      "2010-09-21",
      "''",
      "AND",
      "FirstName",
      "=",
      "``",
      "DAMIEN",
      "''",
      "AND",
      "LastName",
      "=",
      "``",
      "TRACHSEL",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "kids",
      "from",
      "reservations",
      "where",
      "checkin",
      "=",
      "value",
      "and",
      "firstname",
      "=",
      "value",
      "and",
      "lastname",
      "=",
      "value"
    ],
    "question": "How many kids stay in the room DAMIEN TRACHSEL checked in on Sep 21, 2010?",
    "question_toks": [
      "How",
      "many",
      "kids",
      "stay",
      "in",
      "the",
      "room",
      "DAMIEN",
      "TRACHSEL",
      "checked",
      "in",
      "on",
      "Sep",
      "21",
      ",",
      "2010",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"2010-09-21\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"DAMIEN\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"TRACHSEL\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT Kids FROM Reservations WHERE CheckIn  =  \"2010-09-21\" AND FirstName  =  \"DAMIEN\" AND LastName  =  \"TRACHSEL\";",
    "query_toks": [
      "SELECT",
      "Kids",
      "FROM",
      "Reservations",
      "WHERE",
      "CheckIn",
      "=",
      "``",
      "2010-09-21",
      "''",
      "AND",
      "FirstName",
      "=",
      "``",
      "DAMIEN",
      "''",
      "AND",
      "LastName",
      "=",
      "``",
      "TRACHSEL",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "kids",
      "from",
      "reservations",
      "where",
      "checkin",
      "=",
      "value",
      "and",
      "firstname",
      "=",
      "value",
      "and",
      "lastname",
      "=",
      "value"
    ],
    "question": "Return the number of kids for the room reserved and checked in by DAMIEN TRACHSEL on  Sep 21, 2010.",
    "question_toks": [
      "Return",
      "the",
      "number",
      "of",
      "kids",
      "for",
      "the",
      "room",
      "reserved",
      "and",
      "checked",
      "in",
      "by",
      "DAMIEN",
      "TRACHSEL",
      "on",
      "Sep",
      "21",
      ",",
      "2010",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"2010-09-21\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"DAMIEN\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"TRACHSEL\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT sum(beds) FROM Rooms WHERE bedtype  =  'King';",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "beds",
      ")",
      "FROM",
      "Rooms",
      "WHERE",
      "bedtype",
      "=",
      "'King",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "beds",
      ")",
      "from",
      "rooms",
      "where",
      "bedtype",
      "=",
      "value"
    ],
    "question": "How many king beds are there?",
    "question_toks": [
      "How",
      "many",
      "king",
      "beds",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"King\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT sum(beds) FROM Rooms WHERE bedtype  =  'King';",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "beds",
      ")",
      "FROM",
      "Rooms",
      "WHERE",
      "bedtype",
      "=",
      "'King",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "beds",
      ")",
      "from",
      "rooms",
      "where",
      "bedtype",
      "=",
      "value"
    ],
    "question": "Find the total number of king beds available.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "number",
      "of",
      "king",
      "beds",
      "available",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"King\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT decor FROM Rooms WHERE roomName  =  \"Recluse and defiance\";",
    "query_toks": [
      "SELECT",
      "decor",
      "FROM",
      "Rooms",
      "WHERE",
      "roomName",
      "=",
      "``",
      "Recluse",
      "and",
      "defiance",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "decor",
      "from",
      "rooms",
      "where",
      "roomname",
      "=",
      "value"
    ],
    "question": "What is the decor of room Recluse and defiance?",
    "question_toks": [
      "What",
      "is",
      "the",
      "decor",
      "of",
      "room",
      "Recluse",
      "and",
      "defiance",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Recluse and defiance\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT decor FROM Rooms WHERE roomName  =  \"Recluse and defiance\";",
    "query_toks": [
      "SELECT",
      "decor",
      "FROM",
      "Rooms",
      "WHERE",
      "roomName",
      "=",
      "``",
      "Recluse",
      "and",
      "defiance",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "decor",
      "from",
      "rooms",
      "where",
      "roomname",
      "=",
      "value"
    ],
    "question": "Return the decor of the room named \"Recluse and defiance\".",
    "question_toks": [
      "Return",
      "the",
      "decor",
      "of",
      "the",
      "room",
      "named",
      "``",
      "Recluse",
      "and",
      "defiance",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Recluse and defiance\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT sum(maxOccupancy) FROM Rooms WHERE decor  =  'modern';",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "maxOccupancy",
      ")",
      "FROM",
      "Rooms",
      "WHERE",
      "decor",
      "=",
      "'modern",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "maxoccupancy",
      ")",
      "from",
      "rooms",
      "where",
      "decor",
      "=",
      "value"
    ],
    "question": "What is the total number of people who could stay in the modern rooms in this inn?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "people",
      "who",
      "could",
      "stay",
      "in",
      "the",
      "modern",
      "rooms",
      "in",
      "this",
      "inn",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"modern\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT sum(maxOccupancy) FROM Rooms WHERE decor  =  'modern';",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "maxOccupancy",
      ")",
      "FROM",
      "Rooms",
      "WHERE",
      "decor",
      "=",
      "'modern",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "maxoccupancy",
      ")",
      "from",
      "rooms",
      "where",
      "decor",
      "=",
      "value"
    ],
    "question": "How many people in total can stay in the modern rooms of this inn?",
    "question_toks": [
      "How",
      "many",
      "people",
      "in",
      "total",
      "can",
      "stay",
      "in",
      "the",
      "modern",
      "rooms",
      "of",
      "this",
      "inn",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"modern\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT count(*) FROM Rooms;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Rooms",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "rooms"
    ],
    "question": "How many rooms are there?",
    "question_toks": [
      "How",
      "many",
      "rooms",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT count(*) FROM Rooms;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Rooms",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "rooms"
    ],
    "question": "What is the total number of rooms available in this inn?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "rooms",
      "available",
      "in",
      "this",
      "inn",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT count(*) FROM Rooms WHERE bedType  =  \"King\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Rooms",
      "WHERE",
      "bedType",
      "=",
      "``",
      "King",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "rooms",
      "where",
      "bedtype",
      "=",
      "value"
    ],
    "question": "Find the number of rooms with a king bed.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "rooms",
      "with",
      "a",
      "king",
      "bed",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"King\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT count(*) FROM Rooms WHERE bedType  =  \"King\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Rooms",
      "WHERE",
      "bedType",
      "=",
      "``",
      "King",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "rooms",
      "where",
      "bedtype",
      "=",
      "value"
    ],
    "question": "How many rooms have a king bed?",
    "question_toks": [
      "How",
      "many",
      "rooms",
      "have",
      "a",
      "king",
      "bed",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"King\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT roomName ,  bedType FROM Rooms WHERE decor = \"traditional\";",
    "query_toks": [
      "SELECT",
      "roomName",
      ",",
      "bedType",
      "FROM",
      "Rooms",
      "WHERE",
      "decor",
      "=",
      "``",
      "traditional",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "roomname",
      ",",
      "bedtype",
      "from",
      "rooms",
      "where",
      "decor",
      "=",
      "value"
    ],
    "question": "List the type of bed and name of all traditional rooms.",
    "question_toks": [
      "List",
      "the",
      "type",
      "of",
      "bed",
      "and",
      "name",
      "of",
      "all",
      "traditional",
      "rooms",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"traditional\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT roomName ,  bedType FROM Rooms WHERE decor = \"traditional\";",
    "query_toks": [
      "SELECT",
      "roomName",
      ",",
      "bedType",
      "FROM",
      "Rooms",
      "WHERE",
      "decor",
      "=",
      "``",
      "traditional",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "roomname",
      ",",
      "bedtype",
      "from",
      "rooms",
      "where",
      "decor",
      "=",
      "value"
    ],
    "question": "What are the bed type and name of all the rooms with traditional decor?",
    "question_toks": [
      "What",
      "are",
      "the",
      "bed",
      "type",
      "and",
      "name",
      "of",
      "all",
      "the",
      "rooms",
      "with",
      "traditional",
      "decor",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"traditional\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT roomName FROM Rooms WHERE bedType  =  \"King\" OR bedType  =  \"Queen\";",
    "query_toks": [
      "SELECT",
      "roomName",
      "FROM",
      "Rooms",
      "WHERE",
      "bedType",
      "=",
      "``",
      "King",
      "''",
      "OR",
      "bedType",
      "=",
      "``",
      "Queen",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "roomname",
      "from",
      "rooms",
      "where",
      "bedtype",
      "=",
      "value",
      "or",
      "bedtype",
      "=",
      "value"
    ],
    "question": "List the name of rooms with king or queen bed.",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "rooms",
      "with",
      "king",
      "or",
      "queen",
      "bed",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"King\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Queen\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT roomName FROM Rooms WHERE bedType  =  \"King\" OR bedType  =  \"Queen\";",
    "query_toks": [
      "SELECT",
      "roomName",
      "FROM",
      "Rooms",
      "WHERE",
      "bedType",
      "=",
      "``",
      "King",
      "''",
      "OR",
      "bedType",
      "=",
      "``",
      "Queen",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "roomname",
      "from",
      "rooms",
      "where",
      "bedtype",
      "=",
      "value",
      "or",
      "bedtype",
      "=",
      "value"
    ],
    "question": "What are the names of rooms that have either king or queen bed?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "rooms",
      "that",
      "have",
      "either",
      "king",
      "or",
      "queen",
      "bed",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"King\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Queen\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT count(DISTINCT bedType) FROM Rooms;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "bedType",
      ")",
      "FROM",
      "Rooms",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "bedtype",
      ")",
      "from",
      "rooms"
    ],
    "question": "How many different types of beds are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "types",
      "of",
      "beds",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                4,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT count(DISTINCT bedType) FROM Rooms;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "bedType",
      ")",
      "FROM",
      "Rooms",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "bedtype",
      ")",
      "from",
      "rooms"
    ],
    "question": "Find the number of distinct bed types available in this inn.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "distinct",
      "bed",
      "types",
      "available",
      "in",
      "this",
      "inn",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                4,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT roomName FROM Rooms WHERE basePrice  >  ( SELECT avg(basePrice) FROM Rooms );",
    "query_toks": [
      "SELECT",
      "roomName",
      "FROM",
      "Rooms",
      "WHERE",
      "basePrice",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "basePrice",
      ")",
      "FROM",
      "Rooms",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "roomname",
      "from",
      "rooms",
      "where",
      "baseprice",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "baseprice",
      ")",
      "from",
      "rooms",
      ")"
    ],
    "question": "Find the name of rooms whose price is higher than the average price.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "rooms",
      "whose",
      "price",
      "is",
      "higher",
      "than",
      "the",
      "average",
      "price",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      6,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT roomName FROM Rooms WHERE basePrice  >  ( SELECT avg(basePrice) FROM Rooms );",
    "query_toks": [
      "SELECT",
      "roomName",
      "FROM",
      "Rooms",
      "WHERE",
      "basePrice",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "basePrice",
      ")",
      "FROM",
      "Rooms",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "roomname",
      "from",
      "rooms",
      "where",
      "baseprice",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "baseprice",
      ")",
      "from",
      "rooms",
      ")"
    ],
    "question": "What are the name of rooms that cost more than the average.",
    "question_toks": [
      "What",
      "are",
      "the",
      "name",
      "of",
      "rooms",
      "that",
      "cost",
      "more",
      "than",
      "the",
      "average",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      6,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT count(*) FROM rooms WHERE roomid NOT IN (SELECT DISTINCT room FROM reservations)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "rooms",
      "WHERE",
      "roomid",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "DISTINCT",
      "room",
      "FROM",
      "reservations",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "rooms",
      "where",
      "roomid",
      "not",
      "in",
      "(",
      "select",
      "distinct",
      "room",
      "from",
      "reservations",
      ")"
    ],
    "question": "Find the number of rooms that do not have any reservation.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "rooms",
      "that",
      "do",
      "not",
      "have",
      "any",
      "reservation",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              true,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT count(*) FROM rooms WHERE roomid NOT IN (SELECT DISTINCT room FROM reservations)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "rooms",
      "WHERE",
      "roomid",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "DISTINCT",
      "room",
      "FROM",
      "reservations",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "rooms",
      "where",
      "roomid",
      "not",
      "in",
      "(",
      "select",
      "distinct",
      "room",
      "from",
      "reservations",
      ")"
    ],
    "question": "How many rooms have not had any reservation yet?",
    "question_toks": [
      "How",
      "many",
      "rooms",
      "have",
      "not",
      "had",
      "any",
      "reservation",
      "yet",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              true,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT roomname FROM rooms WHERE baseprice BETWEEN 120 AND 150",
    "query_toks": [
      "SELECT",
      "roomname",
      "FROM",
      "rooms",
      "WHERE",
      "baseprice",
      "BETWEEN",
      "120",
      "AND",
      "150"
    ],
    "query_toks_no_value": [
      "select",
      "roomname",
      "from",
      "rooms",
      "where",
      "baseprice",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "Find the name of rooms whose base price is between 120 and 150.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "rooms",
      "whose",
      "base",
      "price",
      "is",
      "between",
      "120",
      "and",
      "150",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          120.0,
          150.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT roomname FROM rooms WHERE baseprice BETWEEN 120 AND 150",
    "query_toks": [
      "SELECT",
      "roomname",
      "FROM",
      "rooms",
      "WHERE",
      "baseprice",
      "BETWEEN",
      "120",
      "AND",
      "150"
    ],
    "query_toks_no_value": [
      "select",
      "roomname",
      "from",
      "rooms",
      "where",
      "baseprice",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "Which rooms cost between 120 and 150? Give me the room names.",
    "question_toks": [
      "Which",
      "rooms",
      "cost",
      "between",
      "120",
      "and",
      "150",
      "?",
      "Give",
      "me",
      "the",
      "room",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          120.0,
          150.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "local_govt_mdm",
    "query": "SELECT count(DISTINCT source_system_code) FROM CMI_cross_references",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "source_system_code",
      ")",
      "FROM",
      "CMI_cross_references"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "source_system_code",
      ")",
      "from",
      "cmi_cross_references"
    ],
    "question": "How many different source system code for the cmi cross references are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "source",
      "system",
      "code",
      "for",
      "the",
      "cmi",
      "cross",
      "references",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                5,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "local_govt_mdm",
    "query": "SELECT council_tax_id ,  cmi_cross_ref_id FROM parking_fines",
    "query_toks": [
      "SELECT",
      "council_tax_id",
      ",",
      "cmi_cross_ref_id",
      "FROM",
      "parking_fines"
    ],
    "query_toks_no_value": [
      "select",
      "council_tax_id",
      ",",
      "cmi_cross_ref_id",
      "from",
      "parking_fines"
    ],
    "question": "List the council tax ids and their related cmi cross references of all the parking fines.",
    "question_toks": [
      "List",
      "the",
      "council",
      "tax",
      "ids",
      "and",
      "their",
      "related",
      "cmi",
      "cross",
      "references",
      "of",
      "all",
      "the",
      "parking",
      "fines",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "local_govt_mdm",
    "query": "SELECT count(*) FROM rent_arrears",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "rent_arrears"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "rent_arrears"
    ],
    "question": "How many council taxes are collected for renting arrears ?",
    "question_toks": [
      "How",
      "many",
      "council",
      "taxes",
      "are",
      "collected",
      "for",
      "renting",
      "arrears",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_host",
    "query": "SELECT count(*) FROM party",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "party"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "party"
    ],
    "question": "How many parties are there?",
    "question_toks": [
      "How",
      "many",
      "parties",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_host",
    "query": "SELECT count(*) FROM party",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "party"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "party"
    ],
    "question": "Count the number of parties.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "parties",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_host",
    "query": "SELECT Party_Theme ,  LOCATION FROM party",
    "query_toks": [
      "SELECT",
      "Party_Theme",
      ",",
      "LOCATION",
      "FROM",
      "party"
    ],
    "query_toks_no_value": [
      "select",
      "party_theme",
      ",",
      "location",
      "from",
      "party"
    ],
    "question": "What are the themes and locations of parties?",
    "question_toks": [
      "What",
      "are",
      "the",
      "themes",
      "and",
      "locations",
      "of",
      "parties",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_host",
    "query": "SELECT Party_Theme ,  LOCATION FROM party",
    "query_toks": [
      "SELECT",
      "Party_Theme",
      ",",
      "LOCATION",
      "FROM",
      "party"
    ],
    "query_toks_no_value": [
      "select",
      "party_theme",
      ",",
      "location",
      "from",
      "party"
    ],
    "question": "Give me the theme and location of each party.",
    "question_toks": [
      "Give",
      "me",
      "the",
      "theme",
      "and",
      "location",
      "of",
      "each",
      "party",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_host",
    "query": "SELECT First_year ,  Last_year FROM party WHERE Party_Theme  =  \"Spring\" OR Party_Theme  =  \"Teqnology\"",
    "query_toks": [
      "SELECT",
      "First_year",
      ",",
      "Last_year",
      "FROM",
      "party",
      "WHERE",
      "Party_Theme",
      "=",
      "``",
      "Spring",
      "''",
      "OR",
      "Party_Theme",
      "=",
      "``",
      "Teqnology",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "first_year",
      ",",
      "last_year",
      "from",
      "party",
      "where",
      "party_theme",
      "=",
      "value",
      "or",
      "party_theme",
      "=",
      "value"
    ],
    "question": "Show the first year and last year of parties with theme \"Spring\" or \"Teqnology\".",
    "question_toks": [
      "Show",
      "the",
      "first",
      "year",
      "and",
      "last",
      "year",
      "of",
      "parties",
      "with",
      "theme",
      "``",
      "Spring",
      "''",
      "or",
      "``",
      "Teqnology",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Spring\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Teqnology\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_host",
    "query": "SELECT First_year ,  Last_year FROM party WHERE Party_Theme  =  \"Spring\" OR Party_Theme  =  \"Teqnology\"",
    "query_toks": [
      "SELECT",
      "First_year",
      ",",
      "Last_year",
      "FROM",
      "party",
      "WHERE",
      "Party_Theme",
      "=",
      "``",
      "Spring",
      "''",
      "OR",
      "Party_Theme",
      "=",
      "``",
      "Teqnology",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "first_year",
      ",",
      "last_year",
      "from",
      "party",
      "where",
      "party_theme",
      "=",
      "value",
      "or",
      "party_theme",
      "=",
      "value"
    ],
    "question": "What are the first year and last year of the parties whose theme is \"Spring\" or \"Teqnology\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "year",
      "and",
      "last",
      "year",
      "of",
      "the",
      "parties",
      "whose",
      "theme",
      "is",
      "``",
      "Spring",
      "''",
      "or",
      "``",
      "Teqnology",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Spring\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Teqnology\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_host",
    "query": "SELECT avg(Number_of_hosts) FROM party",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Number_of_hosts",
      ")",
      "FROM",
      "party"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "number_of_hosts",
      ")",
      "from",
      "party"
    ],
    "question": "What is the average number of hosts for parties?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "hosts",
      "for",
      "parties",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_host",
    "query": "SELECT avg(Number_of_hosts) FROM party",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Number_of_hosts",
      ")",
      "FROM",
      "party"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "number_of_hosts",
      ")",
      "from",
      "party"
    ],
    "question": "Compute the average number of hosts for parties.",
    "question_toks": [
      "Compute",
      "the",
      "average",
      "number",
      "of",
      "hosts",
      "for",
      "parties",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_host",
    "query": "SELECT Name FROM HOST WHERE Host_ID NOT IN (SELECT Host_ID FROM party_host)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "HOST",
      "WHERE",
      "Host_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Host_ID",
      "FROM",
      "party_host",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "host",
      "where",
      "host_id",
      "not",
      "in",
      "(",
      "select",
      "host_id",
      "from",
      "party_host",
      ")"
    ],
    "question": "List the names of hosts who did not serve as a host of any party in our record.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "hosts",
      "who",
      "did",
      "not",
      "serve",
      "as",
      "a",
      "host",
      "of",
      "any",
      "party",
      "in",
      "our",
      "record",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      12,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_host",
    "query": "SELECT Name FROM HOST WHERE Host_ID NOT IN (SELECT Host_ID FROM party_host)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "HOST",
      "WHERE",
      "Host_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Host_ID",
      "FROM",
      "party_host",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "host",
      "where",
      "host_id",
      "not",
      "in",
      "(",
      "select",
      "host_id",
      "from",
      "party_host",
      ")"
    ],
    "question": "What are the names of hosts who did not host any party in our record?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "hosts",
      "who",
      "did",
      "not",
      "host",
      "any",
      "party",
      "in",
      "our",
      "record",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      12,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "storm_record",
    "query": "SELECT count(*) FROM region",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "region"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "region"
    ],
    "question": "How many regions do we have?",
    "question_toks": [
      "How",
      "many",
      "regions",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "storm_record",
    "query": "SELECT count(*) FROM region",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "region"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "region"
    ],
    "question": "Count the number of regions.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "regions",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "storm_record",
    "query": "SELECT region_name FROM region WHERE region_name != 'Denmark'",
    "query_toks": [
      "SELECT",
      "region_name",
      "FROM",
      "region",
      "WHERE",
      "region_name",
      "!",
      "=",
      "'Denmark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "region_name",
      "from",
      "region",
      "where",
      "region_name",
      "!",
      "=",
      "value"
    ],
    "question": "Show names for all regions except for Denmark.",
    "question_toks": [
      "Show",
      "names",
      "for",
      "all",
      "regions",
      "except",
      "for",
      "Denmark",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Denmark\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "storm_record",
    "query": "SELECT region_name FROM region WHERE region_name != 'Denmark'",
    "query_toks": [
      "SELECT",
      "region_name",
      "FROM",
      "region",
      "WHERE",
      "region_name",
      "!",
      "=",
      "'Denmark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "region_name",
      "from",
      "region",
      "where",
      "region_name",
      "!",
      "=",
      "value"
    ],
    "question": "Return the names of all regions other than Denmark.",
    "question_toks": [
      "Return",
      "the",
      "names",
      "of",
      "all",
      "regions",
      "other",
      "than",
      "Denmark",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Denmark\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "storm_record",
    "query": "SELECT count(*) FROM storm WHERE Number_Deaths  >  0",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "storm",
      "WHERE",
      "Number_Deaths",
      ">",
      "0"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "storm",
      "where",
      "number_deaths",
      ">",
      "value"
    ],
    "question": "How many storms had death records?",
    "question_toks": [
      "How",
      "many",
      "storms",
      "had",
      "death",
      "records",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          0.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "storm_record",
    "query": "SELECT count(*) FROM storm WHERE Number_Deaths  >  0",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "storm",
      "WHERE",
      "Number_Deaths",
      ">",
      "0"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "storm",
      "where",
      "number_deaths",
      ">",
      "value"
    ],
    "question": "Count the number of storms in which at least 1 person died.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "storms",
      "in",
      "which",
      "at",
      "least",
      "1",
      "person",
      "died",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          0.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "storm_record",
    "query": "SELECT name ,  dates_active ,  number_deaths FROM storm WHERE number_deaths  >=  1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "dates_active",
      ",",
      "number_deaths",
      "FROM",
      "storm",
      "WHERE",
      "number_deaths",
      ">",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "dates_active",
      ",",
      "number_deaths",
      "from",
      "storm",
      "where",
      "number_deaths",
      ">",
      "=",
      "value"
    ],
    "question": "List name, dates active, and number of deaths for all storms with at least 1 death.",
    "question_toks": [
      "List",
      "name",
      ",",
      "dates",
      "active",
      ",",
      "and",
      "number",
      "of",
      "deaths",
      "for",
      "all",
      "storms",
      "with",
      "at",
      "least",
      "1",
      "death",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "storm_record",
    "query": "SELECT name ,  dates_active ,  number_deaths FROM storm WHERE number_deaths  >=  1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "dates_active",
      ",",
      "number_deaths",
      "FROM",
      "storm",
      "WHERE",
      "number_deaths",
      ">",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "dates_active",
      ",",
      "number_deaths",
      "from",
      "storm",
      "where",
      "number_deaths",
      ">",
      "=",
      "value"
    ],
    "question": "What are the names, dates active, and number of deaths for storms that had 1 or more death?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      ",",
      "dates",
      "active",
      ",",
      "and",
      "number",
      "of",
      "deaths",
      "for",
      "storms",
      "that",
      "had",
      "1",
      "or",
      "more",
      "death",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "storm_record",
    "query": "SELECT avg(damage_millions_USD) ,  max(damage_millions_USD) FROM storm WHERE max_speed  >  1000",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "damage_millions_USD",
      ")",
      ",",
      "max",
      "(",
      "damage_millions_USD",
      ")",
      "FROM",
      "storm",
      "WHERE",
      "max_speed",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "damage_millions_usd",
      ")",
      ",",
      "max",
      "(",
      "damage_millions_usd",
      ")",
      "from",
      "storm",
      "where",
      "max_speed",
      ">",
      "value"
    ],
    "question": "Show the average and maximum damage for all storms with max speed higher than 1000.",
    "question_toks": [
      "Show",
      "the",
      "average",
      "and",
      "maximum",
      "damage",
      "for",
      "all",
      "storms",
      "with",
      "max",
      "speed",
      "higher",
      "than",
      "1000",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          1000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "storm_record",
    "query": "SELECT avg(damage_millions_USD) ,  max(damage_millions_USD) FROM storm WHERE max_speed  >  1000",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "damage_millions_USD",
      ")",
      ",",
      "max",
      "(",
      "damage_millions_USD",
      ")",
      "FROM",
      "storm",
      "WHERE",
      "max_speed",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "damage_millions_usd",
      ")",
      ",",
      "max",
      "(",
      "damage_millions_usd",
      ")",
      "from",
      "storm",
      "where",
      "max_speed",
      ">",
      "value"
    ],
    "question": "What is the average and maximum damage in millions for storms that had a max speed over 1000?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "and",
      "maximum",
      "damage",
      "in",
      "millions",
      "for",
      "storms",
      "that",
      "had",
      "a",
      "max",
      "speed",
      "over",
      "1000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          1000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "storm_record",
    "query": "SELECT sum(number_deaths) ,  sum(damage_millions_USD) FROM storm WHERE max_speed  >  (SELECT avg(max_speed) FROM storm)",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "number_deaths",
      ")",
      ",",
      "sum",
      "(",
      "damage_millions_USD",
      ")",
      "FROM",
      "storm",
      "WHERE",
      "max_speed",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "max_speed",
      ")",
      "FROM",
      "storm",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "number_deaths",
      ")",
      ",",
      "sum",
      "(",
      "damage_millions_usd",
      ")",
      "from",
      "storm",
      "where",
      "max_speed",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "max_speed",
      ")",
      "from",
      "storm",
      ")"
    ],
    "question": "What is the total number of deaths and damage for all storms with a max speed greater than the average?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "deaths",
      "and",
      "damage",
      "for",
      "all",
      "storms",
      "with",
      "a",
      "max",
      "speed",
      "greater",
      "than",
      "the",
      "average",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            4,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "storm_record",
    "query": "SELECT sum(number_deaths) ,  sum(damage_millions_USD) FROM storm WHERE max_speed  >  (SELECT avg(max_speed) FROM storm)",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "number_deaths",
      ")",
      ",",
      "sum",
      "(",
      "damage_millions_USD",
      ")",
      "FROM",
      "storm",
      "WHERE",
      "max_speed",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "max_speed",
      ")",
      "FROM",
      "storm",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "number_deaths",
      ")",
      ",",
      "sum",
      "(",
      "damage_millions_usd",
      ")",
      "from",
      "storm",
      "where",
      "max_speed",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "max_speed",
      ")",
      "from",
      "storm",
      ")"
    ],
    "question": "Return the total number of deaths and total damange in millions for storms that had a max speed greater than the average.",
    "question_toks": [
      "Return",
      "the",
      "total",
      "number",
      "of",
      "deaths",
      "and",
      "total",
      "damange",
      "in",
      "millions",
      "for",
      "storms",
      "that",
      "had",
      "a",
      "max",
      "speed",
      "greater",
      "than",
      "the",
      "average",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            4,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "storm_record",
    "query": "SELECT count(DISTINCT region_id) FROM affected_region",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "region_id",
      ")",
      "FROM",
      "affected_region"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "region_id",
      ")",
      "from",
      "affected_region"
    ],
    "question": "How many regions are affected?",
    "question_toks": [
      "How",
      "many",
      "regions",
      "are",
      "affected",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                10,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "storm_record",
    "query": "SELECT count(DISTINCT region_id) FROM affected_region",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "region_id",
      ")",
      "FROM",
      "affected_region"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "region_id",
      ")",
      "from",
      "affected_region"
    ],
    "question": "Count the number of different affected regions.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "affected",
      "regions",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                10,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "storm_record",
    "query": "SELECT region_name FROM region WHERE region_id NOT IN (SELECT region_id FROM affected_region)",
    "query_toks": [
      "SELECT",
      "region_name",
      "FROM",
      "region",
      "WHERE",
      "region_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "region_id",
      "FROM",
      "affected_region",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "region_name",
      "from",
      "region",
      "where",
      "region_id",
      "not",
      "in",
      "(",
      "select",
      "region_id",
      "from",
      "affected_region",
      ")"
    ],
    "question": "Show the name for regions not affected.",
    "question_toks": [
      "Show",
      "the",
      "name",
      "for",
      "regions",
      "not",
      "affected",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      10,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "storm_record",
    "query": "SELECT region_name FROM region WHERE region_id NOT IN (SELECT region_id FROM affected_region)",
    "query_toks": [
      "SELECT",
      "region_name",
      "FROM",
      "region",
      "WHERE",
      "region_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "region_id",
      "FROM",
      "affected_region",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "region_name",
      "from",
      "region",
      "where",
      "region_id",
      "not",
      "in",
      "(",
      "select",
      "region_id",
      "from",
      "affected_region",
      ")"
    ],
    "question": "What are the names of regions that were not affected?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "regions",
      "that",
      "were",
      "not",
      "affected",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      10,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "storm_record",
    "query": "SELECT name FROM storm WHERE storm_id NOT IN (SELECT storm_id FROM affected_region)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "storm",
      "WHERE",
      "storm_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "storm_id",
      "FROM",
      "affected_region",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "storm",
      "where",
      "storm_id",
      "not",
      "in",
      "(",
      "select",
      "storm_id",
      "from",
      "affected_region",
      ")"
    ],
    "question": "Show the name of storms which don't have affected region in record.",
    "question_toks": [
      "Show",
      "the",
      "name",
      "of",
      "storms",
      "which",
      "do",
      "n't",
      "have",
      "affected",
      "region",
      "in",
      "record",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      11,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "storm_record",
    "query": "SELECT name FROM storm WHERE storm_id NOT IN (SELECT storm_id FROM affected_region)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "storm",
      "WHERE",
      "storm_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "storm_id",
      "FROM",
      "affected_region",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "storm",
      "where",
      "storm_id",
      "not",
      "in",
      "(",
      "select",
      "storm_id",
      "from",
      "affected_region",
      ")"
    ],
    "question": "What are the names of storms that did not affect any regions?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "storms",
      "that",
      "did",
      "not",
      "affect",
      "any",
      "regions",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      11,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT count(*) FROM county",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "county"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "county"
    ],
    "question": "How many counties are there in total?",
    "question_toks": [
      "How",
      "many",
      "counties",
      "are",
      "there",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT count(*) FROM county",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "county"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "county"
    ],
    "question": "Count the total number of counties.",
    "question_toks": [
      "Count",
      "the",
      "total",
      "number",
      "of",
      "counties",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT County_name ,  Population FROM county",
    "query_toks": [
      "SELECT",
      "County_name",
      ",",
      "Population",
      "FROM",
      "county"
    ],
    "query_toks_no_value": [
      "select",
      "county_name",
      ",",
      "population",
      "from",
      "county"
    ],
    "question": "Show the county name and population of all counties.",
    "question_toks": [
      "Show",
      "the",
      "county",
      "name",
      "and",
      "population",
      "of",
      "all",
      "counties",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT County_name ,  Population FROM county",
    "query_toks": [
      "SELECT",
      "County_name",
      ",",
      "Population",
      "FROM",
      "county"
    ],
    "query_toks_no_value": [
      "select",
      "county_name",
      ",",
      "population",
      "from",
      "county"
    ],
    "question": "What are the name and population of each county?",
    "question_toks": [
      "What",
      "are",
      "the",
      "name",
      "and",
      "population",
      "of",
      "each",
      "county",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT avg(Population) FROM county",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Population",
      ")",
      "FROM",
      "county"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "population",
      ")",
      "from",
      "county"
    ],
    "question": "Show the average population of all counties.",
    "question_toks": [
      "Show",
      "the",
      "average",
      "population",
      "of",
      "all",
      "counties",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT avg(Population) FROM county",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Population",
      ")",
      "FROM",
      "county"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "population",
      ")",
      "from",
      "county"
    ],
    "question": "On average how large is the population of the counties?",
    "question_toks": [
      "On",
      "average",
      "how",
      "large",
      "is",
      "the",
      "population",
      "of",
      "the",
      "counties",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT max(Population) ,  min(Population) FROM county",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Population",
      ")",
      ",",
      "min",
      "(",
      "Population",
      ")",
      "FROM",
      "county"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "population",
      ")",
      ",",
      "min",
      "(",
      "population",
      ")",
      "from",
      "county"
    ],
    "question": "Return the maximum and minimum population among all counties.",
    "question_toks": [
      "Return",
      "the",
      "maximum",
      "and",
      "minimum",
      "population",
      "among",
      "all",
      "counties",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT max(Population) ,  min(Population) FROM county",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Population",
      ")",
      ",",
      "min",
      "(",
      "Population",
      ")",
      "FROM",
      "county"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "population",
      ")",
      ",",
      "min",
      "(",
      "population",
      ")",
      "from",
      "county"
    ],
    "question": "What are the maximum and minimum population of the counties?",
    "question_toks": [
      "What",
      "are",
      "the",
      "maximum",
      "and",
      "minimum",
      "population",
      "of",
      "the",
      "counties",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT Zip_code FROM county WHERE County_name  =  \"Howard\"",
    "query_toks": [
      "SELECT",
      "Zip_code",
      "FROM",
      "county",
      "WHERE",
      "County_name",
      "=",
      "``",
      "Howard",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "zip_code",
      "from",
      "county",
      "where",
      "county_name",
      "=",
      "value"
    ],
    "question": "Show the zip code of the county with name \"Howard\".",
    "question_toks": [
      "Show",
      "the",
      "zip",
      "code",
      "of",
      "the",
      "county",
      "with",
      "name",
      "``",
      "Howard",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Howard\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT Zip_code FROM county WHERE County_name  =  \"Howard\"",
    "query_toks": [
      "SELECT",
      "Zip_code",
      "FROM",
      "county",
      "WHERE",
      "County_name",
      "=",
      "``",
      "Howard",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "zip_code",
      "from",
      "county",
      "where",
      "county_name",
      "=",
      "value"
    ],
    "question": "What is the zip code the county named \"Howard\" is located in?",
    "question_toks": [
      "What",
      "is",
      "the",
      "zip",
      "code",
      "the",
      "county",
      "named",
      "``",
      "Howard",
      "''",
      "is",
      "located",
      "in",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Howard\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT Delegate FROM election WHERE District  =  1",
    "query_toks": [
      "SELECT",
      "Delegate",
      "FROM",
      "election",
      "WHERE",
      "District",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "delegate",
      "from",
      "election",
      "where",
      "district",
      "=",
      "value"
    ],
    "question": "Show the delegate from district 1 in election.",
    "question_toks": [
      "Show",
      "the",
      "delegate",
      "from",
      "district",
      "1",
      "in",
      "election",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT Delegate FROM election WHERE District  =  1",
    "query_toks": [
      "SELECT",
      "Delegate",
      "FROM",
      "election",
      "WHERE",
      "District",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "delegate",
      "from",
      "election",
      "where",
      "district",
      "=",
      "value"
    ],
    "question": "Who is the delegate of district 1 in the elections?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "delegate",
      "of",
      "district",
      "1",
      "in",
      "the",
      "elections",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT Delegate ,  Committee FROM election",
    "query_toks": [
      "SELECT",
      "Delegate",
      ",",
      "Committee",
      "FROM",
      "election"
    ],
    "query_toks_no_value": [
      "select",
      "delegate",
      ",",
      "committee",
      "from",
      "election"
    ],
    "question": "Show the delegate and committee information of elections.",
    "question_toks": [
      "Show",
      "the",
      "delegate",
      "and",
      "committee",
      "information",
      "of",
      "elections",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT Delegate ,  Committee FROM election",
    "query_toks": [
      "SELECT",
      "Delegate",
      ",",
      "Committee",
      "FROM",
      "election"
    ],
    "query_toks_no_value": [
      "select",
      "delegate",
      ",",
      "committee",
      "from",
      "election"
    ],
    "question": "What are the delegate and committee information for each election record?",
    "question_toks": [
      "What",
      "are",
      "the",
      "delegate",
      "and",
      "committee",
      "information",
      "for",
      "each",
      "election",
      "record",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT count(DISTINCT Governor) FROM party",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Governor",
      ")",
      "FROM",
      "party"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "governor",
      ")",
      "from",
      "party"
    ],
    "question": "How many distinct governors are there?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "governors",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                8,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT count(DISTINCT Governor) FROM party",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Governor",
      ")",
      "FROM",
      "party"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "governor",
      ")",
      "from",
      "party"
    ],
    "question": "Count the number of distinct governors.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "distinct",
      "governors",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                8,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT Lieutenant_Governor ,  Comptroller FROM party WHERE Party  =  \"Democratic\"",
    "query_toks": [
      "SELECT",
      "Lieutenant_Governor",
      ",",
      "Comptroller",
      "FROM",
      "party",
      "WHERE",
      "Party",
      "=",
      "``",
      "Democratic",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "lieutenant_governor",
      ",",
      "comptroller",
      "from",
      "party",
      "where",
      "party",
      "=",
      "value"
    ],
    "question": "Show the lieutenant governor and comptroller from the democratic party.",
    "question_toks": [
      "Show",
      "the",
      "lieutenant",
      "governor",
      "and",
      "comptroller",
      "from",
      "the",
      "democratic",
      "party",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"Democratic\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT Lieutenant_Governor ,  Comptroller FROM party WHERE Party  =  \"Democratic\"",
    "query_toks": [
      "SELECT",
      "Lieutenant_Governor",
      ",",
      "Comptroller",
      "FROM",
      "party",
      "WHERE",
      "Party",
      "=",
      "``",
      "Democratic",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "lieutenant_governor",
      ",",
      "comptroller",
      "from",
      "party",
      "where",
      "party",
      "=",
      "value"
    ],
    "question": "Who are the lieutenant governor and comptroller from the democratic party?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "lieutenant",
      "governor",
      "and",
      "comptroller",
      "from",
      "the",
      "democratic",
      "party",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"Democratic\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT * FROM election",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "election"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "election"
    ],
    "question": "Show all the information about election.",
    "question_toks": [
      "Show",
      "all",
      "the",
      "information",
      "about",
      "election",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT * FROM election",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "election"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "election"
    ],
    "question": "Return all the information for each election record.",
    "question_toks": [
      "Return",
      "all",
      "the",
      "information",
      "for",
      "each",
      "election",
      "record",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT Party FROM party WHERE Party_ID NOT IN (SELECT Party FROM election)",
    "query_toks": [
      "SELECT",
      "Party",
      "FROM",
      "party",
      "WHERE",
      "Party_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Party",
      "FROM",
      "election",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "party",
      "from",
      "party",
      "where",
      "party_id",
      "not",
      "in",
      "(",
      "select",
      "party",
      "from",
      "election",
      ")"
    ],
    "question": "What are the names of parties that do not have delegates in election?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "parties",
      "that",
      "do",
      "not",
      "have",
      "delegates",
      "in",
      "election",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      17,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT Party FROM party WHERE Party_ID NOT IN (SELECT Party FROM election)",
    "query_toks": [
      "SELECT",
      "Party",
      "FROM",
      "party",
      "WHERE",
      "Party_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Party",
      "FROM",
      "election",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "party",
      "from",
      "party",
      "where",
      "party_id",
      "not",
      "in",
      "(",
      "select",
      "party",
      "from",
      "election",
      ")"
    ],
    "question": "Which parties did not have any delegates in elections?",
    "question_toks": [
      "Which",
      "parties",
      "did",
      "not",
      "have",
      "any",
      "delegates",
      "in",
      "elections",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      17,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "news_report",
    "query": "SELECT count(*) FROM journalist",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "journalist"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "journalist"
    ],
    "question": "How many journalists are there?",
    "question_toks": [
      "How",
      "many",
      "journalists",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "news_report",
    "query": "SELECT Nationality ,  Age FROM journalist",
    "query_toks": [
      "SELECT",
      "Nationality",
      ",",
      "Age",
      "FROM",
      "journalist"
    ],
    "query_toks_no_value": [
      "select",
      "nationality",
      ",",
      "age",
      "from",
      "journalist"
    ],
    "question": "What are the nationalities and ages of journalists?",
    "question_toks": [
      "What",
      "are",
      "the",
      "nationalities",
      "and",
      "ages",
      "of",
      "journalists",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "news_report",
    "query": "SELECT Name FROM journalist WHERE Nationality  =  \"England\" OR Nationality  =  \"Wales\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "journalist",
      "WHERE",
      "Nationality",
      "=",
      "``",
      "England",
      "''",
      "OR",
      "Nationality",
      "=",
      "``",
      "Wales",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "journalist",
      "where",
      "nationality",
      "=",
      "value",
      "or",
      "nationality",
      "=",
      "value"
    ],
    "question": "Show the names of journalists from \"England\" or \"Wales\".",
    "question_toks": [
      "Show",
      "the",
      "names",
      "of",
      "journalists",
      "from",
      "``",
      "England",
      "''",
      "or",
      "``",
      "Wales",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"England\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Wales\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "news_report",
    "query": "SELECT avg(Years_working) FROM journalist",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Years_working",
      ")",
      "FROM",
      "journalist"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "years_working",
      ")",
      "from",
      "journalist"
    ],
    "question": "What is the average number of years spent working as a journalist?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "years",
      "spent",
      "working",
      "as",
      "a",
      "journalist",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "news_report",
    "query": "SELECT Name FROM journalist WHERE journalist_ID NOT IN (SELECT journalist_ID FROM news_report)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "journalist",
      "WHERE",
      "journalist_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "journalist_ID",
      "FROM",
      "news_report",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "journalist",
      "where",
      "journalist_id",
      "not",
      "in",
      "(",
      "select",
      "journalist_id",
      "from",
      "news_report",
      ")"
    ],
    "question": "List the names of journalists who have not reported any event.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "journalists",
      "who",
      "have",
      "not",
      "reported",
      "any",
      "event",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      11,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "news_report",
    "query": "SELECT avg(Event_Attendance) ,  max(Event_Attendance) FROM event",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Event_Attendance",
      ")",
      ",",
      "max",
      "(",
      "Event_Attendance",
      ")",
      "FROM",
      "event"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "event_attendance",
      ")",
      ",",
      "max",
      "(",
      "event_attendance",
      ")",
      "from",
      "event"
    ],
    "question": "what are the average and maximum attendances of all events?",
    "question_toks": [
      "what",
      "are",
      "the",
      "average",
      "and",
      "maximum",
      "attendances",
      "of",
      "all",
      "events",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "restaurant_1",
    "query": "SELECT ResName FROM Restaurant;",
    "query_toks": [
      "SELECT",
      "ResName",
      "FROM",
      "Restaurant",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "resname",
      "from",
      "restaurant"
    ],
    "question": "Show me all the restaurants.",
    "question_toks": [
      "Show",
      "me",
      "all",
      "the",
      "restaurants",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "restaurant_1",
    "query": "SELECT Address FROM Restaurant WHERE ResName = \"Subway\";",
    "query_toks": [
      "SELECT",
      "Address",
      "FROM",
      "Restaurant",
      "WHERE",
      "ResName",
      "=",
      "``",
      "Subway",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "address",
      "from",
      "restaurant",
      "where",
      "resname",
      "=",
      "value"
    ],
    "question": "What is the address of the restaurant Subway?",
    "question_toks": [
      "What",
      "is",
      "the",
      "address",
      "of",
      "the",
      "restaurant",
      "Subway",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Subway\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "restaurant_1",
    "query": "SELECT Rating FROM Restaurant WHERE ResName = \"Subway\";",
    "query_toks": [
      "SELECT",
      "Rating",
      "FROM",
      "Restaurant",
      "WHERE",
      "ResName",
      "=",
      "``",
      "Subway",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "rating",
      "from",
      "restaurant",
      "where",
      "resname",
      "=",
      "value"
    ],
    "question": "What is the rating of the restaurant Subway?",
    "question_toks": [
      "What",
      "is",
      "the",
      "rating",
      "of",
      "the",
      "restaurant",
      "Subway",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Subway\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "restaurant_1",
    "query": "SELECT ResTypeName FROM Restaurant_Type;",
    "query_toks": [
      "SELECT",
      "ResTypeName",
      "FROM",
      "Restaurant_Type",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "restypename",
      "from",
      "restaurant_type"
    ],
    "question": "List all restaurant types.",
    "question_toks": [
      "List",
      "all",
      "restaurant",
      "types",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "restaurant_1",
    "query": "SELECT ResTypeDescription FROM Restaurant_Type WHERE ResTypeName = \"Sandwich\";",
    "query_toks": [
      "SELECT",
      "ResTypeDescription",
      "FROM",
      "Restaurant_Type",
      "WHERE",
      "ResTypeName",
      "=",
      "``",
      "Sandwich",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "restypedescription",
      "from",
      "restaurant_type",
      "where",
      "restypename",
      "=",
      "value"
    ],
    "question": "What is the description of the restaurant type Sandwich?",
    "question_toks": [
      "What",
      "is",
      "the",
      "description",
      "of",
      "the",
      "restaurant",
      "type",
      "Sandwich",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"Sandwich\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "restaurant_1",
    "query": "SELECT Age FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\";",
    "query_toks": [
      "SELECT",
      "Age",
      "FROM",
      "Student",
      "WHERE",
      "Fname",
      "=",
      "``",
      "Linda",
      "''",
      "AND",
      "Lname",
      "=",
      "``",
      "Smith",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "age",
      "from",
      "student",
      "where",
      "fname",
      "=",
      "value",
      "and",
      "lname",
      "=",
      "value"
    ],
    "question": "What is the age of student Linda Smith?",
    "question_toks": [
      "What",
      "is",
      "the",
      "age",
      "of",
      "student",
      "Linda",
      "Smith",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Linda\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Smith\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "restaurant_1",
    "query": "SELECT Sex FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\";",
    "query_toks": [
      "SELECT",
      "Sex",
      "FROM",
      "Student",
      "WHERE",
      "Fname",
      "=",
      "``",
      "Linda",
      "''",
      "AND",
      "Lname",
      "=",
      "``",
      "Smith",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sex",
      "from",
      "student",
      "where",
      "fname",
      "=",
      "value",
      "and",
      "lname",
      "=",
      "value"
    ],
    "question": "What is the gender of the student Linda Smith?",
    "question_toks": [
      "What",
      "is",
      "the",
      "gender",
      "of",
      "the",
      "student",
      "Linda",
      "Smith",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Linda\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Smith\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "restaurant_1",
    "query": "SELECT Fname , Lname FROM Student WHERE Major  =  600;",
    "query_toks": [
      "SELECT",
      "Fname",
      ",",
      "Lname",
      "FROM",
      "Student",
      "WHERE",
      "Major",
      "=",
      "600",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      ",",
      "lname",
      "from",
      "student",
      "where",
      "major",
      "=",
      "value"
    ],
    "question": "List all students' first names and last names who majored in 600.",
    "question_toks": [
      "List",
      "all",
      "students",
      "'",
      "first",
      "names",
      "and",
      "last",
      "names",
      "who",
      "majored",
      "in",
      "600",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          600.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "restaurant_1",
    "query": "SELECT city_code FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\";",
    "query_toks": [
      "SELECT",
      "city_code",
      "FROM",
      "Student",
      "WHERE",
      "Fname",
      "=",
      "``",
      "Linda",
      "''",
      "AND",
      "Lname",
      "=",
      "``",
      "Smith",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "city_code",
      "from",
      "student",
      "where",
      "fname",
      "=",
      "value",
      "and",
      "lname",
      "=",
      "value"
    ],
    "question": "Which city does student Linda Smith live in?",
    "question_toks": [
      "Which",
      "city",
      "does",
      "student",
      "Linda",
      "Smith",
      "live",
      "in",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Linda\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Smith\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "restaurant_1",
    "query": "SELECT count(*) FROM Student WHERE Advisor =  1121;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Student",
      "WHERE",
      "Advisor",
      "=",
      "1121",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student",
      "where",
      "advisor",
      "=",
      "value"
    ],
    "question": "Advisor 1121 has how many students?",
    "question_toks": [
      "Advisor",
      "1121",
      "has",
      "how",
      "many",
      "students",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          1121.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "restaurant_1",
    "query": "SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major = 600;",
    "query_toks": [
      "SELECT",
      "Fname",
      ",",
      "Lname",
      "FROM",
      "Student",
      "WHERE",
      "Age",
      ">",
      "18",
      "AND",
      "Major",
      "=",
      "600",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      ",",
      "lname",
      "from",
      "student",
      "where",
      "age",
      ">",
      "value",
      "and",
      "major",
      "=",
      "value"
    ],
    "question": "Which student's age is older than 18 and is majoring in 600? List each student's first and last name.",
    "question_toks": [
      "Which",
      "student",
      "'s",
      "age",
      "is",
      "older",
      "than",
      "18",
      "and",
      "is",
      "majoring",
      "in",
      "600",
      "?",
      "List",
      "each",
      "student",
      "'s",
      "first",
      "and",
      "last",
      "name",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          18.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          600.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "restaurant_1",
    "query": "SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major != 600 AND Sex = 'F';",
    "query_toks": [
      "SELECT",
      "Fname",
      ",",
      "Lname",
      "FROM",
      "Student",
      "WHERE",
      "Age",
      ">",
      "18",
      "AND",
      "Major",
      "!",
      "=",
      "600",
      "AND",
      "Sex",
      "=",
      "'F",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      ",",
      "lname",
      "from",
      "student",
      "where",
      "age",
      ">",
      "value",
      "and",
      "major",
      "!",
      "=",
      "value",
      "and",
      "sex",
      "=",
      "value"
    ],
    "question": "List all female students age is older than 18 who is not majoring in 600. List students' first name and last name.",
    "question_toks": [
      "List",
      "all",
      "female",
      "students",
      "age",
      "is",
      "older",
      "than",
      "18",
      "who",
      "is",
      "not",
      "majoring",
      "in",
      "600",
      ".",
      "List",
      "students",
      "'",
      "first",
      "name",
      "and",
      "last",
      "name",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          18.0,
          null
        ],
        "and",
        [
          false,
          7,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          600.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"F\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_deliveries",
    "query": "SELECT actual_order_id FROM actual_orders WHERE order_status_code  =  'Success'",
    "query_toks": [
      "SELECT",
      "actual_order_id",
      "FROM",
      "actual_orders",
      "WHERE",
      "order_status_code",
      "=",
      "'Success",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "actual_order_id",
      "from",
      "actual_orders",
      "where",
      "order_status_code",
      "=",
      "value"
    ],
    "question": "Find the ids of orders whose status is 'Success'.",
    "question_toks": [
      "Find",
      "the",
      "ids",
      "of",
      "orders",
      "whose",
      "status",
      "is",
      "'Success",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          "\"Success\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_deliveries",
    "query": "SELECT count(*) FROM customers",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customers"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers"
    ],
    "question": "Find the number of customers in total.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "customers",
      "in",
      "total",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_deliveries",
    "query": "SELECT count(DISTINCT payment_method) FROM customers",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "payment_method",
      ")",
      "FROM",
      "customers"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "payment_method",
      ")",
      "from",
      "customers"
    ],
    "question": "How many different payment methods are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "payment",
      "methods",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_deliveries",
    "query": "SELECT customer_email ,  customer_name FROM customers WHERE payment_method  =  'Visa'",
    "query_toks": [
      "SELECT",
      "customer_email",
      ",",
      "customer_name",
      "FROM",
      "customers",
      "WHERE",
      "payment_method",
      "=",
      "'Visa",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "customer_email",
      ",",
      "customer_name",
      "from",
      "customers",
      "where",
      "payment_method",
      "=",
      "value"
    ],
    "question": "List the names and emails of customers who payed by Visa card.",
    "question_toks": [
      "List",
      "the",
      "names",
      "and",
      "emails",
      "of",
      "customers",
      "who",
      "payed",
      "by",
      "Visa",
      "card",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Visa\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_deliveries",
    "query": "SELECT state_province_county FROM addresses WHERE address_id NOT IN (SELECT employee_address_id FROM Employees)",
    "query_toks": [
      "SELECT",
      "state_province_county",
      "FROM",
      "addresses",
      "WHERE",
      "address_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "employee_address_id",
      "FROM",
      "Employees",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "state_province_county",
      "from",
      "addresses",
      "where",
      "address_id",
      "not",
      "in",
      "(",
      "select",
      "employee_address_id",
      "from",
      "employees",
      ")"
    ],
    "question": "Find the states which do not have any employee in their record.",
    "question_toks": [
      "Find",
      "the",
      "states",
      "which",
      "do",
      "not",
      "have",
      "any",
      "employee",
      "in",
      "their",
      "record",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  11
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      43,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT count(*) FROM authors",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "authors"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "authors"
    ],
    "question": "How many authors are there?",
    "question_toks": [
      "How",
      "many",
      "authors",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT count(*) FROM authors",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "authors"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "authors"
    ],
    "question": "Count the number of authors.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "authors",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT count(*) FROM inst",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "inst"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "inst"
    ],
    "question": "How many institutions are there?",
    "question_toks": [
      "How",
      "many",
      "institutions",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT count(*) FROM inst",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "inst"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "inst"
    ],
    "question": "Count the number of institutions.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "institutions",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT count(*) FROM papers",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "papers"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "papers"
    ],
    "question": "How many papers are published in total?",
    "question_toks": [
      "How",
      "many",
      "papers",
      "are",
      "published",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT count(*) FROM papers",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "papers"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "papers"
    ],
    "question": "Count the number of total papers.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "total",
      "papers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT title FROM papers WHERE title LIKE \"%ML%\"",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "papers",
      "WHERE",
      "title",
      "LIKE",
      "``",
      "%",
      "ML",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "papers",
      "where",
      "title",
      "like",
      "value"
    ],
    "question": "Find the titles of the papers that contain the word \"ML\".",
    "question_toks": [
      "Find",
      "the",
      "titles",
      "of",
      "the",
      "papers",
      "that",
      "contain",
      "the",
      "word",
      "``",
      "ML",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"%ML%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT title FROM papers WHERE title LIKE \"%ML%\"",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "papers",
      "WHERE",
      "title",
      "LIKE",
      "``",
      "%",
      "ML",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "papers",
      "where",
      "title",
      "like",
      "value"
    ],
    "question": "Which papers have the substring \"ML\" in their titles? Return the titles of the papers.",
    "question_toks": [
      "Which",
      "papers",
      "have",
      "the",
      "substring",
      "``",
      "ML",
      "''",
      "in",
      "their",
      "titles",
      "?",
      "Return",
      "the",
      "titles",
      "of",
      "the",
      "papers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"%ML%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT title FROM papers WHERE title LIKE \"%Database%\"",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "papers",
      "WHERE",
      "title",
      "LIKE",
      "``",
      "%",
      "Database",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "papers",
      "where",
      "title",
      "like",
      "value"
    ],
    "question": "Which paper's title contains the word \"Database\"?",
    "question_toks": [
      "Which",
      "paper",
      "'s",
      "title",
      "contains",
      "the",
      "word",
      "``",
      "Database",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"%Database%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT title FROM papers WHERE title LIKE \"%Database%\"",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "papers",
      "WHERE",
      "title",
      "LIKE",
      "``",
      "%",
      "Database",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "papers",
      "where",
      "title",
      "like",
      "value"
    ],
    "question": "Which papers have the substring \"Database\" in their titles? Show the titles of the papers.",
    "question_toks": [
      "Which",
      "papers",
      "have",
      "the",
      "substring",
      "``",
      "Database",
      "''",
      "in",
      "their",
      "titles",
      "?",
      "Show",
      "the",
      "titles",
      "of",
      "the",
      "papers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"%Database%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT fname FROM authors WHERE lname  =  \"Ueno\"",
    "query_toks": [
      "SELECT",
      "fname",
      "FROM",
      "authors",
      "WHERE",
      "lname",
      "=",
      "``",
      "Ueno",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      "from",
      "authors",
      "where",
      "lname",
      "=",
      "value"
    ],
    "question": "What is the first name of the author with last name \"Ueno\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "first",
      "name",
      "of",
      "the",
      "author",
      "with",
      "last",
      "name",
      "``",
      "Ueno",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Ueno\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT fname FROM authors WHERE lname  =  \"Ueno\"",
    "query_toks": [
      "SELECT",
      "fname",
      "FROM",
      "authors",
      "WHERE",
      "lname",
      "=",
      "``",
      "Ueno",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      "from",
      "authors",
      "where",
      "lname",
      "=",
      "value"
    ],
    "question": "Which authors have last name \"Ueno\"? List their first names.",
    "question_toks": [
      "Which",
      "authors",
      "have",
      "last",
      "name",
      "``",
      "Ueno",
      "''",
      "?",
      "List",
      "their",
      "first",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Ueno\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT lname FROM authors WHERE fname  =  \"Amal\"",
    "query_toks": [
      "SELECT",
      "lname",
      "FROM",
      "authors",
      "WHERE",
      "fname",
      "=",
      "``",
      "Amal",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "lname",
      "from",
      "authors",
      "where",
      "fname",
      "=",
      "value"
    ],
    "question": "Find the last name of the author with first name \"Amal\".",
    "question_toks": [
      "Find",
      "the",
      "last",
      "name",
      "of",
      "the",
      "author",
      "with",
      "first",
      "name",
      "``",
      "Amal",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Amal\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT lname FROM authors WHERE fname  =  \"Amal\"",
    "query_toks": [
      "SELECT",
      "lname",
      "FROM",
      "authors",
      "WHERE",
      "fname",
      "=",
      "``",
      "Amal",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "lname",
      "from",
      "authors",
      "where",
      "fname",
      "=",
      "value"
    ],
    "question": "Which authors have first name \"Amal\"? List their last names.",
    "question_toks": [
      "Which",
      "authors",
      "have",
      "first",
      "name",
      "``",
      "Amal",
      "''",
      "?",
      "List",
      "their",
      "last",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Amal\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT count(DISTINCT last_name) FROM actor",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "last_name",
      ")",
      "FROM",
      "actor"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "last_name",
      ")",
      "from",
      "actor"
    ],
    "question": "How many different last names do the actors and actresses have?",
    "question_toks": [
      "How",
      "many",
      "different",
      "last",
      "names",
      "do",
      "the",
      "actors",
      "and",
      "actresses",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT count(DISTINCT last_name) FROM actor",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "last_name",
      ")",
      "FROM",
      "actor"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "last_name",
      ")",
      "from",
      "actor"
    ],
    "question": "Count the number of different last names actors have.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "last",
      "names",
      "actors",
      "have",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT phone ,  postal_code FROM address WHERE address  =  '1031 Daugavpils Parkway'",
    "query_toks": [
      "SELECT",
      "phone",
      ",",
      "postal_code",
      "FROM",
      "address",
      "WHERE",
      "address",
      "=",
      "'1031",
      "Daugavpils",
      "Parkway",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "phone",
      ",",
      "postal_code",
      "from",
      "address",
      "where",
      "address",
      "=",
      "value"
    ],
    "question": "What is the phone number and postal code of the address 1031 Daugavpils Parkway?",
    "question_toks": [
      "What",
      "is",
      "the",
      "phone",
      "number",
      "and",
      "postal",
      "code",
      "of",
      "the",
      "address",
      "1031",
      "Daugavpils",
      "Parkway",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"1031 Daugavpils Parkway\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT phone ,  postal_code FROM address WHERE address  =  '1031 Daugavpils Parkway'",
    "query_toks": [
      "SELECT",
      "phone",
      ",",
      "postal_code",
      "FROM",
      "address",
      "WHERE",
      "address",
      "=",
      "'1031",
      "Daugavpils",
      "Parkway",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "phone",
      ",",
      "postal_code",
      "from",
      "address",
      "where",
      "address",
      "=",
      "value"
    ],
    "question": "Give the phone and postal code corresponding to the address '1031 Daugavpils Parkway'.",
    "question_toks": [
      "Give",
      "the",
      "phone",
      "and",
      "postal",
      "code",
      "corresponding",
      "to",
      "the",
      "address",
      "'1031",
      "Daugavpils",
      "Parkway",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"1031 Daugavpils Parkway\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT count(*) FROM address WHERE district  =  'California'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "address",
      "WHERE",
      "district",
      "=",
      "'California",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "address",
      "where",
      "district",
      "=",
      "value"
    ],
    "question": "How many addresses are in the district of California?",
    "question_toks": [
      "How",
      "many",
      "addresses",
      "are",
      "in",
      "the",
      "district",
      "of",
      "California",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"California\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT count(*) FROM address WHERE district  =  'California'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "address",
      "WHERE",
      "district",
      "=",
      "'California",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "address",
      "where",
      "district",
      "=",
      "value"
    ],
    "question": "Count the number of addressed in the California district.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "addressed",
      "in",
      "the",
      "California",
      "district",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"California\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT count(*) FROM customer WHERE active = '1'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customer",
      "WHERE",
      "active",
      "=",
      "'1",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customer",
      "where",
      "active",
      "=",
      "value"
    ],
    "question": "How many customers have an active value of 1?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "have",
      "an",
      "active",
      "value",
      "of",
      "1",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"1\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT count(*) FROM customer WHERE active = '1'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customer",
      "WHERE",
      "active",
      "=",
      "'1",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customer",
      "where",
      "active",
      "=",
      "value"
    ],
    "question": "Count the number of customers who are active.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "customers",
      "who",
      "are",
      "active",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"1\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT sum(amount) FROM payment",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "amount",
      ")",
      "FROM",
      "payment"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "amount",
      ")",
      "from",
      "payment"
    ],
    "question": "What is the total amount of all payments?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "amount",
      "of",
      "all",
      "payments",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            12
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                65,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT sum(amount) FROM payment",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "amount",
      ")",
      "FROM",
      "payment"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "amount",
      ")",
      "from",
      "payment"
    ],
    "question": "Return the sum of all payment amounts.",
    "question_toks": [
      "Return",
      "the",
      "sum",
      "of",
      "all",
      "payment",
      "amounts",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            12
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                65,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT count(DISTINCT language_id) FROM film",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "language_id",
      ")",
      "FROM",
      "film"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "language_id",
      ")",
      "from",
      "film"
    ],
    "question": "How many languages are in these films?",
    "question_toks": [
      "How",
      "many",
      "languages",
      "are",
      "in",
      "these",
      "films",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                36,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT count(DISTINCT language_id) FROM film",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "language_id",
      ")",
      "FROM",
      "film"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "language_id",
      ")",
      "from",
      "film"
    ],
    "question": "Count the number of different languages in these films.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "languages",
      "in",
      "these",
      "films",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                36,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT title FROM film WHERE rating  =  'R'",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "film",
      "WHERE",
      "rating",
      "=",
      "'R",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "film",
      "where",
      "rating",
      "=",
      "value"
    ],
    "question": "What are all the movies rated as R? List the titles.",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "movies",
      "rated",
      "as",
      "R",
      "?",
      "List",
      "the",
      "titles",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                33,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              42,
              false
            ],
            null
          ],
          "\"R\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT title FROM film WHERE rating  =  'R'",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "film",
      "WHERE",
      "rating",
      "=",
      "'R",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "film",
      "where",
      "rating",
      "=",
      "value"
    ],
    "question": "Return the titles of any movies with an R rating.",
    "question_toks": [
      "Return",
      "the",
      "titles",
      "of",
      "any",
      "movies",
      "with",
      "an",
      "R",
      "rating",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                33,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              42,
              false
            ],
            null
          ],
          "\"R\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT count(*) FROM store",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "store"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "store"
    ],
    "question": "How many stores are there?",
    "question_toks": [
      "How",
      "many",
      "stores",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            15
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT count(*) FROM store",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "store"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "store"
    ],
    "question": "Count the number of stores.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "stores",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            15
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT count(DISTINCT rating) FROM film",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "rating",
      ")",
      "FROM",
      "film"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "rating",
      ")",
      "from",
      "film"
    ],
    "question": "How many kinds of different ratings are listed?",
    "question_toks": [
      "How",
      "many",
      "kinds",
      "of",
      "different",
      "ratings",
      "are",
      "listed",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                42,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT count(DISTINCT rating) FROM film",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "rating",
      ")",
      "FROM",
      "film"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "rating",
      ")",
      "from",
      "film"
    ],
    "question": "Count the number of different film ratings.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "film",
      "ratings",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                42,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%'",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "film",
      "WHERE",
      "special_features",
      "LIKE",
      "'",
      "%",
      "Deleted",
      "Scenes",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "film",
      "where",
      "special_features",
      "like",
      "value"
    ],
    "question": "Which movies have 'Deleted Scenes' as a substring in the special feature?",
    "question_toks": [
      "Which",
      "movies",
      "have",
      "'Deleted",
      "Scenes",
      "'",
      "as",
      "a",
      "substring",
      "in",
      "the",
      "special",
      "feature",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                33,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"%Deleted Scenes%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%'",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "film",
      "WHERE",
      "special_features",
      "LIKE",
      "'",
      "%",
      "Deleted",
      "Scenes",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "film",
      "where",
      "special_features",
      "like",
      "value"
    ],
    "question": "Return the titles of films that include 'Deleted Scenes' in their special feature section.",
    "question_toks": [
      "Return",
      "the",
      "titles",
      "of",
      "films",
      "that",
      "include",
      "'Deleted",
      "Scenes",
      "'",
      "in",
      "their",
      "special",
      "feature",
      "section",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                33,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"%Deleted Scenes%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT count(*) FROM inventory WHERE store_id  =  1",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "inventory",
      "WHERE",
      "store_id",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "inventory",
      "where",
      "store_id",
      "=",
      "value"
    ],
    "question": "How many items in inventory does store 1 have?",
    "question_toks": [
      "How",
      "many",
      "items",
      "in",
      "inventory",
      "does",
      "store",
      "1",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              56,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT count(*) FROM inventory WHERE store_id  =  1",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "inventory",
      "WHERE",
      "store_id",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "inventory",
      "where",
      "store_id",
      "=",
      "value"
    ],
    "question": "Count the number of items store 1 has in stock.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "items",
      "store",
      "1",
      "has",
      "in",
      "stock",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              56,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT first_name FROM customer WHERE customer_id NOT IN( SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01' )",
    "query_toks": [
      "SELECT",
      "first_name",
      "FROM",
      "customer",
      "WHERE",
      "customer_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "customer_id",
      "FROM",
      "rental",
      "WHERE",
      "rental_date",
      ">",
      "'2005-08-23",
      "02:06:01",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      "from",
      "customer",
      "where",
      "customer_id",
      "not",
      "in",
      "(",
      "select",
      "customer_id",
      "from",
      "rental",
      "where",
      "rental_date",
      ">",
      "value",
      ")"
    ],
    "question": "What are the first names of customers who have not rented any films after '2005-08-23 02:06:01'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "names",
      "of",
      "customers",
      "who",
      "have",
      "not",
      "rented",
      "any",
      "films",
      "after",
      "'2005-08-23",
      "02:06:01",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  13
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      71,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                3,
                [
                  0,
                  [
                    0,
                    69,
                    false
                  ],
                  null
                ],
                "\"2005-08-23 02:06:01\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT first_name FROM customer WHERE customer_id NOT IN( SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01' )",
    "query_toks": [
      "SELECT",
      "first_name",
      "FROM",
      "customer",
      "WHERE",
      "customer_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "customer_id",
      "FROM",
      "rental",
      "WHERE",
      "rental_date",
      ">",
      "'2005-08-23",
      "02:06:01",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      "from",
      "customer",
      "where",
      "customer_id",
      "not",
      "in",
      "(",
      "select",
      "customer_id",
      "from",
      "rental",
      "where",
      "rental_date",
      ">",
      "value",
      ")"
    ],
    "question": "Return the first names of customers who did not rented a film after the date '2005-08-23 02:06:01'.",
    "question_toks": [
      "Return",
      "the",
      "first",
      "names",
      "of",
      "customers",
      "who",
      "did",
      "not",
      "rented",
      "a",
      "film",
      "after",
      "the",
      "date",
      "'2005-08-23",
      "02:06:01",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  13
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      71,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                3,
                [
                  0,
                  [
                    0,
                    69,
                    false
                  ],
                  null
                ],
                "\"2005-08-23 02:06:01\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT count(*) FROM bank",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "bank"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "bank"
    ],
    "question": "How many bank branches are there?",
    "question_toks": [
      "How",
      "many",
      "bank",
      "branches",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT count(*) FROM bank",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "bank"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "bank"
    ],
    "question": "Count the number of bank branches.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "bank",
      "branches",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT sum(no_of_customers) FROM bank",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "no_of_customers",
      ")",
      "FROM",
      "bank"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "no_of_customers",
      ")",
      "from",
      "bank"
    ],
    "question": "How many customers are there?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT sum(no_of_customers) FROM bank",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "no_of_customers",
      ")",
      "FROM",
      "bank"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "no_of_customers",
      ")",
      "from",
      "bank"
    ],
    "question": "What is the total number of customers across banks?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "customers",
      "across",
      "banks",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT sum(no_of_customers) FROM bank WHERE city  =  'New York City'",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "no_of_customers",
      ")",
      "FROM",
      "bank",
      "WHERE",
      "city",
      "=",
      "'New",
      "York",
      "City",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "no_of_customers",
      ")",
      "from",
      "bank",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "Find the number of customers in the banks at New York City.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "customers",
      "in",
      "the",
      "banks",
      "at",
      "New",
      "York",
      "City",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"New York City\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT sum(no_of_customers) FROM bank WHERE city  =  'New York City'",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "no_of_customers",
      ")",
      "FROM",
      "bank",
      "WHERE",
      "city",
      "=",
      "'New",
      "York",
      "City",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "no_of_customers",
      ")",
      "from",
      "bank",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "What is the total number of customers who use banks in New York City?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "customers",
      "who",
      "use",
      "banks",
      "in",
      "New",
      "York",
      "City",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"New York City\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT avg(no_of_customers) FROM bank WHERE state  =  'Utah'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "no_of_customers",
      ")",
      "FROM",
      "bank",
      "WHERE",
      "state",
      "=",
      "'Utah",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "no_of_customers",
      ")",
      "from",
      "bank",
      "where",
      "state",
      "=",
      "value"
    ],
    "question": "Find the average number of customers in all banks of Utah state.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "number",
      "of",
      "customers",
      "in",
      "all",
      "banks",
      "of",
      "Utah",
      "state",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Utah\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT avg(no_of_customers) FROM bank WHERE state  =  'Utah'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "no_of_customers",
      ")",
      "FROM",
      "bank",
      "WHERE",
      "state",
      "=",
      "'Utah",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "no_of_customers",
      ")",
      "from",
      "bank",
      "where",
      "state",
      "=",
      "value"
    ],
    "question": "What is the average number of customers across banks in the state of Utah?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "customers",
      "across",
      "banks",
      "in",
      "the",
      "state",
      "of",
      "Utah",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Utah\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT avg(no_of_customers) FROM bank",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "no_of_customers",
      ")",
      "FROM",
      "bank"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "no_of_customers",
      ")",
      "from",
      "bank"
    ],
    "question": "Find the average number of customers cross all banks.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "number",
      "of",
      "customers",
      "cross",
      "all",
      "banks",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT avg(no_of_customers) FROM bank",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "no_of_customers",
      ")",
      "FROM",
      "bank"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "no_of_customers",
      ")",
      "from",
      "bank"
    ],
    "question": "What is the average number of bank customers?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "bank",
      "customers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT city ,  state FROM bank WHERE bname  =  'morningside'",
    "query_toks": [
      "SELECT",
      "city",
      ",",
      "state",
      "FROM",
      "bank",
      "WHERE",
      "bname",
      "=",
      "'morningside",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      ",",
      "state",
      "from",
      "bank",
      "where",
      "bname",
      "=",
      "value"
    ],
    "question": "Find the city and state of the bank branch named morningside.",
    "question_toks": [
      "Find",
      "the",
      "city",
      "and",
      "state",
      "of",
      "the",
      "bank",
      "branch",
      "named",
      "morningside",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"morningside\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT city ,  state FROM bank WHERE bname  =  'morningside'",
    "query_toks": [
      "SELECT",
      "city",
      ",",
      "state",
      "FROM",
      "bank",
      "WHERE",
      "bname",
      "=",
      "'morningside",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      ",",
      "state",
      "from",
      "bank",
      "where",
      "bname",
      "=",
      "value"
    ],
    "question": "What city and state is the bank with the name morningside in?",
    "question_toks": [
      "What",
      "city",
      "and",
      "state",
      "is",
      "the",
      "bank",
      "with",
      "the",
      "name",
      "morningside",
      "in",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"morningside\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT bname FROM bank WHERE state  =  'New York'",
    "query_toks": [
      "SELECT",
      "bname",
      "FROM",
      "bank",
      "WHERE",
      "state",
      "=",
      "'New",
      "York",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "bname",
      "from",
      "bank",
      "where",
      "state",
      "=",
      "value"
    ],
    "question": "Find the branch names of banks in the New York state.",
    "question_toks": [
      "Find",
      "the",
      "branch",
      "names",
      "of",
      "banks",
      "in",
      "the",
      "New",
      "York",
      "state",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"New York\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT bname FROM bank WHERE state  =  'New York'",
    "query_toks": [
      "SELECT",
      "bname",
      "FROM",
      "bank",
      "WHERE",
      "state",
      "=",
      "'New",
      "York",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "bname",
      "from",
      "bank",
      "where",
      "state",
      "=",
      "value"
    ],
    "question": "What are the names of banks in the state of New York?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "banks",
      "in",
      "the",
      "state",
      "of",
      "New",
      "York",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"New York\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT state ,  acc_type ,  credit_score FROM customer WHERE no_of_loans  =  0",
    "query_toks": [
      "SELECT",
      "state",
      ",",
      "acc_type",
      ",",
      "credit_score",
      "FROM",
      "customer",
      "WHERE",
      "no_of_loans",
      "=",
      "0"
    ],
    "query_toks_no_value": [
      "select",
      "state",
      ",",
      "acc_type",
      ",",
      "credit_score",
      "from",
      "customer",
      "where",
      "no_of_loans",
      "=",
      "value"
    ],
    "question": "Find the state, account type, and credit score of the customer whose number of loan is 0.",
    "question_toks": [
      "Find",
      "the",
      "state",
      ",",
      "account",
      "type",
      ",",
      "and",
      "credit",
      "score",
      "of",
      "the",
      "customer",
      "whose",
      "number",
      "of",
      "loan",
      "is",
      "0",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          0.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT state ,  acc_type ,  credit_score FROM customer WHERE no_of_loans  =  0",
    "query_toks": [
      "SELECT",
      "state",
      ",",
      "acc_type",
      ",",
      "credit_score",
      "FROM",
      "customer",
      "WHERE",
      "no_of_loans",
      "=",
      "0"
    ],
    "query_toks_no_value": [
      "select",
      "state",
      ",",
      "acc_type",
      ",",
      "credit_score",
      "from",
      "customer",
      "where",
      "no_of_loans",
      "=",
      "value"
    ],
    "question": "What are the states, account types, and credit scores for customers who have 0 loans?",
    "question_toks": [
      "What",
      "are",
      "the",
      "states",
      ",",
      "account",
      "types",
      ",",
      "and",
      "credit",
      "scores",
      "for",
      "customers",
      "who",
      "have",
      "0",
      "loans",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          0.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT count(DISTINCT city) FROM bank",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "city",
      ")",
      "FROM",
      "bank"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "city",
      ")",
      "from",
      "bank"
    ],
    "question": "Find the number of different cities which banks are located at.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "different",
      "cities",
      "which",
      "banks",
      "are",
      "located",
      "at",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                4,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT count(DISTINCT city) FROM bank",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "city",
      ")",
      "FROM",
      "bank"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "city",
      ")",
      "from",
      "bank"
    ],
    "question": "In how many different cities are banks located?",
    "question_toks": [
      "In",
      "how",
      "many",
      "different",
      "cities",
      "are",
      "banks",
      "located",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                4,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT count(DISTINCT state) FROM bank",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "state",
      ")",
      "FROM",
      "bank"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "state",
      ")",
      "from",
      "bank"
    ],
    "question": "Find the number of different states which banks are located at.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "different",
      "states",
      "which",
      "banks",
      "are",
      "located",
      "at",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                5,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT count(DISTINCT state) FROM bank",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "state",
      ")",
      "FROM",
      "bank"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "state",
      ")",
      "from",
      "bank"
    ],
    "question": "In how many different states are banks located?",
    "question_toks": [
      "In",
      "how",
      "many",
      "different",
      "states",
      "are",
      "banks",
      "located",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                5,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT count(DISTINCT acc_type) FROM customer",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "acc_type",
      ")",
      "FROM",
      "customer"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "acc_type",
      ")",
      "from",
      "customer"
    ],
    "question": "How many distinct types of accounts are there?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "types",
      "of",
      "accounts",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                8,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT count(DISTINCT acc_type) FROM customer",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "acc_type",
      ")",
      "FROM",
      "customer"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "acc_type",
      ")",
      "from",
      "customer"
    ],
    "question": "Count the number of different account types.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "account",
      "types",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                8,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT cust_name ,  acc_bal FROM customer WHERE cust_name LIKE '%a%'",
    "query_toks": [
      "SELECT",
      "cust_name",
      ",",
      "acc_bal",
      "FROM",
      "customer",
      "WHERE",
      "cust_name",
      "LIKE",
      "'",
      "%",
      "a",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "cust_name",
      ",",
      "acc_bal",
      "from",
      "customer",
      "where",
      "cust_name",
      "like",
      "value"
    ],
    "question": "Find the name and account balance of the customer whose name includes the letter \u2018a\u2019.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "and",
      "account",
      "balance",
      "of",
      "the",
      "customer",
      "whose",
      "name",
      "includes",
      "the",
      "letter",
      "\u2018a\u2019",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"%a%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT cust_name ,  acc_bal FROM customer WHERE cust_name LIKE '%a%'",
    "query_toks": [
      "SELECT",
      "cust_name",
      ",",
      "acc_bal",
      "FROM",
      "customer",
      "WHERE",
      "cust_name",
      "LIKE",
      "'",
      "%",
      "a",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "cust_name",
      ",",
      "acc_bal",
      "from",
      "customer",
      "where",
      "cust_name",
      "like",
      "value"
    ],
    "question": "What are the names and account balances of customers with the letter a in their names?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "account",
      "balances",
      "of",
      "customers",
      "with",
      "the",
      "letter",
      "a",
      "in",
      "their",
      "names",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"%a%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT sum(acc_bal) FROM customer WHERE state  =  'Utah' OR state  =  'Texas'",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "acc_bal",
      ")",
      "FROM",
      "customer",
      "WHERE",
      "state",
      "=",
      "'Utah",
      "'",
      "OR",
      "state",
      "=",
      "'Texas",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "acc_bal",
      ")",
      "from",
      "customer",
      "where",
      "state",
      "=",
      "value",
      "or",
      "state",
      "=",
      "value"
    ],
    "question": "Find the total account balance of each customer from Utah or Texas.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "account",
      "balance",
      "of",
      "each",
      "customer",
      "from",
      "Utah",
      "or",
      "Texas",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"Utah\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"Texas\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT sum(acc_bal) FROM customer WHERE state  =  'Utah' OR state  =  'Texas'",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "acc_bal",
      ")",
      "FROM",
      "customer",
      "WHERE",
      "state",
      "=",
      "'Utah",
      "'",
      "OR",
      "state",
      "=",
      "'Texas",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "acc_bal",
      ")",
      "from",
      "customer",
      "where",
      "state",
      "=",
      "value",
      "or",
      "state",
      "=",
      "value"
    ],
    "question": "What are the total account balances for each customer from Utah or Texas?",
    "question_toks": [
      "What",
      "are",
      "the",
      "total",
      "account",
      "balances",
      "for",
      "each",
      "customer",
      "from",
      "Utah",
      "or",
      "Texas",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"Utah\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"Texas\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT cust_name FROM customer WHERE credit_score  <  (SELECT avg(credit_score) FROM customer)",
    "query_toks": [
      "SELECT",
      "cust_name",
      "FROM",
      "customer",
      "WHERE",
      "credit_score",
      "<",
      "(",
      "SELECT",
      "avg",
      "(",
      "credit_score",
      ")",
      "FROM",
      "customer",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "cust_name",
      "from",
      "customer",
      "where",
      "credit_score",
      "<",
      "(",
      "select",
      "avg",
      "(",
      "credit_score",
      ")",
      "from",
      "customer",
      ")"
    ],
    "question": "Find the name of customers whose credit score is below the average credit scores of all customers.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "customers",
      "whose",
      "credit",
      "score",
      "is",
      "below",
      "the",
      "average",
      "credit",
      "scores",
      "of",
      "all",
      "customers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      11,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT cust_name FROM customer WHERE credit_score  <  (SELECT avg(credit_score) FROM customer)",
    "query_toks": [
      "SELECT",
      "cust_name",
      "FROM",
      "customer",
      "WHERE",
      "credit_score",
      "<",
      "(",
      "SELECT",
      "avg",
      "(",
      "credit_score",
      ")",
      "FROM",
      "customer",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "cust_name",
      "from",
      "customer",
      "where",
      "credit_score",
      "<",
      "(",
      "select",
      "avg",
      "(",
      "credit_score",
      ")",
      "from",
      "customer",
      ")"
    ],
    "question": "What are the names of customers with credit score less than the average credit score across customers?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "customers",
      "with",
      "credit",
      "score",
      "less",
      "than",
      "the",
      "average",
      "credit",
      "score",
      "across",
      "customers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      11,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT avg(credit_score) FROM customer WHERE cust_id IN (SELECT cust_id FROM loan)",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "credit_score",
      ")",
      "FROM",
      "customer",
      "WHERE",
      "cust_id",
      "IN",
      "(",
      "SELECT",
      "cust_id",
      "FROM",
      "loan",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "credit_score",
      ")",
      "from",
      "customer",
      "where",
      "cust_id",
      "in",
      "(",
      "select",
      "cust_id",
      "from",
      "loan",
      ")"
    ],
    "question": "Find the average credit score of the customers who have some loan.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "credit",
      "score",
      "of",
      "the",
      "customers",
      "who",
      "have",
      "some",
      "loan",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      16,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT avg(credit_score) FROM customer WHERE cust_id IN (SELECT cust_id FROM loan)",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "credit_score",
      ")",
      "FROM",
      "customer",
      "WHERE",
      "cust_id",
      "IN",
      "(",
      "SELECT",
      "cust_id",
      "FROM",
      "loan",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "credit_score",
      ")",
      "from",
      "customer",
      "where",
      "cust_id",
      "in",
      "(",
      "select",
      "cust_id",
      "from",
      "loan",
      ")"
    ],
    "question": "What is the average credit score for customers who have taken a loan?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "credit",
      "score",
      "for",
      "customers",
      "who",
      "have",
      "taken",
      "a",
      "loan",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      16,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT avg(credit_score) FROM customer WHERE cust_id NOT IN (SELECT cust_id FROM loan)",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "credit_score",
      ")",
      "FROM",
      "customer",
      "WHERE",
      "cust_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "cust_id",
      "FROM",
      "loan",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "credit_score",
      ")",
      "from",
      "customer",
      "where",
      "cust_id",
      "not",
      "in",
      "(",
      "select",
      "cust_id",
      "from",
      "loan",
      ")"
    ],
    "question": "Find the average credit score of the customers who do not have any loan.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "credit",
      "score",
      "of",
      "the",
      "customers",
      "who",
      "do",
      "not",
      "have",
      "any",
      "loan",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      16,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT avg(credit_score) FROM customer WHERE cust_id NOT IN (SELECT cust_id FROM loan)",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "credit_score",
      ")",
      "FROM",
      "customer",
      "WHERE",
      "cust_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "cust_id",
      "FROM",
      "loan",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "credit_score",
      ")",
      "from",
      "customer",
      "where",
      "cust_id",
      "not",
      "in",
      "(",
      "select",
      "cust_id",
      "from",
      "loan",
      ")"
    ],
    "question": "What is the average credit score for customers who have never taken a loan?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "credit",
      "score",
      "for",
      "customers",
      "who",
      "have",
      "never",
      "taken",
      "a",
      "loan",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      16,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "behavior_monitoring",
    "query": "SELECT count(*) FROM ASSESSMENT_NOTES",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "ASSESSMENT_NOTES"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "assessment_notes"
    ],
    "question": "How many assessment notes are there in total?",
    "question_toks": [
      "How",
      "many",
      "assessment",
      "notes",
      "are",
      "there",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "behavior_monitoring",
    "query": "SELECT date_of_notes FROM Assessment_Notes",
    "query_toks": [
      "SELECT",
      "date_of_notes",
      "FROM",
      "Assessment_Notes"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_notes",
      "from",
      "assessment_notes"
    ],
    "question": "What are the dates of the assessment notes?",
    "question_toks": [
      "What",
      "are",
      "the",
      "dates",
      "of",
      "the",
      "assessment",
      "notes",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "behavior_monitoring",
    "query": "SELECT count(*) FROM ADDRESSES WHERE zip_postcode  =  \"197\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "ADDRESSES",
      "WHERE",
      "zip_postcode",
      "=",
      "``",
      "197",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "addresses",
      "where",
      "zip_postcode",
      "=",
      "value"
    ],
    "question": "How many addresses have zip code 197?",
    "question_toks": [
      "How",
      "many",
      "addresses",
      "have",
      "zip",
      "code",
      "197",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"197\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "behavior_monitoring",
    "query": "SELECT count(DISTINCT incident_type_code) FROM Behavior_Incident",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "incident_type_code",
      ")",
      "FROM",
      "Behavior_Incident"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "incident_type_code",
      ")",
      "from",
      "behavior_incident"
    ],
    "question": "How many distinct incident type codes are there?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "incident",
      "type",
      "codes",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                42,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "behavior_monitoring",
    "query": "SELECT date_incident_start ,  date_incident_end FROM Behavior_Incident WHERE incident_type_code  =  \"NOISE\"",
    "query_toks": [
      "SELECT",
      "date_incident_start",
      ",",
      "date_incident_end",
      "FROM",
      "Behavior_Incident",
      "WHERE",
      "incident_type_code",
      "=",
      "``",
      "NOISE",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "date_incident_start",
      ",",
      "date_incident_end",
      "from",
      "behavior_incident",
      "where",
      "incident_type_code",
      "=",
      "value"
    ],
    "question": "What are the start and end dates for incidents with incident type code \"NOISE\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "start",
      "and",
      "end",
      "dates",
      "for",
      "incidents",
      "with",
      "incident",
      "type",
      "code",
      "``",
      "NOISE",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                44,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                45,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              42,
              false
            ],
            null
          ],
          "\"NOISE\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "behavior_monitoring",
    "query": "SELECT detention_summary FROM Detention",
    "query_toks": [
      "SELECT",
      "detention_summary",
      "FROM",
      "Detention"
    ],
    "query_toks_no_value": [
      "select",
      "detention_summary",
      "from",
      "detention"
    ],
    "question": "Return all detention summaries.",
    "question_toks": [
      "Return",
      "all",
      "detention",
      "summaries",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                54,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "behavior_monitoring",
    "query": "SELECT cell_mobile_number ,  email_address FROM STUDENTS",
    "query_toks": [
      "SELECT",
      "cell_mobile_number",
      ",",
      "email_address",
      "FROM",
      "STUDENTS"
    ],
    "query_toks_no_value": [
      "select",
      "cell_mobile_number",
      ",",
      "email_address",
      "from",
      "students"
    ],
    "question": "Return the cell phone number and email address for all students.",
    "question_toks": [
      "Return",
      "the",
      "cell",
      "phone",
      "number",
      "and",
      "email",
      "address",
      "for",
      "all",
      "students",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "behavior_monitoring",
    "query": "SELECT email_address FROM Students WHERE first_name  =  \"Emma\" AND last_name  =  \"Rohan\"",
    "query_toks": [
      "SELECT",
      "email_address",
      "FROM",
      "Students",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Emma",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Rohan",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "email_address",
      "from",
      "students",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is the email of the student with first name \"Emma\" and last name \"Rohan\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "email",
      "of",
      "the",
      "student",
      "with",
      "first",
      "name",
      "``",
      "Emma",
      "''",
      "and",
      "last",
      "name",
      "``",
      "Rohan",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Emma\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          "\"Rohan\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "behavior_monitoring",
    "query": "SELECT count(DISTINCT student_id) FROM Students_in_Detention",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "student_id",
      ")",
      "FROM",
      "Students_in_Detention"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "student_id",
      ")",
      "from",
      "students_in_detention"
    ],
    "question": "How many distinct students have been in detention?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "students",
      "have",
      "been",
      "in",
      "detention",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                62,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "behavior_monitoring",
    "query": "SELECT gender FROM TEACHERS WHERE last_name  =  \"Medhurst\"",
    "query_toks": [
      "SELECT",
      "gender",
      "FROM",
      "TEACHERS",
      "WHERE",
      "last_name",
      "=",
      "``",
      "Medhurst",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "gender",
      "from",
      "teachers",
      "where",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is the gender of the teacher with last name \"Medhurst\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "gender",
      "of",
      "the",
      "teacher",
      "with",
      "last",
      "name",
      "``",
      "Medhurst",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          "\"Medhurst\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "behavior_monitoring",
    "query": "SELECT incident_type_description FROM Ref_Incident_Type WHERE incident_type_code  =  \"VIOLENCE\"",
    "query_toks": [
      "SELECT",
      "incident_type_description",
      "FROM",
      "Ref_Incident_Type",
      "WHERE",
      "incident_type_code",
      "=",
      "``",
      "VIOLENCE",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "incident_type_description",
      "from",
      "ref_incident_type",
      "where",
      "incident_type_code",
      "=",
      "value"
    ],
    "question": "What is the incident type description for the incident type with code \"VIOLENCE\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "incident",
      "type",
      "description",
      "for",
      "the",
      "incident",
      "type",
      "with",
      "code",
      "``",
      "VIOLENCE",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"VIOLENCE\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "behavior_monitoring",
    "query": "SELECT max(monthly_rental) ,  min(monthly_rental) FROM Student_Addresses",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "monthly_rental",
      ")",
      ",",
      "min",
      "(",
      "monthly_rental",
      ")",
      "FROM",
      "Student_Addresses"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "monthly_rental",
      ")",
      ",",
      "min",
      "(",
      "monthly_rental",
      ")",
      "from",
      "student_addresses"
    ],
    "question": "Find the maximum and minimum monthly rental for all student addresses.",
    "question_toks": [
      "Find",
      "the",
      "maximum",
      "and",
      "minimum",
      "monthly",
      "rental",
      "for",
      "all",
      "student",
      "addresses",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            9
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                60,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                60,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "behavior_monitoring",
    "query": "SELECT first_name FROM Teachers WHERE email_address LIKE '%man%'",
    "query_toks": [
      "SELECT",
      "first_name",
      "FROM",
      "Teachers",
      "WHERE",
      "email_address",
      "LIKE",
      "'",
      "%",
      "man",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      "from",
      "teachers",
      "where",
      "email_address",
      "like",
      "value"
    ],
    "question": "Find the first names of teachers whose email address contains the word \"man\".",
    "question_toks": [
      "Find",
      "the",
      "first",
      "names",
      "of",
      "teachers",
      "whose",
      "email",
      "address",
      "contains",
      "the",
      "word",
      "``",
      "man",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              33,
              false
            ],
            null
          ],
          "\"%man%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "behavior_monitoring",
    "query": "SELECT count(*) FROM STUDENTS WHERE student_id NOT IN ( SELECT student_id FROM Behavior_Incident )",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "STUDENTS",
      "WHERE",
      "student_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "student_id",
      "FROM",
      "Behavior_Incident",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "students",
      "where",
      "student_id",
      "not",
      "in",
      "(",
      "select",
      "student_id",
      "from",
      "behavior_incident",
      ")"
    ],
    "question": "How many students are not involved in any behavior incident?",
    "question_toks": [
      "How",
      "many",
      "students",
      "are",
      "not",
      "involved",
      "in",
      "any",
      "behavior",
      "incident",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  7
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      43,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "assets_maintenance",
    "query": "SELECT first_name ,  last_name FROM Maintenance_Engineers WHERE engineer_id NOT IN (SELECT engineer_id FROM Engineer_Visits)",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "Maintenance_Engineers",
      "WHERE",
      "engineer_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "engineer_id",
      "FROM",
      "Engineer_Visits",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "maintenance_engineers",
      "where",
      "engineer_id",
      "not",
      "in",
      "(",
      "select",
      "engineer_id",
      "from",
      "engineer_visits",
      ")"
    ],
    "question": "Which engineers have never visited to maintain the assets? List the engineer first name and last name.",
    "question_toks": [
      "Which",
      "engineers",
      "have",
      "never",
      "visited",
      "to",
      "maintain",
      "the",
      "assets",
      "?",
      "List",
      "the",
      "engineer",
      "first",
      "name",
      "and",
      "last",
      "name",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                37,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              34,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  10
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      49,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "assets_maintenance",
    "query": "SELECT asset_id ,  asset_details ,  asset_make ,  asset_model FROM Assets",
    "query_toks": [
      "SELECT",
      "asset_id",
      ",",
      "asset_details",
      ",",
      "asset_make",
      ",",
      "asset_model",
      "FROM",
      "Assets"
    ],
    "query_toks_no_value": [
      "select",
      "asset_id",
      ",",
      "asset_details",
      ",",
      "asset_make",
      ",",
      "asset_model",
      "from",
      "assets"
    ],
    "question": "List the asset id, details, make and model for every asset.",
    "question_toks": [
      "List",
      "the",
      "asset",
      "id",
      ",",
      "details",
      ",",
      "make",
      "and",
      "model",
      "for",
      "every",
      "asset",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "assets_maintenance",
    "query": "SELECT asset_model FROM Assets WHERE asset_id NOT IN (SELECT asset_id FROM Fault_Log)",
    "query_toks": [
      "SELECT",
      "asset_model",
      "FROM",
      "Assets",
      "WHERE",
      "asset_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "asset_id",
      "FROM",
      "Fault_Log",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "asset_model",
      "from",
      "assets",
      "where",
      "asset_id",
      "not",
      "in",
      "(",
      "select",
      "asset_id",
      "from",
      "fault_log",
      ")"
    ],
    "question": "Which assets did not incur any fault log? List the asset model.",
    "question_toks": [
      "Which",
      "assets",
      "did",
      "not",
      "incur",
      "any",
      "fault",
      "log",
      "?",
      "List",
      "the",
      "asset",
      "model",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  9
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      42,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "station_weather",
    "query": "SELECT local_authority ,  services FROM station",
    "query_toks": [
      "SELECT",
      "local_authority",
      ",",
      "services",
      "FROM",
      "station"
    ],
    "query_toks_no_value": [
      "select",
      "local_authority",
      ",",
      "services",
      "from",
      "station"
    ],
    "question": "list the local authorities and services provided by all stations.",
    "question_toks": [
      "list",
      "the",
      "local",
      "authorities",
      "and",
      "services",
      "provided",
      "by",
      "all",
      "stations",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "station_weather",
    "query": "SELECT count(*) FROM train WHERE name LIKE \"%Express%\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "train",
      "WHERE",
      "name",
      "LIKE",
      "``",
      "%",
      "Express",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "train",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "How many trains have 'Express' in their names?",
    "question_toks": [
      "How",
      "many",
      "trains",
      "have",
      "'Express",
      "'",
      "in",
      "their",
      "names",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"%Express%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "station_weather",
    "query": "SELECT train_number ,  TIME FROM train WHERE origin  =  'Chennai' AND destination  =  'Guruvayur'",
    "query_toks": [
      "SELECT",
      "train_number",
      ",",
      "TIME",
      "FROM",
      "train",
      "WHERE",
      "origin",
      "=",
      "'Chennai",
      "'",
      "AND",
      "destination",
      "=",
      "'Guruvayur",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "train_number",
      ",",
      "time",
      "from",
      "train",
      "where",
      "origin",
      "=",
      "value",
      "and",
      "destination",
      "=",
      "value"
    ],
    "question": "Find the number and time of the train that goes from Chennai to Guruvayur.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "and",
      "time",
      "of",
      "the",
      "train",
      "that",
      "goes",
      "from",
      "Chennai",
      "to",
      "Guruvayur",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Chennai\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Guruvayur\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "station_weather",
    "query": "SELECT count(DISTINCT services) FROM station",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "services",
      ")",
      "FROM",
      "station"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "services",
      ")",
      "from",
      "station"
    ],
    "question": "How many different services are provided by all stations?",
    "question_toks": [
      "How",
      "many",
      "different",
      "services",
      "are",
      "provided",
      "by",
      "all",
      "stations",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                10,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "station_weather",
    "query": "SELECT min(low_temperature) ,  max(wind_speed_mph) FROM weekly_weather",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "low_temperature",
      ")",
      ",",
      "max",
      "(",
      "wind_speed_mph",
      ")",
      "FROM",
      "weekly_weather"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "low_temperature",
      ")",
      ",",
      "max",
      "(",
      "wind_speed_mph",
      ")",
      "from",
      "weekly_weather"
    ],
    "question": "show the lowest low temperature and highest wind speed in miles per hour.",
    "question_toks": [
      "show",
      "the",
      "lowest",
      "low",
      "temperature",
      "and",
      "highest",
      "wind",
      "speed",
      "in",
      "miles",
      "per",
      "hour",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(DISTINCT PROF_NUM) FROM CLASS WHERE CRS_CODE  =  \"ACCT-211\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "PROF_NUM",
      ")",
      "FROM",
      "CLASS",
      "WHERE",
      "CRS_CODE",
      "=",
      "``",
      "ACCT-211",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "prof_num",
      ")",
      "from",
      "class",
      "where",
      "crs_code",
      "=",
      "value"
    ],
    "question": "How many professors are teaching class with code ACCT-211?",
    "question_toks": [
      "How",
      "many",
      "professors",
      "are",
      "teaching",
      "class",
      "with",
      "code",
      "ACCT-211",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"ACCT-211\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(DISTINCT PROF_NUM) FROM CLASS WHERE CRS_CODE  =  \"ACCT-211\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "PROF_NUM",
      ")",
      "FROM",
      "CLASS",
      "WHERE",
      "CRS_CODE",
      "=",
      "``",
      "ACCT-211",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "prof_num",
      ")",
      "from",
      "class",
      "where",
      "crs_code",
      "=",
      "value"
    ],
    "question": "How many professors teach a class with the code ACCT-211?",
    "question_toks": [
      "How",
      "many",
      "professors",
      "teach",
      "a",
      "class",
      "with",
      "the",
      "code",
      "ACCT-211",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"ACCT-211\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT school_code FROM department WHERE dept_name  =  \"Accounting\"",
    "query_toks": [
      "SELECT",
      "school_code",
      "FROM",
      "department",
      "WHERE",
      "dept_name",
      "=",
      "``",
      "Accounting",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "school_code",
      "from",
      "department",
      "where",
      "dept_name",
      "=",
      "value"
    ],
    "question": "What is the code of the school where the accounting department belongs to?",
    "question_toks": [
      "What",
      "is",
      "the",
      "code",
      "of",
      "the",
      "school",
      "where",
      "the",
      "accounting",
      "department",
      "belongs",
      "to",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Accounting\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT school_code FROM department WHERE dept_name  =  \"Accounting\"",
    "query_toks": [
      "SELECT",
      "school_code",
      "FROM",
      "department",
      "WHERE",
      "dept_name",
      "=",
      "``",
      "Accounting",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "school_code",
      "from",
      "department",
      "where",
      "dept_name",
      "=",
      "value"
    ],
    "question": "What is the school code of the accounting department?",
    "question_toks": [
      "What",
      "is",
      "the",
      "school",
      "code",
      "of",
      "the",
      "accounting",
      "department",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Accounting\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'CIS-220'",
    "query_toks": [
      "SELECT",
      "crs_credit",
      ",",
      "crs_description",
      "FROM",
      "course",
      "WHERE",
      "crs_code",
      "=",
      "'CIS-220",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "crs_credit",
      ",",
      "crs_description",
      "from",
      "course",
      "where",
      "crs_code",
      "=",
      "value"
    ],
    "question": "How many credits does course CIS-220 have, and what its description?",
    "question_toks": [
      "How",
      "many",
      "credits",
      "does",
      "course",
      "CIS-220",
      "have",
      ",",
      "and",
      "what",
      "its",
      "description",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"CIS-220\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'CIS-220'",
    "query_toks": [
      "SELECT",
      "crs_credit",
      ",",
      "crs_description",
      "FROM",
      "course",
      "WHERE",
      "crs_code",
      "=",
      "'CIS-220",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "crs_credit",
      ",",
      "crs_description",
      "from",
      "course",
      "where",
      "crs_code",
      "=",
      "value"
    ],
    "question": "What is the description for the CIS-220 and how many credits does it have?",
    "question_toks": [
      "What",
      "is",
      "the",
      "description",
      "for",
      "the",
      "CIS-220",
      "and",
      "how",
      "many",
      "credits",
      "does",
      "it",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"CIS-220\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT dept_address FROM department WHERE dept_name  =  'History'",
    "query_toks": [
      "SELECT",
      "dept_address",
      "FROM",
      "department",
      "WHERE",
      "dept_name",
      "=",
      "'History",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "dept_address",
      "from",
      "department",
      "where",
      "dept_name",
      "=",
      "value"
    ],
    "question": "what is the address of history department?",
    "question_toks": [
      "what",
      "is",
      "the",
      "address",
      "of",
      "history",
      "department",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"History\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT dept_address FROM department WHERE dept_name  =  'History'",
    "query_toks": [
      "SELECT",
      "dept_address",
      "FROM",
      "department",
      "WHERE",
      "dept_name",
      "=",
      "'History",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "dept_address",
      "from",
      "department",
      "where",
      "dept_name",
      "=",
      "value"
    ],
    "question": "Where is the history department?",
    "question_toks": [
      "Where",
      "is",
      "the",
      "history",
      "department",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"History\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(DISTINCT dept_address) FROM department WHERE school_code  =  'BUS'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "dept_address",
      ")",
      "FROM",
      "department",
      "WHERE",
      "school_code",
      "=",
      "'BUS",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "dept_address",
      ")",
      "from",
      "department",
      "where",
      "school_code",
      "=",
      "value"
    ],
    "question": "How many different locations does the school with code BUS has?",
    "question_toks": [
      "How",
      "many",
      "different",
      "locations",
      "does",
      "the",
      "school",
      "with",
      "code",
      "BUS",
      "has",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                15,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"BUS\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(DISTINCT dept_address) FROM department WHERE school_code  =  'BUS'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "dept_address",
      ")",
      "FROM",
      "department",
      "WHERE",
      "school_code",
      "=",
      "'BUS",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "dept_address",
      ")",
      "from",
      "department",
      "where",
      "school_code",
      "=",
      "value"
    ],
    "question": "What are the different locations of the school with the code BUS?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "locations",
      "of",
      "the",
      "school",
      "with",
      "the",
      "code",
      "BUS",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                15,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"BUS\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'QM-261'",
    "query_toks": [
      "SELECT",
      "crs_credit",
      ",",
      "crs_description",
      "FROM",
      "course",
      "WHERE",
      "crs_code",
      "=",
      "'QM-261",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "crs_credit",
      ",",
      "crs_description",
      "from",
      "course",
      "where",
      "crs_code",
      "=",
      "value"
    ],
    "question": "Find the description and credit for the course QM-261?",
    "question_toks": [
      "Find",
      "the",
      "description",
      "and",
      "credit",
      "for",
      "the",
      "course",
      "QM-261",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"QM-261\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'QM-261'",
    "query_toks": [
      "SELECT",
      "crs_credit",
      ",",
      "crs_description",
      "FROM",
      "course",
      "WHERE",
      "crs_code",
      "=",
      "'QM-261",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "crs_credit",
      ",",
      "crs_description",
      "from",
      "course",
      "where",
      "crs_code",
      "=",
      "value"
    ],
    "question": "What is the course description and number of credits for QM-261?",
    "question_toks": [
      "What",
      "is",
      "the",
      "course",
      "description",
      "and",
      "number",
      "of",
      "credits",
      "for",
      "QM-261",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"QM-261\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(DISTINCT school_code) FROM department",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "school_code",
      ")",
      "FROM",
      "department"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "school_code",
      ")",
      "from",
      "department"
    ],
    "question": "how many schools exist in total?",
    "question_toks": [
      "how",
      "many",
      "schools",
      "exist",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                13,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(DISTINCT school_code) FROM department",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "school_code",
      ")",
      "FROM",
      "department"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "school_code",
      ")",
      "from",
      "department"
    ],
    "question": "How many schools are there in the department?",
    "question_toks": [
      "How",
      "many",
      "schools",
      "are",
      "there",
      "in",
      "the",
      "department",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                13,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(DISTINCT class_code) FROM CLASS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "class_code",
      ")",
      "FROM",
      "CLASS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "class_code",
      ")",
      "from",
      "class"
    ],
    "question": "How many different classes are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "classes",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                1,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(DISTINCT class_code) FROM CLASS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "class_code",
      ")",
      "FROM",
      "CLASS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "class_code",
      ")",
      "from",
      "class"
    ],
    "question": "How many unique classes are offered?",
    "question_toks": [
      "How",
      "many",
      "unique",
      "classes",
      "are",
      "offered",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                1,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(DISTINCT crs_code) FROM CLASS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "crs_code",
      ")",
      "FROM",
      "CLASS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "crs_code",
      ")",
      "from",
      "class"
    ],
    "question": "How many courses are offered?",
    "question_toks": [
      "How",
      "many",
      "courses",
      "are",
      "offered",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                2,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(DISTINCT crs_code) FROM CLASS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "crs_code",
      ")",
      "FROM",
      "CLASS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "crs_code",
      ")",
      "from",
      "class"
    ],
    "question": "What are the number of different course codes?",
    "question_toks": [
      "What",
      "are",
      "the",
      "number",
      "of",
      "different",
      "course",
      "codes",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                2,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(DISTINCT dept_name) FROM department",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "dept_name",
      ")",
      "FROM",
      "department"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "dept_name",
      ")",
      "from",
      "department"
    ],
    "question": "How many departments does the college has?",
    "question_toks": [
      "How",
      "many",
      "departments",
      "does",
      "the",
      "college",
      "has",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(DISTINCT dept_name) FROM department",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "dept_name",
      ")",
      "FROM",
      "department"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "dept_name",
      ")",
      "from",
      "department"
    ],
    "question": "How many different departments are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "departments",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(DISTINCT class_section) FROM CLASS WHERE crs_code  =  'ACCT-211'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "class_section",
      ")",
      "FROM",
      "CLASS",
      "WHERE",
      "crs_code",
      "=",
      "'ACCT-211",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "class_section",
      ")",
      "from",
      "class",
      "where",
      "crs_code",
      "=",
      "value"
    ],
    "question": "How many sections does course ACCT-211 has?",
    "question_toks": [
      "How",
      "many",
      "sections",
      "does",
      "course",
      "ACCT-211",
      "has",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"ACCT-211\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(DISTINCT class_section) FROM CLASS WHERE crs_code  =  'ACCT-211'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "class_section",
      ")",
      "FROM",
      "CLASS",
      "WHERE",
      "crs_code",
      "=",
      "'ACCT-211",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "class_section",
      ")",
      "from",
      "class",
      "where",
      "crs_code",
      "=",
      "value"
    ],
    "question": "What is the number of different class sections offered in the course ACCT-211?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "different",
      "class",
      "sections",
      "offered",
      "in",
      "the",
      "course",
      "ACCT-211",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"ACCT-211\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(*) FROM employee",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "employee"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "employee"
    ],
    "question": "Find the total number of employees.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "number",
      "of",
      "employees",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(*) FROM employee",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "employee"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "employee"
    ],
    "question": "How many employees are there all together?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "are",
      "there",
      "all",
      "together",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "professor",
      "WHERE",
      "prof_high_degree",
      "=",
      "'Ph.D",
      ".",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "professor",
      "where",
      "prof_high_degree",
      "=",
      "value"
    ],
    "question": "How many professors do have a Ph.D. degree?",
    "question_toks": [
      "How",
      "many",
      "professors",
      "do",
      "have",
      "a",
      "Ph.D.",
      "degree",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              31,
              false
            ],
            null
          ],
          "\"Ph.D.\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "professor",
      "WHERE",
      "prof_high_degree",
      "=",
      "'Ph.D",
      ".",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "professor",
      "where",
      "prof_high_degree",
      "=",
      "value"
    ],
    "question": "What is the total number of professors with a Ph.D. ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "professors",
      "with",
      "a",
      "Ph.D.",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              31,
              false
            ],
            null
          ],
          "\"Ph.D.\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT class_code FROM CLASS WHERE class_room  =  'KLR209'",
    "query_toks": [
      "SELECT",
      "class_code",
      "FROM",
      "CLASS",
      "WHERE",
      "class_room",
      "=",
      "'KLR209",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "class_code",
      "from",
      "class",
      "where",
      "class_room",
      "=",
      "value"
    ],
    "question": "List the codes of all courses that take place in room KLR209.",
    "question_toks": [
      "List",
      "the",
      "codes",
      "of",
      "all",
      "courses",
      "that",
      "take",
      "place",
      "in",
      "room",
      "KLR209",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"KLR209\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT class_code FROM CLASS WHERE class_room  =  'KLR209'",
    "query_toks": [
      "SELECT",
      "class_code",
      "FROM",
      "CLASS",
      "WHERE",
      "class_room",
      "=",
      "'KLR209",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "class_code",
      "from",
      "class",
      "where",
      "class_room",
      "=",
      "value"
    ],
    "question": "What are the codes of all the courses that are located in room KLR209?",
    "question_toks": [
      "What",
      "are",
      "the",
      "codes",
      "of",
      "all",
      "the",
      "courses",
      "that",
      "are",
      "located",
      "in",
      "room",
      "KLR209",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"KLR209\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.' OR prof_high_degree  =  'MA'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "professor",
      "WHERE",
      "prof_high_degree",
      "=",
      "'Ph.D",
      ".",
      "'",
      "OR",
      "prof_high_degree",
      "=",
      "'MA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "professor",
      "where",
      "prof_high_degree",
      "=",
      "value",
      "or",
      "prof_high_degree",
      "=",
      "value"
    ],
    "question": "How many professors who has a either Ph.D. or MA degree?",
    "question_toks": [
      "How",
      "many",
      "professors",
      "who",
      "has",
      "a",
      "either",
      "Ph.D.",
      "or",
      "MA",
      "degree",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              31,
              false
            ],
            null
          ],
          "\"Ph.D.\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              31,
              false
            ],
            null
          ],
          "\"MA\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.' OR prof_high_degree  =  'MA'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "professor",
      "WHERE",
      "prof_high_degree",
      "=",
      "'Ph.D",
      ".",
      "'",
      "OR",
      "prof_high_degree",
      "=",
      "'MA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "professor",
      "where",
      "prof_high_degree",
      "=",
      "value",
      "or",
      "prof_high_degree",
      "=",
      "value"
    ],
    "question": "How many professors attained either Ph.D. or Masters degrees?",
    "question_toks": [
      "How",
      "many",
      "professors",
      "attained",
      "either",
      "Ph.D.",
      "or",
      "Masters",
      "degrees",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              31,
              false
            ],
            null
          ],
          "\"Ph.D.\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              31,
              false
            ],
            null
          ],
          "\"MA\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT stu_fname ,  stu_gpa FROM student WHERE stu_gpa  <  (SELECT avg(stu_gpa) FROM student)",
    "query_toks": [
      "SELECT",
      "stu_fname",
      ",",
      "stu_gpa",
      "FROM",
      "student",
      "WHERE",
      "stu_gpa",
      "<",
      "(",
      "SELECT",
      "avg",
      "(",
      "stu_gpa",
      ")",
      "FROM",
      "student",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "stu_fname",
      ",",
      "stu_gpa",
      "from",
      "student",
      "where",
      "stu_gpa",
      "<",
      "(",
      "select",
      "avg",
      "(",
      "stu_gpa",
      ")",
      "from",
      "student",
      ")"
    ],
    "question": "Find the first name and gpa of the students whose gpa is lower than the average gpa of all students.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "name",
      "and",
      "gpa",
      "of",
      "the",
      "students",
      "whose",
      "gpa",
      "is",
      "lower",
      "than",
      "the",
      "average",
      "gpa",
      "of",
      "all",
      "students",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              39,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  6
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      39,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT stu_fname ,  stu_gpa FROM student WHERE stu_gpa  <  (SELECT avg(stu_gpa) FROM student)",
    "query_toks": [
      "SELECT",
      "stu_fname",
      ",",
      "stu_gpa",
      "FROM",
      "student",
      "WHERE",
      "stu_gpa",
      "<",
      "(",
      "SELECT",
      "avg",
      "(",
      "stu_gpa",
      ")",
      "FROM",
      "student",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "stu_fname",
      ",",
      "stu_gpa",
      "from",
      "student",
      "where",
      "stu_gpa",
      "<",
      "(",
      "select",
      "avg",
      "(",
      "stu_gpa",
      ")",
      "from",
      "student",
      ")"
    ],
    "question": "What is the first name and GPA of every student that has a GPA lower than average?",
    "question_toks": [
      "What",
      "is",
      "the",
      "first",
      "name",
      "and",
      "GPA",
      "of",
      "every",
      "student",
      "that",
      "has",
      "a",
      "GPA",
      "lower",
      "than",
      "average",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              39,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  6
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      39,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT count(*) FROM club",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "club"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "club"
    ],
    "question": "How many clubs are there?",
    "question_toks": [
      "How",
      "many",
      "clubs",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT count(*) FROM club",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "club"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "club"
    ],
    "question": "What is the total number of clubs?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "clubs",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT avg(Gold) FROM club_rank",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Gold",
      ")",
      "FROM",
      "club_rank"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "gold",
      ")",
      "from",
      "club_rank"
    ],
    "question": "What is the average number of gold medals for clubs?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "gold",
      "medals",
      "for",
      "clubs",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT avg(Gold) FROM club_rank",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Gold",
      ")",
      "FROM",
      "club_rank"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "gold",
      ")",
      "from",
      "club_rank"
    ],
    "question": "What is the average number of gold medals for a club?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "gold",
      "medals",
      "for",
      "a",
      "club",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT Competition_type ,  Country FROM competition",
    "query_toks": [
      "SELECT",
      "Competition_type",
      ",",
      "Country",
      "FROM",
      "competition"
    ],
    "query_toks_no_value": [
      "select",
      "competition_type",
      ",",
      "country",
      "from",
      "competition"
    ],
    "question": "What are the types and countries of competitions?",
    "question_toks": [
      "What",
      "are",
      "the",
      "types",
      "and",
      "countries",
      "of",
      "competitions",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT Competition_type ,  Country FROM competition",
    "query_toks": [
      "SELECT",
      "Competition_type",
      ",",
      "Country",
      "FROM",
      "competition"
    ],
    "query_toks_no_value": [
      "select",
      "competition_type",
      ",",
      "country",
      "from",
      "competition"
    ],
    "question": "What are the types of every competition and in which countries are they located?",
    "question_toks": [
      "What",
      "are",
      "the",
      "types",
      "of",
      "every",
      "competition",
      "and",
      "in",
      "which",
      "countries",
      "are",
      "they",
      "located",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT max(Silver) ,  min(Silver) FROM club_rank",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Silver",
      ")",
      ",",
      "min",
      "(",
      "Silver",
      ")",
      "FROM",
      "club_rank"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "silver",
      ")",
      ",",
      "min",
      "(",
      "silver",
      ")",
      "from",
      "club_rank"
    ],
    "question": "What are the maximum and minimum number of silver medals for clubs.",
    "question_toks": [
      "What",
      "are",
      "the",
      "maximum",
      "and",
      "minimum",
      "number",
      "of",
      "silver",
      "medals",
      "for",
      "clubs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT max(Silver) ,  min(Silver) FROM club_rank",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Silver",
      ")",
      ",",
      "min",
      "(",
      "Silver",
      ")",
      "FROM",
      "club_rank"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "silver",
      ")",
      ",",
      "min",
      "(",
      "silver",
      ")",
      "from",
      "club_rank"
    ],
    "question": "What are the maximum and minimum number of silver medals for all the clubs?",
    "question_toks": [
      "What",
      "are",
      "the",
      "maximum",
      "and",
      "minimum",
      "number",
      "of",
      "silver",
      "medals",
      "for",
      "all",
      "the",
      "clubs",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT count(*) FROM club_rank WHERE Total  <  10",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "club_rank",
      "WHERE",
      "Total",
      "<",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "club_rank",
      "where",
      "total",
      "<",
      "value"
    ],
    "question": "How many clubs have total medals less than 10?",
    "question_toks": [
      "How",
      "many",
      "clubs",
      "have",
      "total",
      "medals",
      "less",
      "than",
      "10",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT count(*) FROM club_rank WHERE Total  <  10",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "club_rank",
      "WHERE",
      "Total",
      "<",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "club_rank",
      "where",
      "total",
      "<",
      "value"
    ],
    "question": "What is the total number of clubs that have less than 10 medals in total?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "clubs",
      "that",
      "have",
      "less",
      "than",
      "10",
      "medals",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT name FROM CLub WHERE Club_ID NOT IN (SELECT Club_ID FROM player)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "CLub",
      "WHERE",
      "Club_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Club_ID",
      "FROM",
      "player",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "club",
      "where",
      "club_id",
      "not",
      "in",
      "(",
      "select",
      "club_id",
      "from",
      "player",
      ")"
    ],
    "question": "List the names of clubs that do not have any players.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "clubs",
      "that",
      "do",
      "not",
      "have",
      "any",
      "players",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      14,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT name FROM CLub WHERE Club_ID NOT IN (SELECT Club_ID FROM player)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "CLub",
      "WHERE",
      "Club_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Club_ID",
      "FROM",
      "player",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "club",
      "where",
      "club_id",
      "not",
      "in",
      "(",
      "select",
      "club_id",
      "from",
      "player",
      ")"
    ],
    "question": "What are the names of all clubs that do not have any players?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "clubs",
      "that",
      "do",
      "not",
      "have",
      "any",
      "players",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      14,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT sum(Points) FROM player",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "Points",
      ")",
      "FROM",
      "player"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "points",
      ")",
      "from",
      "player"
    ],
    "question": "Show total points of all players.",
    "question_toks": [
      "Show",
      "total",
      "points",
      "of",
      "all",
      "players",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT sum(Points) FROM player",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "Points",
      ")",
      "FROM",
      "player"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "points",
      ")",
      "from",
      "player"
    ],
    "question": "What is the total number of points for all players?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "points",
      "for",
      "all",
      "players",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT count(DISTINCT POSITION) FROM player",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "POSITION",
      ")",
      "FROM",
      "player"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "position",
      ")",
      "from",
      "player"
    ],
    "question": "how many different positions are there?",
    "question_toks": [
      "how",
      "many",
      "different",
      "positions",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                13,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT count(DISTINCT POSITION) FROM player",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "POSITION",
      ")",
      "FROM",
      "player"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "position",
      ")",
      "from",
      "player"
    ],
    "question": "How many different position for players are listed?",
    "question_toks": [
      "How",
      "many",
      "different",
      "position",
      "for",
      "players",
      "are",
      "listed",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                13,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT name FROM player WHERE points  >  (SELECT avg(points) FROM player)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "player",
      "WHERE",
      "points",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "points",
      ")",
      "FROM",
      "player",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "player",
      "where",
      "points",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "points",
      ")",
      "from",
      "player",
      ")"
    ],
    "question": "what are the name of players who get more than the average points.",
    "question_toks": [
      "what",
      "are",
      "the",
      "name",
      "of",
      "players",
      "who",
      "get",
      "more",
      "than",
      "the",
      "average",
      "points",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      18,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT name FROM player WHERE points  >  (SELECT avg(points) FROM player)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "player",
      "WHERE",
      "points",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "points",
      ")",
      "FROM",
      "player",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "player",
      "where",
      "points",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "points",
      ")",
      "from",
      "player",
      ")"
    ],
    "question": "What are the names of all players that got more than the average number of points?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "players",
      "that",
      "got",
      "more",
      "than",
      "the",
      "average",
      "number",
      "of",
      "points",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      18,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufacturer",
    "query": "SELECT sum(num_of_component) FROM furniture",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "num_of_component",
      ")",
      "FROM",
      "furniture"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "num_of_component",
      ")",
      "from",
      "furniture"
    ],
    "question": "How many furniture components are there in total?",
    "question_toks": [
      "How",
      "many",
      "furniture",
      "components",
      "are",
      "there",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufacturer",
    "query": "SELECT Num_of_Component ,  name FROM furniture WHERE Num_of_Component  >  10",
    "query_toks": [
      "SELECT",
      "Num_of_Component",
      ",",
      "name",
      "FROM",
      "furniture",
      "WHERE",
      "Num_of_Component",
      ">",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "num_of_component",
      ",",
      "name",
      "from",
      "furniture",
      "where",
      "num_of_component",
      ">",
      "value"
    ],
    "question": "Find the component amounts and names of all furnitures that have more than 10 components.",
    "question_toks": [
      "Find",
      "the",
      "component",
      "amounts",
      "and",
      "names",
      "of",
      "all",
      "furnitures",
      "that",
      "have",
      "more",
      "than",
      "10",
      "components",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufacturer",
    "query": "SELECT avg(Num_of_Factories) FROM manufacturer WHERE num_of_shops  >  20",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Num_of_Factories",
      ")",
      "FROM",
      "manufacturer",
      "WHERE",
      "num_of_shops",
      ">",
      "20"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "num_of_factories",
      ")",
      "from",
      "manufacturer",
      "where",
      "num_of_shops",
      ">",
      "value"
    ],
    "question": "Find the average number of factories for the manufacturers that have more than 20 shops.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "number",
      "of",
      "factories",
      "for",
      "the",
      "manufacturers",
      "that",
      "have",
      "more",
      "than",
      "20",
      "shops",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          20.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufacturer",
    "query": "SELECT name ,  open_year FROM manufacturer WHERE num_of_shops  >  10 OR Num_of_Factories  <  10",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "open_year",
      "FROM",
      "manufacturer",
      "WHERE",
      "num_of_shops",
      ">",
      "10",
      "OR",
      "Num_of_Factories",
      "<",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "open_year",
      "from",
      "manufacturer",
      "where",
      "num_of_shops",
      ">",
      "value",
      "or",
      "num_of_factories",
      "<",
      "value"
    ],
    "question": "Give me the name and year of opening of the manufacturers that have either less than 10 factories or more than 10 shops.",
    "question_toks": [
      "Give",
      "me",
      "the",
      "name",
      "and",
      "year",
      "of",
      "opening",
      "of",
      "the",
      "manufacturers",
      "that",
      "have",
      "either",
      "less",
      "than",
      "10",
      "factories",
      "or",
      "more",
      "than",
      "10",
      "shops",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          10.0,
          null
        ],
        "or",
        [
          false,
          4,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufacturer",
    "query": "SELECT max(num_of_shops) ,  avg(Num_of_Factories) FROM manufacturer WHERE open_year  <  1990",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "num_of_shops",
      ")",
      ",",
      "avg",
      "(",
      "Num_of_Factories",
      ")",
      "FROM",
      "manufacturer",
      "WHERE",
      "open_year",
      "<",
      "1990"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "num_of_shops",
      ")",
      ",",
      "avg",
      "(",
      "num_of_factories",
      ")",
      "from",
      "manufacturer",
      "where",
      "open_year",
      "<",
      "value"
    ],
    "question": "what is the average number of factories and maximum number of shops for manufacturers that opened before 1990.",
    "question_toks": [
      "what",
      "is",
      "the",
      "average",
      "number",
      "of",
      "factories",
      "and",
      "maximum",
      "number",
      "of",
      "shops",
      "for",
      "manufacturers",
      "that",
      "opened",
      "before",
      "1990",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          1990.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufacturer",
    "query": "SELECT Market_Rate ,  name FROM furniture WHERE Furniture_ID NOT IN (SELECT Furniture_ID FROM furniture_manufacte)",
    "query_toks": [
      "SELECT",
      "Market_Rate",
      ",",
      "name",
      "FROM",
      "furniture",
      "WHERE",
      "Furniture_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Furniture_ID",
      "FROM",
      "furniture_manufacte",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "market_rate",
      ",",
      "name",
      "from",
      "furniture",
      "where",
      "furniture_id",
      "not",
      "in",
      "(",
      "select",
      "furniture_id",
      "from",
      "furniture_manufacte",
      ")"
    ],
    "question": "Find the market shares and names of furnitures which no any company is producing in our records.",
    "question_toks": [
      "Find",
      "the",
      "market",
      "shares",
      "and",
      "names",
      "of",
      "furnitures",
      "which",
      "no",
      "any",
      "company",
      "is",
      "producing",
      "in",
      "our",
      "records",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      11,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT first_name ,  last_name ,  salary FROM employees WHERE salary  <  6000",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      ",",
      "salary",
      "FROM",
      "employees",
      "WHERE",
      "salary",
      "<",
      "6000"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      ",",
      "salary",
      "from",
      "employees",
      "where",
      "salary",
      "<",
      "value"
    ],
    "question": "List the full name (first and last name), and salary for those employees who earn below 6000.",
    "question_toks": [
      "List",
      "the",
      "full",
      "name",
      "(",
      "first",
      "and",
      "last",
      "name",
      ")",
      ",",
      "and",
      "salary",
      "for",
      "those",
      "employees",
      "who",
      "earn",
      "below",
      "6000",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          6000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT first_name ,  last_name ,  salary FROM employees WHERE salary  <  6000",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      ",",
      "salary",
      "FROM",
      "employees",
      "WHERE",
      "salary",
      "<",
      "6000"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      ",",
      "salary",
      "from",
      "employees",
      "where",
      "salary",
      "<",
      "value"
    ],
    "question": "What are the full names and salaries for any employees earning less than 6000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "full",
      "names",
      "and",
      "salaries",
      "for",
      "any",
      "employees",
      "earning",
      "less",
      "than",
      "6000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          6000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT first_name ,  department_id FROM employees WHERE last_name  =  'McEwen'",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "department_id",
      "FROM",
      "employees",
      "WHERE",
      "last_name",
      "=",
      "'McEwen",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "department_id",
      "from",
      "employees",
      "where",
      "last_name",
      "=",
      "value"
    ],
    "question": "Display the first name, and department number for all employees whose last name is \"McEwen\".",
    "question_toks": [
      "Display",
      "the",
      "first",
      "name",
      ",",
      "and",
      "department",
      "number",
      "for",
      "all",
      "employees",
      "whose",
      "last",
      "name",
      "is",
      "``",
      "McEwen",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"McEwen\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT first_name ,  department_id FROM employees WHERE last_name  =  'McEwen'",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "department_id",
      "FROM",
      "employees",
      "WHERE",
      "last_name",
      "=",
      "'McEwen",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "department_id",
      "from",
      "employees",
      "where",
      "last_name",
      "=",
      "value"
    ],
    "question": "What are the first names and department numbers for employees with last name McEwen?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "names",
      "and",
      "department",
      "numbers",
      "for",
      "employees",
      "with",
      "last",
      "name",
      "McEwen",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"McEwen\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT * FROM employees WHERE department_id  =  \"null\"",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "employees",
      "WHERE",
      "department_id",
      "=",
      "``",
      "null",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "employees",
      "where",
      "department_id",
      "=",
      "value"
    ],
    "question": "Return all the information for all employees without any department number.",
    "question_toks": [
      "Return",
      "all",
      "the",
      "information",
      "for",
      "all",
      "employees",
      "without",
      "any",
      "department",
      "number",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"null\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT * FROM employees WHERE department_id  =  \"null\"",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "employees",
      "WHERE",
      "department_id",
      "=",
      "``",
      "null",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "employees",
      "where",
      "department_id",
      "=",
      "value"
    ],
    "question": "What are all the employees without a department number?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "employees",
      "without",
      "a",
      "department",
      "number",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"null\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT * FROM  departments WHERE department_name  =  'Marketing'",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "departments",
      "WHERE",
      "department_name",
      "=",
      "'Marketing",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "departments",
      "where",
      "department_name",
      "=",
      "value"
    ],
    "question": "Display all the information about the department Marketing.",
    "question_toks": [
      "Display",
      "all",
      "the",
      "information",
      "about",
      "the",
      "department",
      "Marketing",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"Marketing\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT * FROM  departments WHERE department_name  =  'Marketing'",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "departments",
      "WHERE",
      "department_name",
      "=",
      "'Marketing",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "departments",
      "where",
      "department_name",
      "=",
      "value"
    ],
    "question": "What is all the information about the Marketing department?",
    "question_toks": [
      "What",
      "is",
      "all",
      "the",
      "information",
      "about",
      "the",
      "Marketing",
      "department",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"Marketing\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'",
    "query_toks": [
      "SELECT",
      "hire_date",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "NOT",
      "LIKE",
      "'",
      "%",
      "M",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "hire_date",
      "from",
      "employees",
      "where",
      "first_name",
      "not",
      "like",
      "value"
    ],
    "question": "when is the hire date for those employees whose first name does not containing the letter M?",
    "question_toks": [
      "when",
      "is",
      "the",
      "hire",
      "date",
      "for",
      "those",
      "employees",
      "whose",
      "first",
      "name",
      "does",
      "not",
      "containing",
      "the",
      "letter",
      "M",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          9,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"%M%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'",
    "query_toks": [
      "SELECT",
      "hire_date",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "NOT",
      "LIKE",
      "'",
      "%",
      "M",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "hire_date",
      "from",
      "employees",
      "where",
      "first_name",
      "not",
      "like",
      "value"
    ],
    "question": "On what dates were employees without the letter M in their first names hired?",
    "question_toks": [
      "On",
      "what",
      "dates",
      "were",
      "employees",
      "without",
      "the",
      "letter",
      "M",
      "in",
      "their",
      "first",
      "names",
      "hired",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          9,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"%M%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%'",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      ",",
      "hire_date",
      ",",
      "salary",
      ",",
      "department_id",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "NOT",
      "LIKE",
      "'",
      "%",
      "M",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      ",",
      "hire_date",
      ",",
      "salary",
      ",",
      "department_id",
      "from",
      "employees",
      "where",
      "first_name",
      "not",
      "like",
      "value"
    ],
    "question": "display the full name (first and last), hire date, salary, and department number for those employees whose first name does not containing the letter M.",
    "question_toks": [
      "display",
      "the",
      "full",
      "name",
      "(",
      "first",
      "and",
      "last",
      ")",
      ",",
      "hire",
      "date",
      ",",
      "salary",
      ",",
      "and",
      "department",
      "number",
      "for",
      "those",
      "employees",
      "whose",
      "first",
      "name",
      "does",
      "not",
      "containing",
      "the",
      "letter",
      "M",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          9,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"%M%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%'",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      ",",
      "hire_date",
      ",",
      "salary",
      ",",
      "department_id",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "NOT",
      "LIKE",
      "'",
      "%",
      "M",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      ",",
      "hire_date",
      ",",
      "salary",
      ",",
      "department_id",
      "from",
      "employees",
      "where",
      "first_name",
      "not",
      "like",
      "value"
    ],
    "question": "What are the full name, hire date, salary, and department id for employees without the letter M in their first name?",
    "question_toks": [
      "What",
      "are",
      "the",
      "full",
      "name",
      ",",
      "hire",
      "date",
      ",",
      "salary",
      ",",
      "and",
      "department",
      "id",
      "for",
      "employees",
      "without",
      "the",
      "letter",
      "M",
      "in",
      "their",
      "first",
      "name",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          9,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"%M%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000",
    "query_toks": [
      "SELECT",
      "phone_number",
      "FROM",
      "employees",
      "WHERE",
      "salary",
      "BETWEEN",
      "8000",
      "AND",
      "12000"
    ],
    "query_toks_no_value": [
      "select",
      "phone_number",
      "from",
      "employees",
      "where",
      "salary",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "what is the phone number of employees whose salary is in the range of 8000 and 12000?",
    "question_toks": [
      "what",
      "is",
      "the",
      "phone",
      "number",
      "of",
      "employees",
      "whose",
      "salary",
      "is",
      "in",
      "the",
      "range",
      "of",
      "8000",
      "and",
      "12000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          8000.0,
          12000.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000",
    "query_toks": [
      "SELECT",
      "phone_number",
      "FROM",
      "employees",
      "WHERE",
      "salary",
      "BETWEEN",
      "8000",
      "AND",
      "12000"
    ],
    "query_toks_no_value": [
      "select",
      "phone_number",
      "from",
      "employees",
      "where",
      "salary",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "Return the phone numbers of employees with salaries between 8000 and 12000.",
    "question_toks": [
      "Return",
      "the",
      "phone",
      "numbers",
      "of",
      "employees",
      "with",
      "salaries",
      "between",
      "8000",
      "and",
      "12000",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          8000.0,
          12000.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT * FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR  department_id != 40",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "employees",
      "WHERE",
      "salary",
      "BETWEEN",
      "8000",
      "AND",
      "12000",
      "AND",
      "commission_pct",
      "!",
      "=",
      "``",
      "null",
      "''",
      "OR",
      "department_id",
      "!",
      "=",
      "40"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "employees",
      "where",
      "salary",
      "between",
      "value",
      "and",
      "value",
      "and",
      "commission_pct",
      "!",
      "=",
      "value",
      "or",
      "department_id",
      "!",
      "=",
      "value"
    ],
    "question": "display all the information of employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40.",
    "question_toks": [
      "display",
      "all",
      "the",
      "information",
      "of",
      "employees",
      "whose",
      "salary",
      "is",
      "in",
      "the",
      "range",
      "of",
      "8000",
      "and",
      "12000",
      "and",
      "commission",
      "is",
      "not",
      "null",
      "or",
      "department",
      "number",
      "does",
      "not",
      "equal",
      "to",
      "40",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          8000.0,
          12000.0
        ],
        "and",
        [
          false,
          7,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          "\"null\"",
          null
        ],
        "or",
        [
          false,
          7,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          40.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT * FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR  department_id != 40",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "employees",
      "WHERE",
      "salary",
      "BETWEEN",
      "8000",
      "AND",
      "12000",
      "AND",
      "commission_pct",
      "!",
      "=",
      "``",
      "null",
      "''",
      "OR",
      "department_id",
      "!",
      "=",
      "40"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "employees",
      "where",
      "salary",
      "between",
      "value",
      "and",
      "value",
      "and",
      "commission_pct",
      "!",
      "=",
      "value",
      "or",
      "department_id",
      "!",
      "=",
      "value"
    ],
    "question": "Return all information about employees with salaries between 8000 and 12000 for which commission is not null or where their department id is not 40.",
    "question_toks": [
      "Return",
      "all",
      "information",
      "about",
      "employees",
      "with",
      "salaries",
      "between",
      "8000",
      "and",
      "12000",
      "for",
      "which",
      "commission",
      "is",
      "not",
      "null",
      "or",
      "where",
      "their",
      "department",
      "id",
      "is",
      "not",
      "40",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          8000.0,
          12000.0
        ],
        "and",
        [
          false,
          7,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          "\"null\"",
          null
        ],
        "or",
        [
          false,
          7,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          40.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT first_name ,  last_name ,  salary FROM  employees WHERE commission_pct  =  \"null\"",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      ",",
      "salary",
      "FROM",
      "employees",
      "WHERE",
      "commission_pct",
      "=",
      "``",
      "null",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      ",",
      "salary",
      "from",
      "employees",
      "where",
      "commission_pct",
      "=",
      "value"
    ],
    "question": "What are the full name (first and last name) and salary for all employees who does not have any value for commission?",
    "question_toks": [
      "What",
      "are",
      "the",
      "full",
      "name",
      "(",
      "first",
      "and",
      "last",
      "name",
      ")",
      "and",
      "salary",
      "for",
      "all",
      "employees",
      "who",
      "does",
      "not",
      "have",
      "any",
      "value",
      "for",
      "commission",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          "\"null\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT first_name ,  last_name ,  salary FROM  employees WHERE commission_pct  =  \"null\"",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      ",",
      "salary",
      "FROM",
      "employees",
      "WHERE",
      "commission_pct",
      "=",
      "``",
      "null",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      ",",
      "salary",
      "from",
      "employees",
      "where",
      "commission_pct",
      "=",
      "value"
    ],
    "question": "Return the full names and salaries of employees with null commissions.",
    "question_toks": [
      "Return",
      "the",
      "full",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "with",
      "null",
      "commissions",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          "\"null\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT first_name ,  last_name ,  salary FROM employees WHERE first_name LIKE '%m'",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      ",",
      "salary",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "LIKE",
      "'",
      "%",
      "m",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      ",",
      "salary",
      "from",
      "employees",
      "where",
      "first_name",
      "like",
      "value"
    ],
    "question": "Display the first and last name, and salary for those employees whose first name is ending with the letter m.",
    "question_toks": [
      "Display",
      "the",
      "first",
      "and",
      "last",
      "name",
      ",",
      "and",
      "salary",
      "for",
      "those",
      "employees",
      "whose",
      "first",
      "name",
      "is",
      "ending",
      "with",
      "the",
      "letter",
      "m",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"%m\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT first_name ,  last_name ,  salary FROM employees WHERE first_name LIKE '%m'",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      ",",
      "salary",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "LIKE",
      "'",
      "%",
      "m",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      ",",
      "salary",
      "from",
      "employees",
      "where",
      "first_name",
      "like",
      "value"
    ],
    "question": "Return the full names and salaries for employees with first names that end with the letter m.",
    "question_toks": [
      "Return",
      "the",
      "full",
      "names",
      "and",
      "salaries",
      "for",
      "employees",
      "with",
      "first",
      "names",
      "that",
      "end",
      "with",
      "the",
      "letter",
      "m",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"%m\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT job_id ,  hire_date FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'",
    "query_toks": [
      "SELECT",
      "job_id",
      ",",
      "hire_date",
      "FROM",
      "employees",
      "WHERE",
      "hire_date",
      "BETWEEN",
      "'2007-11-05",
      "'",
      "AND",
      "'2009-07-05",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "job_id",
      ",",
      "hire_date",
      "from",
      "employees",
      "where",
      "hire_date",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "Find job id and date of hire for those employees who was hired between November 5th, 2007 and July 5th, 2009.",
    "question_toks": [
      "Find",
      "job",
      "id",
      "and",
      "date",
      "of",
      "hire",
      "for",
      "those",
      "employees",
      "who",
      "was",
      "hired",
      "between",
      "November",
      "5th",
      ",",
      "2007",
      "and",
      "July",
      "5th",
      ",",
      "2009",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"2007-11-05\"",
          "\"2009-07-05\""
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT job_id ,  hire_date FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'",
    "query_toks": [
      "SELECT",
      "job_id",
      ",",
      "hire_date",
      "FROM",
      "employees",
      "WHERE",
      "hire_date",
      "BETWEEN",
      "'2007-11-05",
      "'",
      "AND",
      "'2009-07-05",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "job_id",
      ",",
      "hire_date",
      "from",
      "employees",
      "where",
      "hire_date",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What are the job ids and dates of hire for employees hired after November 5th, 2007 and before July 5th, 2009?",
    "question_toks": [
      "What",
      "are",
      "the",
      "job",
      "ids",
      "and",
      "dates",
      "of",
      "hire",
      "for",
      "employees",
      "hired",
      "after",
      "November",
      "5th",
      ",",
      "2007",
      "and",
      "before",
      "July",
      "5th",
      ",",
      "2009",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"2007-11-05\"",
          "\"2009-07-05\""
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "department_id",
      "=",
      "70",
      "OR",
      "department_id",
      "=",
      "90"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "department_id",
      "=",
      "value",
      "or",
      "department_id",
      "=",
      "value"
    ],
    "question": "What are the first and last name for those employees who works either in department 70 or 90?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "and",
      "last",
      "name",
      "for",
      "those",
      "employees",
      "who",
      "works",
      "either",
      "in",
      "department",
      "70",
      "or",
      "90",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          70.0,
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          90.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "department_id",
      "=",
      "70",
      "OR",
      "department_id",
      "=",
      "90"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "department_id",
      "=",
      "value",
      "or",
      "department_id",
      "=",
      "value"
    ],
    "question": "What are the full names of employees who with in department 70 or 90?",
    "question_toks": [
      "What",
      "are",
      "the",
      "full",
      "names",
      "of",
      "employees",
      "who",
      "with",
      "in",
      "department",
      "70",
      "or",
      "90",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          70.0,
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          90.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT salary ,  manager_id FROM employees WHERE manager_id != \"null\"",
    "query_toks": [
      "SELECT",
      "salary",
      ",",
      "manager_id",
      "FROM",
      "employees",
      "WHERE",
      "manager_id",
      "!",
      "=",
      "``",
      "null",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "salary",
      ",",
      "manager_id",
      "from",
      "employees",
      "where",
      "manager_id",
      "!",
      "=",
      "value"
    ],
    "question": "Find the salary and manager number for those employees who is working under a manager.",
    "question_toks": [
      "Find",
      "the",
      "salary",
      "and",
      "manager",
      "number",
      "for",
      "those",
      "employees",
      "who",
      "is",
      "working",
      "under",
      "a",
      "manager",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"null\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT salary ,  manager_id FROM employees WHERE manager_id != \"null\"",
    "query_toks": [
      "SELECT",
      "salary",
      ",",
      "manager_id",
      "FROM",
      "employees",
      "WHERE",
      "manager_id",
      "!",
      "=",
      "``",
      "null",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "salary",
      ",",
      "manager_id",
      "from",
      "employees",
      "where",
      "manager_id",
      "!",
      "=",
      "value"
    ],
    "question": "What are the salaries and manager ids for employees who have managers?",
    "question_toks": [
      "What",
      "are",
      "the",
      "salaries",
      "and",
      "manager",
      "ids",
      "for",
      "employees",
      "who",
      "have",
      "managers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"null\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT * FROM employees WHERE hire_date  <  '2002-06-21'",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "employees",
      "WHERE",
      "hire_date",
      "<",
      "'2002-06-21",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "employees",
      "where",
      "hire_date",
      "<",
      "value"
    ],
    "question": "display all the details from Employees table for those employees who was hired before 2002-06-21.",
    "question_toks": [
      "display",
      "all",
      "the",
      "details",
      "from",
      "Employees",
      "table",
      "for",
      "those",
      "employees",
      "who",
      "was",
      "hired",
      "before",
      "2002-06-21",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"2002-06-21\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT * FROM employees WHERE hire_date  <  '2002-06-21'",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "employees",
      "WHERE",
      "hire_date",
      "<",
      "'2002-06-21",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "employees",
      "where",
      "hire_date",
      "<",
      "value"
    ],
    "question": "What is all the information about employees hired before June 21, 2002?",
    "question_toks": [
      "What",
      "is",
      "all",
      "the",
      "information",
      "about",
      "employees",
      "hired",
      "before",
      "June",
      "21",
      ",",
      "2002",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"2002-06-21\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT * FROM employees WHERE hire_date  >  '1987-09-07'",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "employees",
      "WHERE",
      "hire_date",
      ">",
      "'1987-09-07",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "employees",
      "where",
      "hire_date",
      ">",
      "value"
    ],
    "question": "display those employees who joined after 7th September, 1987.",
    "question_toks": [
      "display",
      "those",
      "employees",
      "who",
      "joined",
      "after",
      "7th",
      "September",
      ",",
      "1987",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"1987-09-07\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT * FROM employees WHERE hire_date  >  '1987-09-07'",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "employees",
      "WHERE",
      "hire_date",
      ">",
      "'1987-09-07",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "employees",
      "where",
      "hire_date",
      ">",
      "value"
    ],
    "question": "Which employees were hired after September 7th, 1987?",
    "question_toks": [
      "Which",
      "employees",
      "were",
      "hired",
      "after",
      "September",
      "7th",
      ",",
      "1987",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"1987-09-07\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT job_title FROM jobs WHERE min_salary  >  9000",
    "query_toks": [
      "SELECT",
      "job_title",
      "FROM",
      "jobs",
      "WHERE",
      "min_salary",
      ">",
      "9000"
    ],
    "query_toks_no_value": [
      "select",
      "job_title",
      "from",
      "jobs",
      "where",
      "min_salary",
      ">",
      "value"
    ],
    "question": "display the job title of jobs which minimum salary is greater than 9000.",
    "question_toks": [
      "display",
      "the",
      "job",
      "title",
      "of",
      "jobs",
      "which",
      "minimum",
      "salary",
      "is",
      "greater",
      "than",
      "9000",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          9000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT job_title FROM jobs WHERE min_salary  >  9000",
    "query_toks": [
      "SELECT",
      "job_title",
      "FROM",
      "jobs",
      "WHERE",
      "min_salary",
      ">",
      "9000"
    ],
    "query_toks_no_value": [
      "select",
      "job_title",
      "from",
      "jobs",
      "where",
      "min_salary",
      ">",
      "value"
    ],
    "question": "Which job titles correspond to jobs with salaries over 9000?",
    "question_toks": [
      "Which",
      "job",
      "titles",
      "correspond",
      "to",
      "jobs",
      "with",
      "salaries",
      "over",
      "9000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          9000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT job_title ,  max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000",
    "query_toks": [
      "SELECT",
      "job_title",
      ",",
      "max_salary",
      "-",
      "min_salary",
      "FROM",
      "jobs",
      "WHERE",
      "max_salary",
      "BETWEEN",
      "12000",
      "AND",
      "18000"
    ],
    "query_toks_no_value": [
      "select",
      "job_title",
      ",",
      "max_salary",
      "-",
      "min_salary",
      "from",
      "jobs",
      "where",
      "max_salary",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "display job Title, the difference between minimum and maximum salaries for those jobs which max salary within the range 12000 to 18000.",
    "question_toks": [
      "display",
      "job",
      "Title",
      ",",
      "the",
      "difference",
      "between",
      "minimum",
      "and",
      "maximum",
      "salaries",
      "for",
      "those",
      "jobs",
      "which",
      "max",
      "salary",
      "within",
      "the",
      "range",
      "12000",
      "to",
      "18000",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              1,
              [
                0,
                13,
                false
              ],
              [
                0,
                12,
                false
              ]
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          12000.0,
          18000.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT job_title ,  max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000",
    "query_toks": [
      "SELECT",
      "job_title",
      ",",
      "max_salary",
      "-",
      "min_salary",
      "FROM",
      "jobs",
      "WHERE",
      "max_salary",
      "BETWEEN",
      "12000",
      "AND",
      "18000"
    ],
    "query_toks_no_value": [
      "select",
      "job_title",
      ",",
      "max_salary",
      "-",
      "min_salary",
      "from",
      "jobs",
      "where",
      "max_salary",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What are the job titles, and range of salaries for jobs with maximum salary between 12000 and 18000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "job",
      "titles",
      ",",
      "and",
      "range",
      "of",
      "salaries",
      "for",
      "jobs",
      "with",
      "maximum",
      "salary",
      "between",
      "12000",
      "and",
      "18000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              1,
              [
                0,
                13,
                false
              ],
              [
                0,
                12,
                false
              ]
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          12000.0,
          18000.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT email FROM employees WHERE commission_pct  =  \"null\" AND salary BETWEEN 7000 AND 12000 AND department_id = 50",
    "query_toks": [
      "SELECT",
      "email",
      "FROM",
      "employees",
      "WHERE",
      "commission_pct",
      "=",
      "``",
      "null",
      "''",
      "AND",
      "salary",
      "BETWEEN",
      "7000",
      "AND",
      "12000",
      "AND",
      "department_id",
      "=",
      "50"
    ],
    "query_toks_no_value": [
      "select",
      "email",
      "from",
      "employees",
      "where",
      "commission_pct",
      "=",
      "value",
      "and",
      "salary",
      "between",
      "value",
      "and",
      "value",
      "and",
      "department_id",
      "=",
      "value"
    ],
    "question": "display the emails of the employees who have no commission percentage and salary within the range 7000 to 12000 and works in that department which number is 50.",
    "question_toks": [
      "display",
      "the",
      "emails",
      "of",
      "the",
      "employees",
      "who",
      "have",
      "no",
      "commission",
      "percentage",
      "and",
      "salary",
      "within",
      "the",
      "range",
      "7000",
      "to",
      "12000",
      "and",
      "works",
      "in",
      "that",
      "department",
      "which",
      "number",
      "is",
      "50",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          "\"null\"",
          null
        ],
        "and",
        [
          false,
          1,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          7000.0,
          12000.0
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          50.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT email FROM employees WHERE commission_pct  =  \"null\" AND salary BETWEEN 7000 AND 12000 AND department_id = 50",
    "query_toks": [
      "SELECT",
      "email",
      "FROM",
      "employees",
      "WHERE",
      "commission_pct",
      "=",
      "``",
      "null",
      "''",
      "AND",
      "salary",
      "BETWEEN",
      "7000",
      "AND",
      "12000",
      "AND",
      "department_id",
      "=",
      "50"
    ],
    "query_toks_no_value": [
      "select",
      "email",
      "from",
      "employees",
      "where",
      "commission_pct",
      "=",
      "value",
      "and",
      "salary",
      "between",
      "value",
      "and",
      "value",
      "and",
      "department_id",
      "=",
      "value"
    ],
    "question": "What are the emails of employees with null commission, salary between 7000 and 12000, and who work in department 50?",
    "question_toks": [
      "What",
      "are",
      "the",
      "emails",
      "of",
      "employees",
      "with",
      "null",
      "commission",
      ",",
      "salary",
      "between",
      "7000",
      "and",
      "12000",
      ",",
      "and",
      "who",
      "work",
      "in",
      "department",
      "50",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          "\"null\"",
          null
        ],
        "and",
        [
          false,
          1,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          7000.0,
          12000.0
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          50.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT first_name ,  last_name FROM employees WHERE salary  >  (SELECT salary FROM employees WHERE employee_id = 163 )",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "salary",
      ">",
      "(",
      "SELECT",
      "salary",
      "FROM",
      "employees",
      "WHERE",
      "employee_id",
      "=",
      "163",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "salary",
      ">",
      "(",
      "select",
      "salary",
      "from",
      "employees",
      "where",
      "employee_id",
      "=",
      "value",
      ")"
    ],
    "question": "What is the full name ( first name and last name ) for those employees who gets more salary than the employee whose id is 163?",
    "question_toks": [
      "What",
      "is",
      "the",
      "full",
      "name",
      "(",
      "first",
      "name",
      "and",
      "last",
      "name",
      ")",
      "for",
      "those",
      "employees",
      "who",
      "gets",
      "more",
      "salary",
      "than",
      "the",
      "employee",
      "whose",
      "id",
      "is",
      "163",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      21,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    14,
                    false
                  ],
                  null
                ],
                163.0,
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT first_name ,  last_name FROM employees WHERE salary  >  (SELECT salary FROM employees WHERE employee_id = 163 )",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "salary",
      ">",
      "(",
      "SELECT",
      "salary",
      "FROM",
      "employees",
      "WHERE",
      "employee_id",
      "=",
      "163",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "salary",
      ">",
      "(",
      "select",
      "salary",
      "from",
      "employees",
      "where",
      "employee_id",
      "=",
      "value",
      ")"
    ],
    "question": "Provide the full names of employees earning more than the employee with id 163.",
    "question_toks": [
      "Provide",
      "the",
      "full",
      "names",
      "of",
      "employees",
      "earning",
      "more",
      "than",
      "the",
      "employee",
      "with",
      "id",
      "163",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      21,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    14,
                    false
                  ],
                  null
                ],
                163.0,
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN (SELECT MIN(salary) FROM employees GROUP BY department_id)",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      ",",
      "department_id",
      "FROM",
      "employees",
      "WHERE",
      "salary",
      "IN",
      "(",
      "SELECT",
      "MIN",
      "(",
      "salary",
      ")",
      "FROM",
      "employees",
      "GROUP",
      "BY",
      "department_id",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      ",",
      "department_id",
      "from",
      "employees",
      "where",
      "salary",
      "in",
      "(",
      "select",
      "min",
      "(",
      "salary",
      ")",
      "from",
      "employees",
      "group",
      "by",
      "department_id",
      ")"
    ],
    "question": "Find the first name and last name and department id for those employees who earn such amount of salary which is the smallest salary of any of the departments.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "name",
      "and",
      "last",
      "name",
      "and",
      "department",
      "id",
      "for",
      "those",
      "employees",
      "who",
      "earn",
      "such",
      "amount",
      "of",
      "salary",
      "which",
      "is",
      "the",
      "smallest",
      "salary",
      "of",
      "any",
      "of",
      "the",
      "departments",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      21,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [
              [
                0,
                24,
                false
              ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN (SELECT MIN(salary) FROM employees GROUP BY department_id)",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      ",",
      "department_id",
      "FROM",
      "employees",
      "WHERE",
      "salary",
      "IN",
      "(",
      "SELECT",
      "MIN",
      "(",
      "salary",
      ")",
      "FROM",
      "employees",
      "GROUP",
      "BY",
      "department_id",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      ",",
      "department_id",
      "from",
      "employees",
      "where",
      "salary",
      "in",
      "(",
      "select",
      "min",
      "(",
      "salary",
      ")",
      "from",
      "employees",
      "group",
      "by",
      "department_id",
      ")"
    ],
    "question": "What are the full names and department ids for the lowest paid employees across all departments.",
    "question_toks": [
      "What",
      "are",
      "the",
      "full",
      "names",
      "and",
      "department",
      "ids",
      "for",
      "the",
      "lowest",
      "paid",
      "employees",
      "across",
      "all",
      "departments",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      21,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [
              [
                0,
                24,
                false
              ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT employee_id FROM employees WHERE salary  >  (SELECT AVG(salary) FROM employees)",
    "query_toks": [
      "SELECT",
      "employee_id",
      "FROM",
      "employees",
      "WHERE",
      "salary",
      ">",
      "(",
      "SELECT",
      "AVG",
      "(",
      "salary",
      ")",
      "FROM",
      "employees",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "employee_id",
      "from",
      "employees",
      "where",
      "salary",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "salary",
      ")",
      "from",
      "employees",
      ")"
    ],
    "question": "Find the employee id for all employees who earn more than the average salary.",
    "question_toks": [
      "Find",
      "the",
      "employee",
      "id",
      "for",
      "all",
      "employees",
      "who",
      "earn",
      "more",
      "than",
      "the",
      "average",
      "salary",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      21,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT employee_id FROM employees WHERE salary  >  (SELECT AVG(salary) FROM employees)",
    "query_toks": [
      "SELECT",
      "employee_id",
      "FROM",
      "employees",
      "WHERE",
      "salary",
      ">",
      "(",
      "SELECT",
      "AVG",
      "(",
      "salary",
      ")",
      "FROM",
      "employees",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "employee_id",
      "from",
      "employees",
      "where",
      "salary",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "salary",
      ")",
      "from",
      "employees",
      ")"
    ],
    "question": "What are the employee ids for employees who make more than the average?",
    "question_toks": [
      "What",
      "are",
      "the",
      "employee",
      "ids",
      "for",
      "employees",
      "who",
      "make",
      "more",
      "than",
      "the",
      "average",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      21,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT employee_id ,  salary FROM employees WHERE manager_id  =  (SELECT employee_id FROM employees WHERE first_name  =  'Payam' )",
    "query_toks": [
      "SELECT",
      "employee_id",
      ",",
      "salary",
      "FROM",
      "employees",
      "WHERE",
      "manager_id",
      "=",
      "(",
      "SELECT",
      "employee_id",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "'Payam",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "employee_id",
      ",",
      "salary",
      "from",
      "employees",
      "where",
      "manager_id",
      "=",
      "(",
      "select",
      "employee_id",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "value",
      ")"
    ],
    "question": "display the employee id and salary of all employees who report to Payam (first name).",
    "question_toks": [
      "display",
      "the",
      "employee",
      "id",
      "and",
      "salary",
      "of",
      "all",
      "employees",
      "who",
      "report",
      "to",
      "Payam",
      "(",
      "first",
      "name",
      ")",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      14,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    15,
                    false
                  ],
                  null
                ],
                "\"Payam\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT employee_id ,  salary FROM employees WHERE manager_id  =  (SELECT employee_id FROM employees WHERE first_name  =  'Payam' )",
    "query_toks": [
      "SELECT",
      "employee_id",
      ",",
      "salary",
      "FROM",
      "employees",
      "WHERE",
      "manager_id",
      "=",
      "(",
      "SELECT",
      "employee_id",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "'Payam",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "employee_id",
      ",",
      "salary",
      "from",
      "employees",
      "where",
      "manager_id",
      "=",
      "(",
      "select",
      "employee_id",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "value",
      ")"
    ],
    "question": "What are the employee ids of employees who report to Payam, and what are their salaries?",
    "question_toks": [
      "What",
      "are",
      "the",
      "employee",
      "ids",
      "of",
      "employees",
      "who",
      "report",
      "to",
      "Payam",
      ",",
      "and",
      "what",
      "are",
      "their",
      "salaries",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      14,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    15,
                    false
                  ],
                  null
                ],
                "\"Payam\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT * FROM  departments WHERE department_name  =  'Marketing'",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "departments",
      "WHERE",
      "department_name",
      "=",
      "'Marketing",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "departments",
      "where",
      "department_name",
      "=",
      "value"
    ],
    "question": "display all the information about the department Marketing.",
    "question_toks": [
      "display",
      "all",
      "the",
      "information",
      "about",
      "the",
      "department",
      "Marketing",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"Marketing\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT * FROM  departments WHERE department_name  =  'Marketing'",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "departments",
      "WHERE",
      "department_name",
      "=",
      "'Marketing",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "departments",
      "where",
      "department_name",
      "=",
      "value"
    ],
    "question": "What is all the information about the Marketing department?",
    "question_toks": [
      "What",
      "is",
      "all",
      "the",
      "information",
      "about",
      "the",
      "Marketing",
      "department",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"Marketing\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT * FROM employees WHERE salary BETWEEN (SELECT MIN(salary) FROM employees) AND 2500",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "employees",
      "WHERE",
      "salary",
      "BETWEEN",
      "(",
      "SELECT",
      "MIN",
      "(",
      "salary",
      ")",
      "FROM",
      "employees",
      ")",
      "AND",
      "2500"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "employees",
      "where",
      "salary",
      "between",
      "(",
      "select",
      "min",
      "(",
      "salary",
      ")",
      "from",
      "employees",
      ")",
      "and",
      "value"
    ],
    "question": "display all the information of the employees whose salary if within the range of smallest salary and 2500.",
    "question_toks": [
      "display",
      "all",
      "the",
      "information",
      "of",
      "the",
      "employees",
      "whose",
      "salary",
      "if",
      "within",
      "the",
      "range",
      "of",
      "smallest",
      "salary",
      "and",
      "2500",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      21,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          2500.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT * FROM employees WHERE salary BETWEEN (SELECT MIN(salary) FROM employees) AND 2500",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "employees",
      "WHERE",
      "salary",
      "BETWEEN",
      "(",
      "SELECT",
      "MIN",
      "(",
      "salary",
      ")",
      "FROM",
      "employees",
      ")",
      "AND",
      "2500"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "employees",
      "where",
      "salary",
      "between",
      "(",
      "select",
      "min",
      "(",
      "salary",
      ")",
      "from",
      "employees",
      ")",
      "and",
      "value"
    ],
    "question": "What is all the information regarding employees with salaries above the minimum and under 2500?",
    "question_toks": [
      "What",
      "is",
      "all",
      "the",
      "information",
      "regarding",
      "employees",
      "with",
      "salaries",
      "above",
      "the",
      "minimum",
      "and",
      "under",
      "2500",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      21,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          2500.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT * FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "employees",
      "WHERE",
      "department_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "department_id",
      "FROM",
      "departments",
      "WHERE",
      "manager_id",
      "BETWEEN",
      "100",
      "AND",
      "200",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "employees",
      "where",
      "department_id",
      "not",
      "in",
      "(",
      "select",
      "department_id",
      "from",
      "departments",
      "where",
      "manager_id",
      "between",
      "value",
      "and",
      "value",
      ")"
    ],
    "question": "Find the ids of the employees who does not work in those departments where some employees works whose manager id within the range 100 and 200.",
    "question_toks": [
      "Find",
      "the",
      "ids",
      "of",
      "the",
      "employees",
      "who",
      "does",
      "not",
      "work",
      "in",
      "those",
      "departments",
      "where",
      "some",
      "employees",
      "works",
      "whose",
      "manager",
      "id",
      "within",
      "the",
      "range",
      "100",
      "and",
      "200",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      6,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                1,
                [
                  0,
                  [
                    0,
                    8,
                    false
                  ],
                  null
                ],
                100.0,
                200.0
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT * FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "employees",
      "WHERE",
      "department_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "department_id",
      "FROM",
      "departments",
      "WHERE",
      "manager_id",
      "BETWEEN",
      "100",
      "AND",
      "200",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "employees",
      "where",
      "department_id",
      "not",
      "in",
      "(",
      "select",
      "department_id",
      "from",
      "departments",
      "where",
      "manager_id",
      "between",
      "value",
      "and",
      "value",
      ")"
    ],
    "question": "What are the ids for employees who do not work in departments with managers that have ids between 100 and 200?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "for",
      "employees",
      "who",
      "do",
      "not",
      "work",
      "in",
      "departments",
      "with",
      "managers",
      "that",
      "have",
      "ids",
      "between",
      "100",
      "and",
      "200",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      6,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                1,
                [
                  0,
                  [
                    0,
                    8,
                    false
                  ],
                  null
                ],
                100.0,
                200.0
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  (SELECT department_id FROM employees WHERE first_name  =  \"Clara\")",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      ",",
      "hire_date",
      "FROM",
      "employees",
      "WHERE",
      "department_id",
      "=",
      "(",
      "SELECT",
      "department_id",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Clara",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      ",",
      "hire_date",
      "from",
      "employees",
      "where",
      "department_id",
      "=",
      "(",
      "select",
      "department_id",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "value",
      ")"
    ],
    "question": "display the employee name ( first name and last name ) and hire date for all employees in the same department as Clara.",
    "question_toks": [
      "display",
      "the",
      "employee",
      "name",
      "(",
      "first",
      "name",
      "and",
      "last",
      "name",
      ")",
      "and",
      "hire",
      "date",
      "for",
      "all",
      "employees",
      "in",
      "the",
      "same",
      "department",
      "as",
      "Clara",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      24,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    15,
                    false
                  ],
                  null
                ],
                "\"Clara\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  (SELECT department_id FROM employees WHERE first_name  =  \"Clara\")",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      ",",
      "hire_date",
      "FROM",
      "employees",
      "WHERE",
      "department_id",
      "=",
      "(",
      "SELECT",
      "department_id",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Clara",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      ",",
      "hire_date",
      "from",
      "employees",
      "where",
      "department_id",
      "=",
      "(",
      "select",
      "department_id",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "value",
      ")"
    ],
    "question": "What are the full names and hire dates for employees in the same department as someone with the first name Clara?",
    "question_toks": [
      "What",
      "are",
      "the",
      "full",
      "names",
      "and",
      "hire",
      "dates",
      "for",
      "employees",
      "in",
      "the",
      "same",
      "department",
      "as",
      "someone",
      "with",
      "the",
      "first",
      "name",
      "Clara",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      24,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    15,
                    false
                  ],
                  null
                ],
                "\"Clara\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  ( SELECT department_id FROM employees WHERE first_name  =  \"Clara\") AND first_name != \"Clara\"",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      ",",
      "hire_date",
      "FROM",
      "employees",
      "WHERE",
      "department_id",
      "=",
      "(",
      "SELECT",
      "department_id",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Clara",
      "''",
      ")",
      "AND",
      "first_name",
      "!",
      "=",
      "``",
      "Clara",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      ",",
      "hire_date",
      "from",
      "employees",
      "where",
      "department_id",
      "=",
      "(",
      "select",
      "department_id",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "value",
      ")",
      "and",
      "first_name",
      "!",
      "=",
      "value"
    ],
    "question": "display the employee name ( first name and last name ) and hire date for all employees in the same department as Clara excluding Clara.",
    "question_toks": [
      "display",
      "the",
      "employee",
      "name",
      "(",
      "first",
      "name",
      "and",
      "last",
      "name",
      ")",
      "and",
      "hire",
      "date",
      "for",
      "all",
      "employees",
      "in",
      "the",
      "same",
      "department",
      "as",
      "Clara",
      "excluding",
      "Clara",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      24,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    15,
                    false
                  ],
                  null
                ],
                "\"Clara\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ],
        "and",
        [
          false,
          7,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"Clara\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  ( SELECT department_id FROM employees WHERE first_name  =  \"Clara\") AND first_name != \"Clara\"",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      ",",
      "hire_date",
      "FROM",
      "employees",
      "WHERE",
      "department_id",
      "=",
      "(",
      "SELECT",
      "department_id",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Clara",
      "''",
      ")",
      "AND",
      "first_name",
      "!",
      "=",
      "``",
      "Clara",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      ",",
      "hire_date",
      "from",
      "employees",
      "where",
      "department_id",
      "=",
      "(",
      "select",
      "department_id",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "value",
      ")",
      "and",
      "first_name",
      "!",
      "=",
      "value"
    ],
    "question": "What are the full names and hire dates for employees in the same department as someone with the first name Clara, not including Clara?",
    "question_toks": [
      "What",
      "are",
      "the",
      "full",
      "names",
      "and",
      "hire",
      "dates",
      "for",
      "employees",
      "in",
      "the",
      "same",
      "department",
      "as",
      "someone",
      "with",
      "the",
      "first",
      "name",
      "Clara",
      ",",
      "not",
      "including",
      "Clara",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      24,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    15,
                    false
                  ],
                  null
                ],
                "\"Clara\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ],
        "and",
        [
          false,
          7,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"Clara\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT employee_id ,  first_name ,  last_name FROM employees WHERE department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%T%' )",
    "query_toks": [
      "SELECT",
      "employee_id",
      ",",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "department_id",
      "IN",
      "(",
      "SELECT",
      "department_id",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "LIKE",
      "'",
      "%",
      "T",
      "%",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "employee_id",
      ",",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "department_id",
      "in",
      "(",
      "select",
      "department_id",
      "from",
      "employees",
      "where",
      "first_name",
      "like",
      "value",
      ")"
    ],
    "question": "display the employee number and name( first name and last name ) for all employees who work in a department with any employee whose name contains a \u2019T\u2019.",
    "question_toks": [
      "display",
      "the",
      "employee",
      "number",
      "and",
      "name",
      "(",
      "first",
      "name",
      "and",
      "last",
      "name",
      ")",
      "for",
      "all",
      "employees",
      "who",
      "work",
      "in",
      "a",
      "department",
      "with",
      "any",
      "employee",
      "whose",
      "name",
      "contains",
      "a",
      "\u2019T\u2019",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      24,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                9,
                [
                  0,
                  [
                    0,
                    15,
                    false
                  ],
                  null
                ],
                "\"%T%\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT employee_id ,  first_name ,  last_name FROM employees WHERE department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%T%' )",
    "query_toks": [
      "SELECT",
      "employee_id",
      ",",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "department_id",
      "IN",
      "(",
      "SELECT",
      "department_id",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "LIKE",
      "'",
      "%",
      "T",
      "%",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "employee_id",
      ",",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "department_id",
      "in",
      "(",
      "select",
      "department_id",
      "from",
      "employees",
      "where",
      "first_name",
      "like",
      "value",
      ")"
    ],
    "question": "What are the ids and full names for employees who work in a department that has someone with a first name that contains the letter T?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "and",
      "full",
      "names",
      "for",
      "employees",
      "who",
      "work",
      "in",
      "a",
      "department",
      "that",
      "has",
      "someone",
      "with",
      "a",
      "first",
      "name",
      "that",
      "contains",
      "the",
      "letter",
      "T",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      24,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                9,
                [
                  0,
                  [
                    0,
                    15,
                    false
                  ],
                  null
                ],
                "\"%T%\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  >  ( SELECT AVG (salary) FROM employees ) AND department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%J%')",
    "query_toks": [
      "SELECT",
      "employee_id",
      ",",
      "first_name",
      ",",
      "last_name",
      ",",
      "salary",
      "FROM",
      "employees",
      "WHERE",
      "salary",
      ">",
      "(",
      "SELECT",
      "AVG",
      "(",
      "salary",
      ")",
      "FROM",
      "employees",
      ")",
      "AND",
      "department_id",
      "IN",
      "(",
      "SELECT",
      "department_id",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "LIKE",
      "'",
      "%",
      "J",
      "%",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "employee_id",
      ",",
      "first_name",
      ",",
      "last_name",
      ",",
      "salary",
      "from",
      "employees",
      "where",
      "salary",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "salary",
      ")",
      "from",
      "employees",
      ")",
      "and",
      "department_id",
      "in",
      "(",
      "select",
      "department_id",
      "from",
      "employees",
      "where",
      "first_name",
      "like",
      "value",
      ")"
    ],
    "question": "display the employee number, name( first name and last name ), and salary for all employees who earn more than the average salary and who work in a department with any employee with a 'J' in their first name.",
    "question_toks": [
      "display",
      "the",
      "employee",
      "number",
      ",",
      "name",
      "(",
      "first",
      "name",
      "and",
      "last",
      "name",
      ")",
      ",",
      "and",
      "salary",
      "for",
      "all",
      "employees",
      "who",
      "earn",
      "more",
      "than",
      "the",
      "average",
      "salary",
      "and",
      "who",
      "work",
      "in",
      "a",
      "department",
      "with",
      "any",
      "employee",
      "with",
      "a",
      "'J",
      "'",
      "in",
      "their",
      "first",
      "name",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      21,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ],
        "and",
        [
          false,
          8,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      24,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                9,
                [
                  0,
                  [
                    0,
                    15,
                    false
                  ],
                  null
                ],
                "\"%J%\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  >  ( SELECT AVG (salary) FROM employees ) AND department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%J%')",
    "query_toks": [
      "SELECT",
      "employee_id",
      ",",
      "first_name",
      ",",
      "last_name",
      ",",
      "salary",
      "FROM",
      "employees",
      "WHERE",
      "salary",
      ">",
      "(",
      "SELECT",
      "AVG",
      "(",
      "salary",
      ")",
      "FROM",
      "employees",
      ")",
      "AND",
      "department_id",
      "IN",
      "(",
      "SELECT",
      "department_id",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "LIKE",
      "'",
      "%",
      "J",
      "%",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "employee_id",
      ",",
      "first_name",
      ",",
      "last_name",
      ",",
      "salary",
      "from",
      "employees",
      "where",
      "salary",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "salary",
      ")",
      "from",
      "employees",
      ")",
      "and",
      "department_id",
      "in",
      "(",
      "select",
      "department_id",
      "from",
      "employees",
      "where",
      "first_name",
      "like",
      "value",
      ")"
    ],
    "question": "What are the ids, full names, and salaries for employees making more than average and who work in a department with employees who have the letter J in their first name?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      ",",
      "full",
      "names",
      ",",
      "and",
      "salaries",
      "for",
      "employees",
      "making",
      "more",
      "than",
      "average",
      "and",
      "who",
      "work",
      "in",
      "a",
      "department",
      "with",
      "employees",
      "who",
      "have",
      "the",
      "letter",
      "J",
      "in",
      "their",
      "first",
      "name",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      21,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ],
        "and",
        [
          false,
          8,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      24,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                9,
                [
                  0,
                  [
                    0,
                    15,
                    false
                  ],
                  null
                ],
                "\"%J%\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT employee_id ,  job_id FROM employees WHERE salary  <  ( SELECT min(salary) FROM employees WHERE job_id  =  'MK_MAN' )",
    "query_toks": [
      "SELECT",
      "employee_id",
      ",",
      "job_id",
      "FROM",
      "employees",
      "WHERE",
      "salary",
      "<",
      "(",
      "SELECT",
      "min",
      "(",
      "salary",
      ")",
      "FROM",
      "employees",
      "WHERE",
      "job_id",
      "=",
      "'MK_MAN",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "employee_id",
      ",",
      "job_id",
      "from",
      "employees",
      "where",
      "salary",
      "<",
      "(",
      "select",
      "min",
      "(",
      "salary",
      ")",
      "from",
      "employees",
      "where",
      "job_id",
      "=",
      "value",
      ")"
    ],
    "question": "display the employee number and job id for all employees whose salary is smaller than any salary of those employees whose job title is MK_MAN.",
    "question_toks": [
      "display",
      "the",
      "employee",
      "number",
      "and",
      "job",
      "id",
      "for",
      "all",
      "employees",
      "whose",
      "salary",
      "is",
      "smaller",
      "than",
      "any",
      "salary",
      "of",
      "those",
      "employees",
      "whose",
      "job",
      "title",
      "is",
      "MK_MAN",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      21,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    20,
                    false
                  ],
                  null
                ],
                "\"MK_MAN\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT employee_id ,  job_id FROM employees WHERE salary  <  ( SELECT min(salary) FROM employees WHERE job_id  =  'MK_MAN' )",
    "query_toks": [
      "SELECT",
      "employee_id",
      ",",
      "job_id",
      "FROM",
      "employees",
      "WHERE",
      "salary",
      "<",
      "(",
      "SELECT",
      "min",
      "(",
      "salary",
      ")",
      "FROM",
      "employees",
      "WHERE",
      "job_id",
      "=",
      "'MK_MAN",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "employee_id",
      ",",
      "job_id",
      "from",
      "employees",
      "where",
      "salary",
      "<",
      "(",
      "select",
      "min",
      "(",
      "salary",
      ")",
      "from",
      "employees",
      "where",
      "job_id",
      "=",
      "value",
      ")"
    ],
    "question": "What are the employee ids and job ids for employees who make less than the lowest earning employee with title MK_MAN?",
    "question_toks": [
      "What",
      "are",
      "the",
      "employee",
      "ids",
      "and",
      "job",
      "ids",
      "for",
      "employees",
      "who",
      "make",
      "less",
      "than",
      "the",
      "lowest",
      "earning",
      "employee",
      "with",
      "title",
      "MK_MAN",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      21,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    20,
                    false
                  ],
                  null
                ],
                "\"MK_MAN\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT employee_id ,  first_name ,  last_name ,  job_id FROM employees WHERE salary  >  ( SELECT max(salary) FROM employees WHERE job_id  =  'PU_MAN' )",
    "query_toks": [
      "SELECT",
      "employee_id",
      ",",
      "first_name",
      ",",
      "last_name",
      ",",
      "job_id",
      "FROM",
      "employees",
      "WHERE",
      "salary",
      ">",
      "(",
      "SELECT",
      "max",
      "(",
      "salary",
      ")",
      "FROM",
      "employees",
      "WHERE",
      "job_id",
      "=",
      "'PU_MAN",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "employee_id",
      ",",
      "first_name",
      ",",
      "last_name",
      ",",
      "job_id",
      "from",
      "employees",
      "where",
      "salary",
      ">",
      "(",
      "select",
      "max",
      "(",
      "salary",
      ")",
      "from",
      "employees",
      "where",
      "job_id",
      "=",
      "value",
      ")"
    ],
    "question": "display the employee number, name( first name and last name ) and job title for all employees whose salary is more than any salary of those employees whose job title is PU_MAN.",
    "question_toks": [
      "display",
      "the",
      "employee",
      "number",
      ",",
      "name",
      "(",
      "first",
      "name",
      "and",
      "last",
      "name",
      ")",
      "and",
      "job",
      "title",
      "for",
      "all",
      "employees",
      "whose",
      "salary",
      "is",
      "more",
      "than",
      "any",
      "salary",
      "of",
      "those",
      "employees",
      "whose",
      "job",
      "title",
      "is",
      "PU_MAN",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      21,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    20,
                    false
                  ],
                  null
                ],
                "\"PU_MAN\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT employee_id ,  first_name ,  last_name ,  job_id FROM employees WHERE salary  >  ( SELECT max(salary) FROM employees WHERE job_id  =  'PU_MAN' )",
    "query_toks": [
      "SELECT",
      "employee_id",
      ",",
      "first_name",
      ",",
      "last_name",
      ",",
      "job_id",
      "FROM",
      "employees",
      "WHERE",
      "salary",
      ">",
      "(",
      "SELECT",
      "max",
      "(",
      "salary",
      ")",
      "FROM",
      "employees",
      "WHERE",
      "job_id",
      "=",
      "'PU_MAN",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "employee_id",
      ",",
      "first_name",
      ",",
      "last_name",
      ",",
      "job_id",
      "from",
      "employees",
      "where",
      "salary",
      ">",
      "(",
      "select",
      "max",
      "(",
      "salary",
      ")",
      "from",
      "employees",
      "where",
      "job_id",
      "=",
      "value",
      ")"
    ],
    "question": "What are the employee ids, full names, and job ids for employees who make more than the highest earning employee with title PU_MAN?",
    "question_toks": [
      "What",
      "are",
      "the",
      "employee",
      "ids",
      ",",
      "full",
      "names",
      ",",
      "and",
      "job",
      "ids",
      "for",
      "employees",
      "who",
      "make",
      "more",
      "than",
      "the",
      "highest",
      "earning",
      "employee",
      "with",
      "title",
      "PU_MAN",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      21,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    20,
                    false
                  ],
                  null
                ],
                "\"PU_MAN\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT * FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "employees",
      "WHERE",
      "employee_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "employee_id",
      "FROM",
      "job_history",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "employees",
      "where",
      "employee_id",
      "not",
      "in",
      "(",
      "select",
      "employee_id",
      "from",
      "job_history",
      ")"
    ],
    "question": "display all the information of those employees who did not have any job in the past.",
    "question_toks": [
      "display",
      "all",
      "the",
      "information",
      "of",
      "those",
      "employees",
      "who",
      "did",
      "not",
      "have",
      "any",
      "job",
      "in",
      "the",
      "past",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  5
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      25,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT * FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "employees",
      "WHERE",
      "employee_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "employee_id",
      "FROM",
      "job_history",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "employees",
      "where",
      "employee_id",
      "not",
      "in",
      "(",
      "select",
      "employee_id",
      "from",
      "job_history",
      ")"
    ],
    "question": "What is all the information about employees who have never had a job in the past?",
    "question_toks": [
      "What",
      "is",
      "all",
      "the",
      "information",
      "about",
      "employees",
      "who",
      "have",
      "never",
      "had",
      "a",
      "job",
      "in",
      "the",
      "past",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  5
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      25,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT song_name FROM song WHERE languages  =  \"english\"",
    "query_toks": [
      "SELECT",
      "song_name",
      "FROM",
      "song",
      "WHERE",
      "languages",
      "=",
      "``",
      "english",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "song_name",
      "from",
      "song",
      "where",
      "languages",
      "=",
      "value"
    ],
    "question": "Find the names of all English songs.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "all",
      "English",
      "songs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"english\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT song_name FROM song WHERE languages  =  \"english\"",
    "query_toks": [
      "SELECT",
      "song_name",
      "FROM",
      "song",
      "WHERE",
      "languages",
      "=",
      "``",
      "english",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "song_name",
      "from",
      "song",
      "where",
      "languages",
      "=",
      "value"
    ],
    "question": "What are the names of all songs in English?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "songs",
      "in",
      "English",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"english\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT f_id FROM files WHERE formats  =  \"mp3\"",
    "query_toks": [
      "SELECT",
      "f_id",
      "FROM",
      "files",
      "WHERE",
      "formats",
      "=",
      "``",
      "mp3",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "f_id",
      "from",
      "files",
      "where",
      "formats",
      "=",
      "value"
    ],
    "question": "What are the id of songs whose format is mp3.",
    "question_toks": [
      "What",
      "are",
      "the",
      "id",
      "of",
      "songs",
      "whose",
      "format",
      "is",
      "mp3",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"mp3\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT f_id FROM files WHERE formats  =  \"mp3\"",
    "query_toks": [
      "SELECT",
      "f_id",
      "FROM",
      "files",
      "WHERE",
      "formats",
      "=",
      "``",
      "mp3",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "f_id",
      "from",
      "files",
      "where",
      "formats",
      "=",
      "value"
    ],
    "question": "What are the id of all the files in mp3 format?",
    "question_toks": [
      "What",
      "are",
      "the",
      "id",
      "of",
      "all",
      "the",
      "files",
      "in",
      "mp3",
      "format",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"mp3\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT count(*) FROM files WHERE duration LIKE \"4:%\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "files",
      "WHERE",
      "duration",
      "LIKE",
      "``",
      "4",
      ":",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "files",
      "where",
      "duration",
      "like",
      "value"
    ],
    "question": "How many songs have 4 minute duration?",
    "question_toks": [
      "How",
      "many",
      "songs",
      "have",
      "4",
      "minute",
      "duration",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"4:%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT count(*) FROM files WHERE duration LIKE \"4:%\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "files",
      "WHERE",
      "duration",
      "LIKE",
      "``",
      "4",
      ":",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "files",
      "where",
      "duration",
      "like",
      "value"
    ],
    "question": "What is the count of the songs that last approximately 4 minutes?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "the",
      "songs",
      "that",
      "last",
      "approximately",
      "4",
      "minutes",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"4:%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT count(*) FROM artist WHERE country  =  \"Bangladesh\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "artist",
      "WHERE",
      "country",
      "=",
      "``",
      "Bangladesh",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "artist",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "How many artists are from Bangladesh?",
    "question_toks": [
      "How",
      "many",
      "artists",
      "are",
      "from",
      "Bangladesh",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Bangladesh\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT count(*) FROM artist WHERE country  =  \"Bangladesh\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "artist",
      "WHERE",
      "country",
      "=",
      "``",
      "Bangladesh",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "artist",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "How many Bangladeshi artists are listed?",
    "question_toks": [
      "How",
      "many",
      "Bangladeshi",
      "artists",
      "are",
      "listed",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Bangladesh\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT song_name FROM song WHERE rating  <  (SELECT max(rating) FROM song WHERE genre_is  =  \"blues\")",
    "query_toks": [
      "SELECT",
      "song_name",
      "FROM",
      "song",
      "WHERE",
      "rating",
      "<",
      "(",
      "SELECT",
      "max",
      "(",
      "rating",
      ")",
      "FROM",
      "song",
      "WHERE",
      "genre_is",
      "=",
      "``",
      "blues",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "song_name",
      "from",
      "song",
      "where",
      "rating",
      "<",
      "(",
      "select",
      "max",
      "(",
      "rating",
      ")",
      "from",
      "song",
      "where",
      "genre_is",
      "=",
      "value",
      ")"
    ],
    "question": "What are the names of all songs that have a lower rating than some song of blues genre?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "songs",
      "that",
      "have",
      "a",
      "lower",
      "rating",
      "than",
      "some",
      "song",
      "of",
      "blues",
      "genre",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      18,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    17,
                    false
                  ],
                  null
                ],
                "\"blues\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT song_name FROM song WHERE rating  <  (SELECT max(rating) FROM song WHERE genre_is  =  \"blues\")",
    "query_toks": [
      "SELECT",
      "song_name",
      "FROM",
      "song",
      "WHERE",
      "rating",
      "<",
      "(",
      "SELECT",
      "max",
      "(",
      "rating",
      ")",
      "FROM",
      "song",
      "WHERE",
      "genre_is",
      "=",
      "``",
      "blues",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "song_name",
      "from",
      "song",
      "where",
      "rating",
      "<",
      "(",
      "select",
      "max",
      "(",
      "rating",
      ")",
      "from",
      "song",
      "where",
      "genre_is",
      "=",
      "value",
      ")"
    ],
    "question": "What are the names of the songs that have a lower rating than at least one blues song?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "songs",
      "that",
      "have",
      "a",
      "lower",
      "rating",
      "than",
      "at",
      "least",
      "one",
      "blues",
      "song",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      18,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    17,
                    false
                  ],
                  null
                ],
                "\"blues\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT artist_name FROM artist WHERE country  =  \"UK\" AND gender  =  \"Male\"",
    "query_toks": [
      "SELECT",
      "artist_name",
      "FROM",
      "artist",
      "WHERE",
      "country",
      "=",
      "``",
      "UK",
      "''",
      "AND",
      "gender",
      "=",
      "``",
      "Male",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "artist_name",
      "from",
      "artist",
      "where",
      "country",
      "=",
      "value",
      "and",
      "gender",
      "=",
      "value"
    ],
    "question": "What are the names of artists who are Male and are from UK?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "artists",
      "who",
      "are",
      "Male",
      "and",
      "are",
      "from",
      "UK",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"UK\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Male\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT artist_name FROM artist WHERE country  =  \"UK\" AND gender  =  \"Male\"",
    "query_toks": [
      "SELECT",
      "artist_name",
      "FROM",
      "artist",
      "WHERE",
      "country",
      "=",
      "``",
      "UK",
      "''",
      "AND",
      "gender",
      "=",
      "``",
      "Male",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "artist_name",
      "from",
      "artist",
      "where",
      "country",
      "=",
      "value",
      "and",
      "gender",
      "=",
      "value"
    ],
    "question": "What are the names of all male British artists?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "male",
      "British",
      "artists",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"UK\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Male\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT song_name FROM song WHERE genre_is  =  \"modern\" OR languages  =  \"english\"",
    "query_toks": [
      "SELECT",
      "song_name",
      "FROM",
      "song",
      "WHERE",
      "genre_is",
      "=",
      "``",
      "modern",
      "''",
      "OR",
      "languages",
      "=",
      "``",
      "english",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "song_name",
      "from",
      "song",
      "where",
      "genre_is",
      "=",
      "value",
      "or",
      "languages",
      "=",
      "value"
    ],
    "question": "Find the names of songs whose genre is modern or language is English.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "songs",
      "whose",
      "genre",
      "is",
      "modern",
      "or",
      "language",
      "is",
      "English",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"modern\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"english\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT song_name FROM song WHERE genre_is  =  \"modern\" OR languages  =  \"english\"",
    "query_toks": [
      "SELECT",
      "song_name",
      "FROM",
      "song",
      "WHERE",
      "genre_is",
      "=",
      "``",
      "modern",
      "''",
      "OR",
      "languages",
      "=",
      "``",
      "english",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "song_name",
      "from",
      "song",
      "where",
      "genre_is",
      "=",
      "value",
      "or",
      "languages",
      "=",
      "value"
    ],
    "question": "What are the names of the songs that are modern or sung in English?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "songs",
      "that",
      "are",
      "modern",
      "or",
      "sung",
      "in",
      "English",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"modern\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"english\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT avg(rating) ,  avg(resolution) FROM song WHERE languages  =  \"bangla\"",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "rating",
      ")",
      ",",
      "avg",
      "(",
      "resolution",
      ")",
      "FROM",
      "song",
      "WHERE",
      "languages",
      "=",
      "``",
      "bangla",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "rating",
      ")",
      ",",
      "avg",
      "(",
      "resolution",
      ")",
      "from",
      "song",
      "where",
      "languages",
      "=",
      "value"
    ],
    "question": "What are the average rating and resolution of songs that are in Bangla?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "rating",
      "and",
      "resolution",
      "of",
      "songs",
      "that",
      "are",
      "in",
      "Bangla",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"bangla\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT avg(rating) ,  avg(resolution) FROM song WHERE languages  =  \"bangla\"",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "rating",
      ")",
      ",",
      "avg",
      "(",
      "resolution",
      ")",
      "FROM",
      "song",
      "WHERE",
      "languages",
      "=",
      "``",
      "bangla",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "rating",
      ")",
      ",",
      "avg",
      "(",
      "resolution",
      ")",
      "from",
      "song",
      "where",
      "languages",
      "=",
      "value"
    ],
    "question": "What is the average rating and resolution of all bangla songs?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "rating",
      "and",
      "resolution",
      "of",
      "all",
      "bangla",
      "songs",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"bangla\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT song_name FROM song WHERE rating  <   (SELECT min(rating) FROM song WHERE languages  =  'english')",
    "query_toks": [
      "SELECT",
      "song_name",
      "FROM",
      "song",
      "WHERE",
      "rating",
      "<",
      "(",
      "SELECT",
      "min",
      "(",
      "rating",
      ")",
      "FROM",
      "song",
      "WHERE",
      "languages",
      "=",
      "'english",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "song_name",
      "from",
      "song",
      "where",
      "rating",
      "<",
      "(",
      "select",
      "min",
      "(",
      "rating",
      ")",
      "from",
      "song",
      "where",
      "languages",
      "=",
      "value",
      ")"
    ],
    "question": "What are the names of the songs whose rating is below the rating of all songs in English?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "songs",
      "whose",
      "rating",
      "is",
      "below",
      "the",
      "rating",
      "of",
      "all",
      "songs",
      "in",
      "English",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      18,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    19,
                    false
                  ],
                  null
                ],
                "\"english\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT song_name FROM song WHERE rating  <   (SELECT min(rating) FROM song WHERE languages  =  'english')",
    "query_toks": [
      "SELECT",
      "song_name",
      "FROM",
      "song",
      "WHERE",
      "rating",
      "<",
      "(",
      "SELECT",
      "min",
      "(",
      "rating",
      ")",
      "FROM",
      "song",
      "WHERE",
      "languages",
      "=",
      "'english",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "song_name",
      "from",
      "song",
      "where",
      "rating",
      "<",
      "(",
      "select",
      "min",
      "(",
      "rating",
      ")",
      "from",
      "song",
      "where",
      "languages",
      "=",
      "value",
      ")"
    ],
    "question": "What are the song names for every song whose rating is less than the minimum rating for English songs?",
    "question_toks": [
      "What",
      "are",
      "the",
      "song",
      "names",
      "for",
      "every",
      "song",
      "whose",
      "rating",
      "is",
      "less",
      "than",
      "the",
      "minimum",
      "rating",
      "for",
      "English",
      "songs",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      18,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    19,
                    false
                  ],
                  null
                ],
                "\"english\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT f_id FROM song WHERE resolution  >  (SELECT max(resolution) FROM song WHERE rating  <  8)",
    "query_toks": [
      "SELECT",
      "f_id",
      "FROM",
      "song",
      "WHERE",
      "resolution",
      ">",
      "(",
      "SELECT",
      "max",
      "(",
      "resolution",
      ")",
      "FROM",
      "song",
      "WHERE",
      "rating",
      "<",
      "8",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "f_id",
      "from",
      "song",
      "where",
      "resolution",
      ">",
      "(",
      "select",
      "max",
      "(",
      "resolution",
      ")",
      "from",
      "song",
      "where",
      "rating",
      "<",
      "value",
      ")"
    ],
    "question": "What is ids of the songs whose resolution is higher than the resolution of any songs with rating lower than 8?",
    "question_toks": [
      "What",
      "is",
      "ids",
      "of",
      "the",
      "songs",
      "whose",
      "resolution",
      "is",
      "higher",
      "than",
      "the",
      "resolution",
      "of",
      "any",
      "songs",
      "with",
      "rating",
      "lower",
      "than",
      "8",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      21,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                4,
                [
                  0,
                  [
                    0,
                    18,
                    false
                  ],
                  null
                ],
                8.0,
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT f_id FROM song WHERE resolution  >  (SELECT max(resolution) FROM song WHERE rating  <  8)",
    "query_toks": [
      "SELECT",
      "f_id",
      "FROM",
      "song",
      "WHERE",
      "resolution",
      ">",
      "(",
      "SELECT",
      "max",
      "(",
      "resolution",
      ")",
      "FROM",
      "song",
      "WHERE",
      "rating",
      "<",
      "8",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "f_id",
      "from",
      "song",
      "where",
      "resolution",
      ">",
      "(",
      "select",
      "max",
      "(",
      "resolution",
      ")",
      "from",
      "song",
      "where",
      "rating",
      "<",
      "value",
      ")"
    ],
    "question": "What is the id of every song that has a resolution higher than that of a song with a rating below 8?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "of",
      "every",
      "song",
      "that",
      "has",
      "a",
      "resolution",
      "higher",
      "than",
      "that",
      "of",
      "a",
      "song",
      "with",
      "a",
      "rating",
      "below",
      "8",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      21,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                4,
                [
                  0,
                  [
                    0,
                    18,
                    false
                  ],
                  null
                ],
                8.0,
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT f_id FROM song WHERE resolution  >  (SELECT avg(resolution) FROM song WHERE genre_is  =  \"modern\")",
    "query_toks": [
      "SELECT",
      "f_id",
      "FROM",
      "song",
      "WHERE",
      "resolution",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "resolution",
      ")",
      "FROM",
      "song",
      "WHERE",
      "genre_is",
      "=",
      "``",
      "modern",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "f_id",
      "from",
      "song",
      "where",
      "resolution",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "resolution",
      ")",
      "from",
      "song",
      "where",
      "genre_is",
      "=",
      "value",
      ")"
    ],
    "question": "What is ids of the songs whose resolution is higher than the average resolution of songs in modern genre?",
    "question_toks": [
      "What",
      "is",
      "ids",
      "of",
      "the",
      "songs",
      "whose",
      "resolution",
      "is",
      "higher",
      "than",
      "the",
      "average",
      "resolution",
      "of",
      "songs",
      "in",
      "modern",
      "genre",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      21,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    17,
                    false
                  ],
                  null
                ],
                "\"modern\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT f_id FROM song WHERE resolution  >  (SELECT avg(resolution) FROM song WHERE genre_is  =  \"modern\")",
    "query_toks": [
      "SELECT",
      "f_id",
      "FROM",
      "song",
      "WHERE",
      "resolution",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "resolution",
      ")",
      "FROM",
      "song",
      "WHERE",
      "genre_is",
      "=",
      "``",
      "modern",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "f_id",
      "from",
      "song",
      "where",
      "resolution",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "resolution",
      ")",
      "from",
      "song",
      "where",
      "genre_is",
      "=",
      "value",
      ")"
    ],
    "question": "What are the ids of all songs that have higher resolution of the average resolution in the modern genre?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "all",
      "songs",
      "that",
      "have",
      "higher",
      "resolution",
      "of",
      "the",
      "average",
      "resolution",
      "in",
      "the",
      "modern",
      "genre",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      21,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    17,
                    false
                  ],
                  null
                ],
                "\"modern\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "baseball_1",
    "query": "SELECT count(*) FROM park WHERE state  =  'NY';",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "park",
      "WHERE",
      "state",
      "=",
      "'NY",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "park",
      "where",
      "state",
      "=",
      "value"
    ],
    "question": "How many parks are there in the state of NY?",
    "question_toks": [
      "How",
      "many",
      "parks",
      "are",
      "there",
      "in",
      "the",
      "state",
      "of",
      "NY",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            17
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              210,
              false
            ],
            null
          ],
          "\"NY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "baseball_1",
    "query": "SELECT count(*) FROM park WHERE state  =  'NY';",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "park",
      "WHERE",
      "state",
      "=",
      "'NY",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "park",
      "where",
      "state",
      "=",
      "value"
    ],
    "question": "Show me the number of parks the state of NY has.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "number",
      "of",
      "parks",
      "the",
      "state",
      "of",
      "NY",
      "has",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            17
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              210,
              false
            ],
            null
          ],
          "\"NY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "baseball_1",
    "query": "SELECT name_first ,  name_last FROM player WHERE death_year = '';",
    "query_toks": [
      "SELECT",
      "name_first",
      ",",
      "name_last",
      "FROM",
      "player",
      "WHERE",
      "death_year",
      "=",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name_first",
      ",",
      "name_last",
      "from",
      "player",
      "where",
      "death_year",
      "=",
      "value"
    ],
    "question": "Find all the players' first name and last name who have empty death record.",
    "question_toks": [
      "Find",
      "all",
      "the",
      "players",
      "'",
      "first",
      "name",
      "and",
      "last",
      "name",
      "who",
      "have",
      "empty",
      "death",
      "record",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            16
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                195,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                196,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              189,
              false
            ],
            null
          ],
          "\"\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "baseball_1",
    "query": "SELECT name_first ,  name_last FROM player WHERE death_year = '';",
    "query_toks": [
      "SELECT",
      "name_first",
      ",",
      "name_last",
      "FROM",
      "player",
      "WHERE",
      "death_year",
      "=",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name_first",
      ",",
      "name_last",
      "from",
      "player",
      "where",
      "death_year",
      "=",
      "value"
    ],
    "question": "What are the first name and last name of the players whose death record is empty?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "name",
      "and",
      "last",
      "name",
      "of",
      "the",
      "players",
      "whose",
      "death",
      "record",
      "is",
      "empty",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            16
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                195,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                196,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              189,
              false
            ],
            null
          ],
          "\"\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "baseball_1",
    "query": "SELECT count(*) FROM player WHERE birth_country = 'USA' AND bats  =  'R';",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "player",
      "WHERE",
      "birth_country",
      "=",
      "'USA",
      "'",
      "AND",
      "bats",
      "=",
      "'R",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "player",
      "where",
      "birth_country",
      "=",
      "value",
      "and",
      "bats",
      "=",
      "value"
    ],
    "question": "How many players born in USA are right-handed batters? That is, have the batter value 'R'.",
    "question_toks": [
      "How",
      "many",
      "players",
      "born",
      "in",
      "USA",
      "are",
      "right-handed",
      "batters",
      "?",
      "That",
      "is",
      ",",
      "have",
      "the",
      "batter",
      "value",
      "'R",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            16
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              186,
              false
            ],
            null
          ],
          "\"USA\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              200,
              false
            ],
            null
          ],
          "\"R\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "baseball_1",
    "query": "SELECT count(*) FROM player WHERE birth_country = 'USA' AND bats  =  'R';",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "player",
      "WHERE",
      "birth_country",
      "=",
      "'USA",
      "'",
      "AND",
      "bats",
      "=",
      "'R",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "player",
      "where",
      "birth_country",
      "=",
      "value",
      "and",
      "bats",
      "=",
      "value"
    ],
    "question": "Count the number of players who were born in USA and have bats information 'R'.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "players",
      "who",
      "were",
      "born",
      "in",
      "USA",
      "and",
      "have",
      "bats",
      "information",
      "'R",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            16
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              186,
              false
            ],
            null
          ],
          "\"USA\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              200,
              false
            ],
            null
          ],
          "\"R\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "baseball_1",
    "query": "SELECT name_first ,  name_last FROM player WHERE weight  >  220 OR height  <  75",
    "query_toks": [
      "SELECT",
      "name_first",
      ",",
      "name_last",
      "FROM",
      "player",
      "WHERE",
      "weight",
      ">",
      "220",
      "OR",
      "height",
      "<",
      "75"
    ],
    "query_toks_no_value": [
      "select",
      "name_first",
      ",",
      "name_last",
      "from",
      "player",
      "where",
      "weight",
      ">",
      "value",
      "or",
      "height",
      "<",
      "value"
    ],
    "question": "List players' first name and last name who have weight greater than 220 or height shorter than 75.",
    "question_toks": [
      "List",
      "players",
      "'",
      "first",
      "name",
      "and",
      "last",
      "name",
      "who",
      "have",
      "weight",
      "greater",
      "than",
      "220",
      "or",
      "height",
      "shorter",
      "than",
      "75",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            16
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                195,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                196,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              198,
              false
            ],
            null
          ],
          220.0,
          null
        ],
        "or",
        [
          false,
          4,
          [
            0,
            [
              0,
              199,
              false
            ],
            null
          ],
          75.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "baseball_1",
    "query": "SELECT name_first ,  name_last FROM player WHERE weight  >  220 OR height  <  75",
    "query_toks": [
      "SELECT",
      "name_first",
      ",",
      "name_last",
      "FROM",
      "player",
      "WHERE",
      "weight",
      ">",
      "220",
      "OR",
      "height",
      "<",
      "75"
    ],
    "query_toks_no_value": [
      "select",
      "name_first",
      ",",
      "name_last",
      "from",
      "player",
      "where",
      "weight",
      ">",
      "value",
      "or",
      "height",
      "<",
      "value"
    ],
    "question": "What are the first name and last name of the players who have weight above 220 or height below 75?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "name",
      "and",
      "last",
      "name",
      "of",
      "the",
      "players",
      "who",
      "have",
      "weight",
      "above",
      "220",
      "or",
      "height",
      "below",
      "75",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            16
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                195,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                196,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              198,
              false
            ],
            null
          ],
          220.0,
          null
        ],
        "or",
        [
          false,
          4,
          [
            0,
            [
              0,
              199,
              false
            ],
            null
          ],
          75.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "baseball_1",
    "query": "SELECT count(*) FROM ( SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' UNION SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_loser  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' );",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "(",
      "SELECT",
      "*",
      "FROM",
      "postseason",
      "AS",
      "T1",
      "JOIN",
      "team",
      "AS",
      "T2",
      "ON",
      "T1.team_id_winner",
      "=",
      "T2.team_id_br",
      "WHERE",
      "T2.name",
      "=",
      "'Boston",
      "Red",
      "Stockings",
      "'",
      "UNION",
      "SELECT",
      "*",
      "FROM",
      "postseason",
      "AS",
      "T1",
      "JOIN",
      "team",
      "AS",
      "T2",
      "ON",
      "T1.team_id_loser",
      "=",
      "T2.team_id_br",
      "WHERE",
      "T2.name",
      "=",
      "'Boston",
      "Red",
      "Stockings",
      "'",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "(",
      "select",
      "*",
      "from",
      "postseason",
      "as",
      "t1",
      "join",
      "team",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "team_id_winner",
      "=",
      "t2",
      ".",
      "team_id_br",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "union",
      "select",
      "*",
      "from",
      "postseason",
      "as",
      "t1",
      "join",
      "team",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "team_id_loser",
      "=",
      "t2",
      ".",
      "team_id_br",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      ")"
    ],
    "question": "What is the total number of postseason games that team Boston Red Stockings participated in?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "postseason",
      "games",
      "that",
      "team",
      "Boston",
      "Red",
      "Stockings",
      "participated",
      "in",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "sql",
            {
              "from": {
                "table_units": [
                  [
                    "table_unit",
                    22
                  ],
                  [
                    "table_unit",
                    23
                  ]
                ],
                "conds": [
                  [
                    false,
                    2,
                    [
                      0,
                      [
                        0,
                        284,
                        false
                      ],
                      null
                    ],
                    [
                      0,
                      336,
                      false
                    ],
                    null
                  ]
                ]
              },
              "select": [
                false,
                [
                  [
                    0,
                    [
                      0,
                      [
                        0,
                        0,
                        false
                      ],
                      null
                    ]
                  ]
                ]
              ],
              "where": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      331,
                      false
                    ],
                    null
                  ],
                  "\"Boston Red Stockings\"",
                  null
                ]
              ],
              "groupBy": [],
              "having": [],
              "orderBy": [],
              "limit": null,
              "intersect": null,
              "union": {
                "from": {
                  "table_units": [
                    [
                      "table_unit",
                      22
                    ],
                    [
                      "table_unit",
                      23
                    ]
                  ],
                  "conds": [
                    [
                      false,
                      2,
                      [
                        0,
                        [
                          0,
                          286,
                          false
                        ],
                        null
                      ],
                      [
                        0,
                        336,
                        false
                      ],
                      null
                    ]
                  ]
                },
                "select": [
                  false,
                  [
                    [
                      0,
                      [
                        0,
                        [
                          0,
                          0,
                          false
                        ],
                        null
                      ]
                    ]
                  ]
                ],
                "where": [
                  [
                    false,
                    2,
                    [
                      0,
                      [
                        0,
                        331,
                        false
                      ],
                      null
                    ],
                    "\"Boston Red Stockings\"",
                    null
                  ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
              },
              "except": null
            }
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "baseball_1",
    "query": "SELECT count(*) FROM ( SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' UNION SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_loser  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' );",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "(",
      "SELECT",
      "*",
      "FROM",
      "postseason",
      "AS",
      "T1",
      "JOIN",
      "team",
      "AS",
      "T2",
      "ON",
      "T1.team_id_winner",
      "=",
      "T2.team_id_br",
      "WHERE",
      "T2.name",
      "=",
      "'Boston",
      "Red",
      "Stockings",
      "'",
      "UNION",
      "SELECT",
      "*",
      "FROM",
      "postseason",
      "AS",
      "T1",
      "JOIN",
      "team",
      "AS",
      "T2",
      "ON",
      "T1.team_id_loser",
      "=",
      "T2.team_id_br",
      "WHERE",
      "T2.name",
      "=",
      "'Boston",
      "Red",
      "Stockings",
      "'",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "(",
      "select",
      "*",
      "from",
      "postseason",
      "as",
      "t1",
      "join",
      "team",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "team_id_winner",
      "=",
      "t2",
      ".",
      "team_id_br",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "union",
      "select",
      "*",
      "from",
      "postseason",
      "as",
      "t1",
      "join",
      "team",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "team_id_loser",
      "=",
      "t2",
      ".",
      "team_id_br",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      ")"
    ],
    "question": "How many times in total did the team Boston Red Stockings participate in postseason games?",
    "question_toks": [
      "How",
      "many",
      "times",
      "in",
      "total",
      "did",
      "the",
      "team",
      "Boston",
      "Red",
      "Stockings",
      "participate",
      "in",
      "postseason",
      "games",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "sql",
            {
              "from": {
                "table_units": [
                  [
                    "table_unit",
                    22
                  ],
                  [
                    "table_unit",
                    23
                  ]
                ],
                "conds": [
                  [
                    false,
                    2,
                    [
                      0,
                      [
                        0,
                        284,
                        false
                      ],
                      null
                    ],
                    [
                      0,
                      336,
                      false
                    ],
                    null
                  ]
                ]
              },
              "select": [
                false,
                [
                  [
                    0,
                    [
                      0,
                      [
                        0,
                        0,
                        false
                      ],
                      null
                    ]
                  ]
                ]
              ],
              "where": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      331,
                      false
                    ],
                    null
                  ],
                  "\"Boston Red Stockings\"",
                  null
                ]
              ],
              "groupBy": [],
              "having": [],
              "orderBy": [],
              "limit": null,
              "intersect": null,
              "union": {
                "from": {
                  "table_units": [
                    [
                      "table_unit",
                      22
                    ],
                    [
                      "table_unit",
                      23
                    ]
                  ],
                  "conds": [
                    [
                      false,
                      2,
                      [
                        0,
                        [
                          0,
                          286,
                          false
                        ],
                        null
                      ],
                      [
                        0,
                        336,
                        false
                      ],
                      null
                    ]
                  ]
                },
                "select": [
                  false,
                  [
                    [
                      0,
                      [
                        0,
                        [
                          0,
                          0,
                          false
                        ],
                        null
                      ]
                    ]
                  ]
                ],
                "where": [
                  [
                    false,
                    2,
                    [
                      0,
                      [
                        0,
                        331,
                        false
                      ],
                      null
                    ],
                    "\"Boston Red Stockings\"",
                    null
                  ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
              },
              "except": null
            }
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "baseball_1",
    "query": "SELECT count(*) FROM postseason WHERE YEAR  =  1885 AND ties  =  1;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "postseason",
      "WHERE",
      "YEAR",
      "=",
      "1885",
      "AND",
      "ties",
      "=",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "postseason",
      "where",
      "year",
      "=",
      "value",
      "and",
      "ties",
      "=",
      "value"
    ],
    "question": "How many games in 1885 postseason resulted in ties (that is, the value of \"ties\" is '1')?",
    "question_toks": [
      "How",
      "many",
      "games",
      "in",
      "1885",
      "postseason",
      "resulted",
      "in",
      "ties",
      "(",
      "that",
      "is",
      ",",
      "the",
      "value",
      "of",
      "``",
      "ties",
      "''",
      "is",
      "'1",
      "'",
      ")",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            22
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              282,
              false
            ],
            null
          ],
          1885.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              290,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "baseball_1",
    "query": "SELECT count(*) FROM postseason WHERE YEAR  =  1885 AND ties  =  1;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "postseason",
      "WHERE",
      "YEAR",
      "=",
      "1885",
      "AND",
      "ties",
      "=",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "postseason",
      "where",
      "year",
      "=",
      "value",
      "and",
      "ties",
      "=",
      "value"
    ],
    "question": "Find the number of tied games (the value of \"ties\" is '1') in 1885 postseason.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "tied",
      "games",
      "(",
      "the",
      "value",
      "of",
      "``",
      "ties",
      "''",
      "is",
      "'1",
      "'",
      ")",
      "in",
      "1885",
      "postseason",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            22
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              282,
              false
            ],
            null
          ],
          1885.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              290,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "baseball_1",
    "query": "SELECT count(*) FROM park WHERE city = 'Atlanta';",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "park",
      "WHERE",
      "city",
      "=",
      "'Atlanta",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "park",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "How many parks are there in Atlanta city?",
    "question_toks": [
      "How",
      "many",
      "parks",
      "are",
      "there",
      "in",
      "Atlanta",
      "city",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            17
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              209,
              false
            ],
            null
          ],
          "\"Atlanta\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "baseball_1",
    "query": "SELECT count(*) FROM park WHERE city = 'Atlanta';",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "park",
      "WHERE",
      "city",
      "=",
      "'Atlanta",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "park",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "How many parks does Atlanta city have?",
    "question_toks": [
      "How",
      "many",
      "parks",
      "does",
      "Atlanta",
      "city",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            17
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              209,
              false
            ],
            null
          ],
          "\"Atlanta\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "baseball_1",
    "query": "SELECT count(*) FROM team_franchise WHERE active = 'Y';",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "team_franchise",
      "WHERE",
      "active",
      "=",
      "'Y",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "team_franchise",
      "where",
      "active",
      "=",
      "value"
    ],
    "question": "How many team franchises are active, with active value 'Y'?",
    "question_toks": [
      "How",
      "many",
      "team",
      "franchises",
      "are",
      "active",
      ",",
      "with",
      "active",
      "value",
      "'Y",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            24
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              341,
              false
            ],
            null
          ],
          "\"Y\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "baseball_1",
    "query": "SELECT count(*) FROM team_franchise WHERE active = 'Y';",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "team_franchise",
      "WHERE",
      "active",
      "=",
      "'Y",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "team_franchise",
      "where",
      "active",
      "=",
      "value"
    ],
    "question": "Find the number of team franchises that are active (have 'Y' as \"active\" information).",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "team",
      "franchises",
      "that",
      "are",
      "active",
      "(",
      "have",
      "'Y",
      "'",
      "as",
      "``",
      "active",
      "''",
      "information",
      ")",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            24
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              341,
              false
            ],
            null
          ],
          "\"Y\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "mountain_photos",
    "query": "SELECT count(*) FROM camera_lens WHERE focal_length_mm  >  15",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "camera_lens",
      "WHERE",
      "focal_length_mm",
      ">",
      "15"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "camera_lens",
      "where",
      "focal_length_mm",
      ">",
      "value"
    ],
    "question": "How many camera lenses have a focal length longer than 15 mm?",
    "question_toks": [
      "How",
      "many",
      "camera",
      "lenses",
      "have",
      "a",
      "focal",
      "length",
      "longer",
      "than",
      "15",
      "mm",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          15.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "mountain_photos",
    "query": "SELECT id ,  color ,  name FROM photos",
    "query_toks": [
      "SELECT",
      "id",
      ",",
      "color",
      ",",
      "name",
      "FROM",
      "photos"
    ],
    "query_toks_no_value": [
      "select",
      "id",
      ",",
      "color",
      ",",
      "name",
      "from",
      "photos"
    ],
    "question": "List the id, color scheme, and name for all the photos.",
    "question_toks": [
      "List",
      "the",
      "id",
      ",",
      "color",
      "scheme",
      ",",
      "and",
      "name",
      "for",
      "all",
      "the",
      "photos",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "mountain_photos",
    "query": "SELECT max(height) ,  avg(height) FROM mountain",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "height",
      ")",
      ",",
      "avg",
      "(",
      "height",
      ")",
      "FROM",
      "mountain"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "height",
      ")",
      ",",
      "avg",
      "(",
      "height",
      ")",
      "from",
      "mountain"
    ],
    "question": "What are the maximum and average height of the mountains?",
    "question_toks": [
      "What",
      "are",
      "the",
      "maximum",
      "and",
      "average",
      "height",
      "of",
      "the",
      "mountains",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "mountain_photos",
    "query": "SELECT avg(prominence) FROM mountain WHERE country  =  'Morocco'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "prominence",
      ")",
      "FROM",
      "mountain",
      "WHERE",
      "country",
      "=",
      "'Morocco",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "prominence",
      ")",
      "from",
      "mountain",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "What are the average prominence of the mountains in country 'Morocco'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "prominence",
      "of",
      "the",
      "mountains",
      "in",
      "country",
      "'Morocco",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Morocco\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "mountain_photos",
    "query": "SELECT name ,  height ,  prominence FROM mountain WHERE range != 'Aberdare Range'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "height",
      ",",
      "prominence",
      "FROM",
      "mountain",
      "WHERE",
      "range",
      "!",
      "=",
      "'Aberdare",
      "Range",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "height",
      ",",
      "prominence",
      "from",
      "mountain",
      "where",
      "range",
      "!",
      "=",
      "value"
    ],
    "question": "What are the name, height and prominence of mountains which do not belong to the range 'Aberdare Range'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "name",
      ",",
      "height",
      "and",
      "prominence",
      "of",
      "mountains",
      "which",
      "do",
      "not",
      "belong",
      "to",
      "the",
      "range",
      "'Aberdare",
      "Range",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Aberdare Range\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "mountain_photos",
    "query": "SELECT count(DISTINCT brand) FROM camera_lens",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "brand",
      ")",
      "FROM",
      "camera_lens"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "brand",
      ")",
      "from",
      "camera_lens"
    ],
    "question": "How many different kinds of lens brands are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "kinds",
      "of",
      "lens",
      "brands",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                8,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "mountain_photos",
    "query": "SELECT count(*) FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos )",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "camera_lens",
      "WHERE",
      "id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "camera_lens_id",
      "FROM",
      "photos",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "camera_lens",
      "where",
      "id",
      "not",
      "in",
      "(",
      "select",
      "camera_lens_id",
      "from",
      "photos",
      ")"
    ],
    "question": "How many camera lenses are not used in taking any photos?",
    "question_toks": [
      "How",
      "many",
      "camera",
      "lenses",
      "are",
      "not",
      "used",
      "in",
      "taking",
      "any",
      "photos",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      13,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "mountain_photos",
    "query": "SELECT name FROM camera_lens WHERE name LIKE \"%Digital%\"",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "camera_lens",
      "WHERE",
      "name",
      "LIKE",
      "``",
      "%",
      "Digital",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "camera_lens",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "List the camera lens names containing substring \"Digital\".",
    "question_toks": [
      "List",
      "the",
      "camera",
      "lens",
      "names",
      "containing",
      "substring",
      "``",
      "Digital",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"%Digital%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT name FROM channel WHERE OWNER != 'CCTV'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "channel",
      "WHERE",
      "OWNER",
      "!",
      "=",
      "'CCTV",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "channel",
      "where",
      "owner",
      "!",
      "=",
      "value"
    ],
    "question": "Find the names of channels that are not owned by CCTV.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "channels",
      "that",
      "are",
      "not",
      "owned",
      "by",
      "CCTV",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"CCTV\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT name FROM channel WHERE OWNER != 'CCTV'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "channel",
      "WHERE",
      "OWNER",
      "!",
      "=",
      "'CCTV",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "channel",
      "where",
      "owner",
      "!",
      "=",
      "value"
    ],
    "question": "Which channels are not owned by CCTV? Give me the channel names.",
    "question_toks": [
      "Which",
      "channels",
      "are",
      "not",
      "owned",
      "by",
      "CCTV",
      "?",
      "Give",
      "me",
      "the",
      "channel",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"CCTV\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT count(*) FROM program",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "program"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "program"
    ],
    "question": "how many programs are there?",
    "question_toks": [
      "how",
      "many",
      "programs",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT count(*) FROM program",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "program"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "program"
    ],
    "question": "Count the number of programs.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "programs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT name ,  origin ,  OWNER FROM program",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "origin",
      ",",
      "OWNER",
      "FROM",
      "program"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "origin",
      ",",
      "owner",
      "from",
      "program"
    ],
    "question": "List the name, origin and owner of each program.",
    "question_toks": [
      "List",
      "the",
      "name",
      ",",
      "origin",
      "and",
      "owner",
      "of",
      "each",
      "program",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT name ,  origin ,  OWNER FROM program",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "origin",
      ",",
      "OWNER",
      "FROM",
      "program"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "origin",
      ",",
      "owner",
      "from",
      "program"
    ],
    "question": "What are the name, origin and owner of each program?",
    "question_toks": [
      "What",
      "are",
      "the",
      "name",
      ",",
      "origin",
      "and",
      "owner",
      "of",
      "each",
      "program",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT sum(Share_in_percent) FROM channel WHERE OWNER  =  'CCTV'",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "Share_in_percent",
      ")",
      "FROM",
      "channel",
      "WHERE",
      "OWNER",
      "=",
      "'CCTV",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "share_in_percent",
      ")",
      "from",
      "channel",
      "where",
      "owner",
      "=",
      "value"
    ],
    "question": "find the total percentage share of all channels owned by CCTV.",
    "question_toks": [
      "find",
      "the",
      "total",
      "percentage",
      "share",
      "of",
      "all",
      "channels",
      "owned",
      "by",
      "CCTV",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"CCTV\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT sum(Share_in_percent) FROM channel WHERE OWNER  =  'CCTV'",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "Share_in_percent",
      ")",
      "FROM",
      "channel",
      "WHERE",
      "OWNER",
      "=",
      "'CCTV",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "share_in_percent",
      ")",
      "from",
      "channel",
      "where",
      "owner",
      "=",
      "value"
    ],
    "question": "What is the total share (in percent) of all the channels owned by CCTV?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "share",
      "(",
      "in",
      "percent",
      ")",
      "of",
      "all",
      "the",
      "channels",
      "owned",
      "by",
      "CCTV",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"CCTV\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT count(DISTINCT program_id) FROM broadcast WHERE time_of_day  =  'Night'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "program_id",
      ")",
      "FROM",
      "broadcast",
      "WHERE",
      "time_of_day",
      "=",
      "'Night",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "program_id",
      ")",
      "from",
      "broadcast",
      "where",
      "time_of_day",
      "=",
      "value"
    ],
    "question": "find the number of different programs that are broadcast during night time.",
    "question_toks": [
      "find",
      "the",
      "number",
      "of",
      "different",
      "programs",
      "that",
      "are",
      "broadcast",
      "during",
      "night",
      "time",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"Night\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT count(DISTINCT program_id) FROM broadcast WHERE time_of_day  =  'Night'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "program_id",
      ")",
      "FROM",
      "broadcast",
      "WHERE",
      "time_of_day",
      "=",
      "'Night",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "program_id",
      ")",
      "from",
      "broadcast",
      "where",
      "time_of_day",
      "=",
      "value"
    ],
    "question": "How many distinct programs are broadcast at \"Night\" time?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "programs",
      "are",
      "broadcast",
      "at",
      "``",
      "Night",
      "''",
      "time",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"Night\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT count(DISTINCT OWNER) FROM channel",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "OWNER",
      ")",
      "FROM",
      "channel"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "owner",
      ")",
      "from",
      "channel"
    ],
    "question": "what is the number of different channel owners?",
    "question_toks": [
      "what",
      "is",
      "the",
      "number",
      "of",
      "different",
      "channel",
      "owners",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                8,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT count(DISTINCT OWNER) FROM channel",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "OWNER",
      ")",
      "FROM",
      "channel"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "owner",
      ")",
      "from",
      "channel"
    ],
    "question": "Count the number of distinct channel owners.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "distinct",
      "channel",
      "owners",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                8,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT name FROM program WHERE origin != 'Beijing'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "program",
      "WHERE",
      "origin",
      "!",
      "=",
      "'Beijing",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "program",
      "where",
      "origin",
      "!",
      "=",
      "value"
    ],
    "question": "find the names of programs whose origin is not in Beijing.",
    "question_toks": [
      "find",
      "the",
      "names",
      "of",
      "programs",
      "whose",
      "origin",
      "is",
      "not",
      "in",
      "Beijing",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Beijing\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT name FROM program WHERE origin != 'Beijing'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "program",
      "WHERE",
      "origin",
      "!",
      "=",
      "'Beijing",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "program",
      "where",
      "origin",
      "!",
      "=",
      "value"
    ],
    "question": "Which programs' origins are not \"Beijing\"? Give me the program names.",
    "question_toks": [
      "Which",
      "programs",
      "'",
      "origins",
      "are",
      "not",
      "``",
      "Beijing",
      "''",
      "?",
      "Give",
      "me",
      "the",
      "program",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Beijing\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT name FROM channel WHERE OWNER  =  'CCTV' OR OWNER  =  'HBS'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "channel",
      "WHERE",
      "OWNER",
      "=",
      "'CCTV",
      "'",
      "OR",
      "OWNER",
      "=",
      "'HBS",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "channel",
      "where",
      "owner",
      "=",
      "value",
      "or",
      "owner",
      "=",
      "value"
    ],
    "question": "What are the names of the channels owned by CCTV or HBS?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "channels",
      "owned",
      "by",
      "CCTV",
      "or",
      "HBS",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"CCTV\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"HBS\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT name FROM channel WHERE OWNER  =  'CCTV' OR OWNER  =  'HBS'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "channel",
      "WHERE",
      "OWNER",
      "=",
      "'CCTV",
      "'",
      "OR",
      "OWNER",
      "=",
      "'HBS",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "channel",
      "where",
      "owner",
      "=",
      "value",
      "or",
      "owner",
      "=",
      "value"
    ],
    "question": "List the names of all the channels owned by either CCTV or HBS",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "all",
      "the",
      "channels",
      "owned",
      "by",
      "either",
      "CCTV",
      "or",
      "HBS"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"CCTV\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"HBS\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT count(*) FROM COURSES",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "COURSES"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "courses"
    ],
    "question": "How many courses are there in total?",
    "question_toks": [
      "How",
      "many",
      "courses",
      "are",
      "there",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT count(*) FROM COURSES",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "COURSES"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "courses"
    ],
    "question": "Find the total number of courses offered.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "number",
      "of",
      "courses",
      "offered",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT course_description FROM COURSES WHERE course_name  =  \"database\"",
    "query_toks": [
      "SELECT",
      "course_description",
      "FROM",
      "COURSES",
      "WHERE",
      "course_name",
      "=",
      "``",
      "database",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "course_description",
      "from",
      "courses",
      "where",
      "course_name",
      "=",
      "value"
    ],
    "question": "What are the descriptions of the courses with name \"database\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "descriptions",
      "of",
      "the",
      "courses",
      "with",
      "name",
      "``",
      "database",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"database\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT course_description FROM COURSES WHERE course_name  =  \"database\"",
    "query_toks": [
      "SELECT",
      "course_description",
      "FROM",
      "COURSES",
      "WHERE",
      "course_name",
      "=",
      "``",
      "database",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "course_description",
      "from",
      "courses",
      "where",
      "course_name",
      "=",
      "value"
    ],
    "question": "Return the description for the courses named \"database\".",
    "question_toks": [
      "Return",
      "the",
      "description",
      "for",
      "the",
      "courses",
      "named",
      "``",
      "database",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"database\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name\t =  \"Cathrine\"",
    "query_toks": [
      "SELECT",
      "address_line_1",
      "FROM",
      "Course_Authors_and_Tutors",
      "WHERE",
      "personal_name",
      "=",
      "``",
      "Cathrine",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "address_line_1",
      "from",
      "course_authors_and_tutors",
      "where",
      "personal_name",
      "=",
      "value"
    ],
    "question": "What are the addresses of the course authors or tutors with personal name \"Cathrine\"",
    "question_toks": [
      "What",
      "are",
      "the",
      "addresses",
      "of",
      "the",
      "course",
      "authors",
      "or",
      "tutors",
      "with",
      "personal",
      "name",
      "``",
      "Cathrine",
      "''"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Cathrine\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name\t =  \"Cathrine\"",
    "query_toks": [
      "SELECT",
      "address_line_1",
      "FROM",
      "Course_Authors_and_Tutors",
      "WHERE",
      "personal_name",
      "=",
      "``",
      "Cathrine",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "address_line_1",
      "from",
      "course_authors_and_tutors",
      "where",
      "personal_name",
      "=",
      "value"
    ],
    "question": "Return the addresses of the course authors or tutors whose personal name is \"Cathrine\".",
    "question_toks": [
      "Return",
      "the",
      "addresses",
      "of",
      "the",
      "course",
      "authors",
      "or",
      "tutors",
      "whose",
      "personal",
      "name",
      "is",
      "``",
      "Cathrine",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Cathrine\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors",
    "query_toks": [
      "SELECT",
      "address_line_1",
      "FROM",
      "Course_Authors_and_Tutors"
    ],
    "query_toks_no_value": [
      "select",
      "address_line_1",
      "from",
      "course_authors_and_tutors"
    ],
    "question": "List the addresses of all the course authors or tutors.",
    "question_toks": [
      "List",
      "the",
      "addresses",
      "of",
      "all",
      "the",
      "course",
      "authors",
      "or",
      "tutors",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors",
    "query_toks": [
      "SELECT",
      "address_line_1",
      "FROM",
      "Course_Authors_and_Tutors"
    ],
    "query_toks_no_value": [
      "select",
      "address_line_1",
      "from",
      "course_authors_and_tutors"
    ],
    "question": "What is the address of each course author or tutor?",
    "question_toks": [
      "What",
      "is",
      "the",
      "address",
      "of",
      "each",
      "course",
      "author",
      "or",
      "tutor",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT login_name ,  family_name FROM Course_Authors_and_Tutors",
    "query_toks": [
      "SELECT",
      "login_name",
      ",",
      "family_name",
      "FROM",
      "Course_Authors_and_Tutors"
    ],
    "query_toks_no_value": [
      "select",
      "login_name",
      ",",
      "family_name",
      "from",
      "course_authors_and_tutors"
    ],
    "question": "List all the login names and family names of course author and tutors.",
    "question_toks": [
      "List",
      "all",
      "the",
      "login",
      "names",
      "and",
      "family",
      "names",
      "of",
      "course",
      "author",
      "and",
      "tutors",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT login_name ,  family_name FROM Course_Authors_and_Tutors",
    "query_toks": [
      "SELECT",
      "login_name",
      ",",
      "family_name",
      "FROM",
      "Course_Authors_and_Tutors"
    ],
    "query_toks_no_value": [
      "select",
      "login_name",
      ",",
      "family_name",
      "from",
      "course_authors_and_tutors"
    ],
    "question": "What are the login names and family names of course author and tutors?",
    "question_toks": [
      "What",
      "are",
      "the",
      "login",
      "names",
      "and",
      "family",
      "names",
      "of",
      "course",
      "author",
      "and",
      "tutors",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT date_of_enrolment ,  date_of_completion FROM Student_Course_Enrolment",
    "query_toks": [
      "SELECT",
      "date_of_enrolment",
      ",",
      "date_of_completion",
      "FROM",
      "Student_Course_Enrolment"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_enrolment",
      ",",
      "date_of_completion",
      "from",
      "student_course_enrolment"
    ],
    "question": "List all the dates of enrollment and completion of students.",
    "question_toks": [
      "List",
      "all",
      "the",
      "dates",
      "of",
      "enrollment",
      "and",
      "completion",
      "of",
      "students",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT date_of_enrolment ,  date_of_completion FROM Student_Course_Enrolment",
    "query_toks": [
      "SELECT",
      "date_of_enrolment",
      ",",
      "date_of_completion",
      "FROM",
      "Student_Course_Enrolment"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_enrolment",
      ",",
      "date_of_completion",
      "from",
      "student_course_enrolment"
    ],
    "question": "What are all the dates of enrollment and completion in record?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "dates",
      "of",
      "enrollment",
      "and",
      "completion",
      "in",
      "record",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "student_id",
      ")",
      "FROM",
      "Student_Course_Enrolment"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "student_id",
      ")",
      "from",
      "student_course_enrolment"
    ],
    "question": "How many distinct students are enrolled in courses?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "students",
      "are",
      "enrolled",
      "in",
      "courses",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                26,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "student_id",
      ")",
      "FROM",
      "Student_Course_Enrolment"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "student_id",
      ")",
      "from",
      "student_course_enrolment"
    ],
    "question": "Find the number of distinct students enrolled in courses.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "distinct",
      "students",
      "enrolled",
      "in",
      "courses",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                26,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT count(course_id) FROM Student_Course_Enrolment",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "course_id",
      ")",
      "FROM",
      "Student_Course_Enrolment"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "course_id",
      ")",
      "from",
      "student_course_enrolment"
    ],
    "question": "How many distinct courses are enrolled in by students?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "courses",
      "are",
      "enrolled",
      "in",
      "by",
      "students",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT count(course_id) FROM Student_Course_Enrolment",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "course_id",
      ")",
      "FROM",
      "Student_Course_Enrolment"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "course_id",
      ")",
      "from",
      "student_course_enrolment"
    ],
    "question": "Find the number of distinct courses that have enrolled students.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "distinct",
      "courses",
      "that",
      "have",
      "enrolled",
      "students",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result  =  \"Pass\"",
    "query_toks": [
      "SELECT",
      "date_test_taken",
      "FROM",
      "Student_Tests_Taken",
      "WHERE",
      "test_result",
      "=",
      "``",
      "Pass",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "date_test_taken",
      "from",
      "student_tests_taken",
      "where",
      "test_result",
      "=",
      "value"
    ],
    "question": "Find the dates of the tests taken with result \"Pass\".",
    "question_toks": [
      "Find",
      "the",
      "dates",
      "of",
      "the",
      "tests",
      "taken",
      "with",
      "result",
      "``",
      "Pass",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              32,
              false
            ],
            null
          ],
          "\"Pass\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result  =  \"Pass\"",
    "query_toks": [
      "SELECT",
      "date_test_taken",
      "FROM",
      "Student_Tests_Taken",
      "WHERE",
      "test_result",
      "=",
      "``",
      "Pass",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "date_test_taken",
      "from",
      "student_tests_taken",
      "where",
      "test_result",
      "=",
      "value"
    ],
    "question": "Which tests have \"Pass\" results? Return the dates when the tests were taken.",
    "question_toks": [
      "Which",
      "tests",
      "have",
      "``",
      "Pass",
      "''",
      "results",
      "?",
      "Return",
      "the",
      "dates",
      "when",
      "the",
      "tests",
      "were",
      "taken",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              32,
              false
            ],
            null
          ],
          "\"Pass\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT count(*) FROM Student_Tests_Taken WHERE test_result  =  \"Fail\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Student_Tests_Taken",
      "WHERE",
      "test_result",
      "=",
      "``",
      "Fail",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student_tests_taken",
      "where",
      "test_result",
      "=",
      "value"
    ],
    "question": "How many tests have result \"Fail\"?",
    "question_toks": [
      "How",
      "many",
      "tests",
      "have",
      "result",
      "``",
      "Fail",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              32,
              false
            ],
            null
          ],
          "\"Fail\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT count(*) FROM Student_Tests_Taken WHERE test_result  =  \"Fail\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Student_Tests_Taken",
      "WHERE",
      "test_result",
      "=",
      "``",
      "Fail",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student_tests_taken",
      "where",
      "test_result",
      "=",
      "value"
    ],
    "question": "Count the number of tests with \"Fail\" result.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "tests",
      "with",
      "``",
      "Fail",
      "''",
      "result",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              32,
              false
            ],
            null
          ],
          "\"Fail\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT login_name FROM Students WHERE family_name  =  \"Ward\"",
    "query_toks": [
      "SELECT",
      "login_name",
      "FROM",
      "Students",
      "WHERE",
      "family_name",
      "=",
      "``",
      "Ward",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "login_name",
      "from",
      "students",
      "where",
      "family_name",
      "=",
      "value"
    ],
    "question": "What are the login names of the students with family name \"Ward\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "login",
      "names",
      "of",
      "the",
      "students",
      "with",
      "family",
      "name",
      "``",
      "Ward",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Ward\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT login_name FROM Students WHERE family_name  =  \"Ward\"",
    "query_toks": [
      "SELECT",
      "login_name",
      "FROM",
      "Students",
      "WHERE",
      "family_name",
      "=",
      "``",
      "Ward",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "login_name",
      "from",
      "students",
      "where",
      "family_name",
      "=",
      "value"
    ],
    "question": "Return the login names of the students whose family name is \"Ward\".",
    "question_toks": [
      "Return",
      "the",
      "login",
      "names",
      "of",
      "the",
      "students",
      "whose",
      "family",
      "name",
      "is",
      "``",
      "Ward",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Ward\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT date_of_latest_logon FROM Students WHERE family_name  =  \"Jaskolski\" OR family_name  =  \"Langosh\"",
    "query_toks": [
      "SELECT",
      "date_of_latest_logon",
      "FROM",
      "Students",
      "WHERE",
      "family_name",
      "=",
      "``",
      "Jaskolski",
      "''",
      "OR",
      "family_name",
      "=",
      "``",
      "Langosh",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_latest_logon",
      "from",
      "students",
      "where",
      "family_name",
      "=",
      "value",
      "or",
      "family_name",
      "=",
      "value"
    ],
    "question": "What are the dates of the latest logon of the students with family name \"Jaskolski\" or \"Langosh\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "dates",
      "of",
      "the",
      "latest",
      "logon",
      "of",
      "the",
      "students",
      "with",
      "family",
      "name",
      "``",
      "Jaskolski",
      "''",
      "or",
      "``",
      "Langosh",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Jaskolski\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Langosh\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT date_of_latest_logon FROM Students WHERE family_name  =  \"Jaskolski\" OR family_name  =  \"Langosh\"",
    "query_toks": [
      "SELECT",
      "date_of_latest_logon",
      "FROM",
      "Students",
      "WHERE",
      "family_name",
      "=",
      "``",
      "Jaskolski",
      "''",
      "OR",
      "family_name",
      "=",
      "``",
      "Langosh",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_latest_logon",
      "from",
      "students",
      "where",
      "family_name",
      "=",
      "value",
      "or",
      "family_name",
      "=",
      "value"
    ],
    "question": "Find the latest logon date of the students whose family name is \"Jaskolski\" or \"Langosh\".",
    "question_toks": [
      "Find",
      "the",
      "latest",
      "logon",
      "date",
      "of",
      "the",
      "students",
      "whose",
      "family",
      "name",
      "is",
      "``",
      "Jaskolski",
      "''",
      "or",
      "``",
      "Langosh",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Jaskolski\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Langosh\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT COUNT(*) FROM Students WHERE personal_name LIKE \"%son%\"",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "Students",
      "WHERE",
      "personal_name",
      "LIKE",
      "``",
      "%",
      "son",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "students",
      "where",
      "personal_name",
      "like",
      "value"
    ],
    "question": "How many students have personal names that contain the word \"son\"?",
    "question_toks": [
      "How",
      "many",
      "students",
      "have",
      "personal",
      "names",
      "that",
      "contain",
      "the",
      "word",
      "``",
      "son",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"%son%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT COUNT(*) FROM Students WHERE personal_name LIKE \"%son%\"",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "Students",
      "WHERE",
      "personal_name",
      "LIKE",
      "``",
      "%",
      "son",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "students",
      "where",
      "personal_name",
      "like",
      "value"
    ],
    "question": "Find the number of students who have the word \"son\" in their personal names.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "students",
      "who",
      "have",
      "the",
      "word",
      "``",
      "son",
      "''",
      "in",
      "their",
      "personal",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"%son%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT subject_name FROM SUBJECTS",
    "query_toks": [
      "SELECT",
      "subject_name",
      "FROM",
      "SUBJECTS"
    ],
    "query_toks_no_value": [
      "select",
      "subject_name",
      "from",
      "subjects"
    ],
    "question": "List all the subject names.",
    "question_toks": [
      "List",
      "all",
      "the",
      "subject",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT subject_name FROM SUBJECTS",
    "query_toks": [
      "SELECT",
      "subject_name",
      "FROM",
      "SUBJECTS"
    ],
    "query_toks_no_value": [
      "select",
      "subject_name",
      "from",
      "subjects"
    ],
    "question": "What are the names of all the subjects.",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "the",
      "subjects",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Students",
      "WHERE",
      "student_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Enrolment",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "students",
      "where",
      "student_id",
      "not",
      "in",
      "(",
      "select",
      "student_id",
      "from",
      "student_course_enrolment",
      ")"
    ],
    "question": "How many students did not have any course enrollment?",
    "question_toks": [
      "How",
      "many",
      "students",
      "did",
      "not",
      "have",
      "any",
      "course",
      "enrollment",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      26,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Students",
      "WHERE",
      "student_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Enrolment",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "students",
      "where",
      "student_id",
      "not",
      "in",
      "(",
      "select",
      "student_id",
      "from",
      "student_course_enrolment",
      ")"
    ],
    "question": "Count the number of students who did not enroll in any course.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "students",
      "who",
      "did",
      "not",
      "enroll",
      "in",
      "any",
      "course",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      26,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_policies",
    "query": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Claims WHERE Amount_Claimed  >  ( SELECT avg(Amount_Claimed) FROM Claims )",
    "query_toks": [
      "SELECT",
      "Date_Claim_Made",
      ",",
      "Date_Claim_Settled",
      "FROM",
      "Claims",
      "WHERE",
      "Amount_Claimed",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "Amount_Claimed",
      ")",
      "FROM",
      "Claims",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "date_claim_made",
      ",",
      "date_claim_settled",
      "from",
      "claims",
      "where",
      "amount_claimed",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "amount_claimed",
      ")",
      "from",
      "claims",
      ")"
    ],
    "question": "Among all the claims, which claims have a claimed amount larger than the average? List the date the claim was made and the date it was settled.",
    "question_toks": [
      "Among",
      "all",
      "the",
      "claims",
      ",",
      "which",
      "claims",
      "have",
      "a",
      "claimed",
      "amount",
      "larger",
      "than",
      "the",
      "average",
      "?",
      "List",
      "the",
      "date",
      "the",
      "claim",
      "was",
      "made",
      "and",
      "the",
      "date",
      "it",
      "was",
      "settled",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      12,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_policies",
    "query": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Claims WHERE Amount_Claimed  >  ( SELECT avg(Amount_Claimed) FROM Claims )",
    "query_toks": [
      "SELECT",
      "Date_Claim_Made",
      ",",
      "Date_Claim_Settled",
      "FROM",
      "Claims",
      "WHERE",
      "Amount_Claimed",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "Amount_Claimed",
      ")",
      "FROM",
      "Claims",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "date_claim_made",
      ",",
      "date_claim_settled",
      "from",
      "claims",
      "where",
      "amount_claimed",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "amount_claimed",
      ")",
      "from",
      "claims",
      ")"
    ],
    "question": "Give me the claim date, settlement date for all the claims whose claimed amount is larger than the average.",
    "question_toks": [
      "Give",
      "me",
      "the",
      "claim",
      "date",
      ",",
      "settlement",
      "date",
      "for",
      "all",
      "the",
      "claims",
      "whose",
      "claimed",
      "amount",
      "is",
      "larger",
      "than",
      "the",
      "average",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      12,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_policies",
    "query": "SELECT Date_Claim_Made FROM Claims WHERE Amount_Settled  <=  ( SELECT avg(Amount_Settled) FROM Claims )",
    "query_toks": [
      "SELECT",
      "Date_Claim_Made",
      "FROM",
      "Claims",
      "WHERE",
      "Amount_Settled",
      "<",
      "=",
      "(",
      "SELECT",
      "avg",
      "(",
      "Amount_Settled",
      ")",
      "FROM",
      "Claims",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "date_claim_made",
      "from",
      "claims",
      "where",
      "amount_settled",
      "<",
      "=",
      "(",
      "select",
      "avg",
      "(",
      "amount_settled",
      ")",
      "from",
      "claims",
      ")"
    ],
    "question": "Among all the claims, which settlements have a claimed amount that is no more than the average? List the claim start date.",
    "question_toks": [
      "Among",
      "all",
      "the",
      "claims",
      ",",
      "which",
      "settlements",
      "have",
      "a",
      "claimed",
      "amount",
      "that",
      "is",
      "no",
      "more",
      "than",
      "the",
      "average",
      "?",
      "List",
      "the",
      "claim",
      "start",
      "date",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          6,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      13,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_policies",
    "query": "SELECT Date_Claim_Made FROM Claims WHERE Amount_Settled  <=  ( SELECT avg(Amount_Settled) FROM Claims )",
    "query_toks": [
      "SELECT",
      "Date_Claim_Made",
      "FROM",
      "Claims",
      "WHERE",
      "Amount_Settled",
      "<",
      "=",
      "(",
      "SELECT",
      "avg",
      "(",
      "Amount_Settled",
      ")",
      "FROM",
      "Claims",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "date_claim_made",
      "from",
      "claims",
      "where",
      "amount_settled",
      "<",
      "=",
      "(",
      "select",
      "avg",
      "(",
      "amount_settled",
      ")",
      "from",
      "claims",
      ")"
    ],
    "question": "Return the claim start date for the claims whose claimed amount is no more than the average",
    "question_toks": [
      "Return",
      "the",
      "claim",
      "start",
      "date",
      "for",
      "the",
      "claims",
      "whose",
      "claimed",
      "amount",
      "is",
      "no",
      "more",
      "than",
      "the",
      "average"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          6,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      13,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_policies",
    "query": "SELECT sum(Amount_Settled) FROM Settlements",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "Amount_Settled",
      ")",
      "FROM",
      "Settlements"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "amount_settled",
      ")",
      "from",
      "settlements"
    ],
    "question": "What is the total amount of settlement made for all the settlements?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "amount",
      "of",
      "settlement",
      "made",
      "for",
      "all",
      "the",
      "settlements",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_policies",
    "query": "SELECT sum(Amount_Settled) FROM Settlements",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "Amount_Settled",
      ")",
      "FROM",
      "Settlements"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "amount_settled",
      ")",
      "from",
      "settlements"
    ],
    "question": "Compute the total amount of settlement across all the settlements.",
    "question_toks": [
      "Compute",
      "the",
      "total",
      "amount",
      "of",
      "settlement",
      "across",
      "all",
      "the",
      "settlements",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_policies",
    "query": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Settlements",
    "query_toks": [
      "SELECT",
      "Date_Claim_Made",
      ",",
      "Date_Claim_Settled",
      "FROM",
      "Settlements"
    ],
    "query_toks_no_value": [
      "select",
      "date_claim_made",
      ",",
      "date_claim_settled",
      "from",
      "settlements"
    ],
    "question": "What are the claim dates and settlement dates of all the settlements?",
    "question_toks": [
      "What",
      "are",
      "the",
      "claim",
      "dates",
      "and",
      "settlement",
      "dates",
      "of",
      "all",
      "the",
      "settlements",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_policies",
    "query": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Settlements",
    "query_toks": [
      "SELECT",
      "Date_Claim_Made",
      ",",
      "Date_Claim_Settled",
      "FROM",
      "Settlements"
    ],
    "query_toks_no_value": [
      "select",
      "date_claim_made",
      ",",
      "date_claim_settled",
      "from",
      "settlements"
    ],
    "question": "Tell me the the claim date and settlement date for each settlement case.",
    "question_toks": [
      "Tell",
      "me",
      "the",
      "the",
      "claim",
      "date",
      "and",
      "settlement",
      "date",
      "for",
      "each",
      "settlement",
      "case",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_policies",
    "query": "SELECT sum(Amount_Payment) FROM Payments",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "Amount_Payment",
      ")",
      "FROM",
      "Payments"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "amount_payment",
      ")",
      "from",
      "payments"
    ],
    "question": "What is the total amount of payment?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "amount",
      "of",
      "payment",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_policies",
    "query": "SELECT sum(Amount_Payment) FROM Payments",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "Amount_Payment",
      ")",
      "FROM",
      "Payments"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "amount_payment",
      ")",
      "from",
      "payments"
    ],
    "question": "Compute the total amount of payment processed.",
    "question_toks": [
      "Compute",
      "the",
      "total",
      "amount",
      "of",
      "payment",
      "processed",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_policies",
    "query": "SELECT count(*) FROM Settlements",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Settlements"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "settlements"
    ],
    "question": "How many settlements are there in total?",
    "question_toks": [
      "How",
      "many",
      "settlements",
      "are",
      "there",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_policies",
    "query": "SELECT count(*) FROM Settlements",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Settlements"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "settlements"
    ],
    "question": "Count the total number of settlements made.",
    "question_toks": [
      "Count",
      "the",
      "total",
      "number",
      "of",
      "settlements",
      "made",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_policies",
    "query": "SELECT Payment_ID ,  Date_Payment_Made ,  Amount_Payment FROM Payments WHERE Payment_Method_Code  =  'Visa'",
    "query_toks": [
      "SELECT",
      "Payment_ID",
      ",",
      "Date_Payment_Made",
      ",",
      "Amount_Payment",
      "FROM",
      "Payments",
      "WHERE",
      "Payment_Method_Code",
      "=",
      "'Visa",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "payment_id",
      ",",
      "date_payment_made",
      ",",
      "amount_payment",
      "from",
      "payments",
      "where",
      "payment_method_code",
      "=",
      "value"
    ],
    "question": "Which Payments were processed with Visa? List the payment Id, the date and the amount.",
    "question_toks": [
      "Which",
      "Payments",
      "were",
      "processed",
      "with",
      "Visa",
      "?",
      "List",
      "the",
      "payment",
      "Id",
      ",",
      "the",
      "date",
      "and",
      "the",
      "amount",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Visa\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_policies",
    "query": "SELECT Payment_ID ,  Date_Payment_Made ,  Amount_Payment FROM Payments WHERE Payment_Method_Code  =  'Visa'",
    "query_toks": [
      "SELECT",
      "Payment_ID",
      ",",
      "Date_Payment_Made",
      ",",
      "Amount_Payment",
      "FROM",
      "Payments",
      "WHERE",
      "Payment_Method_Code",
      "=",
      "'Visa",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "payment_id",
      ",",
      "date_payment_made",
      ",",
      "amount_payment",
      "from",
      "payments",
      "where",
      "payment_method_code",
      "=",
      "value"
    ],
    "question": "Give me the payment Id, the date and the amount for all the payments processed with Visa.",
    "question_toks": [
      "Give",
      "me",
      "the",
      "payment",
      "Id",
      ",",
      "the",
      "date",
      "and",
      "the",
      "amount",
      "for",
      "all",
      "the",
      "payments",
      "processed",
      "with",
      "Visa",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Visa\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_policies",
    "query": "SELECT sum(Amount_Claimed) FROM Claims",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "Amount_Claimed",
      ")",
      "FROM",
      "Claims"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "amount_claimed",
      ")",
      "from",
      "claims"
    ],
    "question": "Find the total claimed amount of all the claims.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "claimed",
      "amount",
      "of",
      "all",
      "the",
      "claims",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_policies",
    "query": "SELECT sum(Amount_Claimed) FROM Claims",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "Amount_Claimed",
      ")",
      "FROM",
      "Claims"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "amount_claimed",
      ")",
      "from",
      "claims"
    ],
    "question": "What is total amount claimed summed across all the claims?",
    "question_toks": [
      "What",
      "is",
      "total",
      "amount",
      "claimed",
      "summed",
      "across",
      "all",
      "the",
      "claims",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT count(patient) FROM stay WHERE room  =  112",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "patient",
      ")",
      "FROM",
      "stay",
      "WHERE",
      "room",
      "=",
      "112"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "patient",
      ")",
      "from",
      "stay",
      "where",
      "room",
      "=",
      "value"
    ],
    "question": "How many patients stay in room 112?",
    "question_toks": [
      "How",
      "many",
      "patients",
      "stay",
      "in",
      "room",
      "112",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            13
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                59,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          112.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT count(patient) FROM stay WHERE room  =  112",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "patient",
      ")",
      "FROM",
      "stay",
      "WHERE",
      "room",
      "=",
      "112"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "patient",
      ")",
      "from",
      "stay",
      "where",
      "room",
      "=",
      "value"
    ],
    "question": "Count the number of patients who stayed in room 112.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "patients",
      "who",
      "stayed",
      "in",
      "room",
      "112",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            13
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                59,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          112.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT count(DISTINCT roomtype) FROM room",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "roomtype",
      ")",
      "FROM",
      "room"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "roomtype",
      ")",
      "from",
      "room"
    ],
    "question": "How many different types of rooms are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "types",
      "of",
      "rooms",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            11
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                49,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT count(DISTINCT roomtype) FROM room",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "roomtype",
      ")",
      "FROM",
      "room"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "roomtype",
      ")",
      "from",
      "room"
    ],
    "question": "Find the number of distinct room types available.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "distinct",
      "room",
      "types",
      "available",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            11
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                49,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "physician",
      "WHERE",
      "POSITION",
      "LIKE",
      "'",
      "%",
      "senior",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "physician",
      "where",
      "position",
      "like",
      "value"
    ],
    "question": "Find the name of physicians whose position title contains the word 'senior'.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "physicians",
      "whose",
      "position",
      "title",
      "contains",
      "the",
      "word",
      "'senior",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"%senior%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "physician",
      "WHERE",
      "POSITION",
      "LIKE",
      "'",
      "%",
      "senior",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "physician",
      "where",
      "position",
      "like",
      "value"
    ],
    "question": "What are the names of the physicians who have 'senior' in their titles.",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "physicians",
      "who",
      "have",
      "'senior",
      "'",
      "in",
      "their",
      "titles",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"%senior%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT physician ,  department FROM affiliated_with WHERE primaryaffiliation  =  1",
    "query_toks": [
      "SELECT",
      "physician",
      ",",
      "department",
      "FROM",
      "affiliated_with",
      "WHERE",
      "primaryaffiliation",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "physician",
      ",",
      "department",
      "from",
      "affiliated_with",
      "where",
      "primaryaffiliation",
      "=",
      "value"
    ],
    "question": "List the physicians' employee ids together with their primary affiliation departments' ids.",
    "question_toks": [
      "List",
      "the",
      "physicians",
      "'",
      "employee",
      "ids",
      "together",
      "with",
      "their",
      "primary",
      "affiliation",
      "departments",
      "'",
      "ids",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT physician ,  department FROM affiliated_with WHERE primaryaffiliation  =  1",
    "query_toks": [
      "SELECT",
      "physician",
      ",",
      "department",
      "FROM",
      "affiliated_with",
      "WHERE",
      "primaryaffiliation",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "physician",
      ",",
      "department",
      "from",
      "affiliated_with",
      "where",
      "primaryaffiliation",
      "=",
      "value"
    ],
    "question": "What are each physician's employee id and department id primarily affiliated.",
    "question_toks": [
      "What",
      "are",
      "each",
      "physician",
      "'s",
      "employee",
      "id",
      "and",
      "department",
      "id",
      "primarily",
      "affiliated",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT nurse FROM on_call WHERE blockfloor  =  1 AND blockcode  =  1",
    "query_toks": [
      "SELECT",
      "nurse",
      "FROM",
      "on_call",
      "WHERE",
      "blockfloor",
      "=",
      "1",
      "AND",
      "blockcode",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "nurse",
      "from",
      "on_call",
      "where",
      "blockfloor",
      "=",
      "value",
      "and",
      "blockcode",
      "=",
      "value"
    ],
    "question": "What nurses are on call with block floor 1 and block code 1? Tell me their names.",
    "question_toks": [
      "What",
      "nurses",
      "are",
      "on",
      "call",
      "with",
      "block",
      "floor",
      "1",
      "and",
      "block",
      "code",
      "1",
      "?",
      "Tell",
      "me",
      "their",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            12
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                53,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              54,
              false
            ],
            null
          ],
          1.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              55,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT nurse FROM on_call WHERE blockfloor  =  1 AND blockcode  =  1",
    "query_toks": [
      "SELECT",
      "nurse",
      "FROM",
      "on_call",
      "WHERE",
      "blockfloor",
      "=",
      "1",
      "AND",
      "blockcode",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "nurse",
      "from",
      "on_call",
      "where",
      "blockfloor",
      "=",
      "value",
      "and",
      "blockcode",
      "=",
      "value"
    ],
    "question": "Find the ids of the nurses who are on call in block floor 1 and block code 1.",
    "question_toks": [
      "Find",
      "the",
      "ids",
      "of",
      "the",
      "nurses",
      "who",
      "are",
      "on",
      "call",
      "in",
      "block",
      "floor",
      "1",
      "and",
      "block",
      "code",
      "1",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            12
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                53,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              54,
              false
            ],
            null
          ],
          1.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              55,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures",
    "query_toks": [
      "SELECT",
      "MAX",
      "(",
      "cost",
      ")",
      ",",
      "MIN",
      "(",
      "cost",
      ")",
      ",",
      "AVG",
      "(",
      "cost",
      ")",
      "FROM",
      "procedures"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "cost",
      ")",
      ",",
      "min",
      "(",
      "cost",
      ")",
      ",",
      "avg",
      "(",
      "cost",
      ")",
      "from",
      "procedures"
    ],
    "question": "What are the highest cost, lowest cost and average cost of procedures?",
    "question_toks": [
      "What",
      "are",
      "the",
      "highest",
      "cost",
      ",",
      "lowest",
      "cost",
      "and",
      "average",
      "cost",
      "of",
      "procedures",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures",
    "query_toks": [
      "SELECT",
      "MAX",
      "(",
      "cost",
      ")",
      ",",
      "MIN",
      "(",
      "cost",
      ")",
      ",",
      "AVG",
      "(",
      "cost",
      ")",
      "FROM",
      "procedures"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "cost",
      ")",
      ",",
      "min",
      "(",
      "cost",
      ")",
      ",",
      "avg",
      "(",
      "cost",
      ")",
      "from",
      "procedures"
    ],
    "question": "Tell me the highest, lowest, and average cost of procedures.",
    "question_toks": [
      "Tell",
      "me",
      "the",
      "highest",
      ",",
      "lowest",
      ",",
      "and",
      "average",
      "cost",
      "of",
      "procedures",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "patient",
      "WHERE",
      "SSN",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "T1.patient",
      "FROM",
      "Prescribes",
      "AS",
      "T1",
      "JOIN",
      "Medication",
      "AS",
      "T2",
      "ON",
      "T1.Medication",
      "=",
      "T2.Code",
      "WHERE",
      "T2.name",
      "=",
      "'Procrastin-X",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "patient",
      "where",
      "ssn",
      "not",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "patient",
      "from",
      "prescribes",
      "as",
      "t1",
      "join",
      "medication",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "medication",
      "=",
      "t2",
      ".",
      "code",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      ")"
    ],
    "question": "Find the number of patients who are not using the medication of Procrastin-X.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "patients",
      "who",
      "are",
      "not",
      "using",
      "the",
      "medication",
      "of",
      "Procrastin-X",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  9
                ],
                [
                  "table_unit",
                  8
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      42,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    36,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      41,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    37,
                    false
                  ],
                  null
                ],
                "\"Procrastin-X\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "patient",
      "WHERE",
      "SSN",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "T1.patient",
      "FROM",
      "Prescribes",
      "AS",
      "T1",
      "JOIN",
      "Medication",
      "AS",
      "T2",
      "ON",
      "T1.Medication",
      "=",
      "T2.Code",
      "WHERE",
      "T2.name",
      "=",
      "'Procrastin-X",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "patient",
      "where",
      "ssn",
      "not",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "patient",
      "from",
      "prescribes",
      "as",
      "t1",
      "join",
      "medication",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "medication",
      "=",
      "t2",
      ".",
      "code",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      ")"
    ],
    "question": "How many patients are not using Procrastin-X as medication?",
    "question_toks": [
      "How",
      "many",
      "patients",
      "are",
      "not",
      "using",
      "Procrastin-X",
      "as",
      "medication",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  9
                ],
                [
                  "table_unit",
                  8
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      42,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    36,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      41,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    37,
                    false
                  ],
                  null
                ],
                "\"Procrastin-X\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT count(*) FROM appointment",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "appointment"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "appointment"
    ],
    "question": "How many appointments are there?",
    "question_toks": [
      "How",
      "many",
      "appointments",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT count(*) FROM appointment",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "appointment"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "appointment"
    ],
    "question": "Count how many appointments have been made in total.",
    "question_toks": [
      "Count",
      "how",
      "many",
      "appointments",
      "have",
      "been",
      "made",
      "in",
      "total",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_mission",
    "query": "SELECT count(*) FROM ship",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "ship"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ship"
    ],
    "question": "How many ships are there?",
    "question_toks": [
      "How",
      "many",
      "ships",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_mission",
    "query": "SELECT count(*) FROM ship",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "ship"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ship"
    ],
    "question": "What is the number of ships?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "ships",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_mission",
    "query": "SELECT TYPE ,  Nationality FROM ship",
    "query_toks": [
      "SELECT",
      "TYPE",
      ",",
      "Nationality",
      "FROM",
      "ship"
    ],
    "query_toks_no_value": [
      "select",
      "type",
      ",",
      "nationality",
      "from",
      "ship"
    ],
    "question": "What are the type and nationality of ships?",
    "question_toks": [
      "What",
      "are",
      "the",
      "type",
      "and",
      "nationality",
      "of",
      "ships",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_mission",
    "query": "SELECT TYPE ,  Nationality FROM ship",
    "query_toks": [
      "SELECT",
      "TYPE",
      ",",
      "Nationality",
      "FROM",
      "ship"
    ],
    "query_toks_no_value": [
      "select",
      "type",
      ",",
      "nationality",
      "from",
      "ship"
    ],
    "question": "What are the types and nationalities of every ship?",
    "question_toks": [
      "What",
      "are",
      "the",
      "types",
      "and",
      "nationalities",
      "of",
      "every",
      "ship",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_mission",
    "query": "SELECT Name FROM ship WHERE Nationality != \"United States\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "ship",
      "WHERE",
      "Nationality",
      "!",
      "=",
      "``",
      "United",
      "States",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "ship",
      "where",
      "nationality",
      "!",
      "=",
      "value"
    ],
    "question": "List the name of ships whose nationality is not \"United States\".",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "ships",
      "whose",
      "nationality",
      "is",
      "not",
      "``",
      "United",
      "States",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"United States\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_mission",
    "query": "SELECT Name FROM ship WHERE Nationality != \"United States\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "ship",
      "WHERE",
      "Nationality",
      "!",
      "=",
      "``",
      "United",
      "States",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "ship",
      "where",
      "nationality",
      "!",
      "=",
      "value"
    ],
    "question": "What are the names of the ships that are not from the United States?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "ships",
      "that",
      "are",
      "not",
      "from",
      "the",
      "United",
      "States",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"United States\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_mission",
    "query": "SELECT Name FROM ship WHERE Nationality  =  \"United States\" OR Nationality  =  \"United Kingdom\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "ship",
      "WHERE",
      "Nationality",
      "=",
      "``",
      "United",
      "States",
      "''",
      "OR",
      "Nationality",
      "=",
      "``",
      "United",
      "Kingdom",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "ship",
      "where",
      "nationality",
      "=",
      "value",
      "or",
      "nationality",
      "=",
      "value"
    ],
    "question": "Show the name of ships whose nationality is either United States or United Kingdom.",
    "question_toks": [
      "Show",
      "the",
      "name",
      "of",
      "ships",
      "whose",
      "nationality",
      "is",
      "either",
      "United",
      "States",
      "or",
      "United",
      "Kingdom",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"United States\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"United Kingdom\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_mission",
    "query": "SELECT Name FROM ship WHERE Nationality  =  \"United States\" OR Nationality  =  \"United Kingdom\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "ship",
      "WHERE",
      "Nationality",
      "=",
      "``",
      "United",
      "States",
      "''",
      "OR",
      "Nationality",
      "=",
      "``",
      "United",
      "Kingdom",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "ship",
      "where",
      "nationality",
      "=",
      "value",
      "or",
      "nationality",
      "=",
      "value"
    ],
    "question": "What are the names of the ships  that are from either the US or the UK?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "ships",
      "that",
      "are",
      "from",
      "either",
      "the",
      "US",
      "or",
      "the",
      "UK",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"United States\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"United Kingdom\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_mission",
    "query": "SELECT Name FROM ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM mission)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "ship",
      "WHERE",
      "Ship_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Ship_ID",
      "FROM",
      "mission",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "ship",
      "where",
      "ship_id",
      "not",
      "in",
      "(",
      "select",
      "ship_id",
      "from",
      "mission",
      ")"
    ],
    "question": "List the name of ships that are not involved in any mission",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "ships",
      "that",
      "are",
      "not",
      "involved",
      "in",
      "any",
      "mission"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      2,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_mission",
    "query": "SELECT Name FROM ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM mission)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "ship",
      "WHERE",
      "Ship_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Ship_ID",
      "FROM",
      "mission",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "ship",
      "where",
      "ship_id",
      "not",
      "in",
      "(",
      "select",
      "ship_id",
      "from",
      "mission",
      ")"
    ],
    "question": "What are the names of the ships that are not involved in any missions?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "ships",
      "that",
      "are",
      "not",
      "involved",
      "in",
      "any",
      "missions",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      2,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_1",
    "query": "SELECT count(*) FROM list",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "list"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "list"
    ],
    "question": "Find the number of students in total.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "students",
      "in",
      "total",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_1",
    "query": "SELECT count(*) FROM list",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "list"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "list"
    ],
    "question": "How many students are there?",
    "question_toks": [
      "How",
      "many",
      "students",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_1",
    "query": "SELECT lastname FROM list WHERE classroom  =  111",
    "query_toks": [
      "SELECT",
      "lastname",
      "FROM",
      "list",
      "WHERE",
      "classroom",
      "=",
      "111"
    ],
    "query_toks_no_value": [
      "select",
      "lastname",
      "from",
      "list",
      "where",
      "classroom",
      "=",
      "value"
    ],
    "question": "Find the last names of students studying in room 111.",
    "question_toks": [
      "Find",
      "the",
      "last",
      "names",
      "of",
      "students",
      "studying",
      "in",
      "room",
      "111",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          111.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_1",
    "query": "SELECT lastname FROM list WHERE classroom  =  111",
    "query_toks": [
      "SELECT",
      "lastname",
      "FROM",
      "list",
      "WHERE",
      "classroom",
      "=",
      "111"
    ],
    "query_toks_no_value": [
      "select",
      "lastname",
      "from",
      "list",
      "where",
      "classroom",
      "=",
      "value"
    ],
    "question": "What are the last names of students in room 111?",
    "question_toks": [
      "What",
      "are",
      "the",
      "last",
      "names",
      "of",
      "students",
      "in",
      "room",
      "111",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          111.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_1",
    "query": "SELECT firstname FROM list WHERE classroom  =  108",
    "query_toks": [
      "SELECT",
      "firstname",
      "FROM",
      "list",
      "WHERE",
      "classroom",
      "=",
      "108"
    ],
    "query_toks_no_value": [
      "select",
      "firstname",
      "from",
      "list",
      "where",
      "classroom",
      "=",
      "value"
    ],
    "question": "Find the first names of students studying in room 108.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "names",
      "of",
      "students",
      "studying",
      "in",
      "room",
      "108",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          108.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_1",
    "query": "SELECT firstname FROM list WHERE classroom  =  108",
    "query_toks": [
      "SELECT",
      "firstname",
      "FROM",
      "list",
      "WHERE",
      "classroom",
      "=",
      "108"
    ],
    "query_toks_no_value": [
      "select",
      "firstname",
      "from",
      "list",
      "where",
      "classroom",
      "=",
      "value"
    ],
    "question": "What are the first names of students in room 108?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "names",
      "of",
      "students",
      "in",
      "room",
      "108",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          108.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_1",
    "query": "SELECT firstname FROM teachers WHERE classroom  =  110",
    "query_toks": [
      "SELECT",
      "firstname",
      "FROM",
      "teachers",
      "WHERE",
      "classroom",
      "=",
      "110"
    ],
    "query_toks_no_value": [
      "select",
      "firstname",
      "from",
      "teachers",
      "where",
      "classroom",
      "=",
      "value"
    ],
    "question": "Find the first names of all the teachers that teach in classroom 110.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "names",
      "of",
      "all",
      "the",
      "teachers",
      "that",
      "teach",
      "in",
      "classroom",
      "110",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          110.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_1",
    "query": "SELECT firstname FROM teachers WHERE classroom  =  110",
    "query_toks": [
      "SELECT",
      "firstname",
      "FROM",
      "teachers",
      "WHERE",
      "classroom",
      "=",
      "110"
    ],
    "query_toks_no_value": [
      "select",
      "firstname",
      "from",
      "teachers",
      "where",
      "classroom",
      "=",
      "value"
    ],
    "question": "Which teachers teach in classroom 110? Give me their first names.",
    "question_toks": [
      "Which",
      "teachers",
      "teach",
      "in",
      "classroom",
      "110",
      "?",
      "Give",
      "me",
      "their",
      "first",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          110.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_1",
    "query": "SELECT lastname FROM teachers WHERE classroom  =  109",
    "query_toks": [
      "SELECT",
      "lastname",
      "FROM",
      "teachers",
      "WHERE",
      "classroom",
      "=",
      "109"
    ],
    "query_toks_no_value": [
      "select",
      "lastname",
      "from",
      "teachers",
      "where",
      "classroom",
      "=",
      "value"
    ],
    "question": "Find the last names of teachers teaching in classroom 109.",
    "question_toks": [
      "Find",
      "the",
      "last",
      "names",
      "of",
      "teachers",
      "teaching",
      "in",
      "classroom",
      "109",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          109.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_1",
    "query": "SELECT lastname FROM teachers WHERE classroom  =  109",
    "query_toks": [
      "SELECT",
      "lastname",
      "FROM",
      "teachers",
      "WHERE",
      "classroom",
      "=",
      "109"
    ],
    "query_toks_no_value": [
      "select",
      "lastname",
      "from",
      "teachers",
      "where",
      "classroom",
      "=",
      "value"
    ],
    "question": "Which teachers teach in classroom 109? Give me their last names.",
    "question_toks": [
      "Which",
      "teachers",
      "teach",
      "in",
      "classroom",
      "109",
      "?",
      "Give",
      "me",
      "their",
      "last",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          109.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_employee",
    "query": "SELECT count(*) FROM company WHERE Headquarters  =  'USA'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "company",
      "WHERE",
      "Headquarters",
      "=",
      "'USA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "company",
      "where",
      "headquarters",
      "=",
      "value"
    ],
    "question": "How many companies are headquartered in the US?",
    "question_toks": [
      "How",
      "many",
      "companies",
      "are",
      "headquartered",
      "in",
      "the",
      "US",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"USA\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_employee",
    "query": "SELECT Headquarters ,  Industry FROM company",
    "query_toks": [
      "SELECT",
      "Headquarters",
      ",",
      "Industry",
      "FROM",
      "company"
    ],
    "query_toks_no_value": [
      "select",
      "headquarters",
      ",",
      "industry",
      "from",
      "company"
    ],
    "question": "What are the headquarters and industries of all companies?",
    "question_toks": [
      "What",
      "are",
      "the",
      "headquarters",
      "and",
      "industries",
      "of",
      "all",
      "companies",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_employee",
    "query": "SELECT Name FROM company WHERE Industry  =  \"Banking\" OR Industry  =  \"Retailing\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "company",
      "WHERE",
      "Industry",
      "=",
      "``",
      "Banking",
      "''",
      "OR",
      "Industry",
      "=",
      "``",
      "Retailing",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "company",
      "where",
      "industry",
      "=",
      "value",
      "or",
      "industry",
      "=",
      "value"
    ],
    "question": "Show the names of companies in the banking or retailing industry?",
    "question_toks": [
      "Show",
      "the",
      "names",
      "of",
      "companies",
      "in",
      "the",
      "banking",
      "or",
      "retailing",
      "industry",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Banking\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Retailing\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_employee",
    "query": "SELECT max(Market_Value_in_Billion) ,  min(Market_Value_in_Billion) FROM company",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Market_Value_in_Billion",
      ")",
      ",",
      "min",
      "(",
      "Market_Value_in_Billion",
      ")",
      "FROM",
      "company"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "market_value_in_billion",
      ")",
      ",",
      "min",
      "(",
      "market_value_in_billion",
      ")",
      "from",
      "company"
    ],
    "question": "What is the maximum and minimum market value of companies?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      "and",
      "minimum",
      "market",
      "value",
      "of",
      "companies",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_employee",
    "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM employment)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "people",
      "WHERE",
      "People_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "People_ID",
      "FROM",
      "employment",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "people",
      "where",
      "people_id",
      "not",
      "in",
      "(",
      "select",
      "people_id",
      "from",
      "employment",
      ")"
    ],
    "question": "List the names of people that are not employed by any company",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "people",
      "that",
      "are",
      "not",
      "employed",
      "by",
      "any",
      "company"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      15,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT count(*) FROM film",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "film"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "film"
    ],
    "question": "How many film are there?",
    "question_toks": [
      "How",
      "many",
      "film",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT count(*) FROM film",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "film"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "film"
    ],
    "question": "Count the number of films.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "films",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT avg(Gross_in_dollar) FROM film",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Gross_in_dollar",
      ")",
      "FROM",
      "film"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "gross_in_dollar",
      ")",
      "from",
      "film"
    ],
    "question": "What is the average ticket sales gross in dollars of films?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "ticket",
      "sales",
      "gross",
      "in",
      "dollars",
      "of",
      "films",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT avg(Gross_in_dollar) FROM film",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Gross_in_dollar",
      ")",
      "FROM",
      "film"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "gross_in_dollar",
      ")",
      "from",
      "film"
    ],
    "question": "Return the average gross sales in dollars across all films.",
    "question_toks": [
      "Return",
      "the",
      "average",
      "gross",
      "sales",
      "in",
      "dollars",
      "across",
      "all",
      "films",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT Low_Estimate ,  High_Estimate FROM film_market_estimation",
    "query_toks": [
      "SELECT",
      "Low_Estimate",
      ",",
      "High_Estimate",
      "FROM",
      "film_market_estimation"
    ],
    "query_toks_no_value": [
      "select",
      "low_estimate",
      ",",
      "high_estimate",
      "from",
      "film_market_estimation"
    ],
    "question": "What are the low and high estimates of film markets?",
    "question_toks": [
      "What",
      "are",
      "the",
      "low",
      "and",
      "high",
      "estimates",
      "of",
      "film",
      "markets",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT Low_Estimate ,  High_Estimate FROM film_market_estimation",
    "query_toks": [
      "SELECT",
      "Low_Estimate",
      ",",
      "High_Estimate",
      "FROM",
      "film_market_estimation"
    ],
    "query_toks_no_value": [
      "select",
      "low_estimate",
      ",",
      "high_estimate",
      "from",
      "film_market_estimation"
    ],
    "question": "Return the low and high estimates for all film markets.",
    "question_toks": [
      "Return",
      "the",
      "low",
      "and",
      "high",
      "estimates",
      "for",
      "all",
      "film",
      "markets",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT TYPE FROM film_market_estimation WHERE YEAR  =  1995",
    "query_toks": [
      "SELECT",
      "TYPE",
      "FROM",
      "film_market_estimation",
      "WHERE",
      "YEAR",
      "=",
      "1995"
    ],
    "query_toks_no_value": [
      "select",
      "type",
      "from",
      "film_market_estimation",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "What are the types of film market estimations in year 1995?",
    "question_toks": [
      "What",
      "are",
      "the",
      "types",
      "of",
      "film",
      "market",
      "estimations",
      "in",
      "year",
      "1995",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          1995.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT TYPE FROM film_market_estimation WHERE YEAR  =  1995",
    "query_toks": [
      "SELECT",
      "TYPE",
      "FROM",
      "film_market_estimation",
      "WHERE",
      "YEAR",
      "=",
      "1995"
    ],
    "query_toks_no_value": [
      "select",
      "type",
      "from",
      "film_market_estimation",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "Return the types of film market estimations in 1995.",
    "question_toks": [
      "Return",
      "the",
      "types",
      "of",
      "film",
      "market",
      "estimations",
      "in",
      "1995",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          1995.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT max(Number_cities) ,  min(Number_cities) FROM market",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Number_cities",
      ")",
      ",",
      "min",
      "(",
      "Number_cities",
      ")",
      "FROM",
      "market"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "number_cities",
      ")",
      ",",
      "min",
      "(",
      "number_cities",
      ")",
      "from",
      "market"
    ],
    "question": "What are the maximum and minimum number of cities in all markets.",
    "question_toks": [
      "What",
      "are",
      "the",
      "maximum",
      "and",
      "minimum",
      "number",
      "of",
      "cities",
      "in",
      "all",
      "markets",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT max(Number_cities) ,  min(Number_cities) FROM market",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Number_cities",
      ")",
      ",",
      "min",
      "(",
      "Number_cities",
      ")",
      "FROM",
      "market"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "number_cities",
      ")",
      ",",
      "min",
      "(",
      "number_cities",
      ")",
      "from",
      "market"
    ],
    "question": "Return the maximum and minimum number of cities across all markets.",
    "question_toks": [
      "Return",
      "the",
      "maximum",
      "and",
      "minimum",
      "number",
      "of",
      "cities",
      "across",
      "all",
      "markets",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT count(*) FROM market WHERE Number_cities  <  300",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "market",
      "WHERE",
      "Number_cities",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "market",
      "where",
      "number_cities",
      "<",
      "value"
    ],
    "question": "How many markets have number of cities smaller than 300?",
    "question_toks": [
      "How",
      "many",
      "markets",
      "have",
      "number",
      "of",
      "cities",
      "smaller",
      "than",
      "300",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          300.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT count(*) FROM market WHERE Number_cities  <  300",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "market",
      "WHERE",
      "Number_cities",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "market",
      "where",
      "number_cities",
      "<",
      "value"
    ],
    "question": "Count the number of markets that have a number of cities lower than 300.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "markets",
      "that",
      "have",
      "a",
      "number",
      "of",
      "cities",
      "lower",
      "than",
      "300",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          300.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT Title FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM film_market_estimation)",
    "query_toks": [
      "SELECT",
      "Title",
      "FROM",
      "film",
      "WHERE",
      "Film_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Film_ID",
      "FROM",
      "film_market_estimation",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "film",
      "where",
      "film_id",
      "not",
      "in",
      "(",
      "select",
      "film_id",
      "from",
      "film_market_estimation",
      ")"
    ],
    "question": "List the title of films that do not have any market estimation.",
    "question_toks": [
      "List",
      "the",
      "title",
      "of",
      "films",
      "that",
      "do",
      "not",
      "have",
      "any",
      "market",
      "estimation",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      12,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT Title FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM film_market_estimation)",
    "query_toks": [
      "SELECT",
      "Title",
      "FROM",
      "film",
      "WHERE",
      "Film_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Film_ID",
      "FROM",
      "film_market_estimation",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "film",
      "where",
      "film_id",
      "not",
      "in",
      "(",
      "select",
      "film_id",
      "from",
      "film_market_estimation",
      ")"
    ],
    "question": "What are the titles of films that do not have a film market estimation?",
    "question_toks": [
      "What",
      "are",
      "the",
      "titles",
      "of",
      "films",
      "that",
      "do",
      "not",
      "have",
      "a",
      "film",
      "market",
      "estimation",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      12,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT title ,  Studio FROM film WHERE Studio LIKE \"%Universal%\"",
    "query_toks": [
      "SELECT",
      "title",
      ",",
      "Studio",
      "FROM",
      "film",
      "WHERE",
      "Studio",
      "LIKE",
      "``",
      "%",
      "Universal",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      ",",
      "studio",
      "from",
      "film",
      "where",
      "studio",
      "like",
      "value"
    ],
    "question": "Find the titles and studios of the films that are produced by some film studios that contained the word \"Universal\".",
    "question_toks": [
      "Find",
      "the",
      "titles",
      "and",
      "studios",
      "of",
      "the",
      "films",
      "that",
      "are",
      "produced",
      "by",
      "some",
      "film",
      "studios",
      "that",
      "contained",
      "the",
      "word",
      "``",
      "Universal",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"%Universal%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT title ,  Studio FROM film WHERE Studio LIKE \"%Universal%\"",
    "query_toks": [
      "SELECT",
      "title",
      ",",
      "Studio",
      "FROM",
      "film",
      "WHERE",
      "Studio",
      "LIKE",
      "``",
      "%",
      "Universal",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      ",",
      "studio",
      "from",
      "film",
      "where",
      "studio",
      "like",
      "value"
    ],
    "question": "What are the titles and studios of films that have been produced by a studio whose name contains \"Universal\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "titles",
      "and",
      "studios",
      "of",
      "films",
      "that",
      "have",
      "been",
      "produced",
      "by",
      "a",
      "studio",
      "whose",
      "name",
      "contains",
      "``",
      "Universal",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"%Universal%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT title ,  director FROM film WHERE film_id NOT IN (SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id  =  T2.Market_ID WHERE country  =  'China')",
    "query_toks": [
      "SELECT",
      "title",
      ",",
      "director",
      "FROM",
      "film",
      "WHERE",
      "film_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "film_id",
      "FROM",
      "film_market_estimation",
      "AS",
      "T1",
      "JOIN",
      "market",
      "AS",
      "T2",
      "ON",
      "T1.market_id",
      "=",
      "T2.Market_ID",
      "WHERE",
      "country",
      "=",
      "'China",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      ",",
      "director",
      "from",
      "film",
      "where",
      "film_id",
      "not",
      "in",
      "(",
      "select",
      "film_id",
      "from",
      "film_market_estimation",
      "as",
      "t1",
      "join",
      "market",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "market_id",
      "=",
      "t2",
      ".",
      "market_id",
      "where",
      "country",
      "=",
      "value",
      ")"
    ],
    "question": "What are the titles and directors of the films were never presented in China?",
    "question_toks": [
      "What",
      "are",
      "the",
      "titles",
      "and",
      "directors",
      "of",
      "the",
      "films",
      "were",
      "never",
      "presented",
      "in",
      "China",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ],
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      14,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      12,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    7,
                    false
                  ],
                  null
                ],
                "\"China\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT title ,  director FROM film WHERE film_id NOT IN (SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id  =  T2.Market_ID WHERE country  =  'China')",
    "query_toks": [
      "SELECT",
      "title",
      ",",
      "director",
      "FROM",
      "film",
      "WHERE",
      "film_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "film_id",
      "FROM",
      "film_market_estimation",
      "AS",
      "T1",
      "JOIN",
      "market",
      "AS",
      "T2",
      "ON",
      "T1.market_id",
      "=",
      "T2.Market_ID",
      "WHERE",
      "country",
      "=",
      "'China",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      ",",
      "director",
      "from",
      "film",
      "where",
      "film_id",
      "not",
      "in",
      "(",
      "select",
      "film_id",
      "from",
      "film_market_estimation",
      "as",
      "t1",
      "join",
      "market",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "market_id",
      "=",
      "t2",
      ".",
      "market_id",
      "where",
      "country",
      "=",
      "value",
      ")"
    ],
    "question": "Return the titles and directors of films that were never in the market of China.",
    "question_toks": [
      "Return",
      "the",
      "titles",
      "and",
      "directors",
      "of",
      "films",
      "that",
      "were",
      "never",
      "in",
      "the",
      "market",
      "of",
      "China",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ],
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      14,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      12,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    7,
                    false
                  ],
                  null
                ],
                "\"China\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT count(*) FROM Ref_calendar",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Ref_calendar"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ref_calendar"
    ],
    "question": "How many calendar items do we have?",
    "question_toks": [
      "How",
      "many",
      "calendar",
      "items",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT count(*) FROM Ref_calendar",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Ref_calendar"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ref_calendar"
    ],
    "question": "Count the number of all the calendar items.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "all",
      "the",
      "calendar",
      "items",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT calendar_date ,  day_Number FROM Ref_calendar",
    "query_toks": [
      "SELECT",
      "calendar_date",
      ",",
      "day_Number",
      "FROM",
      "Ref_calendar"
    ],
    "query_toks_no_value": [
      "select",
      "calendar_date",
      ",",
      "day_number",
      "from",
      "ref_calendar"
    ],
    "question": "Show all calendar dates and day Numbers.",
    "question_toks": [
      "Show",
      "all",
      "calendar",
      "dates",
      "and",
      "day",
      "Numbers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT calendar_date ,  day_Number FROM Ref_calendar",
    "query_toks": [
      "SELECT",
      "calendar_date",
      ",",
      "day_Number",
      "FROM",
      "Ref_calendar"
    ],
    "query_toks_no_value": [
      "select",
      "calendar_date",
      ",",
      "day_number",
      "from",
      "ref_calendar"
    ],
    "question": "What are all the calendar dates and day Numbers?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "calendar",
      "dates",
      "and",
      "day",
      "Numbers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT count(*) FROM Ref_document_types",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Ref_document_types"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ref_document_types"
    ],
    "question": "Show the number of document types.",
    "question_toks": [
      "Show",
      "the",
      "number",
      "of",
      "document",
      "types",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT count(*) FROM Ref_document_types",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Ref_document_types"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ref_document_types"
    ],
    "question": "How many document types are there?",
    "question_toks": [
      "How",
      "many",
      "document",
      "types",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT document_type_code ,  document_type_name FROM Ref_document_types",
    "query_toks": [
      "SELECT",
      "document_type_code",
      ",",
      "document_type_name",
      "FROM",
      "Ref_document_types"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      ",",
      "document_type_name",
      "from",
      "ref_document_types"
    ],
    "question": "List all document type codes and document type names.",
    "question_toks": [
      "List",
      "all",
      "document",
      "type",
      "codes",
      "and",
      "document",
      "type",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT document_type_code ,  document_type_name FROM Ref_document_types",
    "query_toks": [
      "SELECT",
      "document_type_code",
      ",",
      "document_type_name",
      "FROM",
      "Ref_document_types"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      ",",
      "document_type_name",
      "from",
      "ref_document_types"
    ],
    "question": "What are all the document type codes and document type names?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "document",
      "type",
      "codes",
      "and",
      "document",
      "type",
      "names",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT document_type_name ,  document_type_description FROM Ref_document_types WHERE document_type_code  =  \"RV\"",
    "query_toks": [
      "SELECT",
      "document_type_name",
      ",",
      "document_type_description",
      "FROM",
      "Ref_document_types",
      "WHERE",
      "document_type_code",
      "=",
      "``",
      "RV",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_name",
      ",",
      "document_type_description",
      "from",
      "ref_document_types",
      "where",
      "document_type_code",
      "=",
      "value"
    ],
    "question": "What is the name and description for document type code RV?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "and",
      "description",
      "for",
      "document",
      "type",
      "code",
      "RV",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"RV\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT document_type_name ,  document_type_description FROM Ref_document_types WHERE document_type_code  =  \"RV\"",
    "query_toks": [
      "SELECT",
      "document_type_name",
      ",",
      "document_type_description",
      "FROM",
      "Ref_document_types",
      "WHERE",
      "document_type_code",
      "=",
      "``",
      "RV",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_name",
      ",",
      "document_type_description",
      "from",
      "ref_document_types",
      "where",
      "document_type_code",
      "=",
      "value"
    ],
    "question": "Give me the name and description of the document type code RV.",
    "question_toks": [
      "Give",
      "me",
      "the",
      "name",
      "and",
      "description",
      "of",
      "the",
      "document",
      "type",
      "code",
      "RV",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"RV\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name  =  \"Paper\"",
    "query_toks": [
      "SELECT",
      "document_type_code",
      "FROM",
      "Ref_document_types",
      "WHERE",
      "document_type_name",
      "=",
      "``",
      "Paper",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      "from",
      "ref_document_types",
      "where",
      "document_type_name",
      "=",
      "value"
    ],
    "question": "What is the document type code for document type \"Paper\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "document",
      "type",
      "code",
      "for",
      "document",
      "type",
      "``",
      "Paper",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Paper\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name  =  \"Paper\"",
    "query_toks": [
      "SELECT",
      "document_type_code",
      "FROM",
      "Ref_document_types",
      "WHERE",
      "document_type_name",
      "=",
      "``",
      "Paper",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      "from",
      "ref_document_types",
      "where",
      "document_type_name",
      "=",
      "value"
    ],
    "question": "Find the code of the document type \"Paper\".",
    "question_toks": [
      "Find",
      "the",
      "code",
      "of",
      "the",
      "document",
      "type",
      "``",
      "Paper",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Paper\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT count(*) FROM All_documents WHERE document_type_code  =  \"CV\" OR document_type_code  =  \"BK\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "All_documents",
      "WHERE",
      "document_type_code",
      "=",
      "``",
      "CV",
      "''",
      "OR",
      "document_type_code",
      "=",
      "``",
      "BK",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "all_documents",
      "where",
      "document_type_code",
      "=",
      "value",
      "or",
      "document_type_code",
      "=",
      "value"
    ],
    "question": "Show the number of documents with document type code CV or BK.",
    "question_toks": [
      "Show",
      "the",
      "number",
      "of",
      "documents",
      "with",
      "document",
      "type",
      "code",
      "CV",
      "or",
      "BK",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"CV\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"BK\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT count(*) FROM All_documents WHERE document_type_code  =  \"CV\" OR document_type_code  =  \"BK\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "All_documents",
      "WHERE",
      "document_type_code",
      "=",
      "``",
      "CV",
      "''",
      "OR",
      "document_type_code",
      "=",
      "``",
      "BK",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "all_documents",
      "where",
      "document_type_code",
      "=",
      "value",
      "or",
      "document_type_code",
      "=",
      "value"
    ],
    "question": "How many documents have document type code CV or BK?",
    "question_toks": [
      "How",
      "many",
      "documents",
      "have",
      "document",
      "type",
      "code",
      "CV",
      "or",
      "BK",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"CV\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"BK\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT date_stored FROM All_documents WHERE Document_name  =  \"Marry CV\"",
    "query_toks": [
      "SELECT",
      "date_stored",
      "FROM",
      "All_documents",
      "WHERE",
      "Document_name",
      "=",
      "``",
      "Marry",
      "CV",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "date_stored",
      "from",
      "all_documents",
      "where",
      "document_name",
      "=",
      "value"
    ],
    "question": "What is the date when the document \"Marry CV\" was stored?",
    "question_toks": [
      "What",
      "is",
      "the",
      "date",
      "when",
      "the",
      "document",
      "``",
      "Marry",
      "CV",
      "''",
      "was",
      "stored",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"Marry CV\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT date_stored FROM All_documents WHERE Document_name  =  \"Marry CV\"",
    "query_toks": [
      "SELECT",
      "date_stored",
      "FROM",
      "All_documents",
      "WHERE",
      "Document_name",
      "=",
      "``",
      "Marry",
      "CV",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "date_stored",
      "from",
      "all_documents",
      "where",
      "document_name",
      "=",
      "value"
    ],
    "question": "When was the document named \"Marry CV\" stored? Give me the date.",
    "question_toks": [
      "When",
      "was",
      "the",
      "document",
      "named",
      "``",
      "Marry",
      "CV",
      "''",
      "stored",
      "?",
      "Give",
      "me",
      "the",
      "date",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"Marry CV\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT count(*) FROM Ref_locations",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Ref_locations"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ref_locations"
    ],
    "question": "Show the number of locations.",
    "question_toks": [
      "Show",
      "the",
      "number",
      "of",
      "locations",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT count(*) FROM Ref_locations",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Ref_locations"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ref_locations"
    ],
    "question": "How many locations are listed in the database?",
    "question_toks": [
      "How",
      "many",
      "locations",
      "are",
      "listed",
      "in",
      "the",
      "database",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT location_code ,  location_name FROM Ref_locations",
    "query_toks": [
      "SELECT",
      "location_code",
      ",",
      "location_name",
      "FROM",
      "Ref_locations"
    ],
    "query_toks_no_value": [
      "select",
      "location_code",
      ",",
      "location_name",
      "from",
      "ref_locations"
    ],
    "question": "List all location codes and location names.",
    "question_toks": [
      "List",
      "all",
      "location",
      "codes",
      "and",
      "location",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT location_code ,  location_name FROM Ref_locations",
    "query_toks": [
      "SELECT",
      "location_code",
      ",",
      "location_name",
      "FROM",
      "Ref_locations"
    ],
    "query_toks_no_value": [
      "select",
      "location_code",
      ",",
      "location_name",
      "from",
      "ref_locations"
    ],
    "question": "What are all the location codes and location names?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "location",
      "codes",
      "and",
      "location",
      "names",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT location_name ,  location_description FROM Ref_locations WHERE location_code  =  \"x\"",
    "query_toks": [
      "SELECT",
      "location_name",
      ",",
      "location_description",
      "FROM",
      "Ref_locations",
      "WHERE",
      "location_code",
      "=",
      "``",
      "x",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "location_name",
      ",",
      "location_description",
      "from",
      "ref_locations",
      "where",
      "location_code",
      "=",
      "value"
    ],
    "question": "What are the name and description for location code x?",
    "question_toks": [
      "What",
      "are",
      "the",
      "name",
      "and",
      "description",
      "for",
      "location",
      "code",
      "x",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"x\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT location_name ,  location_description FROM Ref_locations WHERE location_code  =  \"x\"",
    "query_toks": [
      "SELECT",
      "location_name",
      ",",
      "location_description",
      "FROM",
      "Ref_locations",
      "WHERE",
      "location_code",
      "=",
      "``",
      "x",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "location_name",
      ",",
      "location_description",
      "from",
      "ref_locations",
      "where",
      "location_code",
      "=",
      "value"
    ],
    "question": "Give me the name and description of the location with code x.",
    "question_toks": [
      "Give",
      "me",
      "the",
      "name",
      "and",
      "description",
      "of",
      "the",
      "location",
      "with",
      "code",
      "x",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"x\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT location_code FROM Ref_locations WHERE location_name  =  \"Canada\"",
    "query_toks": [
      "SELECT",
      "location_code",
      "FROM",
      "Ref_locations",
      "WHERE",
      "location_name",
      "=",
      "``",
      "Canada",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "location_code",
      "from",
      "ref_locations",
      "where",
      "location_name",
      "=",
      "value"
    ],
    "question": "What is the location code for the country \"Canada\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "location",
      "code",
      "for",
      "the",
      "country",
      "``",
      "Canada",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"Canada\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT location_code FROM Ref_locations WHERE location_name  =  \"Canada\"",
    "query_toks": [
      "SELECT",
      "location_code",
      "FROM",
      "Ref_locations",
      "WHERE",
      "location_name",
      "=",
      "``",
      "Canada",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "location_code",
      "from",
      "ref_locations",
      "where",
      "location_name",
      "=",
      "value"
    ],
    "question": "Show the location code of the country \"Canada\".",
    "question_toks": [
      "Show",
      "the",
      "location",
      "code",
      "of",
      "the",
      "country",
      "``",
      "Canada",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"Canada\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT count(*) FROM ROLES",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "ROLES"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "roles"
    ],
    "question": "How many roles are there?",
    "question_toks": [
      "How",
      "many",
      "roles",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT count(*) FROM ROLES",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "ROLES"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "roles"
    ],
    "question": "Count the total number of roles listed.",
    "question_toks": [
      "Count",
      "the",
      "total",
      "number",
      "of",
      "roles",
      "listed",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT role_code ,  role_name ,  role_description FROM ROLES",
    "query_toks": [
      "SELECT",
      "role_code",
      ",",
      "role_name",
      ",",
      "role_description",
      "FROM",
      "ROLES"
    ],
    "query_toks_no_value": [
      "select",
      "role_code",
      ",",
      "role_name",
      ",",
      "role_description",
      "from",
      "roles"
    ],
    "question": "List all role codes, role names, and role descriptions.",
    "question_toks": [
      "List",
      "all",
      "role",
      "codes",
      ",",
      "role",
      "names",
      ",",
      "and",
      "role",
      "descriptions",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT role_code ,  role_name ,  role_description FROM ROLES",
    "query_toks": [
      "SELECT",
      "role_code",
      ",",
      "role_name",
      ",",
      "role_description",
      "FROM",
      "ROLES"
    ],
    "query_toks_no_value": [
      "select",
      "role_code",
      ",",
      "role_name",
      ",",
      "role_description",
      "from",
      "roles"
    ],
    "question": "What are all the role codes, role names, and role descriptions?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "role",
      "codes",
      ",",
      "role",
      "names",
      ",",
      "and",
      "role",
      "descriptions",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT role_name ,  role_description FROM ROLES WHERE role_code  =  \"MG\"",
    "query_toks": [
      "SELECT",
      "role_name",
      ",",
      "role_description",
      "FROM",
      "ROLES",
      "WHERE",
      "role_code",
      "=",
      "``",
      "MG",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "role_name",
      ",",
      "role_description",
      "from",
      "roles",
      "where",
      "role_code",
      "=",
      "value"
    ],
    "question": "What are the name and description for role code \"MG\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "name",
      "and",
      "description",
      "for",
      "role",
      "code",
      "``",
      "MG",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"MG\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT role_name ,  role_description FROM ROLES WHERE role_code  =  \"MG\"",
    "query_toks": [
      "SELECT",
      "role_name",
      ",",
      "role_description",
      "FROM",
      "ROLES",
      "WHERE",
      "role_code",
      "=",
      "``",
      "MG",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "role_name",
      ",",
      "role_description",
      "from",
      "roles",
      "where",
      "role_code",
      "=",
      "value"
    ],
    "question": "Find the name and description of the role with code \"MG\".",
    "question_toks": [
      "Find",
      "the",
      "name",
      "and",
      "description",
      "of",
      "the",
      "role",
      "with",
      "code",
      "``",
      "MG",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"MG\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT role_description FROM ROLES WHERE role_name  =  \"Proof Reader\"",
    "query_toks": [
      "SELECT",
      "role_description",
      "FROM",
      "ROLES",
      "WHERE",
      "role_name",
      "=",
      "``",
      "Proof",
      "Reader",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "role_description",
      "from",
      "roles",
      "where",
      "role_name",
      "=",
      "value"
    ],
    "question": "Show the description for role name \"Proof Reader\".",
    "question_toks": [
      "Show",
      "the",
      "description",
      "for",
      "role",
      "name",
      "``",
      "Proof",
      "Reader",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Proof Reader\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT role_description FROM ROLES WHERE role_name  =  \"Proof Reader\"",
    "query_toks": [
      "SELECT",
      "role_description",
      "FROM",
      "ROLES",
      "WHERE",
      "role_name",
      "=",
      "``",
      "Proof",
      "Reader",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "role_description",
      "from",
      "roles",
      "where",
      "role_name",
      "=",
      "value"
    ],
    "question": "What is the description of the role named \"Proof Reader\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "description",
      "of",
      "the",
      "role",
      "named",
      "``",
      "Proof",
      "Reader",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Proof Reader\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT count(*) FROM Employees",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Employees"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "employees"
    ],
    "question": "How many employees do we have?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT count(*) FROM Employees",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Employees"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "employees"
    ],
    "question": "Find the number of employees we have.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "employees",
      "we",
      "have",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT employee_name ,  role_code ,  date_of_birth FROM Employees WHERE employee_Name  =  'Armani'",
    "query_toks": [
      "SELECT",
      "employee_name",
      ",",
      "role_code",
      ",",
      "date_of_birth",
      "FROM",
      "Employees",
      "WHERE",
      "employee_Name",
      "=",
      "'Armani",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "employee_name",
      ",",
      "role_code",
      ",",
      "date_of_birth",
      "from",
      "employees",
      "where",
      "employee_name",
      "=",
      "value"
    ],
    "question": "Show the name, role code, and date of birth for the employee with name 'Armani'.",
    "question_toks": [
      "Show",
      "the",
      "name",
      ",",
      "role",
      "code",
      ",",
      "and",
      "date",
      "of",
      "birth",
      "for",
      "the",
      "employee",
      "with",
      "name",
      "'Armani",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          "\"Armani\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT employee_name ,  role_code ,  date_of_birth FROM Employees WHERE employee_Name  =  'Armani'",
    "query_toks": [
      "SELECT",
      "employee_name",
      ",",
      "role_code",
      ",",
      "date_of_birth",
      "FROM",
      "Employees",
      "WHERE",
      "employee_Name",
      "=",
      "'Armani",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "employee_name",
      ",",
      "role_code",
      ",",
      "date_of_birth",
      "from",
      "employees",
      "where",
      "employee_name",
      "=",
      "value"
    ],
    "question": "What are the name, role code, and date of birth of the employee named 'Armani'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "name",
      ",",
      "role",
      "code",
      ",",
      "and",
      "date",
      "of",
      "birth",
      "of",
      "the",
      "employee",
      "named",
      "'Armani",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          "\"Armani\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT employee_ID FROM Employees WHERE employee_name  =  \"Ebba\"",
    "query_toks": [
      "SELECT",
      "employee_ID",
      "FROM",
      "Employees",
      "WHERE",
      "employee_name",
      "=",
      "``",
      "Ebba",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "employee_id",
      "from",
      "employees",
      "where",
      "employee_name",
      "=",
      "value"
    ],
    "question": "What is the id for the employee called Ebba?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "for",
      "the",
      "employee",
      "called",
      "Ebba",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          "\"Ebba\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT employee_ID FROM Employees WHERE employee_name  =  \"Ebba\"",
    "query_toks": [
      "SELECT",
      "employee_ID",
      "FROM",
      "Employees",
      "WHERE",
      "employee_name",
      "=",
      "``",
      "Ebba",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "employee_id",
      "from",
      "employees",
      "where",
      "employee_name",
      "=",
      "value"
    ],
    "question": "Show the id of the employee named Ebba.",
    "question_toks": [
      "Show",
      "the",
      "id",
      "of",
      "the",
      "employee",
      "named",
      "Ebba",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          "\"Ebba\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT employee_name FROM Employees WHERE role_code  =  \"HR\"",
    "query_toks": [
      "SELECT",
      "employee_name",
      "FROM",
      "Employees",
      "WHERE",
      "role_code",
      "=",
      "``",
      "HR",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "employee_name",
      "from",
      "employees",
      "where",
      "role_code",
      "=",
      "value"
    ],
    "question": "Show the names of all the employees with role \"HR\".",
    "question_toks": [
      "Show",
      "the",
      "names",
      "of",
      "all",
      "the",
      "employees",
      "with",
      "role",
      "``",
      "HR",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"HR\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT employee_name FROM Employees WHERE role_code  =  \"HR\"",
    "query_toks": [
      "SELECT",
      "employee_name",
      "FROM",
      "Employees",
      "WHERE",
      "role_code",
      "=",
      "``",
      "HR",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "employee_name",
      "from",
      "employees",
      "where",
      "role_code",
      "=",
      "value"
    ],
    "question": "Which employees have the role with code \"HR\"? Find their names.",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "the",
      "role",
      "with",
      "code",
      "``",
      "HR",
      "''",
      "?",
      "Find",
      "their",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"HR\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT location_code ,  date_in_location_from ,  date_in_locaton_to FROM Document_locations",
    "query_toks": [
      "SELECT",
      "location_code",
      ",",
      "date_in_location_from",
      ",",
      "date_in_locaton_to",
      "FROM",
      "Document_locations"
    ],
    "query_toks_no_value": [
      "select",
      "location_code",
      ",",
      "date_in_location_from",
      ",",
      "date_in_locaton_to",
      "from",
      "document_locations"
    ],
    "question": "Show the location code, the starting date and ending data in that location for all the documents.",
    "question_toks": [
      "Show",
      "the",
      "location",
      "code",
      ",",
      "the",
      "starting",
      "date",
      "and",
      "ending",
      "data",
      "in",
      "that",
      "location",
      "for",
      "all",
      "the",
      "documents",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT location_code ,  date_in_location_from ,  date_in_locaton_to FROM Document_locations",
    "query_toks": [
      "SELECT",
      "location_code",
      ",",
      "date_in_location_from",
      ",",
      "date_in_locaton_to",
      "FROM",
      "Document_locations"
    ],
    "query_toks_no_value": [
      "select",
      "location_code",
      ",",
      "date_in_location_from",
      ",",
      "date_in_locaton_to",
      "from",
      "document_locations"
    ],
    "question": "What are each document's location code, and starting date and ending data in that location?",
    "question_toks": [
      "What",
      "are",
      "each",
      "document",
      "'s",
      "location",
      "code",
      ",",
      "and",
      "starting",
      "date",
      "and",
      "ending",
      "data",
      "in",
      "that",
      "location",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT count(*) FROM club",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "club"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "club"
    ],
    "question": "How many clubs are there?",
    "question_toks": [
      "How",
      "many",
      "clubs",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT count(*) FROM club",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "club"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "club"
    ],
    "question": "Count the total number of clubs.",
    "question_toks": [
      "Count",
      "the",
      "total",
      "number",
      "of",
      "clubs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT clubname FROM club",
    "query_toks": [
      "SELECT",
      "clubname",
      "FROM",
      "club"
    ],
    "query_toks_no_value": [
      "select",
      "clubname",
      "from",
      "club"
    ],
    "question": "What are the names of all clubs?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "clubs",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT clubname FROM club",
    "query_toks": [
      "SELECT",
      "clubname",
      "FROM",
      "club"
    ],
    "query_toks_no_value": [
      "select",
      "clubname",
      "from",
      "club"
    ],
    "question": "Give me the name of each club.",
    "question_toks": [
      "Give",
      "me",
      "the",
      "name",
      "of",
      "each",
      "club",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT count(*) FROM student",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "student"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student"
    ],
    "question": "How many students are there?",
    "question_toks": [
      "How",
      "many",
      "students",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT count(*) FROM student",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "student"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student"
    ],
    "question": "Count the total number of students.",
    "question_toks": [
      "Count",
      "the",
      "total",
      "number",
      "of",
      "students",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT clubdesc FROM club WHERE clubname  =  \"Tennis Club\"",
    "query_toks": [
      "SELECT",
      "clubdesc",
      "FROM",
      "club",
      "WHERE",
      "clubname",
      "=",
      "``",
      "Tennis",
      "Club",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "clubdesc",
      "from",
      "club",
      "where",
      "clubname",
      "=",
      "value"
    ],
    "question": "What is the description of the club named \"Tennis Club\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "description",
      "of",
      "the",
      "club",
      "named",
      "``",
      "Tennis",
      "Club",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Tennis Club\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT clubdesc FROM club WHERE clubname  =  \"Tennis Club\"",
    "query_toks": [
      "SELECT",
      "clubdesc",
      "FROM",
      "club",
      "WHERE",
      "clubname",
      "=",
      "``",
      "Tennis",
      "Club",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "clubdesc",
      "from",
      "club",
      "where",
      "clubname",
      "=",
      "value"
    ],
    "question": "Find the description of the club called \"Tennis Club\".",
    "question_toks": [
      "Find",
      "the",
      "description",
      "of",
      "the",
      "club",
      "called",
      "``",
      "Tennis",
      "Club",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Tennis Club\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT clubdesc FROM club WHERE clubname  =  \"Pen and Paper Gaming\"",
    "query_toks": [
      "SELECT",
      "clubdesc",
      "FROM",
      "club",
      "WHERE",
      "clubname",
      "=",
      "``",
      "Pen",
      "and",
      "Paper",
      "Gaming",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "clubdesc",
      "from",
      "club",
      "where",
      "clubname",
      "=",
      "value"
    ],
    "question": "Find the description of the club \"Pen and Paper Gaming\".",
    "question_toks": [
      "Find",
      "the",
      "description",
      "of",
      "the",
      "club",
      "``",
      "Pen",
      "and",
      "Paper",
      "Gaming",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Pen and Paper Gaming\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT clubdesc FROM club WHERE clubname  =  \"Pen and Paper Gaming\"",
    "query_toks": [
      "SELECT",
      "clubdesc",
      "FROM",
      "club",
      "WHERE",
      "clubname",
      "=",
      "``",
      "Pen",
      "and",
      "Paper",
      "Gaming",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "clubdesc",
      "from",
      "club",
      "where",
      "clubname",
      "=",
      "value"
    ],
    "question": "What is the description of the club \"Pen and Paper Gaming\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "description",
      "of",
      "the",
      "club",
      "``",
      "Pen",
      "and",
      "Paper",
      "Gaming",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Pen and Paper Gaming\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT clublocation FROM club WHERE clubname  =  \"Tennis Club\"",
    "query_toks": [
      "SELECT",
      "clublocation",
      "FROM",
      "club",
      "WHERE",
      "clubname",
      "=",
      "``",
      "Tennis",
      "Club",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "clublocation",
      "from",
      "club",
      "where",
      "clubname",
      "=",
      "value"
    ],
    "question": "What is the location of the club named \"Tennis Club\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "location",
      "of",
      "the",
      "club",
      "named",
      "``",
      "Tennis",
      "Club",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Tennis Club\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT clublocation FROM club WHERE clubname  =  \"Tennis Club\"",
    "query_toks": [
      "SELECT",
      "clublocation",
      "FROM",
      "club",
      "WHERE",
      "clubname",
      "=",
      "``",
      "Tennis",
      "Club",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "clublocation",
      "from",
      "club",
      "where",
      "clubname",
      "=",
      "value"
    ],
    "question": "Where us the club named \"Tennis Club\" located?",
    "question_toks": [
      "Where",
      "us",
      "the",
      "club",
      "named",
      "``",
      "Tennis",
      "Club",
      "''",
      "located",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Tennis Club\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT clublocation FROM club WHERE clubname  =  \"Pen and Paper Gaming\"",
    "query_toks": [
      "SELECT",
      "clublocation",
      "FROM",
      "club",
      "WHERE",
      "clubname",
      "=",
      "``",
      "Pen",
      "and",
      "Paper",
      "Gaming",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "clublocation",
      "from",
      "club",
      "where",
      "clubname",
      "=",
      "value"
    ],
    "question": "Find the location of the club \"Pen and Paper Gaming\".",
    "question_toks": [
      "Find",
      "the",
      "location",
      "of",
      "the",
      "club",
      "``",
      "Pen",
      "and",
      "Paper",
      "Gaming",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Pen and Paper Gaming\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT clublocation FROM club WHERE clubname  =  \"Pen and Paper Gaming\"",
    "query_toks": [
      "SELECT",
      "clublocation",
      "FROM",
      "club",
      "WHERE",
      "clubname",
      "=",
      "``",
      "Pen",
      "and",
      "Paper",
      "Gaming",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "clublocation",
      "from",
      "club",
      "where",
      "clubname",
      "=",
      "value"
    ],
    "question": "Where is the club \"Pen and Paper Gaming\" located?",
    "question_toks": [
      "Where",
      "is",
      "the",
      "club",
      "``",
      "Pen",
      "and",
      "Paper",
      "Gaming",
      "''",
      "located",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Pen and Paper Gaming\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT clublocation FROM club WHERE clubname  =  \"Hopkins Student Enterprises\"",
    "query_toks": [
      "SELECT",
      "clublocation",
      "FROM",
      "club",
      "WHERE",
      "clubname",
      "=",
      "``",
      "Hopkins",
      "Student",
      "Enterprises",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "clublocation",
      "from",
      "club",
      "where",
      "clubname",
      "=",
      "value"
    ],
    "question": "Where is the club \"Hopkins Student Enterprises\" located?",
    "question_toks": [
      "Where",
      "is",
      "the",
      "club",
      "``",
      "Hopkins",
      "Student",
      "Enterprises",
      "''",
      "located",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Hopkins Student Enterprises\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT clublocation FROM club WHERE clubname  =  \"Hopkins Student Enterprises\"",
    "query_toks": [
      "SELECT",
      "clublocation",
      "FROM",
      "club",
      "WHERE",
      "clubname",
      "=",
      "``",
      "Hopkins",
      "Student",
      "Enterprises",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "clublocation",
      "from",
      "club",
      "where",
      "clubname",
      "=",
      "value"
    ],
    "question": "Tell me the location of the club \"Hopkins Student Enterprises\".",
    "question_toks": [
      "Tell",
      "me",
      "the",
      "location",
      "of",
      "the",
      "club",
      "``",
      "Hopkins",
      "Student",
      "Enterprises",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Hopkins Student Enterprises\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT clubname FROM club WHERE clublocation  =  \"AKW\"",
    "query_toks": [
      "SELECT",
      "clubname",
      "FROM",
      "club",
      "WHERE",
      "clublocation",
      "=",
      "``",
      "AKW",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "clubname",
      "from",
      "club",
      "where",
      "clublocation",
      "=",
      "value"
    ],
    "question": "Find the name of all the clubs at \"AKW\".",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "all",
      "the",
      "clubs",
      "at",
      "``",
      "AKW",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"AKW\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT clubname FROM club WHERE clublocation  =  \"AKW\"",
    "query_toks": [
      "SELECT",
      "clubname",
      "FROM",
      "club",
      "WHERE",
      "clublocation",
      "=",
      "``",
      "AKW",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "clubname",
      "from",
      "club",
      "where",
      "clublocation",
      "=",
      "value"
    ],
    "question": "Which clubs are located at \"AKW\"? Return the club names.",
    "question_toks": [
      "Which",
      "clubs",
      "are",
      "located",
      "at",
      "``",
      "AKW",
      "''",
      "?",
      "Return",
      "the",
      "club",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"AKW\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT count(*) FROM club WHERE clublocation  =  \"HHH\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "club",
      "WHERE",
      "clublocation",
      "=",
      "``",
      "HHH",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "club",
      "where",
      "clublocation",
      "=",
      "value"
    ],
    "question": "How many clubs are located at \"HHH\"?",
    "question_toks": [
      "How",
      "many",
      "clubs",
      "are",
      "located",
      "at",
      "``",
      "HHH",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"HHH\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT count(*) FROM club WHERE clublocation  =  \"HHH\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "club",
      "WHERE",
      "clublocation",
      "=",
      "``",
      "HHH",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "club",
      "where",
      "clublocation",
      "=",
      "value"
    ],
    "question": "Count the number of clubs located at \"HHH\".",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "clubs",
      "located",
      "at",
      "``",
      "HHH",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"HHH\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' )",
    "query_toks": [
      "SELECT",
      "project_details",
      "FROM",
      "Projects",
      "WHERE",
      "project_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "project_id",
      "FROM",
      "Project_Staff",
      "WHERE",
      "role_code",
      "=",
      "'researcher",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "project_details",
      "from",
      "projects",
      "where",
      "project_id",
      "not",
      "in",
      "(",
      "select",
      "project_id",
      "from",
      "project_staff",
      "where",
      "role_code",
      "=",
      "value",
      ")"
    ],
    "question": "List the project details of the projects which did not hire any staff for a researcher role.",
    "question_toks": [
      "List",
      "the",
      "project",
      "details",
      "of",
      "the",
      "projects",
      "which",
      "did",
      "not",
      "hire",
      "any",
      "staff",
      "for",
      "a",
      "researcher",
      "role",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  6
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      24,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    25,
                    false
                  ],
                  null
                ],
                "\"researcher\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' )",
    "query_toks": [
      "SELECT",
      "project_details",
      "FROM",
      "Projects",
      "WHERE",
      "project_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "project_id",
      "FROM",
      "Project_Staff",
      "WHERE",
      "role_code",
      "=",
      "'researcher",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "project_details",
      "from",
      "projects",
      "where",
      "project_id",
      "not",
      "in",
      "(",
      "select",
      "project_id",
      "from",
      "project_staff",
      "where",
      "role_code",
      "=",
      "value",
      ")"
    ],
    "question": "What are the details for all projects that did not hire any staff in a research role?",
    "question_toks": [
      "What",
      "are",
      "the",
      "details",
      "for",
      "all",
      "projects",
      "that",
      "did",
      "not",
      "hire",
      "any",
      "staff",
      "in",
      "a",
      "research",
      "role",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  6
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      24,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    25,
                    false
                  ],
                  null
                ],
                "\"researcher\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'researcher'",
    "query_toks": [
      "SELECT",
      "date_from",
      ",",
      "date_to",
      "FROM",
      "Project_Staff",
      "WHERE",
      "role_code",
      "=",
      "'researcher",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_from",
      ",",
      "date_to",
      "from",
      "project_staff",
      "where",
      "role_code",
      "=",
      "value"
    ],
    "question": "When do all the researcher role staff start to work, and when do they stop working?",
    "question_toks": [
      "When",
      "do",
      "all",
      "the",
      "researcher",
      "role",
      "staff",
      "start",
      "to",
      "work",
      ",",
      "and",
      "when",
      "do",
      "they",
      "stop",
      "working",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"researcher\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'researcher'",
    "query_toks": [
      "SELECT",
      "date_from",
      ",",
      "date_to",
      "FROM",
      "Project_Staff",
      "WHERE",
      "role_code",
      "=",
      "'researcher",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_from",
      ",",
      "date_to",
      "from",
      "project_staff",
      "where",
      "role_code",
      "=",
      "value"
    ],
    "question": "When did researchers start and stop working?",
    "question_toks": [
      "When",
      "did",
      "researchers",
      "start",
      "and",
      "stop",
      "working",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"researcher\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT count(DISTINCT role_code) FROM Project_Staff",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "role_code",
      ")",
      "FROM",
      "Project_Staff"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "role_code",
      ")",
      "from",
      "project_staff"
    ],
    "question": "How many kinds of roles are there for the staff?",
    "question_toks": [
      "How",
      "many",
      "kinds",
      "of",
      "roles",
      "are",
      "there",
      "for",
      "the",
      "staff",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                25,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT count(DISTINCT role_code) FROM Project_Staff",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "role_code",
      ")",
      "FROM",
      "Project_Staff"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "role_code",
      ")",
      "from",
      "project_staff"
    ],
    "question": "How many different roles are there on the project staff?",
    "question_toks": [
      "How",
      "many",
      "different",
      "roles",
      "are",
      "there",
      "on",
      "the",
      "project",
      "staff",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                25,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT role_description FROM Staff_Roles WHERE role_code  =  'researcher'",
    "query_toks": [
      "SELECT",
      "role_description",
      "FROM",
      "Staff_Roles",
      "WHERE",
      "role_code",
      "=",
      "'researcher",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "role_description",
      "from",
      "staff_roles",
      "where",
      "role_code",
      "=",
      "value"
    ],
    "question": "What is the complete description of the researcher role.",
    "question_toks": [
      "What",
      "is",
      "the",
      "complete",
      "description",
      "of",
      "the",
      "researcher",
      "role",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              37,
              false
            ],
            null
          ],
          "\"researcher\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT role_description FROM Staff_Roles WHERE role_code  =  'researcher'",
    "query_toks": [
      "SELECT",
      "role_description",
      "FROM",
      "Staff_Roles",
      "WHERE",
      "role_code",
      "=",
      "'researcher",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "role_description",
      "from",
      "staff_roles",
      "where",
      "role_code",
      "=",
      "value"
    ],
    "question": "What is the complete description of the job of a researcher?",
    "question_toks": [
      "What",
      "is",
      "the",
      "complete",
      "description",
      "of",
      "the",
      "job",
      "of",
      "a",
      "researcher",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              37,
              false
            ],
            null
          ],
          "\"researcher\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )",
    "query_toks": [
      "SELECT",
      "project_details",
      "FROM",
      "Projects",
      "WHERE",
      "project_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "project_id",
      "FROM",
      "Project_outcomes",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "project_details",
      "from",
      "projects",
      "where",
      "project_id",
      "not",
      "in",
      "(",
      "select",
      "project_id",
      "from",
      "project_outcomes",
      ")"
    ],
    "question": "Which projects have no outcome? List the project details.",
    "question_toks": [
      "Which",
      "projects",
      "have",
      "no",
      "outcome",
      "?",
      "List",
      "the",
      "project",
      "details",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  5
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      20,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )",
    "query_toks": [
      "SELECT",
      "project_details",
      "FROM",
      "Projects",
      "WHERE",
      "project_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "project_id",
      "FROM",
      "Project_outcomes",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "project_details",
      "from",
      "projects",
      "where",
      "project_id",
      "not",
      "in",
      "(",
      "select",
      "project_id",
      "from",
      "project_outcomes",
      ")"
    ],
    "question": "What are the details of the project with no outcomes?",
    "question_toks": [
      "What",
      "are",
      "the",
      "details",
      "of",
      "the",
      "project",
      "with",
      "no",
      "outcomes",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  5
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      20,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%'",
    "query_toks": [
      "SELECT",
      "document_type_code",
      "FROM",
      "Document_Types",
      "WHERE",
      "document_description",
      "LIKE",
      "'Initial",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      "from",
      "document_types",
      "where",
      "document_description",
      "like",
      "value"
    ],
    "question": "Which document type is described with the prefix 'Initial'?",
    "question_toks": [
      "Which",
      "document",
      "type",
      "is",
      "described",
      "with",
      "the",
      "prefix",
      "'Initial",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Initial%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%'",
    "query_toks": [
      "SELECT",
      "document_type_code",
      "FROM",
      "Document_Types",
      "WHERE",
      "document_description",
      "LIKE",
      "'Initial",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      "from",
      "document_types",
      "where",
      "document_description",
      "like",
      "value"
    ],
    "question": "What is the type of the document whose description starts with the word 'Initial'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "type",
      "of",
      "the",
      "document",
      "whose",
      "description",
      "starts",
      "with",
      "the",
      "word",
      "'Initial",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Initial%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT count(*) FROM Project_outcomes WHERE outcome_code  =  'Patent'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Project_outcomes",
      "WHERE",
      "outcome_code",
      "=",
      "'Patent",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "project_outcomes",
      "where",
      "outcome_code",
      "=",
      "value"
    ],
    "question": "How many Patent outcomes are generated from all the projects?",
    "question_toks": [
      "How",
      "many",
      "Patent",
      "outcomes",
      "are",
      "generated",
      "from",
      "all",
      "the",
      "projects",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          "\"Patent\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT count(*) FROM Project_outcomes WHERE outcome_code  =  'Patent'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Project_outcomes",
      "WHERE",
      "outcome_code",
      "=",
      "'Patent",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "project_outcomes",
      "where",
      "outcome_code",
      "=",
      "value"
    ],
    "question": "How many patents outcomes were listed for all the projects?",
    "question_toks": [
      "How",
      "many",
      "patents",
      "outcomes",
      "were",
      "listed",
      "for",
      "all",
      "the",
      "projects",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          "\"Patent\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT count(*) FROM Project_Staff WHERE role_code  =  'leader' OR date_from  <  '1989-04-24 23:51:54'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Project_Staff",
      "WHERE",
      "role_code",
      "=",
      "'leader",
      "'",
      "OR",
      "date_from",
      "<",
      "'1989-04-24",
      "23:51:54",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "project_staff",
      "where",
      "role_code",
      "=",
      "value",
      "or",
      "date_from",
      "<",
      "value"
    ],
    "question": "How many project staff worked as leaders or started working before '1989-04-24 23:51:54'?",
    "question_toks": [
      "How",
      "many",
      "project",
      "staff",
      "worked",
      "as",
      "leaders",
      "or",
      "started",
      "working",
      "before",
      "'1989-04-24",
      "23:51:54",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"leader\"",
          null
        ],
        "or",
        [
          false,
          4,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"1989-04-24 23:51:54\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT count(*) FROM Project_Staff WHERE role_code  =  'leader' OR date_from  <  '1989-04-24 23:51:54'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Project_Staff",
      "WHERE",
      "role_code",
      "=",
      "'leader",
      "'",
      "OR",
      "date_from",
      "<",
      "'1989-04-24",
      "23:51:54",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "project_staff",
      "where",
      "role_code",
      "=",
      "value",
      "or",
      "date_from",
      "<",
      "value"
    ],
    "question": "How many project members were leaders or started working before '1989-04-24 23:51:54'?",
    "question_toks": [
      "How",
      "many",
      "project",
      "members",
      "were",
      "leaders",
      "or",
      "started",
      "working",
      "before",
      "'1989-04-24",
      "23:51:54",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"leader\"",
          null
        ],
        "or",
        [
          false,
          4,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"1989-04-24 23:51:54\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 )",
    "query_toks": [
      "SELECT",
      "project_details",
      "FROM",
      "Projects",
      "WHERE",
      "organisation_id",
      "IN",
      "(",
      "SELECT",
      "organisation_id",
      "FROM",
      "Projects",
      "GROUP",
      "BY",
      "organisation_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "project_details",
      "from",
      "projects",
      "where",
      "organisation_id",
      "in",
      "(",
      "select",
      "organisation_id",
      "from",
      "projects",
      "group",
      "by",
      "organisation_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value",
      ")"
    ],
    "question": "List the project details of the projects launched by the organisation",
    "question_toks": [
      "List",
      "the",
      "project",
      "details",
      "of",
      "the",
      "projects",
      "launched",
      "by",
      "the",
      "organisation"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  7
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      30,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [
              [
                0,
                30,
                false
              ]
            ],
            "having": [],
            "orderBy": [
              "desc",
              [
                [
                  0,
                  [
                    3,
                    0,
                    false
                  ],
                  null
                ]
              ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 )",
    "query_toks": [
      "SELECT",
      "project_details",
      "FROM",
      "Projects",
      "WHERE",
      "organisation_id",
      "IN",
      "(",
      "SELECT",
      "organisation_id",
      "FROM",
      "Projects",
      "GROUP",
      "BY",
      "organisation_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "project_details",
      "from",
      "projects",
      "where",
      "organisation_id",
      "in",
      "(",
      "select",
      "organisation_id",
      "from",
      "projects",
      "group",
      "by",
      "organisation_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value",
      ")"
    ],
    "question": "What are the details for the projects which were launched by the organization with the most projects?",
    "question_toks": [
      "What",
      "are",
      "the",
      "details",
      "for",
      "the",
      "projects",
      "which",
      "were",
      "launched",
      "by",
      "the",
      "organization",
      "with",
      "the",
      "most",
      "projects",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  7
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      30,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [
              [
                0,
                30,
                false
              ]
            ],
            "having": [],
            "orderBy": [
              "desc",
              [
                [
                  0,
                  [
                    3,
                    0,
                    false
                  ],
                  null
                ]
              ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT count(*) FROM Tasks",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Tasks"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "tasks"
    ],
    "question": "How many tasks are there in total?",
    "question_toks": [
      "How",
      "many",
      "tasks",
      "are",
      "there",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            11
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT count(*) FROM Tasks",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Tasks"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "tasks"
    ],
    "question": "How many tasks are there?",
    "question_toks": [
      "How",
      "many",
      "tasks",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            11
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT role_code FROM Project_Staff WHERE date_from  >  '2003-04-19 15:06:20' AND date_to  <  '2016-03-15 00:33:18'",
    "query_toks": [
      "SELECT",
      "role_code",
      "FROM",
      "Project_Staff",
      "WHERE",
      "date_from",
      ">",
      "'2003-04-19",
      "15:06:20",
      "'",
      "AND",
      "date_to",
      "<",
      "'2016-03-15",
      "00:33:18",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "role_code",
      "from",
      "project_staff",
      "where",
      "date_from",
      ">",
      "value",
      "and",
      "date_to",
      "<",
      "value"
    ],
    "question": "What are the staff roles of the staff who",
    "question_toks": [
      "What",
      "are",
      "the",
      "staff",
      "roles",
      "of",
      "the",
      "staff",
      "who"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"2003-04-19 15:06:20\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          "\"2016-03-15 00:33:18\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT role_code FROM Project_Staff WHERE date_from  >  '2003-04-19 15:06:20' AND date_to  <  '2016-03-15 00:33:18'",
    "query_toks": [
      "SELECT",
      "role_code",
      "FROM",
      "Project_Staff",
      "WHERE",
      "date_from",
      ">",
      "'2003-04-19",
      "15:06:20",
      "'",
      "AND",
      "date_to",
      "<",
      "'2016-03-15",
      "00:33:18",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "role_code",
      "from",
      "project_staff",
      "where",
      "date_from",
      ">",
      "value",
      "and",
      "date_to",
      "<",
      "value"
    ],
    "question": "What roles did staff members play between '2003-04-19 15:06:20' and '2016-03-15 00:33:18'?",
    "question_toks": [
      "What",
      "roles",
      "did",
      "staff",
      "members",
      "play",
      "between",
      "'2003-04-19",
      "15:06:20",
      "'",
      "and",
      "'2016-03-15",
      "00:33:18",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"2003-04-19 15:06:20\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          "\"2016-03-15 00:33:18\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT count(*) FROM Person WHERE gender  =  'female'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Person",
      "WHERE",
      "gender",
      "=",
      "'female",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "person",
      "where",
      "gender",
      "=",
      "value"
    ],
    "question": "How many females does this network has?",
    "question_toks": [
      "How",
      "many",
      "females",
      "does",
      "this",
      "network",
      "has",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"female\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT count(*) FROM Person WHERE gender  =  'female'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Person",
      "WHERE",
      "gender",
      "=",
      "'female",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "person",
      "where",
      "gender",
      "=",
      "value"
    ],
    "question": "How many females are in the network?",
    "question_toks": [
      "How",
      "many",
      "females",
      "are",
      "in",
      "the",
      "network",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"female\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT avg(age) FROM Person",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "age",
      ")",
      "FROM",
      "Person"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "age",
      ")",
      "from",
      "person"
    ],
    "question": "What is the average age for all person?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "age",
      "for",
      "all",
      "person",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT avg(age) FROM Person",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "age",
      ")",
      "FROM",
      "Person"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "age",
      ")",
      "from",
      "person"
    ],
    "question": "What is the average age for all people in the table?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "age",
      "for",
      "all",
      "people",
      "in",
      "the",
      "table",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT count(DISTINCT city) FROM Person",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "city",
      ")",
      "FROM",
      "Person"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "city",
      ")",
      "from",
      "person"
    ],
    "question": "How many different cities are they from?",
    "question_toks": [
      "How",
      "many",
      "different",
      "cities",
      "are",
      "they",
      "from",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT count(DISTINCT city) FROM Person",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "city",
      ")",
      "FROM",
      "Person"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "city",
      ")",
      "from",
      "person"
    ],
    "question": "How many different cities do people originate from?",
    "question_toks": [
      "How",
      "many",
      "different",
      "cities",
      "do",
      "people",
      "originate",
      "from",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT count(DISTINCT job) FROM Person",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "job",
      ")",
      "FROM",
      "Person"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "job",
      ")",
      "from",
      "person"
    ],
    "question": "How many type of jobs do they have?",
    "question_toks": [
      "How",
      "many",
      "type",
      "of",
      "jobs",
      "do",
      "they",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                5,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT count(DISTINCT job) FROM Person",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "job",
      ")",
      "FROM",
      "Person"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "job",
      ")",
      "from",
      "person"
    ],
    "question": "How many different jobs are listed?",
    "question_toks": [
      "How",
      "many",
      "different",
      "jobs",
      "are",
      "listed",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                5,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT name FROM Person WHERE age  =  (SELECT max(age) FROM person)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Person",
      "WHERE",
      "age",
      "=",
      "(",
      "SELECT",
      "max",
      "(",
      "age",
      ")",
      "FROM",
      "person",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "person",
      "where",
      "age",
      "=",
      "(",
      "select",
      "max",
      "(",
      "age",
      ")",
      "from",
      "person",
      ")"
    ],
    "question": "Who is the oldest person?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "oldest",
      "person",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      2,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT name FROM Person WHERE age  =  (SELECT max(age) FROM person)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Person",
      "WHERE",
      "age",
      "=",
      "(",
      "SELECT",
      "max",
      "(",
      "age",
      ")",
      "FROM",
      "person",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "person",
      "where",
      "age",
      "=",
      "(",
      "select",
      "max",
      "(",
      "age",
      ")",
      "from",
      "person",
      ")"
    ],
    "question": "What is the name of the person who is the oldest?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "person",
      "who",
      "is",
      "the",
      "oldest",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      2,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT name FROM Person WHERE job  =  'student' AND age  =  (SELECT max(age) FROM person WHERE job  =  'student' )",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Person",
      "WHERE",
      "job",
      "=",
      "'student",
      "'",
      "AND",
      "age",
      "=",
      "(",
      "SELECT",
      "max",
      "(",
      "age",
      ")",
      "FROM",
      "person",
      "WHERE",
      "job",
      "=",
      "'student",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "person",
      "where",
      "job",
      "=",
      "value",
      "and",
      "age",
      "=",
      "(",
      "select",
      "max",
      "(",
      "age",
      ")",
      "from",
      "person",
      "where",
      "job",
      "=",
      "value",
      ")"
    ],
    "question": "Who is the oldest person whose job is student?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "oldest",
      "person",
      "whose",
      "job",
      "is",
      "student",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"student\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      2,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    5,
                    false
                  ],
                  null
                ],
                "\"student\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT name FROM Person WHERE job  =  'student' AND age  =  (SELECT max(age) FROM person WHERE job  =  'student' )",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Person",
      "WHERE",
      "job",
      "=",
      "'student",
      "'",
      "AND",
      "age",
      "=",
      "(",
      "SELECT",
      "max",
      "(",
      "age",
      ")",
      "FROM",
      "person",
      "WHERE",
      "job",
      "=",
      "'student",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "person",
      "where",
      "job",
      "=",
      "value",
      "and",
      "age",
      "=",
      "(",
      "select",
      "max",
      "(",
      "age",
      ")",
      "from",
      "person",
      "where",
      "job",
      "=",
      "value",
      ")"
    ],
    "question": "What is the name of the oldest student?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "oldest",
      "student",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"student\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      2,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    5,
                    false
                  ],
                  null
                ],
                "\"student\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT name FROM Person WHERE gender  =  'male' AND age  =  (SELECT min(age) FROM person WHERE gender  =  'male' )",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Person",
      "WHERE",
      "gender",
      "=",
      "'male",
      "'",
      "AND",
      "age",
      "=",
      "(",
      "SELECT",
      "min",
      "(",
      "age",
      ")",
      "FROM",
      "person",
      "WHERE",
      "gender",
      "=",
      "'male",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "person",
      "where",
      "gender",
      "=",
      "value",
      "and",
      "age",
      "=",
      "(",
      "select",
      "min",
      "(",
      "age",
      ")",
      "from",
      "person",
      "where",
      "gender",
      "=",
      "value",
      ")"
    ],
    "question": "Who is the youngest male?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "youngest",
      "male",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"male\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      2,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    4,
                    false
                  ],
                  null
                ],
                "\"male\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT name FROM Person WHERE gender  =  'male' AND age  =  (SELECT min(age) FROM person WHERE gender  =  'male' )",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Person",
      "WHERE",
      "gender",
      "=",
      "'male",
      "'",
      "AND",
      "age",
      "=",
      "(",
      "SELECT",
      "min",
      "(",
      "age",
      ")",
      "FROM",
      "person",
      "WHERE",
      "gender",
      "=",
      "'male",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "person",
      "where",
      "gender",
      "=",
      "value",
      "and",
      "age",
      "=",
      "(",
      "select",
      "min",
      "(",
      "age",
      ")",
      "from",
      "person",
      "where",
      "gender",
      "=",
      "value",
      ")"
    ],
    "question": "What is the name of the youngest male?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "youngest",
      "male",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"male\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      2,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    4,
                    false
                  ],
                  null
                ],
                "\"male\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT age FROM Person WHERE job  =  'doctor' AND name  =  'Zach'",
    "query_toks": [
      "SELECT",
      "age",
      "FROM",
      "Person",
      "WHERE",
      "job",
      "=",
      "'doctor",
      "'",
      "AND",
      "name",
      "=",
      "'Zach",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "age",
      "from",
      "person",
      "where",
      "job",
      "=",
      "value",
      "and",
      "name",
      "=",
      "value"
    ],
    "question": "How old is the doctor named Zach?",
    "question_toks": [
      "How",
      "old",
      "is",
      "the",
      "doctor",
      "named",
      "Zach",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"doctor\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"Zach\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT age FROM Person WHERE job  =  'doctor' AND name  =  'Zach'",
    "query_toks": [
      "SELECT",
      "age",
      "FROM",
      "Person",
      "WHERE",
      "job",
      "=",
      "'doctor",
      "'",
      "AND",
      "name",
      "=",
      "'Zach",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "age",
      "from",
      "person",
      "where",
      "job",
      "=",
      "value",
      "and",
      "name",
      "=",
      "value"
    ],
    "question": "What is the age of the doctor named Zach?",
    "question_toks": [
      "What",
      "is",
      "the",
      "age",
      "of",
      "the",
      "doctor",
      "named",
      "Zach",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"doctor\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"Zach\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT name FROM Person WHERE age  <  30",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Person",
      "WHERE",
      "age",
      "<",
      "30"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "person",
      "where",
      "age",
      "<",
      "value"
    ],
    "question": "Who is the person whose age is below 30?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "person",
      "whose",
      "age",
      "is",
      "below",
      "30",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          30.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT name FROM Person WHERE age  <  30",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Person",
      "WHERE",
      "age",
      "<",
      "30"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "person",
      "where",
      "age",
      "<",
      "value"
    ],
    "question": "What is the name of the person whose age is below 30?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "person",
      "whose",
      "age",
      "is",
      "below",
      "30",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          30.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT count(*) FROM Person WHERE age  >  30 AND job  =  'engineer'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Person",
      "WHERE",
      "age",
      ">",
      "30",
      "AND",
      "job",
      "=",
      "'engineer",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "person",
      "where",
      "age",
      ">",
      "value",
      "and",
      "job",
      "=",
      "value"
    ],
    "question": "How many people whose age is greater 30 and job is engineer?",
    "question_toks": [
      "How",
      "many",
      "people",
      "whose",
      "age",
      "is",
      "greater",
      "30",
      "and",
      "job",
      "is",
      "engineer",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          30.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"engineer\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT count(*) FROM Person WHERE age  >  30 AND job  =  'engineer'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Person",
      "WHERE",
      "age",
      ">",
      "30",
      "AND",
      "job",
      "=",
      "'engineer",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "person",
      "where",
      "age",
      ">",
      "value",
      "and",
      "job",
      "=",
      "value"
    ],
    "question": "HOw many engineers are older than 30?",
    "question_toks": [
      "HOw",
      "many",
      "engineers",
      "are",
      "older",
      "than",
      "30",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          30.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"engineer\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT count(*) FROM Person WHERE age  >  (SELECT max(age) FROM person WHERE job  =  'engineer')",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Person",
      "WHERE",
      "age",
      ">",
      "(",
      "SELECT",
      "max",
      "(",
      "age",
      ")",
      "FROM",
      "person",
      "WHERE",
      "job",
      "=",
      "'engineer",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "person",
      "where",
      "age",
      ">",
      "(",
      "select",
      "max",
      "(",
      "age",
      ")",
      "from",
      "person",
      "where",
      "job",
      "=",
      "value",
      ")"
    ],
    "question": "Find the number of people whose age is greater than all engineers.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "people",
      "whose",
      "age",
      "is",
      "greater",
      "than",
      "all",
      "engineers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      2,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    5,
                    false
                  ],
                  null
                ],
                "\"engineer\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT count(*) FROM Person WHERE age  >  (SELECT max(age) FROM person WHERE job  =  'engineer')",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Person",
      "WHERE",
      "age",
      ">",
      "(",
      "SELECT",
      "max",
      "(",
      "age",
      ")",
      "FROM",
      "person",
      "WHERE",
      "job",
      "=",
      "'engineer",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "person",
      "where",
      "age",
      ">",
      "(",
      "select",
      "max",
      "(",
      "age",
      ")",
      "from",
      "person",
      "where",
      "job",
      "=",
      "value",
      ")"
    ],
    "question": "How many people are older than every engineer?",
    "question_toks": [
      "How",
      "many",
      "people",
      "are",
      "older",
      "than",
      "every",
      "engineer",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      2,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    5,
                    false
                  ],
                  null
                ],
                "\"engineer\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT friend FROM PersonFriend WHERE name =  'Zach' AND YEAR  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach')",
    "query_toks": [
      "SELECT",
      "friend",
      "FROM",
      "PersonFriend",
      "WHERE",
      "name",
      "=",
      "'Zach",
      "'",
      "AND",
      "YEAR",
      "=",
      "(",
      "SELECT",
      "max",
      "(",
      "YEAR",
      ")",
      "FROM",
      "PersonFriend",
      "WHERE",
      "name",
      "=",
      "'Zach",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "friend",
      "from",
      "personfriend",
      "where",
      "name",
      "=",
      "value",
      "and",
      "year",
      "=",
      "(",
      "select",
      "max",
      "(",
      "year",
      ")",
      "from",
      "personfriend",
      "where",
      "name",
      "=",
      "value",
      ")"
    ],
    "question": "Who is the friend of Zach with longest year relationship?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "friend",
      "of",
      "Zach",
      "with",
      "longest",
      "year",
      "relationship",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Zach\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"Zach\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT friend FROM PersonFriend WHERE name =  'Zach' AND YEAR  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach')",
    "query_toks": [
      "SELECT",
      "friend",
      "FROM",
      "PersonFriend",
      "WHERE",
      "name",
      "=",
      "'Zach",
      "'",
      "AND",
      "YEAR",
      "=",
      "(",
      "SELECT",
      "max",
      "(",
      "YEAR",
      ")",
      "FROM",
      "PersonFriend",
      "WHERE",
      "name",
      "=",
      "'Zach",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "friend",
      "from",
      "personfriend",
      "where",
      "name",
      "=",
      "value",
      "and",
      "year",
      "=",
      "(",
      "select",
      "max",
      "(",
      "year",
      ")",
      "from",
      "personfriend",
      "where",
      "name",
      "=",
      "value",
      ")"
    ],
    "question": "Which friend of Zach has the longest-lasting friendship?",
    "question_toks": [
      "Which",
      "friend",
      "of",
      "Zach",
      "has",
      "the",
      "longest-lasting",
      "friendship",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Zach\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"Zach\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT name FROM PersonFriend WHERE friend =  'Alice' AND YEAR  =  (SELECT min(YEAR) FROM PersonFriend WHERE friend =  'Alice')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "PersonFriend",
      "WHERE",
      "friend",
      "=",
      "'Alice",
      "'",
      "AND",
      "YEAR",
      "=",
      "(",
      "SELECT",
      "min",
      "(",
      "YEAR",
      ")",
      "FROM",
      "PersonFriend",
      "WHERE",
      "friend",
      "=",
      "'Alice",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "personfriend",
      "where",
      "friend",
      "=",
      "value",
      "and",
      "year",
      "=",
      "(",
      "select",
      "min",
      "(",
      "year",
      ")",
      "from",
      "personfriend",
      "where",
      "friend",
      "=",
      "value",
      ")"
    ],
    "question": "Find the name of persons who are friends with Alice for the shortest years.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "persons",
      "who",
      "are",
      "friends",
      "with",
      "Alice",
      "for",
      "the",
      "shortest",
      "years",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"Alice\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    7,
                    false
                  ],
                  null
                ],
                "\"Alice\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT name FROM PersonFriend WHERE friend =  'Alice' AND YEAR  =  (SELECT min(YEAR) FROM PersonFriend WHERE friend =  'Alice')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "PersonFriend",
      "WHERE",
      "friend",
      "=",
      "'Alice",
      "'",
      "AND",
      "YEAR",
      "=",
      "(",
      "SELECT",
      "min",
      "(",
      "YEAR",
      ")",
      "FROM",
      "PersonFriend",
      "WHERE",
      "friend",
      "=",
      "'Alice",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "personfriend",
      "where",
      "friend",
      "=",
      "value",
      "and",
      "year",
      "=",
      "(",
      "select",
      "min",
      "(",
      "year",
      ")",
      "from",
      "personfriend",
      "where",
      "friend",
      "=",
      "value",
      ")"
    ],
    "question": "What are the names of all people who are friends with Alice for the shortest amount of time?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "people",
      "who",
      "are",
      "friends",
      "with",
      "Alice",
      "for",
      "the",
      "shortest",
      "amount",
      "of",
      "time",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"Alice\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    7,
                    false
                  ],
                  null
                ],
                "\"Alice\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT count(DISTINCT name) FROM PersonFriend WHERE friend NOT IN (SELECT name FROM person WHERE city  =  'Austin')",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "name",
      ")",
      "FROM",
      "PersonFriend",
      "WHERE",
      "friend",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "name",
      "FROM",
      "person",
      "WHERE",
      "city",
      "=",
      "'Austin",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "name",
      ")",
      "from",
      "personfriend",
      "where",
      "friend",
      "not",
      "in",
      "(",
      "select",
      "name",
      "from",
      "person",
      "where",
      "city",
      "=",
      "value",
      ")"
    ],
    "question": "What is the total number of people who has no friend living in the city of Austin.",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "people",
      "who",
      "has",
      "no",
      "friend",
      "living",
      "in",
      "the",
      "city",
      "of",
      "Austin",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                "\"Austin\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT count(DISTINCT name) FROM PersonFriend WHERE friend NOT IN (SELECT name FROM person WHERE city  =  'Austin')",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "name",
      ")",
      "FROM",
      "PersonFriend",
      "WHERE",
      "friend",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "name",
      "FROM",
      "person",
      "WHERE",
      "city",
      "=",
      "'Austin",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "name",
      ")",
      "from",
      "personfriend",
      "where",
      "friend",
      "not",
      "in",
      "(",
      "select",
      "name",
      "from",
      "person",
      "where",
      "city",
      "=",
      "value",
      ")"
    ],
    "question": "What is the total number of people who have no friends living in Austin?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "people",
      "who",
      "have",
      "no",
      "friends",
      "living",
      "in",
      "Austin",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                "\"Austin\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "decoration_competition",
    "query": "SELECT count(*) FROM member",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "member"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "member"
    ],
    "question": "How many members are there?",
    "question_toks": [
      "How",
      "many",
      "members",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "decoration_competition",
    "query": "SELECT Name ,  Country FROM member",
    "query_toks": [
      "SELECT",
      "Name",
      ",",
      "Country",
      "FROM",
      "member"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "country",
      "from",
      "member"
    ],
    "question": "What are the names and countries of members?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "countries",
      "of",
      "members",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "decoration_competition",
    "query": "SELECT Name FROM member WHERE Country  =  \"United States\" OR Country  =  \"Canada\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "member",
      "WHERE",
      "Country",
      "=",
      "``",
      "United",
      "States",
      "''",
      "OR",
      "Country",
      "=",
      "``",
      "Canada",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "member",
      "where",
      "country",
      "=",
      "value",
      "or",
      "country",
      "=",
      "value"
    ],
    "question": "Show the names of members whose country is \"United States\" or \"Canada\".",
    "question_toks": [
      "Show",
      "the",
      "names",
      "of",
      "members",
      "whose",
      "country",
      "is",
      "``",
      "United",
      "States",
      "''",
      "or",
      "``",
      "Canada",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"United States\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"Canada\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "decoration_competition",
    "query": "SELECT Leader_Name ,  College_Location FROM college",
    "query_toks": [
      "SELECT",
      "Leader_Name",
      ",",
      "College_Location",
      "FROM",
      "college"
    ],
    "query_toks_no_value": [
      "select",
      "leader_name",
      ",",
      "college_location",
      "from",
      "college"
    ],
    "question": "Show the leader names and locations of colleges.",
    "question_toks": [
      "Show",
      "the",
      "leader",
      "names",
      "and",
      "locations",
      "of",
      "colleges",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "decoration_competition",
    "query": "SELECT Name FROM member WHERE Member_ID NOT IN (SELECT Member_ID FROM round)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "member",
      "WHERE",
      "Member_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Member_ID",
      "FROM",
      "round",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "member",
      "where",
      "member_id",
      "not",
      "in",
      "(",
      "select",
      "member_id",
      "from",
      "round",
      ")"
    ],
    "question": "List the names of members who did not participate in any round.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "members",
      "who",
      "did",
      "not",
      "participate",
      "in",
      "any",
      "round",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      10,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "document_management",
    "query": "SELECT avg(access_count) FROM documents",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "access_count",
      ")",
      "FROM",
      "documents"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "access_count",
      ")",
      "from",
      "documents"
    ],
    "question": "What is the average access count of documents?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "access",
      "count",
      "of",
      "documents",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "document_management",
    "query": "SELECT avg(access_count) FROM documents",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "access_count",
      ")",
      "FROM",
      "documents"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "access_count",
      ")",
      "from",
      "documents"
    ],
    "question": "Find the average access count across all documents?",
    "question_toks": [
      "Find",
      "the",
      "average",
      "access",
      "count",
      "across",
      "all",
      "documents",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "document_management",
    "query": "SELECT document_type_code FROM documents WHERE document_name  =  \"David CV\"",
    "query_toks": [
      "SELECT",
      "document_type_code",
      "FROM",
      "documents",
      "WHERE",
      "document_name",
      "=",
      "``",
      "David",
      "CV",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      "from",
      "documents",
      "where",
      "document_name",
      "=",
      "value"
    ],
    "question": "What is the type of the document named \"David CV\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "type",
      "of",
      "the",
      "document",
      "named",
      "``",
      "David",
      "CV",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          "\"David CV\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "document_management",
    "query": "SELECT document_type_code FROM documents WHERE document_name  =  \"David CV\"",
    "query_toks": [
      "SELECT",
      "document_type_code",
      "FROM",
      "documents",
      "WHERE",
      "document_name",
      "=",
      "``",
      "David",
      "CV",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      "from",
      "documents",
      "where",
      "document_name",
      "=",
      "value"
    ],
    "question": "Return the type code of the document named \"David CV\".",
    "question_toks": [
      "Return",
      "the",
      "type",
      "code",
      "of",
      "the",
      "document",
      "named",
      "``",
      "David",
      "CV",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          "\"David CV\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "document_management",
    "query": "SELECT document_name FROM documents WHERE document_code NOT IN (SELECT document_code FROM document_sections)",
    "query_toks": [
      "SELECT",
      "document_name",
      "FROM",
      "documents",
      "WHERE",
      "document_code",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "document_code",
      "FROM",
      "document_sections",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "document_name",
      "from",
      "documents",
      "where",
      "document_code",
      "not",
      "in",
      "(",
      "select",
      "document_code",
      "from",
      "document_sections",
      ")"
    ],
    "question": "Find all the name of documents without any sections.",
    "question_toks": [
      "Find",
      "all",
      "the",
      "name",
      "of",
      "documents",
      "without",
      "any",
      "sections",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  7
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      26,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "document_management",
    "query": "SELECT document_name FROM documents WHERE document_code NOT IN (SELECT document_code FROM document_sections)",
    "query_toks": [
      "SELECT",
      "document_name",
      "FROM",
      "documents",
      "WHERE",
      "document_code",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "document_code",
      "FROM",
      "document_sections",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "document_name",
      "from",
      "documents",
      "where",
      "document_code",
      "not",
      "in",
      "(",
      "select",
      "document_code",
      "from",
      "document_sections",
      ")"
    ],
    "question": "What are the names of documents that do not have any sections?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "documents",
      "that",
      "do",
      "not",
      "have",
      "any",
      "sections",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  7
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      26,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "document_management",
    "query": "SELECT document_name FROM documents WHERE document_name LIKE \"%CV%\"",
    "query_toks": [
      "SELECT",
      "document_name",
      "FROM",
      "documents",
      "WHERE",
      "document_name",
      "LIKE",
      "``",
      "%",
      "CV",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "document_name",
      "from",
      "documents",
      "where",
      "document_name",
      "like",
      "value"
    ],
    "question": "List all the document names which contains \"CV\".",
    "question_toks": [
      "List",
      "all",
      "the",
      "document",
      "names",
      "which",
      "contains",
      "``",
      "CV",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          "\"%CV%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "document_management",
    "query": "SELECT document_name FROM documents WHERE document_name LIKE \"%CV%\"",
    "query_toks": [
      "SELECT",
      "document_name",
      "FROM",
      "documents",
      "WHERE",
      "document_name",
      "LIKE",
      "``",
      "%",
      "CV",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "document_name",
      "from",
      "documents",
      "where",
      "document_name",
      "like",
      "value"
    ],
    "question": "What are the names of documents that contain the substring \"CV\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "documents",
      "that",
      "contain",
      "the",
      "substring",
      "``",
      "CV",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          "\"%CV%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "document_management",
    "query": "SELECT count(*) FROM users WHERE user_login  =  1",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "users",
      "WHERE",
      "user_login",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "users",
      "where",
      "user_login",
      "=",
      "value"
    ],
    "question": "How many users are logged in?",
    "question_toks": [
      "How",
      "many",
      "users",
      "are",
      "logged",
      "in",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "document_management",
    "query": "SELECT count(*) FROM users WHERE user_login  =  1",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "users",
      "WHERE",
      "user_login",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "users",
      "where",
      "user_login",
      "=",
      "value"
    ],
    "question": "Count the number of users that are logged in.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "users",
      "that",
      "are",
      "logged",
      "in",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "document_management",
    "query": "SELECT role_description FROM ROLES WHERE role_code  =  (SELECT role_code FROM users WHERE user_login  =  1 GROUP BY role_code ORDER BY count(*) DESC LIMIT 1)",
    "query_toks": [
      "SELECT",
      "role_description",
      "FROM",
      "ROLES",
      "WHERE",
      "role_code",
      "=",
      "(",
      "SELECT",
      "role_code",
      "FROM",
      "users",
      "WHERE",
      "user_login",
      "=",
      "1",
      "GROUP",
      "BY",
      "role_code",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "role_description",
      "from",
      "roles",
      "where",
      "role_code",
      "=",
      "(",
      "select",
      "role_code",
      "from",
      "users",
      "where",
      "user_login",
      "=",
      "value",
      "group",
      "by",
      "role_code",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value",
      ")"
    ],
    "question": "Find the description of the most popular role among the users that have logged in.",
    "question_toks": [
      "Find",
      "the",
      "description",
      "of",
      "the",
      "most",
      "popular",
      "role",
      "among",
      "the",
      "users",
      "that",
      "have",
      "logged",
      "in",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                1.0,
                null
              ]
            ],
            "groupBy": [
              [
                0,
                4,
                false
              ]
            ],
            "having": [],
            "orderBy": [
              "desc",
              [
                [
                  0,
                  [
                    3,
                    0,
                    false
                  ],
                  null
                ]
              ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "document_management",
    "query": "SELECT role_description FROM ROLES WHERE role_code  =  (SELECT role_code FROM users WHERE user_login  =  1 GROUP BY role_code ORDER BY count(*) DESC LIMIT 1)",
    "query_toks": [
      "SELECT",
      "role_description",
      "FROM",
      "ROLES",
      "WHERE",
      "role_code",
      "=",
      "(",
      "SELECT",
      "role_code",
      "FROM",
      "users",
      "WHERE",
      "user_login",
      "=",
      "1",
      "GROUP",
      "BY",
      "role_code",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "role_description",
      "from",
      "roles",
      "where",
      "role_code",
      "=",
      "(",
      "select",
      "role_code",
      "from",
      "users",
      "where",
      "user_login",
      "=",
      "value",
      "group",
      "by",
      "role_code",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value",
      ")"
    ],
    "question": "What is the description of the most popular role among users that have logged in?",
    "question_toks": [
      "What",
      "is",
      "the",
      "description",
      "of",
      "the",
      "most",
      "popular",
      "role",
      "among",
      "users",
      "that",
      "have",
      "logged",
      "in",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                1.0,
                null
              ]
            ],
            "groupBy": [
              [
                0,
                4,
                false
              ]
            ],
            "having": [],
            "orderBy": [
              "desc",
              [
                [
                  0,
                  [
                    3,
                    0,
                    false
                  ],
                  null
                ]
              ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT count(*) FROM Companies",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Companies"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "companies"
    ],
    "question": "How many companies are there?",
    "question_toks": [
      "How",
      "many",
      "companies",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT count(*) FROM Companies",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Companies"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "companies"
    ],
    "question": "Count the number of companies.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "companies",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT name FROM Companies WHERE Headquarters != 'USA'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Companies",
      "WHERE",
      "Headquarters",
      "!",
      "=",
      "'USA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "companies",
      "where",
      "headquarters",
      "!",
      "=",
      "value"
    ],
    "question": "What are the names of companies whose headquarters are not \"USA\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "companies",
      "whose",
      "headquarters",
      "are",
      "not",
      "``",
      "USA",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"USA\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT name FROM Companies WHERE Headquarters != 'USA'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Companies",
      "WHERE",
      "Headquarters",
      "!",
      "=",
      "'USA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "companies",
      "where",
      "headquarters",
      "!",
      "=",
      "value"
    ],
    "question": "Find the names of the companies whose headquarters are not located in \"USA\".",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "the",
      "companies",
      "whose",
      "headquarters",
      "are",
      "not",
      "located",
      "in",
      "``",
      "USA",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"USA\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT avg(Profits_billion) FROM Companies",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Profits_billion",
      ")",
      "FROM",
      "Companies"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "profits_billion",
      ")",
      "from",
      "companies"
    ],
    "question": "What are the average profits of companies?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "profits",
      "of",
      "companies",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT avg(Profits_billion) FROM Companies",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Profits_billion",
      ")",
      "FROM",
      "Companies"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "profits_billion",
      ")",
      "from",
      "companies"
    ],
    "question": "Compute the average profits companies make.",
    "question_toks": [
      "Compute",
      "the",
      "average",
      "profits",
      "companies",
      "make",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT max(Sales_billion) ,  min(Sales_billion) FROM Companies WHERE Industry != \"Banking\"",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Sales_billion",
      ")",
      ",",
      "min",
      "(",
      "Sales_billion",
      ")",
      "FROM",
      "Companies",
      "WHERE",
      "Industry",
      "!",
      "=",
      "``",
      "Banking",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "sales_billion",
      ")",
      ",",
      "min",
      "(",
      "sales_billion",
      ")",
      "from",
      "companies",
      "where",
      "industry",
      "!",
      "=",
      "value"
    ],
    "question": "What are the maximum and minimum sales of the companies whose industries are not \"Banking\".",
    "question_toks": [
      "What",
      "are",
      "the",
      "maximum",
      "and",
      "minimum",
      "sales",
      "of",
      "the",
      "companies",
      "whose",
      "industries",
      "are",
      "not",
      "``",
      "Banking",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Banking\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT max(Sales_billion) ,  min(Sales_billion) FROM Companies WHERE Industry != \"Banking\"",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Sales_billion",
      ")",
      ",",
      "min",
      "(",
      "Sales_billion",
      ")",
      "FROM",
      "Companies",
      "WHERE",
      "Industry",
      "!",
      "=",
      "``",
      "Banking",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "sales_billion",
      ")",
      ",",
      "min",
      "(",
      "sales_billion",
      ")",
      "from",
      "companies",
      "where",
      "industry",
      "!",
      "=",
      "value"
    ],
    "question": "Find the maximum and minimum sales of the companies that are not in the \"Banking\" industry.",
    "question_toks": [
      "Find",
      "the",
      "maximum",
      "and",
      "minimum",
      "sales",
      "of",
      "the",
      "companies",
      "that",
      "are",
      "not",
      "in",
      "the",
      "``",
      "Banking",
      "''",
      "industry",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Banking\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT count(DISTINCT Industry) FROM Companies",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Industry",
      ")",
      "FROM",
      "Companies"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "industry",
      ")",
      "from",
      "companies"
    ],
    "question": "How many different industries are the companies in?",
    "question_toks": [
      "How",
      "many",
      "different",
      "industries",
      "are",
      "the",
      "companies",
      "in",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                10,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT count(DISTINCT Industry) FROM Companies",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Industry",
      ")",
      "FROM",
      "Companies"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "industry",
      ")",
      "from",
      "companies"
    ],
    "question": "Count the number of distinct company industries.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "distinct",
      "company",
      "industries",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                10,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT name FROM buildings WHERE id NOT IN (SELECT building_id FROM Office_locations)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "buildings",
      "WHERE",
      "id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "building_id",
      "FROM",
      "Office_locations",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "buildings",
      "where",
      "id",
      "not",
      "in",
      "(",
      "select",
      "building_id",
      "from",
      "office_locations",
      ")"
    ],
    "question": "List the names of buildings that have no company office.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "buildings",
      "that",
      "have",
      "no",
      "company",
      "office",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      15,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT name FROM buildings WHERE id NOT IN (SELECT building_id FROM Office_locations)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "buildings",
      "WHERE",
      "id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "building_id",
      "FROM",
      "Office_locations",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "buildings",
      "where",
      "id",
      "not",
      "in",
      "(",
      "select",
      "building_id",
      "from",
      "office_locations",
      ")"
    ],
    "question": "Which buildings do not have any company office? Give me the building names.",
    "question_toks": [
      "Which",
      "buildings",
      "do",
      "not",
      "have",
      "any",
      "company",
      "office",
      "?",
      "Give",
      "me",
      "the",
      "building",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      15,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT count(*) FROM Companies WHERE Industry  =  \"Banking\" OR Industry  =  \"Conglomerate\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Companies",
      "WHERE",
      "Industry",
      "=",
      "``",
      "Banking",
      "''",
      "OR",
      "Industry",
      "=",
      "``",
      "Conglomerate",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "companies",
      "where",
      "industry",
      "=",
      "value",
      "or",
      "industry",
      "=",
      "value"
    ],
    "question": "Find the number of companies whose industry is \"Banking\" or \"Conglomerate\",",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "companies",
      "whose",
      "industry",
      "is",
      "``",
      "Banking",
      "''",
      "or",
      "``",
      "Conglomerate",
      "''",
      ","
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Banking\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Conglomerate\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT count(*) FROM Companies WHERE Industry  =  \"Banking\" OR Industry  =  \"Conglomerate\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Companies",
      "WHERE",
      "Industry",
      "=",
      "``",
      "Banking",
      "''",
      "OR",
      "Industry",
      "=",
      "``",
      "Conglomerate",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "companies",
      "where",
      "industry",
      "=",
      "value",
      "or",
      "industry",
      "=",
      "value"
    ],
    "question": "How many companies are in either \"Banking\" industry or \"Conglomerate\" industry?",
    "question_toks": [
      "How",
      "many",
      "companies",
      "are",
      "in",
      "either",
      "``",
      "Banking",
      "''",
      "industry",
      "or",
      "``",
      "Conglomerate",
      "''",
      "industry",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Banking\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Conglomerate\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "solvency_ii",
    "query": "SELECT count(*) FROM Products",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Products"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "products"
    ],
    "question": "How many products are there?",
    "question_toks": [
      "How",
      "many",
      "products",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "solvency_ii",
    "query": "SELECT Product_Name ,  Product_Type_Code FROM Products",
    "query_toks": [
      "SELECT",
      "Product_Name",
      ",",
      "Product_Type_Code",
      "FROM",
      "Products"
    ],
    "query_toks_no_value": [
      "select",
      "product_name",
      ",",
      "product_type_code",
      "from",
      "products"
    ],
    "question": "What are the names and type codes of products?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "type",
      "codes",
      "of",
      "products",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "solvency_ii",
    "query": "SELECT Product_Price FROM Products WHERE Product_Name  =  \"Dining\" OR Product_Name  =  \"Trading Policy\"",
    "query_toks": [
      "SELECT",
      "Product_Price",
      "FROM",
      "Products",
      "WHERE",
      "Product_Name",
      "=",
      "``",
      "Dining",
      "''",
      "OR",
      "Product_Name",
      "=",
      "``",
      "Trading",
      "Policy",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "product_price",
      "from",
      "products",
      "where",
      "product_name",
      "=",
      "value",
      "or",
      "product_name",
      "=",
      "value"
    ],
    "question": "Show the prices of the products named \"Dining\" or \"Trading Policy\".",
    "question_toks": [
      "Show",
      "the",
      "prices",
      "of",
      "the",
      "products",
      "named",
      "``",
      "Dining",
      "''",
      "or",
      "``",
      "Trading",
      "Policy",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"Dining\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"Trading Policy\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "solvency_ii",
    "query": "SELECT avg(Product_Price) FROM Products",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Product_Price",
      ")",
      "FROM",
      "Products"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "product_price",
      ")",
      "from",
      "products"
    ],
    "question": "What is the average price for products?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "price",
      "for",
      "products",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "solvency_ii",
    "query": "SELECT Product_Name FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events)",
    "query_toks": [
      "SELECT",
      "Product_Name",
      "FROM",
      "Products",
      "WHERE",
      "Product_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Product_ID",
      "FROM",
      "Products_in_Events",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "product_name",
      "from",
      "products",
      "where",
      "product_id",
      "not",
      "in",
      "(",
      "select",
      "product_id",
      "from",
      "products_in_events",
      ")"
    ],
    "question": "List the names of products that are not in any event.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "products",
      "that",
      "are",
      "not",
      "in",
      "any",
      "event",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  8
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      25,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entertainment_awards",
    "query": "SELECT count(*) FROM artwork",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "artwork"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "artwork"
    ],
    "question": "How many artworks are there?",
    "question_toks": [
      "How",
      "many",
      "artworks",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entertainment_awards",
    "query": "SELECT Name FROM artwork WHERE TYPE != \"Program Talent Show\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "artwork",
      "WHERE",
      "TYPE",
      "!",
      "=",
      "``",
      "Program",
      "Talent",
      "Show",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "artwork",
      "where",
      "type",
      "!",
      "=",
      "value"
    ],
    "question": "List the name of artworks whose type is not \"Program Talent Show\".",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "artworks",
      "whose",
      "type",
      "is",
      "not",
      "``",
      "Program",
      "Talent",
      "Show",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Program Talent Show\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entertainment_awards",
    "query": "SELECT Festival_Name ,  LOCATION FROM festival_detail",
    "query_toks": [
      "SELECT",
      "Festival_Name",
      ",",
      "LOCATION",
      "FROM",
      "festival_detail"
    ],
    "query_toks_no_value": [
      "select",
      "festival_name",
      ",",
      "location",
      "from",
      "festival_detail"
    ],
    "question": "What are the names and locations of festivals?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "locations",
      "of",
      "festivals",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entertainment_awards",
    "query": "SELECT Festival_Name FROM festival_detail WHERE YEAR  =  2007",
    "query_toks": [
      "SELECT",
      "Festival_Name",
      "FROM",
      "festival_detail",
      "WHERE",
      "YEAR",
      "=",
      "2007"
    ],
    "query_toks_no_value": [
      "select",
      "festival_name",
      "from",
      "festival_detail",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "What are the names of festivals held in year 2007?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "festivals",
      "held",
      "in",
      "year",
      "2007",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          2007.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entertainment_awards",
    "query": "SELECT avg(Num_of_Audience) FROM festival_detail",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Num_of_Audience",
      ")",
      "FROM",
      "festival_detail"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "num_of_audience",
      ")",
      "from",
      "festival_detail"
    ],
    "question": "What is the average number of audience for festivals?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "audience",
      "for",
      "festivals",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entertainment_awards",
    "query": "SELECT Name FROM Artwork WHERE Artwork_ID NOT IN (SELECT Artwork_ID FROM nomination)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "Artwork",
      "WHERE",
      "Artwork_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Artwork_ID",
      "FROM",
      "nomination",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "artwork",
      "where",
      "artwork_id",
      "not",
      "in",
      "(",
      "select",
      "artwork_id",
      "from",
      "nomination",
      ")"
    ],
    "question": "List the name of artworks that are not nominated.",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "artworks",
      "that",
      "are",
      "not",
      "nominated",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      10,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entertainment_awards",
    "query": "SELECT Num_of_Audience FROM festival_detail WHERE YEAR  =  2008 OR YEAR  =  2010",
    "query_toks": [
      "SELECT",
      "Num_of_Audience",
      "FROM",
      "festival_detail",
      "WHERE",
      "YEAR",
      "=",
      "2008",
      "OR",
      "YEAR",
      "=",
      "2010"
    ],
    "query_toks_no_value": [
      "select",
      "num_of_audience",
      "from",
      "festival_detail",
      "where",
      "year",
      "=",
      "value",
      "or",
      "year",
      "=",
      "value"
    ],
    "question": "Show the number of audience in year 2008 or 2010.",
    "question_toks": [
      "Show",
      "the",
      "number",
      "of",
      "audience",
      "in",
      "year",
      "2008",
      "or",
      "2010",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          2008.0,
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entertainment_awards",
    "query": "SELECT sum(Num_of_Audience) FROM festival_detail",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "Num_of_Audience",
      ")",
      "FROM",
      "festival_detail"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "num_of_audience",
      ")",
      "from",
      "festival_detail"
    ],
    "question": "What are the total number of the audiences who visited any of the festivals?",
    "question_toks": [
      "What",
      "are",
      "the",
      "total",
      "number",
      "of",
      "the",
      "audiences",
      "who",
      "visited",
      "any",
      "of",
      "the",
      "festivals",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_campaigns_ecommerce",
    "query": "SELECT count(*) FROM premises",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "premises"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "premises"
    ],
    "question": "How many premises are there?",
    "question_toks": [
      "How",
      "many",
      "premises",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_campaigns_ecommerce",
    "query": "SELECT customer_name ,  customer_phone FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM mailshot_customers)",
    "query_toks": [
      "SELECT",
      "customer_name",
      ",",
      "customer_phone",
      "FROM",
      "customers",
      "WHERE",
      "customer_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "customer_id",
      "FROM",
      "mailshot_customers",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "customer_name",
      ",",
      "customer_phone",
      "from",
      "customers",
      "where",
      "customer_id",
      "not",
      "in",
      "(",
      "select",
      "customer_id",
      "from",
      "mailshot_customers",
      ")"
    ],
    "question": "Show the name and phone of the customer without any mailshot.",
    "question_toks": [
      "Show",
      "the",
      "name",
      "and",
      "phone",
      "of",
      "the",
      "customer",
      "without",
      "any",
      "mailshot",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  6
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      33,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_campaigns_ecommerce",
    "query": "SELECT order_shipping_charges ,  customer_id FROM customer_orders WHERE order_status_code  =  'Cancelled' OR order_status_code  =  'Paid'",
    "query_toks": [
      "SELECT",
      "order_shipping_charges",
      ",",
      "customer_id",
      "FROM",
      "customer_orders",
      "WHERE",
      "order_status_code",
      "=",
      "'Cancelled",
      "'",
      "OR",
      "order_status_code",
      "=",
      "'Paid",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "order_shipping_charges",
      ",",
      "customer_id",
      "from",
      "customer_orders",
      "where",
      "order_status_code",
      "=",
      "value",
      "or",
      "order_status_code",
      "=",
      "value"
    ],
    "question": "Show the shipping charge and customer id for customer orders with order status Cancelled or Paid.",
    "question_toks": [
      "Show",
      "the",
      "shipping",
      "charge",
      "and",
      "customer",
      "id",
      "for",
      "customer",
      "orders",
      "with",
      "order",
      "status",
      "Cancelled",
      "or",
      "Paid",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          "\"Cancelled\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          "\"Paid\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT count(*) FROM COURSE",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "COURSE"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "course"
    ],
    "question": "How many courses are there in total?",
    "question_toks": [
      "How",
      "many",
      "courses",
      "are",
      "there",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT count(*) FROM COURSE",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "COURSE"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "course"
    ],
    "question": "Count the number of courses.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "courses",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT count(*) FROM COURSE WHERE Credits  >  2",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "COURSE",
      "WHERE",
      "Credits",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "course",
      "where",
      "credits",
      ">",
      "value"
    ],
    "question": "How many courses have more than 2 credits?",
    "question_toks": [
      "How",
      "many",
      "courses",
      "have",
      "more",
      "than",
      "2",
      "credits",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              28,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT count(*) FROM COURSE WHERE Credits  >  2",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "COURSE",
      "WHERE",
      "Credits",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "course",
      "where",
      "credits",
      ">",
      "value"
    ],
    "question": "Count the number of courses with more than 2 credits.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "courses",
      "with",
      "more",
      "than",
      "2",
      "credits",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              28,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT CName FROM COURSE WHERE Credits  =  1",
    "query_toks": [
      "SELECT",
      "CName",
      "FROM",
      "COURSE",
      "WHERE",
      "Credits",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "cname",
      "from",
      "course",
      "where",
      "credits",
      "=",
      "value"
    ],
    "question": "List all names of courses with 1 credit?",
    "question_toks": [
      "List",
      "all",
      "names",
      "of",
      "courses",
      "with",
      "1",
      "credit",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              28,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT CName FROM COURSE WHERE Credits  =  1",
    "query_toks": [
      "SELECT",
      "CName",
      "FROM",
      "COURSE",
      "WHERE",
      "Credits",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "cname",
      "from",
      "course",
      "where",
      "credits",
      "=",
      "value"
    ],
    "question": "What are the names of courses with 1 credit?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "courses",
      "with",
      "1",
      "credit",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              28,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT CName FROM COURSE WHERE Days  =  \"MTW\"",
    "query_toks": [
      "SELECT",
      "CName",
      "FROM",
      "COURSE",
      "WHERE",
      "Days",
      "=",
      "``",
      "MTW",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "cname",
      "from",
      "course",
      "where",
      "days",
      "=",
      "value"
    ],
    "question": "Which courses are taught on days MTW?",
    "question_toks": [
      "Which",
      "courses",
      "are",
      "taught",
      "on",
      "days",
      "MTW",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          "\"MTW\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT CName FROM COURSE WHERE Days  =  \"MTW\"",
    "query_toks": [
      "SELECT",
      "CName",
      "FROM",
      "COURSE",
      "WHERE",
      "Days",
      "=",
      "``",
      "MTW",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "cname",
      "from",
      "course",
      "where",
      "days",
      "=",
      "value"
    ],
    "question": "What are the course names for courses taught on MTW?",
    "question_toks": [
      "What",
      "are",
      "the",
      "course",
      "names",
      "for",
      "courses",
      "taught",
      "on",
      "MTW",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          "\"MTW\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT count(*) FROM DEPARTMENT WHERE Division  =  \"AS\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "DEPARTMENT",
      "WHERE",
      "Division",
      "=",
      "``",
      "AS",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "department",
      "where",
      "division",
      "=",
      "value"
    ],
    "question": "What is the number of departments in Division \"AS\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "departments",
      "in",
      "Division",
      "``",
      "AS",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"AS\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT count(*) FROM DEPARTMENT WHERE Division  =  \"AS\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "DEPARTMENT",
      "WHERE",
      "Division",
      "=",
      "``",
      "AS",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "department",
      "where",
      "division",
      "=",
      "value"
    ],
    "question": "How many departments are in the division AS?",
    "question_toks": [
      "How",
      "many",
      "departments",
      "are",
      "in",
      "the",
      "division",
      "AS",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"AS\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT DPhone FROM DEPARTMENT WHERE Room  =  268",
    "query_toks": [
      "SELECT",
      "DPhone",
      "FROM",
      "DEPARTMENT",
      "WHERE",
      "Room",
      "=",
      "268"
    ],
    "query_toks_no_value": [
      "select",
      "dphone",
      "from",
      "department",
      "where",
      "room",
      "=",
      "value"
    ],
    "question": "What are the phones of departments in Room 268?",
    "question_toks": [
      "What",
      "are",
      "the",
      "phones",
      "of",
      "departments",
      "in",
      "Room",
      "268",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          268.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT DPhone FROM DEPARTMENT WHERE Room  =  268",
    "query_toks": [
      "SELECT",
      "DPhone",
      "FROM",
      "DEPARTMENT",
      "WHERE",
      "Room",
      "=",
      "268"
    ],
    "query_toks_no_value": [
      "select",
      "dphone",
      "from",
      "department",
      "where",
      "room",
      "=",
      "value"
    ],
    "question": "Give the phones for departments in room 268.",
    "question_toks": [
      "Give",
      "the",
      "phones",
      "for",
      "departments",
      "in",
      "room",
      "268",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          268.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT COUNT(DISTINCT StuID) FROM ENROLLED_IN WHERE Grade  =  \"B\"",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "StuID",
      ")",
      "FROM",
      "ENROLLED_IN",
      "WHERE",
      "Grade",
      "=",
      "``",
      "B",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "stuid",
      ")",
      "from",
      "enrolled_in",
      "where",
      "grade",
      "=",
      "value"
    ],
    "question": "Find the number of students that have at least one grade \"B\".",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "students",
      "that",
      "have",
      "at",
      "least",
      "one",
      "grade",
      "``",
      "B",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                35,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              37,
              false
            ],
            null
          ],
          "\"B\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT COUNT(DISTINCT StuID) FROM ENROLLED_IN WHERE Grade  =  \"B\"",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "StuID",
      ")",
      "FROM",
      "ENROLLED_IN",
      "WHERE",
      "Grade",
      "=",
      "``",
      "B",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "stuid",
      ")",
      "from",
      "enrolled_in",
      "where",
      "grade",
      "=",
      "value"
    ],
    "question": "How many students have had at least one \"B\" grade?",
    "question_toks": [
      "How",
      "many",
      "students",
      "have",
      "had",
      "at",
      "least",
      "one",
      "``",
      "B",
      "''",
      "grade",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                35,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              37,
              false
            ],
            null
          ],
          "\"B\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT max(gradepoint) ,  min(gradepoint) FROM GRADECONVERSION",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "gradepoint",
      ")",
      ",",
      "min",
      "(",
      "gradepoint",
      ")",
      "FROM",
      "GRADECONVERSION"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "gradepoint",
      ")",
      ",",
      "min",
      "(",
      "gradepoint",
      ")",
      "from",
      "gradeconversion"
    ],
    "question": "Find the max and min grade point for all letter grade.",
    "question_toks": [
      "Find",
      "the",
      "max",
      "and",
      "min",
      "grade",
      "point",
      "for",
      "all",
      "letter",
      "grade",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT max(gradepoint) ,  min(gradepoint) FROM GRADECONVERSION",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "gradepoint",
      ")",
      ",",
      "min",
      "(",
      "gradepoint",
      ")",
      "FROM",
      "GRADECONVERSION"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "gradepoint",
      ")",
      ",",
      "min",
      "(",
      "gradepoint",
      ")",
      "from",
      "gradeconversion"
    ],
    "question": "What are the maximum and minumum grade points?",
    "question_toks": [
      "What",
      "are",
      "the",
      "maximum",
      "and",
      "minumum",
      "grade",
      "points",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT Fname ,  Lname FROM FACULTY WHERE sex  =  \"M\" AND Building  =  \"NEB\"",
    "query_toks": [
      "SELECT",
      "Fname",
      ",",
      "Lname",
      "FROM",
      "FACULTY",
      "WHERE",
      "sex",
      "=",
      "``",
      "M",
      "''",
      "AND",
      "Building",
      "=",
      "``",
      "NEB",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      ",",
      "lname",
      "from",
      "faculty",
      "where",
      "sex",
      "=",
      "value",
      "and",
      "building",
      "=",
      "value"
    ],
    "question": "Find the first names and last names of male (sex is M) faculties who live in building NEB.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "names",
      "and",
      "last",
      "names",
      "of",
      "male",
      "(",
      "sex",
      "is",
      "M",
      ")",
      "faculties",
      "who",
      "live",
      "in",
      "building",
      "NEB",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"M\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"NEB\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT Fname ,  Lname FROM FACULTY WHERE sex  =  \"M\" AND Building  =  \"NEB\"",
    "query_toks": [
      "SELECT",
      "Fname",
      ",",
      "Lname",
      "FROM",
      "FACULTY",
      "WHERE",
      "sex",
      "=",
      "``",
      "M",
      "''",
      "AND",
      "Building",
      "=",
      "``",
      "NEB",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      ",",
      "lname",
      "from",
      "faculty",
      "where",
      "sex",
      "=",
      "value",
      "and",
      "building",
      "=",
      "value"
    ],
    "question": "What are the full names of faculties with sex M and who live in building NEB?",
    "question_toks": [
      "What",
      "are",
      "the",
      "full",
      "names",
      "of",
      "faculties",
      "with",
      "sex",
      "M",
      "and",
      "who",
      "live",
      "in",
      "building",
      "NEB",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"M\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"NEB\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT Room FROM FACULTY WHERE Rank  =  \"Professor\" AND Building  =  \"NEB\"",
    "query_toks": [
      "SELECT",
      "Room",
      "FROM",
      "FACULTY",
      "WHERE",
      "Rank",
      "=",
      "``",
      "Professor",
      "''",
      "AND",
      "Building",
      "=",
      "``",
      "NEB",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "room",
      "from",
      "faculty",
      "where",
      "rank",
      "=",
      "value",
      "and",
      "building",
      "=",
      "value"
    ],
    "question": "Find the rooms of faculties with rank professor who live in building NEB.",
    "question_toks": [
      "Find",
      "the",
      "rooms",
      "of",
      "faculties",
      "with",
      "rank",
      "professor",
      "who",
      "live",
      "in",
      "building",
      "NEB",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Professor\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"NEB\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT Room FROM FACULTY WHERE Rank  =  \"Professor\" AND Building  =  \"NEB\"",
    "query_toks": [
      "SELECT",
      "Room",
      "FROM",
      "FACULTY",
      "WHERE",
      "Rank",
      "=",
      "``",
      "Professor",
      "''",
      "AND",
      "Building",
      "=",
      "``",
      "NEB",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "room",
      "from",
      "faculty",
      "where",
      "rank",
      "=",
      "value",
      "and",
      "building",
      "=",
      "value"
    ],
    "question": "What are the rooms for members of the faculty who are professors and who live in building NEB?",
    "question_toks": [
      "What",
      "are",
      "the",
      "rooms",
      "for",
      "members",
      "of",
      "the",
      "faculty",
      "who",
      "are",
      "professors",
      "and",
      "who",
      "live",
      "in",
      "building",
      "NEB",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Professor\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"NEB\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT DName FROM DEPARTMENT WHERE Building  =  \"Mergenthaler\"",
    "query_toks": [
      "SELECT",
      "DName",
      "FROM",
      "DEPARTMENT",
      "WHERE",
      "Building",
      "=",
      "``",
      "Mergenthaler",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "dname",
      "from",
      "department",
      "where",
      "building",
      "=",
      "value"
    ],
    "question": "Find the department name that is in Building \"Mergenthaler\".",
    "question_toks": [
      "Find",
      "the",
      "department",
      "name",
      "that",
      "is",
      "in",
      "Building",
      "``",
      "Mergenthaler",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          "\"Mergenthaler\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT DName FROM DEPARTMENT WHERE Building  =  \"Mergenthaler\"",
    "query_toks": [
      "SELECT",
      "DName",
      "FROM",
      "DEPARTMENT",
      "WHERE",
      "Building",
      "=",
      "``",
      "Mergenthaler",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "dname",
      "from",
      "department",
      "where",
      "building",
      "=",
      "value"
    ],
    "question": "What is the name of the department in the Building Mergenthaler?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "department",
      "in",
      "the",
      "Building",
      "Mergenthaler",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          "\"Mergenthaler\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN (SELECT StuID FROM ENROLLED_IN)",
    "query_toks": [
      "SELECT",
      "Fname",
      "FROM",
      "STUDENT",
      "WHERE",
      "StuID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "StuID",
      "FROM",
      "ENROLLED_IN",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      "from",
      "student",
      "where",
      "stuid",
      "not",
      "in",
      "(",
      "select",
      "stuid",
      "from",
      "enrolled_in",
      ")"
    ],
    "question": "Find the first name of students not enrolled in any course.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "name",
      "of",
      "students",
      "not",
      "enrolled",
      "in",
      "any",
      "course",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  6
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      35,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN (SELECT StuID FROM ENROLLED_IN)",
    "query_toks": [
      "SELECT",
      "Fname",
      "FROM",
      "STUDENT",
      "WHERE",
      "StuID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "StuID",
      "FROM",
      "ENROLLED_IN",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      "from",
      "student",
      "where",
      "stuid",
      "not",
      "in",
      "(",
      "select",
      "stuid",
      "from",
      "enrolled_in",
      ")"
    ],
    "question": "What are the first names of all students that are not enrolled in courses?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "names",
      "of",
      "all",
      "students",
      "that",
      "are",
      "not",
      "enrolled",
      "in",
      "courses",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  6
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      35,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_store",
    "query": "SELECT count(DISTINCT product_type_code) FROM products",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "product_type_code",
      ")",
      "FROM",
      "products"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "product_type_code",
      ")",
      "from",
      "products"
    ],
    "question": "Find the number of different product types.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "different",
      "product",
      "types",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                19,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_store",
    "query": "SELECT count(DISTINCT product_type_code) FROM products",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "product_type_code",
      ")",
      "FROM",
      "products"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "product_type_code",
      ")",
      "from",
      "products"
    ],
    "question": "Count the number of distinct product types.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "distinct",
      "product",
      "types",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                19,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_store",
    "query": "SELECT product_name ,  product_id FROM products WHERE product_price BETWEEN 600 AND 700",
    "query_toks": [
      "SELECT",
      "product_name",
      ",",
      "product_id",
      "FROM",
      "products",
      "WHERE",
      "product_price",
      "BETWEEN",
      "600",
      "AND",
      "700"
    ],
    "query_toks_no_value": [
      "select",
      "product_name",
      ",",
      "product_id",
      "from",
      "products",
      "where",
      "product_price",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "Return the names and ids of all products whose price is between 600 and 700.",
    "question_toks": [
      "Return",
      "the",
      "names",
      "and",
      "ids",
      "of",
      "all",
      "products",
      "whose",
      "price",
      "is",
      "between",
      "600",
      "and",
      "700",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          600.0,
          700.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_store",
    "query": "SELECT product_name ,  product_id FROM products WHERE product_price BETWEEN 600 AND 700",
    "query_toks": [
      "SELECT",
      "product_name",
      ",",
      "product_id",
      "FROM",
      "products",
      "WHERE",
      "product_price",
      "BETWEEN",
      "600",
      "AND",
      "700"
    ],
    "query_toks_no_value": [
      "select",
      "product_name",
      ",",
      "product_id",
      "from",
      "products",
      "where",
      "product_price",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What are the names and ids of products costing between 600 and 700?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "ids",
      "of",
      "products",
      "costing",
      "between",
      "600",
      "and",
      "700",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          600.0,
          700.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_store",
    "query": "SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_to  <  (SELECT max(date_assigned_to) FROM Staff_Department_Assignments WHERE job_title_code  =  'Clerical Staff')",
    "query_toks": [
      "SELECT",
      "staff_id",
      "FROM",
      "Staff_Department_Assignments",
      "WHERE",
      "date_assigned_to",
      "<",
      "(",
      "SELECT",
      "max",
      "(",
      "date_assigned_to",
      ")",
      "FROM",
      "Staff_Department_Assignments",
      "WHERE",
      "job_title_code",
      "=",
      "'Clerical",
      "Staff",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "staff_id",
      "from",
      "staff_department_assignments",
      "where",
      "date_assigned_to",
      "<",
      "(",
      "select",
      "max",
      "(",
      "date_assigned_to",
      ")",
      "from",
      "staff_department_assignments",
      "where",
      "job_title_code",
      "=",
      "value",
      ")"
    ],
    "question": "What is id of the staff who had a Staff Department Assignment earlier than any Clerical Staff?",
    "question_toks": [
      "What",
      "is",
      "id",
      "of",
      "the",
      "staff",
      "who",
      "had",
      "a",
      "Staff",
      "Department",
      "Assignment",
      "earlier",
      "than",
      "any",
      "Clerical",
      "Staff",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            13
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                52,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              56,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  13
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      56,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    55,
                    false
                  ],
                  null
                ],
                "\"Clerical Staff\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_store",
    "query": "SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_to  <  (SELECT max(date_assigned_to) FROM Staff_Department_Assignments WHERE job_title_code  =  'Clerical Staff')",
    "query_toks": [
      "SELECT",
      "staff_id",
      "FROM",
      "Staff_Department_Assignments",
      "WHERE",
      "date_assigned_to",
      "<",
      "(",
      "SELECT",
      "max",
      "(",
      "date_assigned_to",
      ")",
      "FROM",
      "Staff_Department_Assignments",
      "WHERE",
      "job_title_code",
      "=",
      "'Clerical",
      "Staff",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "staff_id",
      "from",
      "staff_department_assignments",
      "where",
      "date_assigned_to",
      "<",
      "(",
      "select",
      "max",
      "(",
      "date_assigned_to",
      ")",
      "from",
      "staff_department_assignments",
      "where",
      "job_title_code",
      "=",
      "value",
      ")"
    ],
    "question": "Return the id of the staff whose Staff Department Assignment was earlier than that of any Clerical Staff.",
    "question_toks": [
      "Return",
      "the",
      "id",
      "of",
      "the",
      "staff",
      "whose",
      "Staff",
      "Department",
      "Assignment",
      "was",
      "earlier",
      "than",
      "that",
      "of",
      "any",
      "Clerical",
      "Staff",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            13
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                52,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              56,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  13
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      56,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    55,
                    false
                  ],
                  null
                ],
                "\"Clerical Staff\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_store",
    "query": "SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE \"%TN%\"",
    "query_toks": [
      "SELECT",
      "customer_name",
      ",",
      "customer_id",
      "FROM",
      "customers",
      "WHERE",
      "customer_address",
      "LIKE",
      "``",
      "%",
      "TN",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_name",
      ",",
      "customer_id",
      "from",
      "customers",
      "where",
      "customer_address",
      "like",
      "value"
    ],
    "question": "What are the names and ids of customers whose address contains TN?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "ids",
      "of",
      "customers",
      "whose",
      "address",
      "contains",
      "TN",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"%TN%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_store",
    "query": "SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE \"%TN%\"",
    "query_toks": [
      "SELECT",
      "customer_name",
      ",",
      "customer_id",
      "FROM",
      "customers",
      "WHERE",
      "customer_address",
      "LIKE",
      "``",
      "%",
      "TN",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_name",
      ",",
      "customer_id",
      "from",
      "customers",
      "where",
      "customer_address",
      "like",
      "value"
    ],
    "question": "Return the names and ids of customers who have TN in their address.",
    "question_toks": [
      "Return",
      "the",
      "names",
      "and",
      "ids",
      "of",
      "customers",
      "who",
      "have",
      "TN",
      "in",
      "their",
      "address",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"%TN%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_store",
    "query": "SELECT product_id ,  product_name FROM products WHERE product_price  <  600 OR product_price  >  900",
    "query_toks": [
      "SELECT",
      "product_id",
      ",",
      "product_name",
      "FROM",
      "products",
      "WHERE",
      "product_price",
      "<",
      "600",
      "OR",
      "product_price",
      ">",
      "900"
    ],
    "query_toks_no_value": [
      "select",
      "product_id",
      ",",
      "product_name",
      "from",
      "products",
      "where",
      "product_price",
      "<",
      "value",
      "or",
      "product_price",
      ">",
      "value"
    ],
    "question": "What are id and name of the products whose price is lower than 600 or higher than 900?",
    "question_toks": [
      "What",
      "are",
      "id",
      "and",
      "name",
      "of",
      "the",
      "products",
      "whose",
      "price",
      "is",
      "lower",
      "than",
      "600",
      "or",
      "higher",
      "than",
      "900",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          600.0,
          null
        ],
        "or",
        [
          false,
          3,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          900.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_store",
    "query": "SELECT product_id ,  product_name FROM products WHERE product_price  <  600 OR product_price  >  900",
    "query_toks": [
      "SELECT",
      "product_id",
      ",",
      "product_name",
      "FROM",
      "products",
      "WHERE",
      "product_price",
      "<",
      "600",
      "OR",
      "product_price",
      ">",
      "900"
    ],
    "query_toks_no_value": [
      "select",
      "product_id",
      ",",
      "product_name",
      "from",
      "products",
      "where",
      "product_price",
      "<",
      "value",
      "or",
      "product_price",
      ">",
      "value"
    ],
    "question": "Give the ids and names of products with price lower than 600 or higher than 900.",
    "question_toks": [
      "Give",
      "the",
      "ids",
      "and",
      "names",
      "of",
      "products",
      "with",
      "price",
      "lower",
      "than",
      "600",
      "or",
      "higher",
      "than",
      "900",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          600.0,
          null
        ],
        "or",
        [
          false,
          3,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          900.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_store",
    "query": "SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "total_amount_purchased",
      ")",
      ",",
      "avg",
      "(",
      "total_value_purchased",
      ")",
      "FROM",
      "Product_Suppliers",
      "WHERE",
      "supplier_id",
      "=",
      "(",
      "SELECT",
      "supplier_id",
      "FROM",
      "Product_Suppliers",
      "GROUP",
      "BY",
      "supplier_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "total_amount_purchased",
      ")",
      ",",
      "avg",
      "(",
      "total_value_purchased",
      ")",
      "from",
      "product_suppliers",
      "where",
      "supplier_id",
      "=",
      "(",
      "select",
      "supplier_id",
      "from",
      "product_suppliers",
      "group",
      "by",
      "supplier_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value",
      ")"
    ],
    "question": "What are the average amount purchased and value purchased for the supplier who supplies the most products.",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "amount",
      "purchased",
      "and",
      "value",
      "purchased",
      "for",
      "the",
      "supplier",
      "who",
      "supplies",
      "the",
      "most",
      "products",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            12
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                50,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                51,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              47,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  12
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      47,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [
              [
                0,
                47,
                false
              ]
            ],
            "having": [],
            "orderBy": [
              "desc",
              [
                [
                  0,
                  [
                    3,
                    0,
                    false
                  ],
                  null
                ]
              ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_store",
    "query": "SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "total_amount_purchased",
      ")",
      ",",
      "avg",
      "(",
      "total_value_purchased",
      ")",
      "FROM",
      "Product_Suppliers",
      "WHERE",
      "supplier_id",
      "=",
      "(",
      "SELECT",
      "supplier_id",
      "FROM",
      "Product_Suppliers",
      "GROUP",
      "BY",
      "supplier_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "total_amount_purchased",
      ")",
      ",",
      "avg",
      "(",
      "total_value_purchased",
      ")",
      "from",
      "product_suppliers",
      "where",
      "supplier_id",
      "=",
      "(",
      "select",
      "supplier_id",
      "from",
      "product_suppliers",
      "group",
      "by",
      "supplier_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value",
      ")"
    ],
    "question": "Return the average total amount purchased and total value purchased for the supplier who supplies the greatest number of products.",
    "question_toks": [
      "Return",
      "the",
      "average",
      "total",
      "amount",
      "purchased",
      "and",
      "total",
      "value",
      "purchased",
      "for",
      "the",
      "supplier",
      "who",
      "supplies",
      "the",
      "greatest",
      "number",
      "of",
      "products",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            12
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                50,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                51,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              47,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  12
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      47,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [
              [
                0,
                47,
                false
              ]
            ],
            "having": [],
            "orderBy": [
              "desc",
              [
                [
                  0,
                  [
                    3,
                    0,
                    false
                  ],
                  null
                ]
              ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_store",
    "query": "SELECT max(customer_code) ,  min(customer_code) FROM Customers",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "customer_code",
      ")",
      ",",
      "min",
      "(",
      "customer_code",
      ")",
      "FROM",
      "Customers"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "customer_code",
      ")",
      ",",
      "min",
      "(",
      "customer_code",
      ")",
      "from",
      "customers"
    ],
    "question": "What is the largest and smallest customer codes?",
    "question_toks": [
      "What",
      "is",
      "the",
      "largest",
      "and",
      "smallest",
      "customer",
      "codes",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_store",
    "query": "SELECT max(customer_code) ,  min(customer_code) FROM Customers",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "customer_code",
      ")",
      ",",
      "min",
      "(",
      "customer_code",
      ")",
      "FROM",
      "Customers"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "customer_code",
      ")",
      ",",
      "min",
      "(",
      "customer_code",
      ")",
      "from",
      "customers"
    ],
    "question": "Return the maximum and minimum customer codes.",
    "question_toks": [
      "Return",
      "the",
      "maximum",
      "and",
      "minimum",
      "customer",
      "codes",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_store",
    "query": "SELECT customer_id ,  customer_name FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code != \"Credit Card\"",
    "query_toks": [
      "SELECT",
      "customer_id",
      ",",
      "customer_name",
      "FROM",
      "customers",
      "WHERE",
      "customer_address",
      "LIKE",
      "``",
      "%",
      "WY",
      "%",
      "''",
      "AND",
      "payment_method_code",
      "!",
      "=",
      "``",
      "Credit",
      "Card",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_id",
      ",",
      "customer_name",
      "from",
      "customers",
      "where",
      "customer_address",
      "like",
      "value",
      "and",
      "payment_method_code",
      "!",
      "=",
      "value"
    ],
    "question": "Find the id and name of customers whose address contains WY state and do not use credit card for payment.",
    "question_toks": [
      "Find",
      "the",
      "id",
      "and",
      "name",
      "of",
      "customers",
      "whose",
      "address",
      "contains",
      "WY",
      "state",
      "and",
      "do",
      "not",
      "use",
      "credit",
      "card",
      "for",
      "payment",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"%WY%\"",
          null
        ],
        "and",
        [
          false,
          7,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Credit Card\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_store",
    "query": "SELECT customer_id ,  customer_name FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code != \"Credit Card\"",
    "query_toks": [
      "SELECT",
      "customer_id",
      ",",
      "customer_name",
      "FROM",
      "customers",
      "WHERE",
      "customer_address",
      "LIKE",
      "``",
      "%",
      "WY",
      "%",
      "''",
      "AND",
      "payment_method_code",
      "!",
      "=",
      "``",
      "Credit",
      "Card",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_id",
      ",",
      "customer_name",
      "from",
      "customers",
      "where",
      "customer_address",
      "like",
      "value",
      "and",
      "payment_method_code",
      "!",
      "=",
      "value"
    ],
    "question": "What are the ids and names of customers with addressed that contain WY and who do not use a credit card for payment?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "and",
      "names",
      "of",
      "customers",
      "with",
      "addressed",
      "that",
      "contain",
      "WY",
      "and",
      "who",
      "do",
      "not",
      "use",
      "a",
      "credit",
      "card",
      "for",
      "payment",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"%WY%\"",
          null
        ],
        "and",
        [
          false,
          7,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Credit Card\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_store",
    "query": "SELECT avg(product_price) FROM products WHERE product_type_code  =  'Clothes'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "product_price",
      ")",
      "FROM",
      "products",
      "WHERE",
      "product_type_code",
      "=",
      "'Clothes",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "product_price",
      ")",
      "from",
      "products",
      "where",
      "product_type_code",
      "=",
      "value"
    ],
    "question": "Find the average price of all product clothes.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "price",
      "of",
      "all",
      "product",
      "clothes",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Clothes\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_store",
    "query": "SELECT avg(product_price) FROM products WHERE product_type_code  =  'Clothes'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "product_price",
      ")",
      "FROM",
      "products",
      "WHERE",
      "product_type_code",
      "=",
      "'Clothes",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "product_price",
      ")",
      "from",
      "products",
      "where",
      "product_type_code",
      "=",
      "value"
    ],
    "question": "What is the average price of clothes?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "price",
      "of",
      "clothes",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Clothes\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT count(*) FROM aircraft",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "aircraft"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "aircraft"
    ],
    "question": "How many aircrafts are there?",
    "question_toks": [
      "How",
      "many",
      "aircrafts",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT count(*) FROM aircraft",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "aircraft"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "aircraft"
    ],
    "question": "What is the number of aircraft?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "aircraft",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT Description FROM aircraft",
    "query_toks": [
      "SELECT",
      "Description",
      "FROM",
      "aircraft"
    ],
    "query_toks_no_value": [
      "select",
      "description",
      "from",
      "aircraft"
    ],
    "question": "List the description of all aircrafts.",
    "question_toks": [
      "List",
      "the",
      "description",
      "of",
      "all",
      "aircrafts",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT Description FROM aircraft",
    "query_toks": [
      "SELECT",
      "Description",
      "FROM",
      "aircraft"
    ],
    "query_toks_no_value": [
      "select",
      "description",
      "from",
      "aircraft"
    ],
    "question": "What are the descriptions for the aircrafts?",
    "question_toks": [
      "What",
      "are",
      "the",
      "descriptions",
      "for",
      "the",
      "aircrafts",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT avg(International_Passengers) FROM airport",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "International_Passengers",
      ")",
      "FROM",
      "airport"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "international_passengers",
      ")",
      "from",
      "airport"
    ],
    "question": "What is the average number of international passengers of all airports?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "international",
      "passengers",
      "of",
      "all",
      "airports",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT avg(International_Passengers) FROM airport",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "International_Passengers",
      ")",
      "FROM",
      "airport"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "international_passengers",
      ")",
      "from",
      "airport"
    ],
    "question": "What is the average number of international passengers for an airport?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "international",
      "passengers",
      "for",
      "an",
      "airport",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT International_Passengers ,  Domestic_Passengers FROM airport WHERE Airport_Name  =  \"London Heathrow\"",
    "query_toks": [
      "SELECT",
      "International_Passengers",
      ",",
      "Domestic_Passengers",
      "FROM",
      "airport",
      "WHERE",
      "Airport_Name",
      "=",
      "``",
      "London",
      "Heathrow",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "international_passengers",
      ",",
      "domestic_passengers",
      "from",
      "airport",
      "where",
      "airport_name",
      "=",
      "value"
    ],
    "question": "What are the number of international and domestic passengers of the airport named London \"Heathrow\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "number",
      "of",
      "international",
      "and",
      "domestic",
      "passengers",
      "of",
      "the",
      "airport",
      "named",
      "London",
      "``",
      "Heathrow",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"London Heathrow\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT International_Passengers ,  Domestic_Passengers FROM airport WHERE Airport_Name  =  \"London Heathrow\"",
    "query_toks": [
      "SELECT",
      "International_Passengers",
      ",",
      "Domestic_Passengers",
      "FROM",
      "airport",
      "WHERE",
      "Airport_Name",
      "=",
      "``",
      "London",
      "Heathrow",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "international_passengers",
      ",",
      "domestic_passengers",
      "from",
      "airport",
      "where",
      "airport_name",
      "=",
      "value"
    ],
    "question": "How many international and domestic passengers are there in the airport London Heathrow?",
    "question_toks": [
      "How",
      "many",
      "international",
      "and",
      "domestic",
      "passengers",
      "are",
      "there",
      "in",
      "the",
      "airport",
      "London",
      "Heathrow",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"London Heathrow\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE \"%London%\"",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "Domestic_Passengers",
      ")",
      "FROM",
      "airport",
      "WHERE",
      "Airport_Name",
      "LIKE",
      "``",
      "%",
      "London",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "domestic_passengers",
      ")",
      "from",
      "airport",
      "where",
      "airport_name",
      "like",
      "value"
    ],
    "question": "What are the total number of Domestic Passengers of airports that contain the word \"London\".",
    "question_toks": [
      "What",
      "are",
      "the",
      "total",
      "number",
      "of",
      "Domestic",
      "Passengers",
      "of",
      "airports",
      "that",
      "contain",
      "the",
      "word",
      "``",
      "London",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"%London%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE \"%London%\"",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "Domestic_Passengers",
      ")",
      "FROM",
      "airport",
      "WHERE",
      "Airport_Name",
      "LIKE",
      "``",
      "%",
      "London",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "domestic_passengers",
      ")",
      "from",
      "airport",
      "where",
      "airport_name",
      "like",
      "value"
    ],
    "question": "What are the total number of domestic passengers at all London airports?",
    "question_toks": [
      "What",
      "are",
      "the",
      "total",
      "number",
      "of",
      "domestic",
      "passengers",
      "at",
      "all",
      "London",
      "airports",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"%London%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT max(Transit_Passengers) ,  min(Transit_Passengers) FROM airport",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Transit_Passengers",
      ")",
      ",",
      "min",
      "(",
      "Transit_Passengers",
      ")",
      "FROM",
      "airport"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "transit_passengers",
      ")",
      ",",
      "min",
      "(",
      "transit_passengers",
      ")",
      "from",
      "airport"
    ],
    "question": "What are the maximum and minimum number of transit passengers of all aiports.",
    "question_toks": [
      "What",
      "are",
      "the",
      "maximum",
      "and",
      "minimum",
      "number",
      "of",
      "transit",
      "passengers",
      "of",
      "all",
      "aiports",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT max(Transit_Passengers) ,  min(Transit_Passengers) FROM airport",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Transit_Passengers",
      ")",
      ",",
      "min",
      "(",
      "Transit_Passengers",
      ")",
      "FROM",
      "airport"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "transit_passengers",
      ")",
      ",",
      "min",
      "(",
      "transit_passengers",
      ")",
      "from",
      "airport"
    ],
    "question": "What is the maximum and mininum number of transit passengers for all airports?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      "and",
      "mininum",
      "number",
      "of",
      "transit",
      "passengers",
      "for",
      "all",
      "airports",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT Name FROM pilot WHERE Age  >=  25",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "pilot",
      "WHERE",
      "Age",
      ">",
      "=",
      "25"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "pilot",
      "where",
      "age",
      ">",
      "=",
      "value"
    ],
    "question": "What are the name of pilots aged 25 or older?",
    "question_toks": [
      "What",
      "are",
      "the",
      "name",
      "of",
      "pilots",
      "aged",
      "25",
      "or",
      "older",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          25.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT Name FROM pilot WHERE Age  >=  25",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "pilot",
      "WHERE",
      "Age",
      ">",
      "=",
      "25"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "pilot",
      "where",
      "age",
      ">",
      "=",
      "value"
    ],
    "question": "what is the name of every pilot who is at least 25 years old?",
    "question_toks": [
      "what",
      "is",
      "the",
      "name",
      "of",
      "every",
      "pilot",
      "who",
      "is",
      "at",
      "least",
      "25",
      "years",
      "old",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          25.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN (SELECT Winning_Aircraft FROM MATCH)",
    "query_toks": [
      "SELECT",
      "Aircraft",
      "FROM",
      "aircraft",
      "WHERE",
      "Aircraft_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Winning_Aircraft",
      "FROM",
      "MATCH",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "aircraft",
      "from",
      "aircraft",
      "where",
      "aircraft_id",
      "not",
      "in",
      "(",
      "select",
      "winning_aircraft",
      "from",
      "match",
      ")"
    ],
    "question": "List the names of aircrafts and that did not win any match.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "aircrafts",
      "and",
      "that",
      "did",
      "not",
      "win",
      "any",
      "match",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      16,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN (SELECT Winning_Aircraft FROM MATCH)",
    "query_toks": [
      "SELECT",
      "Aircraft",
      "FROM",
      "aircraft",
      "WHERE",
      "Aircraft_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Winning_Aircraft",
      "FROM",
      "MATCH",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "aircraft",
      "from",
      "aircraft",
      "where",
      "aircraft_id",
      "not",
      "in",
      "(",
      "select",
      "winning_aircraft",
      "from",
      "match",
      ")"
    ],
    "question": "What are the names of all aicrafts that have never won any match?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "aicrafts",
      "that",
      "have",
      "never",
      "won",
      "any",
      "match",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      16,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT name FROM pilot WHERE pilot_id NOT IN (SELECT Winning_Pilot  FROM MATCH WHERE country  =  'Australia')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "pilot",
      "WHERE",
      "pilot_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Winning_Pilot",
      "FROM",
      "MATCH",
      "WHERE",
      "country",
      "=",
      "'Australia",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "pilot",
      "where",
      "pilot_id",
      "not",
      "in",
      "(",
      "select",
      "winning_pilot",
      "from",
      "match",
      "where",
      "country",
      "=",
      "value",
      ")"
    ],
    "question": "find the name of pilots who did not win the matches held in the country of Australia.",
    "question_toks": [
      "find",
      "the",
      "name",
      "of",
      "pilots",
      "who",
      "did",
      "not",
      "win",
      "the",
      "matches",
      "held",
      "in",
      "the",
      "country",
      "of",
      "Australia",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      15,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"Australia\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT name FROM pilot WHERE pilot_id NOT IN (SELECT Winning_Pilot  FROM MATCH WHERE country  =  'Australia')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "pilot",
      "WHERE",
      "pilot_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Winning_Pilot",
      "FROM",
      "MATCH",
      "WHERE",
      "country",
      "=",
      "'Australia",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "pilot",
      "where",
      "pilot_id",
      "not",
      "in",
      "(",
      "select",
      "winning_pilot",
      "from",
      "match",
      "where",
      "country",
      "=",
      "value",
      ")"
    ],
    "question": "What are the names of the pilots that have not won any matches in Australia?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "pilots",
      "that",
      "have",
      "not",
      "won",
      "any",
      "matches",
      "in",
      "Australia",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      15,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"Australia\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "local_govt_and_lot",
    "query": "SELECT count(DISTINCT Status_of_Thing_Code) FROM Timed_Status_of_Things",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Status_of_Thing_Code",
      ")",
      "FROM",
      "Timed_Status_of_Things"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "status_of_thing_code",
      ")",
      "from",
      "timed_status_of_things"
    ],
    "question": "How many different status codes of things are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "status",
      "codes",
      "of",
      "things",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            9
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                45,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "local_govt_and_lot",
    "query": "SELECT max(date_moved_in) FROM Residents",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "date_moved_in",
      ")",
      "FROM",
      "Residents"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "date_moved_in",
      ")",
      "from",
      "residents"
    ],
    "question": "When is the last day any resident moved in?",
    "question_toks": [
      "When",
      "is",
      "the",
      "last",
      "day",
      "any",
      "resident",
      "moved",
      "in",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "local_govt_and_lot",
    "query": "SELECT other_details FROM Residents WHERE other_details LIKE '%Miss%'",
    "query_toks": [
      "SELECT",
      "other_details",
      "FROM",
      "Residents",
      "WHERE",
      "other_details",
      "LIKE",
      "'",
      "%",
      "Miss",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "other_details",
      "from",
      "residents",
      "where",
      "other_details",
      "like",
      "value"
    ],
    "question": "What are the resident details containing the substring 'Miss'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "resident",
      "details",
      "containing",
      "the",
      "substring",
      "'Miss",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"%Miss%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "local_govt_and_lot",
    "query": "SELECT customer_event_id ,  date_moved_in ,  property_id FROM customer_events",
    "query_toks": [
      "SELECT",
      "customer_event_id",
      ",",
      "date_moved_in",
      ",",
      "property_id",
      "FROM",
      "customer_events"
    ],
    "query_toks_no_value": [
      "select",
      "customer_event_id",
      ",",
      "date_moved_in",
      ",",
      "property_id",
      "from",
      "customer_events"
    ],
    "question": "List the customer event id and the corresponding move in date and property id.",
    "question_toks": [
      "List",
      "the",
      "customer",
      "event",
      "id",
      "and",
      "the",
      "corresponding",
      "move",
      "in",
      "date",
      "and",
      "property",
      "id",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                33,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "local_govt_and_lot",
    "query": "SELECT count(*) FROM customers WHERE customer_id NOT IN ( SELECT customer_id FROM customer_events )",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customers",
      "WHERE",
      "customer_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "customer_id",
      "FROM",
      "customer_events",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers",
      "where",
      "customer_id",
      "not",
      "in",
      "(",
      "select",
      "customer_id",
      "from",
      "customer_events",
      ")"
    ],
    "question": "How many customers did not have any event?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "did",
      "not",
      "have",
      "any",
      "event",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  7
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      32,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT count(*) FROM school",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "school"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "school"
    ],
    "question": "How many schools are there?",
    "question_toks": [
      "How",
      "many",
      "schools",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT count(*) FROM school",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "school"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "school"
    ],
    "question": "Count the number of schools.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "schools",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT Enrollment FROM school WHERE Denomination != \"Catholic\"",
    "query_toks": [
      "SELECT",
      "Enrollment",
      "FROM",
      "school",
      "WHERE",
      "Denomination",
      "!",
      "=",
      "``",
      "Catholic",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "enrollment",
      "from",
      "school",
      "where",
      "denomination",
      "!",
      "=",
      "value"
    ],
    "question": "What are the enrollments of schools whose denomination is not \"Catholic\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "enrollments",
      "of",
      "schools",
      "whose",
      "denomination",
      "is",
      "not",
      "``",
      "Catholic",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Catholic\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT Enrollment FROM school WHERE Denomination != \"Catholic\"",
    "query_toks": [
      "SELECT",
      "Enrollment",
      "FROM",
      "school",
      "WHERE",
      "Denomination",
      "!",
      "=",
      "``",
      "Catholic",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "enrollment",
      "from",
      "school",
      "where",
      "denomination",
      "!",
      "=",
      "value"
    ],
    "question": "List the enrollment for each school that does not have \"Catholic\" as denomination.",
    "question_toks": [
      "List",
      "the",
      "enrollment",
      "for",
      "each",
      "school",
      "that",
      "does",
      "not",
      "have",
      "``",
      "Catholic",
      "''",
      "as",
      "denomination",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Catholic\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT avg(Enrollment) FROM school",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Enrollment",
      ")",
      "FROM",
      "school"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "enrollment",
      ")",
      "from",
      "school"
    ],
    "question": "What is the average enrollment of schools?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "enrollment",
      "of",
      "schools",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT avg(Enrollment) FROM school",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Enrollment",
      ")",
      "FROM",
      "school"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "enrollment",
      ")",
      "from",
      "school"
    ],
    "question": "Take the average of the school enrollment.",
    "question_toks": [
      "Take",
      "the",
      "average",
      "of",
      "the",
      "school",
      "enrollment",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT count(DISTINCT POSITION) FROM player",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "POSITION",
      ")",
      "FROM",
      "player"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "position",
      ")",
      "from",
      "player"
    ],
    "question": "How many different positions of players are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "positions",
      "of",
      "players",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                25,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT count(DISTINCT POSITION) FROM player",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "POSITION",
      ")",
      "FROM",
      "player"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "position",
      ")",
      "from",
      "player"
    ],
    "question": "Count the number of distinct player positions.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "distinct",
      "player",
      "positions",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                25,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT LOCATION FROM school WHERE School_ID NOT IN (SELECT School_ID FROM Player)",
    "query_toks": [
      "SELECT",
      "LOCATION",
      "FROM",
      "school",
      "WHERE",
      "School_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "School_ID",
      "FROM",
      "Player",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "location",
      "from",
      "school",
      "where",
      "school_id",
      "not",
      "in",
      "(",
      "select",
      "school_id",
      "from",
      "player",
      ")"
    ],
    "question": "List the locations of schools that do not have any player.",
    "question_toks": [
      "List",
      "the",
      "locations",
      "of",
      "schools",
      "that",
      "do",
      "not",
      "have",
      "any",
      "player",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      26,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT LOCATION FROM school WHERE School_ID NOT IN (SELECT School_ID FROM Player)",
    "query_toks": [
      "SELECT",
      "LOCATION",
      "FROM",
      "school",
      "WHERE",
      "School_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "School_ID",
      "FROM",
      "Player",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "location",
      "from",
      "school",
      "where",
      "school_id",
      "not",
      "in",
      "(",
      "select",
      "school_id",
      "from",
      "player",
      ")"
    ],
    "question": "Which schools do not have any player? Give me the school locations.",
    "question_toks": [
      "Which",
      "schools",
      "do",
      "not",
      "have",
      "any",
      "player",
      "?",
      "Give",
      "me",
      "the",
      "school",
      "locations",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      26,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT Nickname FROM school_details WHERE Division != \"Division 1\"",
    "query_toks": [
      "SELECT",
      "Nickname",
      "FROM",
      "school_details",
      "WHERE",
      "Division",
      "!",
      "=",
      "``",
      "Division",
      "1",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "nickname",
      "from",
      "school_details",
      "where",
      "division",
      "!",
      "=",
      "value"
    ],
    "question": "Show the nicknames of schools that are not in division 1.",
    "question_toks": [
      "Show",
      "the",
      "nicknames",
      "of",
      "schools",
      "that",
      "are",
      "not",
      "in",
      "division",
      "1",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"Division 1\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT Nickname FROM school_details WHERE Division != \"Division 1\"",
    "query_toks": [
      "SELECT",
      "Nickname",
      "FROM",
      "school_details",
      "WHERE",
      "Division",
      "!",
      "=",
      "``",
      "Division",
      "1",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "nickname",
      "from",
      "school_details",
      "where",
      "division",
      "!",
      "=",
      "value"
    ],
    "question": "What are the nicknames of schools whose division is not 1?",
    "question_toks": [
      "What",
      "are",
      "the",
      "nicknames",
      "of",
      "schools",
      "whose",
      "division",
      "is",
      "not",
      "1",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"Division 1\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_product",
    "query": "SELECT District_name ,  City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000",
    "query_toks": [
      "SELECT",
      "District_name",
      ",",
      "City_Population",
      "FROM",
      "district",
      "WHERE",
      "City_Population",
      "BETWEEN",
      "200000",
      "AND",
      "2000000"
    ],
    "query_toks_no_value": [
      "select",
      "district_name",
      ",",
      "city_population",
      "from",
      "district",
      "where",
      "city_population",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "Find the name and population of district with population between 200000 and 2000000",
    "question_toks": [
      "Find",
      "the",
      "name",
      "and",
      "population",
      "of",
      "district",
      "with",
      "population",
      "between",
      "200000",
      "and",
      "2000000"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          200000.0,
          2000000.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_product",
    "query": "SELECT District_name ,  City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000",
    "query_toks": [
      "SELECT",
      "District_name",
      ",",
      "City_Population",
      "FROM",
      "district",
      "WHERE",
      "City_Population",
      "BETWEEN",
      "200000",
      "AND",
      "2000000"
    ],
    "query_toks_no_value": [
      "select",
      "district_name",
      ",",
      "city_population",
      "from",
      "district",
      "where",
      "city_population",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?",
    "question_toks": [
      "What",
      "are",
      "the",
      "district",
      "names",
      "and",
      "city",
      "populations",
      "for",
      "all",
      "districts",
      "that",
      "between",
      "200,000",
      "and",
      "2,000,000",
      "residents",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          200000.0,
          2000000.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_product",
    "query": "SELECT district_name FROM district WHERE city_area  >  10 OR City_Population  >  100000",
    "query_toks": [
      "SELECT",
      "district_name",
      "FROM",
      "district",
      "WHERE",
      "city_area",
      ">",
      "10",
      "OR",
      "City_Population",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "district_name",
      "from",
      "district",
      "where",
      "city_area",
      ">",
      "value",
      "or",
      "city_population",
      ">",
      "value"
    ],
    "question": "Find the name all districts with city area greater than 10 or population larger than 100000",
    "question_toks": [
      "Find",
      "the",
      "name",
      "all",
      "districts",
      "with",
      "city",
      "area",
      "greater",
      "than",
      "10",
      "or",
      "population",
      "larger",
      "than",
      "100000"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          10.0,
          null
        ],
        "or",
        [
          false,
          3,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          100000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_product",
    "query": "SELECT district_name FROM district WHERE city_area  >  10 OR City_Population  >  100000",
    "query_toks": [
      "SELECT",
      "district_name",
      "FROM",
      "district",
      "WHERE",
      "city_area",
      ">",
      "10",
      "OR",
      "City_Population",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "district_name",
      "from",
      "district",
      "where",
      "city_area",
      ">",
      "value",
      "or",
      "city_population",
      ">",
      "value"
    ],
    "question": "What are the names of all districts with a city area greater than 10 or have more than 100000 people living there?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "districts",
      "with",
      "a",
      "city",
      "area",
      "greater",
      "than",
      "10",
      "or",
      "have",
      "more",
      "than",
      "100000",
      "people",
      "living",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          10.0,
          null
        ],
        "or",
        [
          false,
          3,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          100000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_product",
    "query": "SELECT avg(pages_per_minute_color) FROM product",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "pages_per_minute_color",
      ")",
      "FROM",
      "product"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "pages_per_minute_color",
      ")",
      "from",
      "product"
    ],
    "question": "What is the average pages per minute color?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "pages",
      "per",
      "minute",
      "color",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_product",
    "query": "SELECT avg(pages_per_minute_color) FROM product",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "pages_per_minute_color",
      ")",
      "FROM",
      "product"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "pages_per_minute_color",
      ")",
      "from",
      "product"
    ],
    "question": "What is the average number of pages per minute color?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "pages",
      "per",
      "minute",
      "color",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_product",
    "query": "SELECT product FROM product WHERE max_page_size  =  \"A4\" AND pages_per_minute_color  <  5",
    "query_toks": [
      "SELECT",
      "product",
      "FROM",
      "product",
      "WHERE",
      "max_page_size",
      "=",
      "``",
      "A4",
      "''",
      "AND",
      "pages_per_minute_color",
      "<",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "product",
      "from",
      "product",
      "where",
      "max_page_size",
      "=",
      "value",
      "and",
      "pages_per_minute_color",
      "<",
      "value"
    ],
    "question": "Find products with max page size as \"A4\" and pages per minute color smaller than 5.",
    "question_toks": [
      "Find",
      "products",
      "with",
      "max",
      "page",
      "size",
      "as",
      "``",
      "A4",
      "''",
      "and",
      "pages",
      "per",
      "minute",
      "color",
      "smaller",
      "than",
      "5",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"A4\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          5.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_product",
    "query": "SELECT product FROM product WHERE max_page_size  =  \"A4\" AND pages_per_minute_color  <  5",
    "query_toks": [
      "SELECT",
      "product",
      "FROM",
      "product",
      "WHERE",
      "max_page_size",
      "=",
      "``",
      "A4",
      "''",
      "AND",
      "pages_per_minute_color",
      "<",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "product",
      "from",
      "product",
      "where",
      "max_page_size",
      "=",
      "value",
      "and",
      "pages_per_minute_color",
      "<",
      "value"
    ],
    "question": "What are the products with the maximum page size A4 that also have a pages per minute color smaller than 5?",
    "question_toks": [
      "What",
      "are",
      "the",
      "products",
      "with",
      "the",
      "maximum",
      "page",
      "size",
      "A4",
      "that",
      "also",
      "have",
      "a",
      "pages",
      "per",
      "minute",
      "color",
      "smaller",
      "than",
      "5",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"A4\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          5.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_product",
    "query": "SELECT product FROM product WHERE max_page_size  =  \"A4\" OR pages_per_minute_color  <  5",
    "query_toks": [
      "SELECT",
      "product",
      "FROM",
      "product",
      "WHERE",
      "max_page_size",
      "=",
      "``",
      "A4",
      "''",
      "OR",
      "pages_per_minute_color",
      "<",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "product",
      "from",
      "product",
      "where",
      "max_page_size",
      "=",
      "value",
      "or",
      "pages_per_minute_color",
      "<",
      "value"
    ],
    "question": "Find products with max page size as \"A4\" or pages per minute color smaller than 5.",
    "question_toks": [
      "Find",
      "products",
      "with",
      "max",
      "page",
      "size",
      "as",
      "``",
      "A4",
      "''",
      "or",
      "pages",
      "per",
      "minute",
      "color",
      "smaller",
      "than",
      "5",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"A4\"",
          null
        ],
        "or",
        [
          false,
          4,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          5.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_product",
    "query": "SELECT product FROM product WHERE max_page_size  =  \"A4\" OR pages_per_minute_color  <  5",
    "query_toks": [
      "SELECT",
      "product",
      "FROM",
      "product",
      "WHERE",
      "max_page_size",
      "=",
      "``",
      "A4",
      "''",
      "OR",
      "pages_per_minute_color",
      "<",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "product",
      "from",
      "product",
      "where",
      "max_page_size",
      "=",
      "value",
      "or",
      "pages_per_minute_color",
      "<",
      "value"
    ],
    "question": "What are the products with the maximum page size eqal to A4 or a pages per minute color less than 5?",
    "question_toks": [
      "What",
      "are",
      "the",
      "products",
      "with",
      "the",
      "maximum",
      "page",
      "size",
      "eqal",
      "to",
      "A4",
      "or",
      "a",
      "pages",
      "per",
      "minute",
      "color",
      "less",
      "than",
      "5",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"A4\"",
          null
        ],
        "or",
        [
          false,
          4,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          5.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_product",
    "query": "SELECT product FROM product WHERE product LIKE \"%Scanner%\"",
    "query_toks": [
      "SELECT",
      "product",
      "FROM",
      "product",
      "WHERE",
      "product",
      "LIKE",
      "``",
      "%",
      "Scanner",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "product",
      "from",
      "product",
      "where",
      "product",
      "like",
      "value"
    ],
    "question": "Find all the product whose name contains the word \"Scanner\".",
    "question_toks": [
      "Find",
      "all",
      "the",
      "product",
      "whose",
      "name",
      "contains",
      "the",
      "word",
      "``",
      "Scanner",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"%Scanner%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_product",
    "query": "SELECT product FROM product WHERE product LIKE \"%Scanner%\"",
    "query_toks": [
      "SELECT",
      "product",
      "FROM",
      "product",
      "WHERE",
      "product",
      "LIKE",
      "``",
      "%",
      "Scanner",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "product",
      "from",
      "product",
      "where",
      "product",
      "like",
      "value"
    ],
    "question": "What are all of the products whose name includes the substring \"Scanner\"?",
    "question_toks": [
      "What",
      "are",
      "all",
      "of",
      "the",
      "products",
      "whose",
      "name",
      "includes",
      "the",
      "substring",
      "``",
      "Scanner",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"%Scanner%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_product",
    "query": "SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1)",
    "query_toks": [
      "SELECT",
      "product",
      "FROM",
      "product",
      "WHERE",
      "product",
      "!",
      "=",
      "(",
      "SELECT",
      "max_page_size",
      "FROM",
      "product",
      "GROUP",
      "BY",
      "max_page_size",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "product",
      "from",
      "product",
      "where",
      "product",
      "!",
      "=",
      "(",
      "select",
      "max_page_size",
      "from",
      "product",
      "group",
      "by",
      "max_page_size",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value",
      ")"
    ],
    "question": "Find the name of the products that are not using the most frequently-used max page size.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "the",
      "products",
      "that",
      "are",
      "not",
      "using",
      "the",
      "most",
      "frequently-used",
      "max",
      "page",
      "size",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      6,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [
              [
                0,
                6,
                false
              ]
            ],
            "having": [],
            "orderBy": [
              "desc",
              [
                [
                  0,
                  [
                    3,
                    0,
                    false
                  ],
                  null
                ]
              ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_product",
    "query": "SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1)",
    "query_toks": [
      "SELECT",
      "product",
      "FROM",
      "product",
      "WHERE",
      "product",
      "!",
      "=",
      "(",
      "SELECT",
      "max_page_size",
      "FROM",
      "product",
      "GROUP",
      "BY",
      "max_page_size",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "product",
      "from",
      "product",
      "where",
      "product",
      "!",
      "=",
      "(",
      "select",
      "max_page_size",
      "from",
      "product",
      "group",
      "by",
      "max_page_size",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value",
      ")"
    ],
    "question": "What are the names of all products that are not the most frequently-used maximum page size?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "products",
      "that",
      "are",
      "not",
      "the",
      "most",
      "frequently-used",
      "maximum",
      "page",
      "size",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      6,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [
              [
                0,
                6,
                false
              ]
            ],
            "having": [],
            "orderBy": [
              "desc",
              [
                [
                  0,
                  [
                    3,
                    0,
                    false
                  ],
                  null
                ]
              ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_product",
    "query": "SELECT sum(city_population) FROM district WHERE city_area  >  (SELECT avg(city_area) FROM district)",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "city_population",
      ")",
      "FROM",
      "district",
      "WHERE",
      "city_area",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "city_area",
      ")",
      "FROM",
      "district",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "city_population",
      ")",
      "from",
      "district",
      "where",
      "city_area",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "city_area",
      ")",
      "from",
      "district",
      ")"
    ],
    "question": "Find the total population of the districts where the area is bigger than the average city area.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "population",
      "of",
      "the",
      "districts",
      "where",
      "the",
      "area",
      "is",
      "bigger",
      "than",
      "the",
      "average",
      "city",
      "area",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      18,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_product",
    "query": "SELECT sum(city_population) FROM district WHERE city_area  >  (SELECT avg(city_area) FROM district)",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "city_population",
      ")",
      "FROM",
      "district",
      "WHERE",
      "city_area",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "city_area",
      ")",
      "FROM",
      "district",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "city_population",
      ")",
      "from",
      "district",
      "where",
      "city_area",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "city_area",
      ")",
      "from",
      "district",
      ")"
    ],
    "question": "What is the total population for all the districts that have an area larger tahn the average city area?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "population",
      "for",
      "all",
      "the",
      "districts",
      "that",
      "have",
      "an",
      "area",
      "larger",
      "tahn",
      "the",
      "average",
      "city",
      "area",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      18,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT sum(enr) FROM College",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "enr",
      ")",
      "FROM",
      "College"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "enr",
      ")",
      "from",
      "college"
    ],
    "question": "What is the total enrollment number of all colleges?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "enrollment",
      "number",
      "of",
      "all",
      "colleges",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT sum(enr) FROM College",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "enr",
      ")",
      "FROM",
      "College"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "enr",
      ")",
      "from",
      "college"
    ],
    "question": "How many students are enrolled in college?",
    "question_toks": [
      "How",
      "many",
      "students",
      "are",
      "enrolled",
      "in",
      "college",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT avg(enr) FROM College",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "enr",
      ")",
      "FROM",
      "College"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "enr",
      ")",
      "from",
      "college"
    ],
    "question": "What is the average enrollment number?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "enrollment",
      "number",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT avg(enr) FROM College",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "enr",
      ")",
      "FROM",
      "College"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "enr",
      ")",
      "from",
      "college"
    ],
    "question": "How many students, on average, does each college have enrolled?",
    "question_toks": [
      "How",
      "many",
      "students",
      ",",
      "on",
      "average",
      ",",
      "does",
      "each",
      "college",
      "have",
      "enrolled",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(*) FROM College",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "College"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "college"
    ],
    "question": "How many colleges in total?",
    "question_toks": [
      "How",
      "many",
      "colleges",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(*) FROM College",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "College"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "college"
    ],
    "question": "How many different colleges are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "colleges",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(*) FROM Player WHERE HS  >  1000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Player",
      "WHERE",
      "HS",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "player",
      "where",
      "hs",
      ">",
      "value"
    ],
    "question": "How many players have more than 1000 hours of training?",
    "question_toks": [
      "How",
      "many",
      "players",
      "have",
      "more",
      "than",
      "1000",
      "hours",
      "of",
      "training",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          1000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(*) FROM Player WHERE HS  >  1000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Player",
      "WHERE",
      "HS",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "player",
      "where",
      "hs",
      ">",
      "value"
    ],
    "question": "How many different players trained for more than 1000 hours?",
    "question_toks": [
      "How",
      "many",
      "different",
      "players",
      "trained",
      "for",
      "more",
      "than",
      "1000",
      "hours",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          1000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(*) FROM College WHERE enr  >  15000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "College",
      "WHERE",
      "enr",
      ">",
      "15000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "college",
      "where",
      "enr",
      ">",
      "value"
    ],
    "question": "How many colleges has more than 15000 students?",
    "question_toks": [
      "How",
      "many",
      "colleges",
      "has",
      "more",
      "than",
      "15000",
      "students",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          15000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(*) FROM College WHERE enr  >  15000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "College",
      "WHERE",
      "enr",
      ">",
      "15000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "college",
      "where",
      "enr",
      ">",
      "value"
    ],
    "question": "What is the number of colleges with a student population greater than 15000?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "colleges",
      "with",
      "a",
      "student",
      "population",
      "greater",
      "than",
      "15000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          15000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT avg(HS) FROM Player",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "HS",
      ")",
      "FROM",
      "Player"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "hs",
      ")",
      "from",
      "player"
    ],
    "question": "What is the average training hours of all players?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "training",
      "hours",
      "of",
      "all",
      "players",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT avg(HS) FROM Player",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "HS",
      ")",
      "FROM",
      "Player"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "hs",
      ")",
      "from",
      "player"
    ],
    "question": "How many hours do the players train on average?",
    "question_toks": [
      "How",
      "many",
      "hours",
      "do",
      "the",
      "players",
      "train",
      "on",
      "average",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT pName ,  HS FROM Player WHERE HS  <  1500",
    "query_toks": [
      "SELECT",
      "pName",
      ",",
      "HS",
      "FROM",
      "Player",
      "WHERE",
      "HS",
      "<",
      "1500"
    ],
    "query_toks_no_value": [
      "select",
      "pname",
      ",",
      "hs",
      "from",
      "player",
      "where",
      "hs",
      "<",
      "value"
    ],
    "question": "Find the name and training hours of players whose hours are below 1500.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "and",
      "training",
      "hours",
      "of",
      "players",
      "whose",
      "hours",
      "are",
      "below",
      "1500",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          1500.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT pName ,  HS FROM Player WHERE HS  <  1500",
    "query_toks": [
      "SELECT",
      "pName",
      ",",
      "HS",
      "FROM",
      "Player",
      "WHERE",
      "HS",
      "<",
      "1500"
    ],
    "query_toks_no_value": [
      "select",
      "pname",
      ",",
      "hs",
      "from",
      "player",
      "where",
      "hs",
      "<",
      "value"
    ],
    "question": "What are the names and number of hours spent training for each player who trains for less than 1500 hours?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "number",
      "of",
      "hours",
      "spent",
      "training",
      "for",
      "each",
      "player",
      "who",
      "trains",
      "for",
      "less",
      "than",
      "1500",
      "hours",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          1500.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(DISTINCT cName) FROM tryout",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "cName",
      ")",
      "FROM",
      "tryout"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "cname",
      ")",
      "from",
      "tryout"
    ],
    "question": "How many different colleges do attend the tryout test?",
    "question_toks": [
      "How",
      "many",
      "different",
      "colleges",
      "do",
      "attend",
      "the",
      "tryout",
      "test",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                9,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(DISTINCT cName) FROM tryout",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "cName",
      ")",
      "FROM",
      "tryout"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "cname",
      ")",
      "from",
      "tryout"
    ],
    "question": "How many different colleges were represented at tryouts?",
    "question_toks": [
      "How",
      "many",
      "different",
      "colleges",
      "were",
      "represented",
      "at",
      "tryouts",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                9,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(DISTINCT pPos) FROM tryout",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "pPos",
      ")",
      "FROM",
      "tryout"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "ppos",
      ")",
      "from",
      "tryout"
    ],
    "question": "What are the unique types of player positions in the tryout?",
    "question_toks": [
      "What",
      "are",
      "the",
      "unique",
      "types",
      "of",
      "player",
      "positions",
      "in",
      "the",
      "tryout",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                10,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(DISTINCT pPos) FROM tryout",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "pPos",
      ")",
      "FROM",
      "tryout"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "ppos",
      ")",
      "from",
      "tryout"
    ],
    "question": "What are the different types of player positions?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "types",
      "of",
      "player",
      "positions",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                10,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(*) FROM tryout WHERE decision  =  'yes'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "tryout",
      "WHERE",
      "decision",
      "=",
      "'yes",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "tryout",
      "where",
      "decision",
      "=",
      "value"
    ],
    "question": "How many students got accepted after the tryout?",
    "question_toks": [
      "How",
      "many",
      "students",
      "got",
      "accepted",
      "after",
      "the",
      "tryout",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"yes\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(*) FROM tryout WHERE decision  =  'yes'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "tryout",
      "WHERE",
      "decision",
      "=",
      "'yes",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "tryout",
      "where",
      "decision",
      "=",
      "value"
    ],
    "question": "How many students received a yes from tryouts?",
    "question_toks": [
      "How",
      "many",
      "students",
      "received",
      "a",
      "yes",
      "from",
      "tryouts",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"yes\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(*) FROM tryout WHERE pPos  =  'goalie'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "tryout",
      "WHERE",
      "pPos",
      "=",
      "'goalie",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "tryout",
      "where",
      "ppos",
      "=",
      "value"
    ],
    "question": "How many students whose are playing the role of goalie?",
    "question_toks": [
      "How",
      "many",
      "students",
      "whose",
      "are",
      "playing",
      "the",
      "role",
      "of",
      "goalie",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"goalie\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(*) FROM tryout WHERE pPos  =  'goalie'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "tryout",
      "WHERE",
      "pPos",
      "=",
      "'goalie",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "tryout",
      "where",
      "ppos",
      "=",
      "value"
    ],
    "question": "What is the number of students playing as a goalie?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "students",
      "playing",
      "as",
      "a",
      "goalie",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"goalie\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT avg(HS) ,  max(HS) ,  min(HS) FROM Player",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "HS",
      ")",
      ",",
      "max",
      "(",
      "HS",
      ")",
      ",",
      "min",
      "(",
      "HS",
      ")",
      "FROM",
      "Player"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "hs",
      ")",
      ",",
      "max",
      "(",
      "hs",
      ")",
      ",",
      "min",
      "(",
      "hs",
      ")",
      "from",
      "player"
    ],
    "question": "Find the max, average and min training hours of all players.",
    "question_toks": [
      "Find",
      "the",
      "max",
      ",",
      "average",
      "and",
      "min",
      "training",
      "hours",
      "of",
      "all",
      "players",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT avg(HS) ,  max(HS) ,  min(HS) FROM Player",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "HS",
      ")",
      ",",
      "max",
      "(",
      "HS",
      ")",
      ",",
      "min",
      "(",
      "HS",
      ")",
      "FROM",
      "Player"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "hs",
      ")",
      ",",
      "max",
      "(",
      "hs",
      ")",
      ",",
      "min",
      "(",
      "hs",
      ")",
      "from",
      "player"
    ],
    "question": "What is the average, maximum, and minimum for the number of hours spent training?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      ",",
      "maximum",
      ",",
      "and",
      "minimum",
      "for",
      "the",
      "number",
      "of",
      "hours",
      "spent",
      "training",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT avg(enr) FROM College WHERE state  =  'FL'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "enr",
      ")",
      "FROM",
      "College",
      "WHERE",
      "state",
      "=",
      "'FL",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "enr",
      ")",
      "from",
      "college",
      "where",
      "state",
      "=",
      "value"
    ],
    "question": "What is average enrollment of colleges in the state FL?",
    "question_toks": [
      "What",
      "is",
      "average",
      "enrollment",
      "of",
      "colleges",
      "in",
      "the",
      "state",
      "FL",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"FL\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT avg(enr) FROM College WHERE state  =  'FL'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "enr",
      ")",
      "FROM",
      "College",
      "WHERE",
      "state",
      "=",
      "'FL",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "enr",
      ")",
      "from",
      "college",
      "where",
      "state",
      "=",
      "value"
    ],
    "question": "What is average number of students enrolled in Florida colleges?",
    "question_toks": [
      "What",
      "is",
      "average",
      "number",
      "of",
      "students",
      "enrolled",
      "in",
      "Florida",
      "colleges",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"FL\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT pName FROM Player WHERE HS BETWEEN 500 AND 1500",
    "query_toks": [
      "SELECT",
      "pName",
      "FROM",
      "Player",
      "WHERE",
      "HS",
      "BETWEEN",
      "500",
      "AND",
      "1500"
    ],
    "query_toks_no_value": [
      "select",
      "pname",
      "from",
      "player",
      "where",
      "hs",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What are the names of players whose training hours is between 500 and 1500?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "players",
      "whose",
      "training",
      "hours",
      "is",
      "between",
      "500",
      "and",
      "1500",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          500.0,
          1500.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT pName FROM Player WHERE HS BETWEEN 500 AND 1500",
    "query_toks": [
      "SELECT",
      "pName",
      "FROM",
      "Player",
      "WHERE",
      "HS",
      "BETWEEN",
      "500",
      "AND",
      "1500"
    ],
    "query_toks_no_value": [
      "select",
      "pname",
      "from",
      "player",
      "where",
      "hs",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What are the names of players who train between 500 and 1500 hours?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "players",
      "who",
      "train",
      "between",
      "500",
      "and",
      "1500",
      "hours",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          500.0,
          1500.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT cName ,  enr FROM College WHERE enr  >  10000 AND state = \"LA\"",
    "query_toks": [
      "SELECT",
      "cName",
      ",",
      "enr",
      "FROM",
      "College",
      "WHERE",
      "enr",
      ">",
      "10000",
      "AND",
      "state",
      "=",
      "``",
      "LA",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "cname",
      ",",
      "enr",
      "from",
      "college",
      "where",
      "enr",
      ">",
      "value",
      "and",
      "state",
      "=",
      "value"
    ],
    "question": "Find the name, enrollment of the colleges whose size is bigger than 10000 and location is in state LA.",
    "question_toks": [
      "Find",
      "the",
      "name",
      ",",
      "enrollment",
      "of",
      "the",
      "colleges",
      "whose",
      "size",
      "is",
      "bigger",
      "than",
      "10000",
      "and",
      "location",
      "is",
      "in",
      "state",
      "LA",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          10000.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"LA\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT cName ,  enr FROM College WHERE enr  >  10000 AND state = \"LA\"",
    "query_toks": [
      "SELECT",
      "cName",
      ",",
      "enr",
      "FROM",
      "College",
      "WHERE",
      "enr",
      ">",
      "10000",
      "AND",
      "state",
      "=",
      "``",
      "LA",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "cname",
      ",",
      "enr",
      "from",
      "college",
      "where",
      "enr",
      ">",
      "value",
      "and",
      "state",
      "=",
      "value"
    ],
    "question": "What are the names and enrollment numbers for colleges that have more than 10000 enrolled and are located in Louisiana?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "enrollment",
      "numbers",
      "for",
      "colleges",
      "that",
      "have",
      "more",
      "than",
      "10000",
      "enrolled",
      "and",
      "are",
      "located",
      "in",
      "Louisiana",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          10000.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"LA\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT cName FROM  tryout WHERE decision  =  'yes' AND pPos  =  'goalie'",
    "query_toks": [
      "SELECT",
      "cName",
      "FROM",
      "tryout",
      "WHERE",
      "decision",
      "=",
      "'yes",
      "'",
      "AND",
      "pPos",
      "=",
      "'goalie",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "cname",
      "from",
      "tryout",
      "where",
      "decision",
      "=",
      "value",
      "and",
      "ppos",
      "=",
      "value"
    ],
    "question": "Which college has any student who is a goalie and succeeded in the tryout.",
    "question_toks": [
      "Which",
      "college",
      "has",
      "any",
      "student",
      "who",
      "is",
      "a",
      "goalie",
      "and",
      "succeeded",
      "in",
      "the",
      "tryout",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"yes\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"goalie\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT cName FROM  tryout WHERE decision  =  'yes' AND pPos  =  'goalie'",
    "query_toks": [
      "SELECT",
      "cName",
      "FROM",
      "tryout",
      "WHERE",
      "decision",
      "=",
      "'yes",
      "'",
      "AND",
      "pPos",
      "=",
      "'goalie",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "cname",
      "from",
      "tryout",
      "where",
      "decision",
      "=",
      "value",
      "and",
      "ppos",
      "=",
      "value"
    ],
    "question": "What college has a student who successfully made the team in the role of a goalie?",
    "question_toks": [
      "What",
      "college",
      "has",
      "a",
      "student",
      "who",
      "successfully",
      "made",
      "the",
      "team",
      "in",
      "the",
      "role",
      "of",
      "a",
      "goalie",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"yes\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"goalie\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT COUNT(*) FROM (SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid')",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "(",
      "SELECT",
      "cName",
      "FROM",
      "tryout",
      "WHERE",
      "pPos",
      "=",
      "'goalie",
      "'",
      "INTERSECT",
      "SELECT",
      "cName",
      "FROM",
      "tryout",
      "WHERE",
      "pPos",
      "=",
      "'mid",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "(",
      "select",
      "cname",
      "from",
      "tryout",
      "where",
      "ppos",
      "=",
      "value",
      "intersect",
      "select",
      "cname",
      "from",
      "tryout",
      "where",
      "ppos",
      "=",
      "value",
      ")"
    ],
    "question": "How many schools have some students playing in goalie and mid positions.",
    "question_toks": [
      "How",
      "many",
      "schools",
      "have",
      "some",
      "students",
      "playing",
      "in",
      "goalie",
      "and",
      "mid",
      "positions",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "sql",
            {
              "from": {
                "table_units": [
                  [
                    "table_unit",
                    2
                  ]
                ],
                "conds": []
              },
              "select": [
                false,
                [
                  [
                    0,
                    [
                      0,
                      [
                        0,
                        9,
                        false
                      ],
                      null
                    ]
                  ]
                ]
              ],
              "where": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      10,
                      false
                    ],
                    null
                  ],
                  "\"goalie\"",
                  null
                ]
              ],
              "groupBy": [],
              "having": [],
              "orderBy": [],
              "limit": null,
              "intersect": {
                "from": {
                  "table_units": [
                    [
                      "table_unit",
                      2
                    ]
                  ],
                  "conds": []
                },
                "select": [
                  false,
                  [
                    [
                      0,
                      [
                        0,
                        [
                          0,
                          9,
                          false
                        ],
                        null
                      ]
                    ]
                  ]
                ],
                "where": [
                  [
                    false,
                    2,
                    [
                      0,
                      [
                        0,
                        10,
                        false
                      ],
                      null
                    ],
                    "\"mid\"",
                    null
                  ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
              },
              "union": null,
              "except": null
            }
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT COUNT(*) FROM (SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid')",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "(",
      "SELECT",
      "cName",
      "FROM",
      "tryout",
      "WHERE",
      "pPos",
      "=",
      "'goalie",
      "'",
      "INTERSECT",
      "SELECT",
      "cName",
      "FROM",
      "tryout",
      "WHERE",
      "pPos",
      "=",
      "'mid",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "(",
      "select",
      "cname",
      "from",
      "tryout",
      "where",
      "ppos",
      "=",
      "value",
      "intersect",
      "select",
      "cname",
      "from",
      "tryout",
      "where",
      "ppos",
      "=",
      "value",
      ")"
    ],
    "question": "How many schools have students playing in goalie and mid-field positions?",
    "question_toks": [
      "How",
      "many",
      "schools",
      "have",
      "students",
      "playing",
      "in",
      "goalie",
      "and",
      "mid-field",
      "positions",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "sql",
            {
              "from": {
                "table_units": [
                  [
                    "table_unit",
                    2
                  ]
                ],
                "conds": []
              },
              "select": [
                false,
                [
                  [
                    0,
                    [
                      0,
                      [
                        0,
                        9,
                        false
                      ],
                      null
                    ]
                  ]
                ]
              ],
              "where": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      10,
                      false
                    ],
                    null
                  ],
                  "\"goalie\"",
                  null
                ]
              ],
              "groupBy": [],
              "having": [],
              "orderBy": [],
              "limit": null,
              "intersect": {
                "from": {
                  "table_units": [
                    [
                      "table_unit",
                      2
                    ]
                  ],
                  "conds": []
                },
                "select": [
                  false,
                  [
                    [
                      0,
                      [
                        0,
                        [
                          0,
                          9,
                          false
                        ],
                        null
                      ]
                    ]
                  ]
                ],
                "where": [
                  [
                    false,
                    2,
                    [
                      0,
                      [
                        0,
                        10,
                        false
                      ],
                      null
                    ],
                    "\"mid\"",
                    null
                  ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
              },
              "union": null,
              "except": null
            }
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie')",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "(",
      "SELECT",
      "T1.state",
      "FROM",
      "college",
      "AS",
      "T1",
      "JOIN",
      "tryout",
      "AS",
      "T2",
      "ON",
      "T1.cName",
      "=",
      "T2.cName",
      "WHERE",
      "T2.pPos",
      "=",
      "'mid",
      "'",
      "EXCEPT",
      "SELECT",
      "T1.state",
      "FROM",
      "college",
      "AS",
      "T1",
      "JOIN",
      "tryout",
      "AS",
      "T2",
      "ON",
      "T1.cName",
      "=",
      "T2.cName",
      "WHERE",
      "T2.pPos",
      "=",
      "'goalie",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "(",
      "select",
      "t1",
      ".",
      "state",
      "from",
      "college",
      "as",
      "t1",
      "join",
      "tryout",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "cname",
      "=",
      "t2",
      ".",
      "cname",
      "where",
      "t2",
      ".",
      "ppos",
      "=",
      "value",
      "except",
      "select",
      "t1",
      ".",
      "state",
      "from",
      "college",
      "as",
      "t1",
      "join",
      "tryout",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "cname",
      "=",
      "t2",
      ".",
      "cname",
      "where",
      "t2",
      ".",
      "ppos",
      "=",
      "value",
      ")"
    ],
    "question": "How many states that have some college students playing in the mid position but not in the goalie position.",
    "question_toks": [
      "How",
      "many",
      "states",
      "that",
      "have",
      "some",
      "college",
      "students",
      "playing",
      "in",
      "the",
      "mid",
      "position",
      "but",
      "not",
      "in",
      "the",
      "goalie",
      "position",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "sql",
            {
              "from": {
                "table_units": [
                  [
                    "table_unit",
                    0
                  ],
                  [
                    "table_unit",
                    2
                  ]
                ],
                "conds": [
                  [
                    false,
                    2,
                    [
                      0,
                      [
                        0,
                        1,
                        false
                      ],
                      null
                    ],
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              },
              "select": [
                false,
                [
                  [
                    0,
                    [
                      0,
                      [
                        0,
                        2,
                        false
                      ],
                      null
                    ]
                  ]
                ]
              ],
              "where": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      10,
                      false
                    ],
                    null
                  ],
                  "\"mid\"",
                  null
                ]
              ],
              "groupBy": [],
              "having": [],
              "orderBy": [],
              "limit": null,
              "intersect": null,
              "union": null,
              "except": {
                "from": {
                  "table_units": [
                    [
                      "table_unit",
                      0
                    ],
                    [
                      "table_unit",
                      2
                    ]
                  ],
                  "conds": [
                    [
                      false,
                      2,
                      [
                        0,
                        [
                          0,
                          1,
                          false
                        ],
                        null
                      ],
                      [
                        0,
                        9,
                        false
                      ],
                      null
                    ]
                  ]
                },
                "select": [
                  false,
                  [
                    [
                      0,
                      [
                        0,
                        [
                          0,
                          2,
                          false
                        ],
                        null
                      ]
                    ]
                  ]
                ],
                "where": [
                  [
                    false,
                    2,
                    [
                      0,
                      [
                        0,
                        10,
                        false
                      ],
                      null
                    ],
                    "\"goalie\"",
                    null
                  ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
              }
            }
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie')",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "(",
      "SELECT",
      "T1.state",
      "FROM",
      "college",
      "AS",
      "T1",
      "JOIN",
      "tryout",
      "AS",
      "T2",
      "ON",
      "T1.cName",
      "=",
      "T2.cName",
      "WHERE",
      "T2.pPos",
      "=",
      "'mid",
      "'",
      "EXCEPT",
      "SELECT",
      "T1.state",
      "FROM",
      "college",
      "AS",
      "T1",
      "JOIN",
      "tryout",
      "AS",
      "T2",
      "ON",
      "T1.cName",
      "=",
      "T2.cName",
      "WHERE",
      "T2.pPos",
      "=",
      "'goalie",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "(",
      "select",
      "t1",
      ".",
      "state",
      "from",
      "college",
      "as",
      "t1",
      "join",
      "tryout",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "cname",
      "=",
      "t2",
      ".",
      "cname",
      "where",
      "t2",
      ".",
      "ppos",
      "=",
      "value",
      "except",
      "select",
      "t1",
      ".",
      "state",
      "from",
      "college",
      "as",
      "t1",
      "join",
      "tryout",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "cname",
      "=",
      "t2",
      ".",
      "cname",
      "where",
      "t2",
      ".",
      "ppos",
      "=",
      "value",
      ")"
    ],
    "question": "What is the count of states with college students playing in the mid position but not as goalies?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "states",
      "with",
      "college",
      "students",
      "playing",
      "in",
      "the",
      "mid",
      "position",
      "but",
      "not",
      "as",
      "goalies",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "sql",
            {
              "from": {
                "table_units": [
                  [
                    "table_unit",
                    0
                  ],
                  [
                    "table_unit",
                    2
                  ]
                ],
                "conds": [
                  [
                    false,
                    2,
                    [
                      0,
                      [
                        0,
                        1,
                        false
                      ],
                      null
                    ],
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              },
              "select": [
                false,
                [
                  [
                    0,
                    [
                      0,
                      [
                        0,
                        2,
                        false
                      ],
                      null
                    ]
                  ]
                ]
              ],
              "where": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      10,
                      false
                    ],
                    null
                  ],
                  "\"mid\"",
                  null
                ]
              ],
              "groupBy": [],
              "having": [],
              "orderBy": [],
              "limit": null,
              "intersect": null,
              "union": null,
              "except": {
                "from": {
                  "table_units": [
                    [
                      "table_unit",
                      0
                    ],
                    [
                      "table_unit",
                      2
                    ]
                  ],
                  "conds": [
                    [
                      false,
                      2,
                      [
                        0,
                        [
                          0,
                          1,
                          false
                        ],
                        null
                      ],
                      [
                        0,
                        9,
                        false
                      ],
                      null
                    ]
                  ]
                },
                "select": [
                  false,
                  [
                    [
                      0,
                      [
                        0,
                        [
                          0,
                          2,
                          false
                        ],
                        null
                      ]
                    ]
                  ]
                ],
                "where": [
                  [
                    false,
                    2,
                    [
                      0,
                      [
                        0,
                        10,
                        false
                      ],
                      null
                    ],
                    "\"goalie\"",
                    null
                  ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
              }
            }
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT cName FROM college WHERE enr  >  (SELECT max(enr) FROM college WHERE state  =  'FL')",
    "query_toks": [
      "SELECT",
      "cName",
      "FROM",
      "college",
      "WHERE",
      "enr",
      ">",
      "(",
      "SELECT",
      "max",
      "(",
      "enr",
      ")",
      "FROM",
      "college",
      "WHERE",
      "state",
      "=",
      "'FL",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "cname",
      "from",
      "college",
      "where",
      "enr",
      ">",
      "(",
      "select",
      "max",
      "(",
      "enr",
      ")",
      "from",
      "college",
      "where",
      "state",
      "=",
      "value",
      ")"
    ],
    "question": "Find names of all colleges whose enrollment is greater than that of all colleges in the FL state.",
    "question_toks": [
      "Find",
      "names",
      "of",
      "all",
      "colleges",
      "whose",
      "enrollment",
      "is",
      "greater",
      "than",
      "that",
      "of",
      "all",
      "colleges",
      "in",
      "the",
      "FL",
      "state",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    2,
                    false
                  ],
                  null
                ],
                "\"FL\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT cName FROM college WHERE enr  >  (SELECT max(enr) FROM college WHERE state  =  'FL')",
    "query_toks": [
      "SELECT",
      "cName",
      "FROM",
      "college",
      "WHERE",
      "enr",
      ">",
      "(",
      "SELECT",
      "max",
      "(",
      "enr",
      ")",
      "FROM",
      "college",
      "WHERE",
      "state",
      "=",
      "'FL",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "cname",
      "from",
      "college",
      "where",
      "enr",
      ">",
      "(",
      "select",
      "max",
      "(",
      "enr",
      ")",
      "from",
      "college",
      "where",
      "state",
      "=",
      "value",
      ")"
    ],
    "question": "What are the names of all colleges with a larger enrollment than the largest college in Florida?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "colleges",
      "with",
      "a",
      "larger",
      "enrollment",
      "than",
      "the",
      "largest",
      "college",
      "in",
      "Florida",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    2,
                    false
                  ],
                  null
                ],
                "\"FL\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT sum(enr) FROM college WHERE cName NOT IN (SELECT cName FROM tryout WHERE pPos  =  \"goalie\")",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "enr",
      ")",
      "FROM",
      "college",
      "WHERE",
      "cName",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "cName",
      "FROM",
      "tryout",
      "WHERE",
      "pPos",
      "=",
      "``",
      "goalie",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "enr",
      ")",
      "from",
      "college",
      "where",
      "cname",
      "not",
      "in",
      "(",
      "select",
      "cname",
      "from",
      "tryout",
      "where",
      "ppos",
      "=",
      "value",
      ")"
    ],
    "question": "What is the total number of enrollment of schools that do not have any goalie player?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "enrollment",
      "of",
      "schools",
      "that",
      "do",
      "not",
      "have",
      "any",
      "goalie",
      "player",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    10,
                    false
                  ],
                  null
                ],
                "\"goalie\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT sum(enr) FROM college WHERE cName NOT IN (SELECT cName FROM tryout WHERE pPos  =  \"goalie\")",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "enr",
      ")",
      "FROM",
      "college",
      "WHERE",
      "cName",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "cName",
      "FROM",
      "tryout",
      "WHERE",
      "pPos",
      "=",
      "``",
      "goalie",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "enr",
      ")",
      "from",
      "college",
      "where",
      "cname",
      "not",
      "in",
      "(",
      "select",
      "cname",
      "from",
      "tryout",
      "where",
      "ppos",
      "=",
      "value",
      ")"
    ],
    "question": "What is the total number of students enrolled in schools without any goalies?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "students",
      "enrolled",
      "in",
      "schools",
      "without",
      "any",
      "goalies",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    10,
                    false
                  ],
                  null
                ],
                "\"goalie\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(DISTINCT state) FROM college WHERE enr  >  (SELECT avg(enr) FROM college)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "state",
      ")",
      "FROM",
      "college",
      "WHERE",
      "enr",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "enr",
      ")",
      "FROM",
      "college",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "state",
      ")",
      "from",
      "college",
      "where",
      "enr",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "enr",
      ")",
      "from",
      "college",
      ")"
    ],
    "question": "What is the number of states that has some college whose enrollment is larger than the average enrollment?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "states",
      "that",
      "has",
      "some",
      "college",
      "whose",
      "enrollment",
      "is",
      "larger",
      "than",
      "the",
      "average",
      "enrollment",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                2,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(DISTINCT state) FROM college WHERE enr  >  (SELECT avg(enr) FROM college)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "state",
      ")",
      "FROM",
      "college",
      "WHERE",
      "enr",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "enr",
      ")",
      "FROM",
      "college",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "state",
      ")",
      "from",
      "college",
      "where",
      "enr",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "enr",
      ")",
      "from",
      "college",
      ")"
    ],
    "question": "How many states have a college with more students than average?",
    "question_toks": [
      "How",
      "many",
      "states",
      "have",
      "a",
      "college",
      "with",
      "more",
      "students",
      "than",
      "average",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                2,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(DISTINCT state) FROM college WHERE enr  <  (SELECT avg(enr) FROM college)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "state",
      ")",
      "FROM",
      "college",
      "WHERE",
      "enr",
      "<",
      "(",
      "SELECT",
      "avg",
      "(",
      "enr",
      ")",
      "FROM",
      "college",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "state",
      ")",
      "from",
      "college",
      "where",
      "enr",
      "<",
      "(",
      "select",
      "avg",
      "(",
      "enr",
      ")",
      "from",
      "college",
      ")"
    ],
    "question": "What is the number of states that has some colleges whose enrollment is smaller than the average enrollment?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "states",
      "that",
      "has",
      "some",
      "colleges",
      "whose",
      "enrollment",
      "is",
      "smaller",
      "than",
      "the",
      "average",
      "enrollment",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                2,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(DISTINCT state) FROM college WHERE enr  <  (SELECT avg(enr) FROM college)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "state",
      ")",
      "FROM",
      "college",
      "WHERE",
      "enr",
      "<",
      "(",
      "SELECT",
      "avg",
      "(",
      "enr",
      ")",
      "FROM",
      "college",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "state",
      ")",
      "from",
      "college",
      "where",
      "enr",
      "<",
      "(",
      "select",
      "avg",
      "(",
      "enr",
      ")",
      "from",
      "college",
      ")"
    ],
    "question": "How many states have smaller colleges than average?",
    "question_toks": [
      "How",
      "many",
      "states",
      "have",
      "smaller",
      "colleges",
      "than",
      "average",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                2,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "device",
    "query": "SELECT count(*) FROM device",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "device"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "device"
    ],
    "question": "How many devices are there?",
    "question_toks": [
      "How",
      "many",
      "devices",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "device",
    "query": "SELECT count(*) FROM device",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "device"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "device"
    ],
    "question": "Count the number of devices.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "devices",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "device",
    "query": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'",
    "query_toks": [
      "SELECT",
      "Carrier",
      "FROM",
      "device",
      "WHERE",
      "Software_Platform",
      "!",
      "=",
      "'Android",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "carrier",
      "from",
      "device",
      "where",
      "software_platform",
      "!",
      "=",
      "value"
    ],
    "question": "What are the carriers of devices whose software platforms are not \"Android\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "carriers",
      "of",
      "devices",
      "whose",
      "software",
      "platforms",
      "are",
      "not",
      "``",
      "Android",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Android\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "device",
    "query": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'",
    "query_toks": [
      "SELECT",
      "Carrier",
      "FROM",
      "device",
      "WHERE",
      "Software_Platform",
      "!",
      "=",
      "'Android",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "carrier",
      "from",
      "device",
      "where",
      "software_platform",
      "!",
      "=",
      "value"
    ],
    "question": "Return the device carriers that do not have Android as their software platform.",
    "question_toks": [
      "Return",
      "the",
      "device",
      "carriers",
      "that",
      "do",
      "not",
      "have",
      "Android",
      "as",
      "their",
      "software",
      "platform",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Android\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "device",
    "query": "SELECT avg(Quantity) FROM stock",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Quantity",
      ")",
      "FROM",
      "stock"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "quantity",
      ")",
      "from",
      "stock"
    ],
    "question": "What is the average quantity of stocks?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "quantity",
      "of",
      "stocks",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "device",
    "query": "SELECT avg(Quantity) FROM stock",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Quantity",
      ")",
      "FROM",
      "stock"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "quantity",
      ")",
      "from",
      "stock"
    ],
    "question": "Give the average quantity of stocks.",
    "question_toks": [
      "Give",
      "the",
      "average",
      "quantity",
      "of",
      "stocks",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "device",
    "query": "SELECT count(DISTINCT Software_Platform) FROM device",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Software_Platform",
      ")",
      "FROM",
      "device"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "software_platform",
      ")",
      "from",
      "device"
    ],
    "question": "How many different software platforms are there for devices?",
    "question_toks": [
      "How",
      "many",
      "different",
      "software",
      "platforms",
      "are",
      "there",
      "for",
      "devices",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "device",
    "query": "SELECT count(DISTINCT Software_Platform) FROM device",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Software_Platform",
      ")",
      "FROM",
      "device"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "software_platform",
      ")",
      "from",
      "device"
    ],
    "question": "Count the number of different software platforms.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "software",
      "platforms",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "device",
    "query": "SELECT Open_Date ,  Open_Year FROM shop WHERE Shop_Name  =  \"Apple\"",
    "query_toks": [
      "SELECT",
      "Open_Date",
      ",",
      "Open_Year",
      "FROM",
      "shop",
      "WHERE",
      "Shop_Name",
      "=",
      "``",
      "Apple",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "open_date",
      ",",
      "open_year",
      "from",
      "shop",
      "where",
      "shop_name",
      "=",
      "value"
    ],
    "question": "List the open date of open year of the shop named \"Apple\".",
    "question_toks": [
      "List",
      "the",
      "open",
      "date",
      "of",
      "open",
      "year",
      "of",
      "the",
      "shop",
      "named",
      "``",
      "Apple",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Apple\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "device",
    "query": "SELECT Open_Date ,  Open_Year FROM shop WHERE Shop_Name  =  \"Apple\"",
    "query_toks": [
      "SELECT",
      "Open_Date",
      ",",
      "Open_Year",
      "FROM",
      "shop",
      "WHERE",
      "Shop_Name",
      "=",
      "``",
      "Apple",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "open_date",
      ",",
      "open_year",
      "from",
      "shop",
      "where",
      "shop_name",
      "=",
      "value"
    ],
    "question": "What are the open dates and years for the shop named Apple?",
    "question_toks": [
      "What",
      "are",
      "the",
      "open",
      "dates",
      "and",
      "years",
      "for",
      "the",
      "shop",
      "named",
      "Apple",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Apple\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "device",
    "query": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)",
    "query_toks": [
      "SELECT",
      "Shop_Name",
      "FROM",
      "shop",
      "WHERE",
      "Shop_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Shop_ID",
      "FROM",
      "stock",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "shop_name",
      "from",
      "shop",
      "where",
      "shop_id",
      "not",
      "in",
      "(",
      "select",
      "shop_id",
      "from",
      "stock",
      ")"
    ],
    "question": "List the names of shops that have no devices in stock.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "shops",
      "that",
      "have",
      "no",
      "devices",
      "in",
      "stock",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      12,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "device",
    "query": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)",
    "query_toks": [
      "SELECT",
      "Shop_Name",
      "FROM",
      "shop",
      "WHERE",
      "Shop_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Shop_ID",
      "FROM",
      "stock",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "shop_name",
      "from",
      "shop",
      "where",
      "shop_id",
      "not",
      "in",
      "(",
      "select",
      "shop_id",
      "from",
      "stock",
      ")"
    ],
    "question": "What are the names of shops that do not have any devices in stock?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "shops",
      "that",
      "do",
      "not",
      "have",
      "any",
      "devices",
      "in",
      "stock",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      12,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "device",
    "query": "SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)",
    "query_toks": [
      "SELECT",
      "Carrier",
      "FROM",
      "device",
      "WHERE",
      "Device_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Device_ID",
      "FROM",
      "stock",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "carrier",
      "from",
      "device",
      "where",
      "device_id",
      "not",
      "in",
      "(",
      "select",
      "device_id",
      "from",
      "stock",
      ")"
    ],
    "question": "List the carriers of devices that have no devices in stock.",
    "question_toks": [
      "List",
      "the",
      "carriers",
      "of",
      "devices",
      "that",
      "have",
      "no",
      "devices",
      "in",
      "stock",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      13,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "device",
    "query": "SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)",
    "query_toks": [
      "SELECT",
      "Carrier",
      "FROM",
      "device",
      "WHERE",
      "Device_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Device_ID",
      "FROM",
      "stock",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "carrier",
      "from",
      "device",
      "where",
      "device_id",
      "not",
      "in",
      "(",
      "select",
      "device_id",
      "from",
      "stock",
      ")"
    ],
    "question": "What are the carriers of devices that are not in stock anywhere?",
    "question_toks": [
      "What",
      "are",
      "the",
      "carriers",
      "of",
      "devices",
      "that",
      "are",
      "not",
      "in",
      "stock",
      "anywhere",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      13,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT count(*) FROM BOOKINGS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "BOOKINGS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "bookings"
    ],
    "question": "How many bookings do we have?",
    "question_toks": [
      "How",
      "many",
      "bookings",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT count(*) FROM BOOKINGS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "BOOKINGS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "bookings"
    ],
    "question": "Count the total number of bookings made.",
    "question_toks": [
      "Count",
      "the",
      "total",
      "number",
      "of",
      "bookings",
      "made",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT Order_Date FROM BOOKINGS",
    "query_toks": [
      "SELECT",
      "Order_Date",
      "FROM",
      "BOOKINGS"
    ],
    "query_toks_no_value": [
      "select",
      "order_date",
      "from",
      "bookings"
    ],
    "question": "List the order dates of all the bookings.",
    "question_toks": [
      "List",
      "the",
      "order",
      "dates",
      "of",
      "all",
      "the",
      "bookings",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                59,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT Order_Date FROM BOOKINGS",
    "query_toks": [
      "SELECT",
      "Order_Date",
      "FROM",
      "BOOKINGS"
    ],
    "query_toks_no_value": [
      "select",
      "order_date",
      "from",
      "bookings"
    ],
    "question": "What is the order date of each booking?",
    "question_toks": [
      "What",
      "is",
      "the",
      "order",
      "date",
      "of",
      "each",
      "booking",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                59,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT Planned_Delivery_Date ,  Actual_Delivery_Date FROM BOOKINGS",
    "query_toks": [
      "SELECT",
      "Planned_Delivery_Date",
      ",",
      "Actual_Delivery_Date",
      "FROM",
      "BOOKINGS"
    ],
    "query_toks_no_value": [
      "select",
      "planned_delivery_date",
      ",",
      "actual_delivery_date",
      "from",
      "bookings"
    ],
    "question": "Show all the planned delivery dates and actual delivery dates of bookings.",
    "question_toks": [
      "Show",
      "all",
      "the",
      "planned",
      "delivery",
      "dates",
      "and",
      "actual",
      "delivery",
      "dates",
      "of",
      "bookings",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                60,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                61,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT Planned_Delivery_Date ,  Actual_Delivery_Date FROM BOOKINGS",
    "query_toks": [
      "SELECT",
      "Planned_Delivery_Date",
      ",",
      "Actual_Delivery_Date",
      "FROM",
      "BOOKINGS"
    ],
    "query_toks_no_value": [
      "select",
      "planned_delivery_date",
      ",",
      "actual_delivery_date",
      "from",
      "bookings"
    ],
    "question": "What are the planned delivery date and actual delivery date for each booking?",
    "question_toks": [
      "What",
      "are",
      "the",
      "planned",
      "delivery",
      "date",
      "and",
      "actual",
      "delivery",
      "date",
      "for",
      "each",
      "booking",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                60,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                61,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT count(*) FROM CUSTOMERS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "CUSTOMERS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers"
    ],
    "question": "How many customers do we have?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT count(*) FROM CUSTOMERS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "CUSTOMERS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers"
    ],
    "question": "Count the number of customers recorded.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "customers",
      "recorded",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT Customer_Phone ,  Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name  =  \"Harold\"",
    "query_toks": [
      "SELECT",
      "Customer_Phone",
      ",",
      "Customer_Email_Address",
      "FROM",
      "CUSTOMERS",
      "WHERE",
      "Customer_Name",
      "=",
      "``",
      "Harold",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_phone",
      ",",
      "customer_email_address",
      "from",
      "customers",
      "where",
      "customer_name",
      "=",
      "value"
    ],
    "question": "What are the phone and email for customer Harold?",
    "question_toks": [
      "What",
      "are",
      "the",
      "phone",
      "and",
      "email",
      "for",
      "customer",
      "Harold",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                44,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                45,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"Harold\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT Customer_Phone ,  Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name  =  \"Harold\"",
    "query_toks": [
      "SELECT",
      "Customer_Phone",
      ",",
      "Customer_Email_Address",
      "FROM",
      "CUSTOMERS",
      "WHERE",
      "Customer_Name",
      "=",
      "``",
      "Harold",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_phone",
      ",",
      "customer_email_address",
      "from",
      "customers",
      "where",
      "customer_name",
      "=",
      "value"
    ],
    "question": "Find the phone number and email address of customer \"Harold\".",
    "question_toks": [
      "Find",
      "the",
      "phone",
      "number",
      "and",
      "email",
      "address",
      "of",
      "customer",
      "``",
      "Harold",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                44,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                45,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"Harold\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT Store_Name FROM Drama_Workshop_Groups",
    "query_toks": [
      "SELECT",
      "Store_Name",
      "FROM",
      "Drama_Workshop_Groups"
    ],
    "query_toks_no_value": [
      "select",
      "store_name",
      "from",
      "drama_workshop_groups"
    ],
    "question": "Show all the Store_Name of drama workshop groups.",
    "question_toks": [
      "Show",
      "all",
      "the",
      "Store_Name",
      "of",
      "drama",
      "workshop",
      "groups",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT Store_Name FROM Drama_Workshop_Groups",
    "query_toks": [
      "SELECT",
      "Store_Name",
      "FROM",
      "Drama_Workshop_Groups"
    ],
    "query_toks_no_value": [
      "select",
      "store_name",
      "from",
      "drama_workshop_groups"
    ],
    "question": "What are the store names of drama workshop groups?",
    "question_toks": [
      "What",
      "are",
      "the",
      "store",
      "names",
      "of",
      "drama",
      "workshop",
      "groups",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT min(Order_Quantity) ,  avg(Order_Quantity) ,  max(Order_Quantity) FROM INVOICES",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "Order_Quantity",
      ")",
      ",",
      "avg",
      "(",
      "Order_Quantity",
      ")",
      ",",
      "max",
      "(",
      "Order_Quantity",
      ")",
      "FROM",
      "INVOICES"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "order_quantity",
      ")",
      ",",
      "avg",
      "(",
      "order_quantity",
      ")",
      ",",
      "max",
      "(",
      "order_quantity",
      ")",
      "from",
      "invoices"
    ],
    "question": "Show the minimum, average, maximum order quantity of all invoices.",
    "question_toks": [
      "Show",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "maximum",
      "order",
      "quantity",
      "of",
      "all",
      "invoices",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            14
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                81,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                81,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                81,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT min(Order_Quantity) ,  avg(Order_Quantity) ,  max(Order_Quantity) FROM INVOICES",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "Order_Quantity",
      ")",
      ",",
      "avg",
      "(",
      "Order_Quantity",
      ")",
      ",",
      "max",
      "(",
      "Order_Quantity",
      ")",
      "FROM",
      "INVOICES"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "order_quantity",
      ")",
      ",",
      "avg",
      "(",
      "order_quantity",
      ")",
      ",",
      "max",
      "(",
      "order_quantity",
      ")",
      "from",
      "invoices"
    ],
    "question": "What are the minimum, average, and maximum quantities ordered? Check all the invoices.",
    "question_toks": [
      "What",
      "are",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "quantities",
      "ordered",
      "?",
      "Check",
      "all",
      "the",
      "invoices",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            14
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                81,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                81,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                81,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name  =  \"China\"",
    "query_toks": [
      "SELECT",
      "Marketing_Region_Descriptrion",
      "FROM",
      "Marketing_Regions",
      "WHERE",
      "Marketing_Region_Name",
      "=",
      "``",
      "China",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "marketing_region_descriptrion",
      "from",
      "marketing_regions",
      "where",
      "marketing_region_name",
      "=",
      "value"
    ],
    "question": "What is the description of the marketing region China?",
    "question_toks": [
      "What",
      "is",
      "the",
      "description",
      "of",
      "the",
      "marketing",
      "region",
      "China",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"China\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name  =  \"China\"",
    "query_toks": [
      "SELECT",
      "Marketing_Region_Descriptrion",
      "FROM",
      "Marketing_Regions",
      "WHERE",
      "Marketing_Region_Name",
      "=",
      "``",
      "China",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "marketing_region_descriptrion",
      "from",
      "marketing_regions",
      "where",
      "marketing_region_name",
      "=",
      "value"
    ],
    "question": "Find the marketing region description of China?",
    "question_toks": [
      "Find",
      "the",
      "marketing",
      "region",
      "description",
      "of",
      "China",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"China\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name  =  \"Ashley\"",
    "query_toks": [
      "SELECT",
      "Customer_Phone",
      "FROM",
      "PERFORMERS",
      "WHERE",
      "Customer_Name",
      "=",
      "``",
      "Ashley",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_phone",
      "from",
      "performers",
      "where",
      "customer_name",
      "=",
      "value"
    ],
    "question": "What is the phone number of the performer Ashley?",
    "question_toks": [
      "What",
      "is",
      "the",
      "phone",
      "number",
      "of",
      "the",
      "performer",
      "Ashley",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              37,
              false
            ],
            null
          ],
          "\"Ashley\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name  =  \"Ashley\"",
    "query_toks": [
      "SELECT",
      "Customer_Phone",
      "FROM",
      "PERFORMERS",
      "WHERE",
      "Customer_Name",
      "=",
      "``",
      "Ashley",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_phone",
      "from",
      "performers",
      "where",
      "customer_name",
      "=",
      "value"
    ],
    "question": "Find the phone number of performer \"Ashley\".",
    "question_toks": [
      "Find",
      "the",
      "phone",
      "number",
      "of",
      "performer",
      "``",
      "Ashley",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              37,
              false
            ],
            null
          ],
          "\"Ashley\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT count(DISTINCT Currency_Code) FROM Drama_Workshop_Groups",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Currency_Code",
      ")",
      "FROM",
      "Drama_Workshop_Groups"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "currency_code",
      ")",
      "from",
      "drama_workshop_groups"
    ],
    "question": "How many distinct currency codes are there for all drama workshop groups?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "currency",
      "codes",
      "are",
      "there",
      "for",
      "all",
      "drama",
      "workshop",
      "groups",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT count(DISTINCT Currency_Code) FROM Drama_Workshop_Groups",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Currency_Code",
      ")",
      "FROM",
      "Drama_Workshop_Groups"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "currency_code",
      ")",
      "from",
      "drama_workshop_groups"
    ],
    "question": "Find the number of distinct currency codes used in drama workshop groups.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "distinct",
      "currency",
      "codes",
      "used",
      "in",
      "drama",
      "workshop",
      "groups",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT avg(Order_Quantity) FROM Invoices WHERE payment_method_code  =  \"MasterCard\"",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Order_Quantity",
      ")",
      "FROM",
      "Invoices",
      "WHERE",
      "payment_method_code",
      "=",
      "``",
      "MasterCard",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "order_quantity",
      ")",
      "from",
      "invoices",
      "where",
      "payment_method_code",
      "=",
      "value"
    ],
    "question": "What is the average quantities ordered with payment method code \"MasterCard\" on invoices?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "quantities",
      "ordered",
      "with",
      "payment",
      "method",
      "code",
      "``",
      "MasterCard",
      "''",
      "on",
      "invoices",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            14
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                81,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              79,
              false
            ],
            null
          ],
          "\"MasterCard\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT avg(Order_Quantity) FROM Invoices WHERE payment_method_code  =  \"MasterCard\"",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Order_Quantity",
      ")",
      "FROM",
      "Invoices",
      "WHERE",
      "payment_method_code",
      "=",
      "``",
      "MasterCard",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "order_quantity",
      ")",
      "from",
      "invoices",
      "where",
      "payment_method_code",
      "=",
      "value"
    ],
    "question": "Check the invoices record and compute the average quantities ordered with the payment method \"MasterCard\".",
    "question_toks": [
      "Check",
      "the",
      "invoices",
      "record",
      "and",
      "compute",
      "the",
      "average",
      "quantities",
      "ordered",
      "with",
      "the",
      "payment",
      "method",
      "``",
      "MasterCard",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            14
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                81,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              79,
              false
            ],
            null
          ],
          "\"MasterCard\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT count(*) FROM Band",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Band"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "band"
    ],
    "question": "How many bands are there?",
    "question_toks": [
      "How",
      "many",
      "bands",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT count(*) FROM Band",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Band"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "band"
    ],
    "question": "Find the number of bands.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "bands",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT * FROM Albums WHERE YEAR  =  2012",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "Albums",
      "WHERE",
      "YEAR",
      "=",
      "2012"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "albums",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "Find all the albums in 2012.",
    "question_toks": [
      "Find",
      "all",
      "the",
      "albums",
      "in",
      "2012",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          2012.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT * FROM Albums WHERE YEAR  =  2012",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "Albums",
      "WHERE",
      "YEAR",
      "=",
      "2012"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "albums",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "return all columns of the albums created in the year of 2012.",
    "question_toks": [
      "return",
      "all",
      "columns",
      "of",
      "the",
      "albums",
      "created",
      "in",
      "the",
      "year",
      "of",
      "2012",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          2012.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT count(*) FROM Songs",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Songs"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "songs"
    ],
    "question": "How many songs are there?",
    "question_toks": [
      "How",
      "many",
      "songs",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT count(*) FROM Songs",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Songs"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "songs"
    ],
    "question": "Count the number of songs.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "songs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT count(DISTINCT label) FROM albums",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "label",
      ")",
      "FROM",
      "albums"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "label",
      ")",
      "from",
      "albums"
    ],
    "question": "How many unique labels are there for albums?",
    "question_toks": [
      "How",
      "many",
      "unique",
      "labels",
      "are",
      "there",
      "for",
      "albums",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT count(DISTINCT label) FROM albums",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "label",
      ")",
      "FROM",
      "albums"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "label",
      ")",
      "from",
      "albums"
    ],
    "question": "What are the unique labels for the albums?",
    "question_toks": [
      "What",
      "are",
      "the",
      "unique",
      "labels",
      "for",
      "the",
      "albums",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT title FROM songs WHERE title LIKE '% the %'",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "songs",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "%",
      "the",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "songs",
      "where",
      "title",
      "like",
      "value"
    ],
    "question": "Find all the songs whose name contains the word \"the\".",
    "question_toks": [
      "Find",
      "all",
      "the",
      "songs",
      "whose",
      "name",
      "contains",
      "the",
      "word",
      "``",
      "the",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"% the %\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT title FROM songs WHERE title LIKE '% the %'",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "songs",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "%",
      "the",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "songs",
      "where",
      "title",
      "like",
      "value"
    ],
    "question": "What are the names of the songs whose title has the word \"the\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "songs",
      "whose",
      "title",
      "has",
      "the",
      "word",
      "``",
      "the",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"% the %\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT count(*) FROM instruments WHERE instrument  =  \"drums\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "instruments",
      "WHERE",
      "instrument",
      "=",
      "``",
      "drums",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "instruments",
      "where",
      "instrument",
      "=",
      "value"
    ],
    "question": "How many songs have used the instrument \"drums\"?",
    "question_toks": [
      "How",
      "many",
      "songs",
      "have",
      "used",
      "the",
      "instrument",
      "``",
      "drums",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"drums\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT count(*) FROM instruments WHERE instrument  =  \"drums\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "instruments",
      "WHERE",
      "instrument",
      "=",
      "``",
      "drums",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "instruments",
      "where",
      "instrument",
      "=",
      "value"
    ],
    "question": "How many songs use drums as an instrument?",
    "question_toks": [
      "How",
      "many",
      "songs",
      "use",
      "drums",
      "as",
      "an",
      "instrument",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"drums\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT * FROM Albums WHERE YEAR  =  2010",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "Albums",
      "WHERE",
      "YEAR",
      "=",
      "2010"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "albums",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "What are the albums produced in year 2010?",
    "question_toks": [
      "What",
      "are",
      "the",
      "albums",
      "produced",
      "in",
      "year",
      "2010",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT * FROM Albums WHERE YEAR  =  2010",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "Albums",
      "WHERE",
      "YEAR",
      "=",
      "2010"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "albums",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "What information is there on albums from 2010?",
    "question_toks": [
      "What",
      "information",
      "is",
      "there",
      "on",
      "albums",
      "from",
      "2010",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT founder FROM manufacturers WHERE name  =  'Sony'",
    "query_toks": [
      "SELECT",
      "founder",
      "FROM",
      "manufacturers",
      "WHERE",
      "name",
      "=",
      "'Sony",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "founder",
      "from",
      "manufacturers",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "Who is the founder of Sony?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "founder",
      "of",
      "Sony",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Sony\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT founder FROM manufacturers WHERE name  =  'Sony'",
    "query_toks": [
      "SELECT",
      "founder",
      "FROM",
      "manufacturers",
      "WHERE",
      "name",
      "=",
      "'Sony",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "founder",
      "from",
      "manufacturers",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "Return the founder of Sony.",
    "question_toks": [
      "Return",
      "the",
      "founder",
      "of",
      "Sony",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Sony\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT headquarter FROM manufacturers WHERE founder  =  'James'",
    "query_toks": [
      "SELECT",
      "headquarter",
      "FROM",
      "manufacturers",
      "WHERE",
      "founder",
      "=",
      "'James",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "headquarter",
      "from",
      "manufacturers",
      "where",
      "founder",
      "=",
      "value"
    ],
    "question": "Where is the headquarter of the company founded by James?",
    "question_toks": [
      "Where",
      "is",
      "the",
      "headquarter",
      "of",
      "the",
      "company",
      "founded",
      "by",
      "James",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"James\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT headquarter FROM manufacturers WHERE founder  =  'James'",
    "query_toks": [
      "SELECT",
      "headquarter",
      "FROM",
      "manufacturers",
      "WHERE",
      "founder",
      "=",
      "'James",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "headquarter",
      "from",
      "manufacturers",
      "where",
      "founder",
      "=",
      "value"
    ],
    "question": "What is the headquarter of the company whose founder is James?",
    "question_toks": [
      "What",
      "is",
      "the",
      "headquarter",
      "of",
      "the",
      "company",
      "whose",
      "founder",
      "is",
      "James",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"James\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT avg(revenue) ,  max(revenue) ,  sum(revenue) FROM manufacturers",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "revenue",
      ")",
      ",",
      "max",
      "(",
      "revenue",
      ")",
      ",",
      "sum",
      "(",
      "revenue",
      ")",
      "FROM",
      "manufacturers"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "revenue",
      ")",
      ",",
      "max",
      "(",
      "revenue",
      ")",
      ",",
      "sum",
      "(",
      "revenue",
      ")",
      "from",
      "manufacturers"
    ],
    "question": "What are the average, maximum and total revenues of all companies?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      ",",
      "maximum",
      "and",
      "total",
      "revenues",
      "of",
      "all",
      "companies",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            4,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT avg(revenue) ,  max(revenue) ,  sum(revenue) FROM manufacturers",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "revenue",
      ")",
      ",",
      "max",
      "(",
      "revenue",
      ")",
      ",",
      "sum",
      "(",
      "revenue",
      ")",
      "FROM",
      "manufacturers"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "revenue",
      ")",
      ",",
      "max",
      "(",
      "revenue",
      ")",
      ",",
      "sum",
      "(",
      "revenue",
      ")",
      "from",
      "manufacturers"
    ],
    "question": "Return the average, maximum, and total revenues across all manufacturers.",
    "question_toks": [
      "Return",
      "the",
      "average",
      ",",
      "maximum",
      ",",
      "and",
      "total",
      "revenues",
      "across",
      "all",
      "manufacturers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            4,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT count(*) FROM manufacturers WHERE founder  =  'Andy'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "manufacturers",
      "WHERE",
      "founder",
      "=",
      "'Andy",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "manufacturers",
      "where",
      "founder",
      "=",
      "value"
    ],
    "question": "How many companies were created by Andy?",
    "question_toks": [
      "How",
      "many",
      "companies",
      "were",
      "created",
      "by",
      "Andy",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Andy\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT count(*) FROM manufacturers WHERE founder  =  'Andy'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "manufacturers",
      "WHERE",
      "founder",
      "=",
      "'Andy",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "manufacturers",
      "where",
      "founder",
      "=",
      "value"
    ],
    "question": "Return the number of companies created by Andy.",
    "question_toks": [
      "Return",
      "the",
      "number",
      "of",
      "companies",
      "created",
      "by",
      "Andy",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Andy\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT sum(revenue) FROM manufacturers WHERE headquarter  =  'Austin'",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "revenue",
      ")",
      "FROM",
      "manufacturers",
      "WHERE",
      "headquarter",
      "=",
      "'Austin",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "revenue",
      ")",
      "from",
      "manufacturers",
      "where",
      "headquarter",
      "=",
      "value"
    ],
    "question": "Find the total revenue created by the companies whose headquarter is located at Austin.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "revenue",
      "created",
      "by",
      "the",
      "companies",
      "whose",
      "headquarter",
      "is",
      "located",
      "at",
      "Austin",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Austin\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT sum(revenue) FROM manufacturers WHERE headquarter  =  'Austin'",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "revenue",
      ")",
      "FROM",
      "manufacturers",
      "WHERE",
      "headquarter",
      "=",
      "'Austin",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "revenue",
      ")",
      "from",
      "manufacturers",
      "where",
      "headquarter",
      "=",
      "value"
    ],
    "question": "What is the sum of revenue from companies with headquarters in Austin?",
    "question_toks": [
      "What",
      "is",
      "the",
      "sum",
      "of",
      "revenue",
      "from",
      "companies",
      "with",
      "headquarters",
      "in",
      "Austin",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Austin\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT count(*) FROM manufacturers WHERE headquarter  =  'Tokyo' OR headquarter  =  'Beijing'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "manufacturers",
      "WHERE",
      "headquarter",
      "=",
      "'Tokyo",
      "'",
      "OR",
      "headquarter",
      "=",
      "'Beijing",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "manufacturers",
      "where",
      "headquarter",
      "=",
      "value",
      "or",
      "headquarter",
      "=",
      "value"
    ],
    "question": "Find the number of manufactures that are based in Tokyo or Beijing.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "manufactures",
      "that",
      "are",
      "based",
      "in",
      "Tokyo",
      "or",
      "Beijing",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Tokyo\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Beijing\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT count(*) FROM manufacturers WHERE headquarter  =  'Tokyo' OR headquarter  =  'Beijing'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "manufacturers",
      "WHERE",
      "headquarter",
      "=",
      "'Tokyo",
      "'",
      "OR",
      "headquarter",
      "=",
      "'Beijing",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "manufacturers",
      "where",
      "headquarter",
      "=",
      "value",
      "or",
      "headquarter",
      "=",
      "value"
    ],
    "question": "How many manufacturers have headquarters in either Tokyo or Beijing?",
    "question_toks": [
      "How",
      "many",
      "manufacturers",
      "have",
      "headquarters",
      "in",
      "either",
      "Tokyo",
      "or",
      "Beijing",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Tokyo\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Beijing\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT founder FROM manufacturers WHERE name LIKE 'S%'",
    "query_toks": [
      "SELECT",
      "founder",
      "FROM",
      "manufacturers",
      "WHERE",
      "name",
      "LIKE",
      "'S",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "founder",
      "from",
      "manufacturers",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "Find the founder of the company whose name begins with the letter 'S'.",
    "question_toks": [
      "Find",
      "the",
      "founder",
      "of",
      "the",
      "company",
      "whose",
      "name",
      "begins",
      "with",
      "the",
      "letter",
      "'S",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"S%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT founder FROM manufacturers WHERE name LIKE 'S%'",
    "query_toks": [
      "SELECT",
      "founder",
      "FROM",
      "manufacturers",
      "WHERE",
      "name",
      "LIKE",
      "'S",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "founder",
      "from",
      "manufacturers",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "Who is the founders of companies whose first letter is S?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "founders",
      "of",
      "companies",
      "whose",
      "first",
      "letter",
      "is",
      "S",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"S%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT name FROM manufacturers WHERE revenue BETWEEN 100 AND 150",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "manufacturers",
      "WHERE",
      "revenue",
      "BETWEEN",
      "100",
      "AND",
      "150"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "manufacturers",
      "where",
      "revenue",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "Find the name of companies whose revenue is between 100 and 150.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "companies",
      "whose",
      "revenue",
      "is",
      "between",
      "100",
      "and",
      "150",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          100.0,
          150.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT name FROM manufacturers WHERE revenue BETWEEN 100 AND 150",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "manufacturers",
      "WHERE",
      "revenue",
      "BETWEEN",
      "100",
      "AND",
      "150"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "manufacturers",
      "where",
      "revenue",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What are the names of companies with revenue between 100 and 150?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "companies",
      "with",
      "revenue",
      "between",
      "100",
      "and",
      "150",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          100.0,
          150.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT sum(revenue) FROM manufacturers WHERE Headquarter  =  'Tokyo' OR Headquarter  =  'Taiwan'",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "revenue",
      ")",
      "FROM",
      "manufacturers",
      "WHERE",
      "Headquarter",
      "=",
      "'Tokyo",
      "'",
      "OR",
      "Headquarter",
      "=",
      "'Taiwan",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "revenue",
      ")",
      "from",
      "manufacturers",
      "where",
      "headquarter",
      "=",
      "value",
      "or",
      "headquarter",
      "=",
      "value"
    ],
    "question": "What is the total revenue of all companies whose main office is at Tokyo or Taiwan?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "revenue",
      "of",
      "all",
      "companies",
      "whose",
      "main",
      "office",
      "is",
      "at",
      "Tokyo",
      "or",
      "Taiwan",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Tokyo\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Taiwan\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT sum(revenue) FROM manufacturers WHERE Headquarter  =  'Tokyo' OR Headquarter  =  'Taiwan'",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "revenue",
      ")",
      "FROM",
      "manufacturers",
      "WHERE",
      "Headquarter",
      "=",
      "'Tokyo",
      "'",
      "OR",
      "Headquarter",
      "=",
      "'Taiwan",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "revenue",
      ")",
      "from",
      "manufacturers",
      "where",
      "headquarter",
      "=",
      "value",
      "or",
      "headquarter",
      "=",
      "value"
    ],
    "question": "Return the total revenue of companies with headquarters in Tokyo or Taiwan.",
    "question_toks": [
      "Return",
      "the",
      "total",
      "revenue",
      "of",
      "companies",
      "with",
      "headquarters",
      "in",
      "Tokyo",
      "or",
      "Taiwan",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Tokyo\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Taiwan\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT name FROM manufacturers WHERE revenue  >  (SELECT avg(revenue) FROM manufacturers)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "manufacturers",
      "WHERE",
      "revenue",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "revenue",
      ")",
      "FROM",
      "manufacturers",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "manufacturers",
      "where",
      "revenue",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "revenue",
      ")",
      "from",
      "manufacturers",
      ")"
    ],
    "question": "Find the name of companies whose revenue is greater than the average revenue of all companies.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "companies",
      "whose",
      "revenue",
      "is",
      "greater",
      "than",
      "the",
      "average",
      "revenue",
      "of",
      "all",
      "companies",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT name FROM manufacturers WHERE revenue  >  (SELECT avg(revenue) FROM manufacturers)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "manufacturers",
      "WHERE",
      "revenue",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "revenue",
      ")",
      "FROM",
      "manufacturers",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "manufacturers",
      "where",
      "revenue",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "revenue",
      ")",
      "from",
      "manufacturers",
      ")"
    ],
    "question": "What are the names of manufacturers with revenue greater than the average of all revenues?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "manufacturers",
      "with",
      "revenue",
      "greater",
      "than",
      "the",
      "average",
      "of",
      "all",
      "revenues",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT name FROM manufacturers WHERE revenue  <  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "manufacturers",
      "WHERE",
      "revenue",
      "<",
      "(",
      "SELECT",
      "min",
      "(",
      "revenue",
      ")",
      "FROM",
      "manufacturers",
      "WHERE",
      "headquarter",
      "=",
      "'Austin",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "manufacturers",
      "where",
      "revenue",
      "<",
      "(",
      "select",
      "min",
      "(",
      "revenue",
      ")",
      "from",
      "manufacturers",
      "where",
      "headquarter",
      "=",
      "value",
      ")"
    ],
    "question": "Find the name of companies whose revenue is smaller than the revenue of all companies based in Austin.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "companies",
      "whose",
      "revenue",
      "is",
      "smaller",
      "than",
      "the",
      "revenue",
      "of",
      "all",
      "companies",
      "based",
      "in",
      "Austin",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                "\"Austin\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT name FROM manufacturers WHERE revenue  <  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "manufacturers",
      "WHERE",
      "revenue",
      "<",
      "(",
      "SELECT",
      "min",
      "(",
      "revenue",
      ")",
      "FROM",
      "manufacturers",
      "WHERE",
      "headquarter",
      "=",
      "'Austin",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "manufacturers",
      "where",
      "revenue",
      "<",
      "(",
      "select",
      "min",
      "(",
      "revenue",
      ")",
      "from",
      "manufacturers",
      "where",
      "headquarter",
      "=",
      "value",
      ")"
    ],
    "question": "What are the names of companies with revenue less than the lowest revenue of any manufacturer in Austin?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "companies",
      "with",
      "revenue",
      "less",
      "than",
      "the",
      "lowest",
      "revenue",
      "of",
      "any",
      "manufacturer",
      "in",
      "Austin",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                "\"Austin\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT sum(revenue) FROM manufacturers WHERE revenue  >  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "revenue",
      ")",
      "FROM",
      "manufacturers",
      "WHERE",
      "revenue",
      ">",
      "(",
      "SELECT",
      "min",
      "(",
      "revenue",
      ")",
      "FROM",
      "manufacturers",
      "WHERE",
      "headquarter",
      "=",
      "'Austin",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "revenue",
      ")",
      "from",
      "manufacturers",
      "where",
      "revenue",
      ">",
      "(",
      "select",
      "min",
      "(",
      "revenue",
      ")",
      "from",
      "manufacturers",
      "where",
      "headquarter",
      "=",
      "value",
      ")"
    ],
    "question": "Find the total revenue of companies whose revenue is larger than the revenue of some companies based in Austin.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "revenue",
      "of",
      "companies",
      "whose",
      "revenue",
      "is",
      "larger",
      "than",
      "the",
      "revenue",
      "of",
      "some",
      "companies",
      "based",
      "in",
      "Austin",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                "\"Austin\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT sum(revenue) FROM manufacturers WHERE revenue  >  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "revenue",
      ")",
      "FROM",
      "manufacturers",
      "WHERE",
      "revenue",
      ">",
      "(",
      "SELECT",
      "min",
      "(",
      "revenue",
      ")",
      "FROM",
      "manufacturers",
      "WHERE",
      "headquarter",
      "=",
      "'Austin",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "revenue",
      ")",
      "from",
      "manufacturers",
      "where",
      "revenue",
      ">",
      "(",
      "select",
      "min",
      "(",
      "revenue",
      ")",
      "from",
      "manufacturers",
      "where",
      "headquarter",
      "=",
      "value",
      ")"
    ],
    "question": "What is the total revenue of companies with revenue greater than the lowest revenue of any manufacturer in Austin?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "revenue",
      "of",
      "companies",
      "with",
      "revenue",
      "greater",
      "than",
      "the",
      "lowest",
      "revenue",
      "of",
      "any",
      "manufacturer",
      "in",
      "Austin",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                "\"Austin\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT count(DISTINCT name) FROM products WHERE name NOT IN (SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony')",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "name",
      ")",
      "FROM",
      "products",
      "WHERE",
      "name",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "T1.name",
      "FROM",
      "products",
      "AS",
      "T1",
      "JOIN",
      "manufacturers",
      "AS",
      "T2",
      "ON",
      "T1.Manufacturer",
      "=",
      "T2.code",
      "WHERE",
      "T2.name",
      "=",
      "'Sony",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "name",
      ")",
      "from",
      "products",
      "where",
      "name",
      "not",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "name",
      "from",
      "products",
      "as",
      "t1",
      "join",
      "manufacturers",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "manufacturer",
      "=",
      "t2",
      ".",
      "code",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      ")"
    ],
    "question": "Find number of products which Sony does not make.",
    "question_toks": [
      "Find",
      "number",
      "of",
      "products",
      "which",
      "Sony",
      "does",
      "not",
      "make",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                7,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    1,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      7,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    2,
                    false
                  ],
                  null
                ],
                "\"Sony\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT count(DISTINCT name) FROM products WHERE name NOT IN (SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony')",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "name",
      ")",
      "FROM",
      "products",
      "WHERE",
      "name",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "T1.name",
      "FROM",
      "products",
      "AS",
      "T1",
      "JOIN",
      "manufacturers",
      "AS",
      "T2",
      "ON",
      "T1.Manufacturer",
      "=",
      "T2.code",
      "WHERE",
      "T2.name",
      "=",
      "'Sony",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "name",
      ")",
      "from",
      "products",
      "where",
      "name",
      "not",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "name",
      "from",
      "products",
      "as",
      "t1",
      "join",
      "manufacturers",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "manufacturer",
      "=",
      "t2",
      ".",
      "code",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      ")"
    ],
    "question": "How many products are not made by Sony?",
    "question_toks": [
      "How",
      "many",
      "products",
      "are",
      "not",
      "made",
      "by",
      "Sony",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                7,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    1,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      7,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    2,
                    false
                  ],
                  null
                ],
                "\"Sony\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT Name FROM Products",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "Products"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "products"
    ],
    "question": "Select the names of all the products in the store.",
    "question_toks": [
      "Select",
      "the",
      "names",
      "of",
      "all",
      "the",
      "products",
      "in",
      "the",
      "store",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT Name FROM Products",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "Products"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "products"
    ],
    "question": "What are the names of all products?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "products",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT name ,  price FROM products",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "price",
      "FROM",
      "products"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "price",
      "from",
      "products"
    ],
    "question": "Select the names and the prices of all the products in the store.",
    "question_toks": [
      "Select",
      "the",
      "names",
      "and",
      "the",
      "prices",
      "of",
      "all",
      "the",
      "products",
      "in",
      "the",
      "store",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT name ,  price FROM products",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "price",
      "FROM",
      "products"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "price",
      "from",
      "products"
    ],
    "question": "What are the names and prices of all products in the store?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "prices",
      "of",
      "all",
      "products",
      "in",
      "the",
      "store",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT name FROM products WHERE price  <=  200",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "products",
      "WHERE",
      "price",
      "<",
      "=",
      "200"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "products",
      "where",
      "price",
      "<",
      "=",
      "value"
    ],
    "question": "Select the name of the products with a price less than or equal to $200.",
    "question_toks": [
      "Select",
      "the",
      "name",
      "of",
      "the",
      "products",
      "with",
      "a",
      "price",
      "less",
      "than",
      "or",
      "equal",
      "to",
      "$",
      "200",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          6,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          200.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT name FROM products WHERE price  <=  200",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "products",
      "WHERE",
      "price",
      "<",
      "=",
      "200"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "products",
      "where",
      "price",
      "<",
      "=",
      "value"
    ],
    "question": "What are the names of products with price at most 200?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "products",
      "with",
      "price",
      "at",
      "most",
      "200",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          6,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          200.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT * FROM products WHERE price BETWEEN 60 AND 120",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "products",
      "WHERE",
      "price",
      "BETWEEN",
      "60",
      "AND",
      "120"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "products",
      "where",
      "price",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "Find all information of all the products with a price between $60 and $120.",
    "question_toks": [
      "Find",
      "all",
      "information",
      "of",
      "all",
      "the",
      "products",
      "with",
      "a",
      "price",
      "between",
      "$",
      "60",
      "and",
      "$",
      "120",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          60.0,
          120.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT * FROM products WHERE price BETWEEN 60 AND 120",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "products",
      "WHERE",
      "price",
      "BETWEEN",
      "60",
      "AND",
      "120"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "products",
      "where",
      "price",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What is all the information of all the products that have a price between 60 and 120?",
    "question_toks": [
      "What",
      "is",
      "all",
      "the",
      "information",
      "of",
      "all",
      "the",
      "products",
      "that",
      "have",
      "a",
      "price",
      "between",
      "60",
      "and",
      "120",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          60.0,
          120.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT avg(price) FROM products",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "products"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "products"
    ],
    "question": "Compute the average price of all the products.",
    "question_toks": [
      "Compute",
      "the",
      "average",
      "price",
      "of",
      "all",
      "the",
      "products",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT avg(price) FROM products",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "products"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "products"
    ],
    "question": "What is the average price across all products?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "price",
      "across",
      "all",
      "products",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT avg(price) FROM products WHERE Manufacturer  =  2",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "products",
      "WHERE",
      "Manufacturer",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "products",
      "where",
      "manufacturer",
      "=",
      "value"
    ],
    "question": "Compute the average price of all products with manufacturer code equal to 2.",
    "question_toks": [
      "Compute",
      "the",
      "average",
      "price",
      "of",
      "all",
      "products",
      "with",
      "manufacturer",
      "code",
      "equal",
      "to",
      "2",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT avg(price) FROM products WHERE Manufacturer  =  2",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "products",
      "WHERE",
      "Manufacturer",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "products",
      "where",
      "manufacturer",
      "=",
      "value"
    ],
    "question": "What is the average price of products with manufacturer codes equal to 2?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "price",
      "of",
      "products",
      "with",
      "manufacturer",
      "codes",
      "equal",
      "to",
      "2",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT count(*) FROM products WHERE price >= 180",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "products",
      "WHERE",
      "price",
      ">",
      "=",
      "180"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "products",
      "where",
      "price",
      ">",
      "=",
      "value"
    ],
    "question": "Compute the number of products with a price larger than or equal to $180.",
    "question_toks": [
      "Compute",
      "the",
      "number",
      "of",
      "products",
      "with",
      "a",
      "price",
      "larger",
      "than",
      "or",
      "equal",
      "to",
      "$",
      "180",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          180.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT count(*) FROM products WHERE price >= 180",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "products",
      "WHERE",
      "price",
      ">",
      "=",
      "180"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "products",
      "where",
      "price",
      ">",
      "=",
      "value"
    ],
    "question": "How many products have prices of at least 180?",
    "question_toks": [
      "How",
      "many",
      "products",
      "have",
      "prices",
      "of",
      "at",
      "least",
      "180",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          180.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_software_problems",
    "query": "SELECT problem_log_id ,  log_entry_date FROM problem_log WHERE problem_id = 10",
    "query_toks": [
      "SELECT",
      "problem_log_id",
      ",",
      "log_entry_date",
      "FROM",
      "problem_log",
      "WHERE",
      "problem_id",
      "=",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "problem_log_id",
      ",",
      "log_entry_date",
      "from",
      "problem_log",
      "where",
      "problem_id",
      "=",
      "value"
    ],
    "question": "Find all the ids and dates of the logs for the problem whose id is 10.",
    "question_toks": [
      "Find",
      "all",
      "the",
      "ids",
      "and",
      "dates",
      "of",
      "the",
      "logs",
      "for",
      "the",
      "problem",
      "whose",
      "id",
      "is",
      "10",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_software_problems",
    "query": "SELECT problem_log_id ,  log_entry_date FROM problem_log WHERE problem_id = 10",
    "query_toks": [
      "SELECT",
      "problem_log_id",
      ",",
      "log_entry_date",
      "FROM",
      "problem_log",
      "WHERE",
      "problem_id",
      "=",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "problem_log_id",
      ",",
      "log_entry_date",
      "from",
      "problem_log",
      "where",
      "problem_id",
      "=",
      "value"
    ],
    "question": "For the problem with id 10, return the ids and dates of its problem logs.",
    "question_toks": [
      "For",
      "the",
      "problem",
      "with",
      "id",
      "10",
      ",",
      "return",
      "the",
      "ids",
      "and",
      "dates",
      "of",
      "its",
      "problem",
      "logs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_software_problems",
    "query": "SELECT problem_log_id ,  log_entry_description FROM problem_log",
    "query_toks": [
      "SELECT",
      "problem_log_id",
      ",",
      "log_entry_description",
      "FROM",
      "problem_log"
    ],
    "query_toks_no_value": [
      "select",
      "problem_log_id",
      ",",
      "log_entry_description",
      "from",
      "problem_log"
    ],
    "question": "List all the log ids and their descriptions from the problem logs.",
    "question_toks": [
      "List",
      "all",
      "the",
      "log",
      "ids",
      "and",
      "their",
      "descriptions",
      "from",
      "the",
      "problem",
      "logs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_software_problems",
    "query": "SELECT problem_log_id ,  log_entry_description FROM problem_log",
    "query_toks": [
      "SELECT",
      "problem_log_id",
      ",",
      "log_entry_description",
      "FROM",
      "problem_log"
    ],
    "query_toks_no_value": [
      "select",
      "problem_log_id",
      ",",
      "log_entry_description",
      "from",
      "problem_log"
    ],
    "question": "What are the log id and entry description of each problem?",
    "question_toks": [
      "What",
      "are",
      "the",
      "log",
      "id",
      "and",
      "entry",
      "description",
      "of",
      "each",
      "problem",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_software_problems",
    "query": "SELECT problem_id FROM problems WHERE date_problem_reported > \"1978-06-26\"",
    "query_toks": [
      "SELECT",
      "problem_id",
      "FROM",
      "problems",
      "WHERE",
      "date_problem_reported",
      ">",
      "``",
      "1978-06-26",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "problem_id",
      "from",
      "problems",
      "where",
      "date_problem_reported",
      ">",
      "value"
    ],
    "question": "What are the ids of the problems which are reported after 1978-06-26?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "the",
      "problems",
      "which",
      "are",
      "reported",
      "after",
      "1978-06-26",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"1978-06-26\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_software_problems",
    "query": "SELECT problem_id FROM problems WHERE date_problem_reported > \"1978-06-26\"",
    "query_toks": [
      "SELECT",
      "problem_id",
      "FROM",
      "problems",
      "WHERE",
      "date_problem_reported",
      ">",
      "``",
      "1978-06-26",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "problem_id",
      "from",
      "problems",
      "where",
      "date_problem_reported",
      ">",
      "value"
    ],
    "question": "Find the ids of the problems reported after 1978-06-26.",
    "question_toks": [
      "Find",
      "the",
      "ids",
      "of",
      "the",
      "problems",
      "reported",
      "after",
      "1978-06-26",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"1978-06-26\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_software_problems",
    "query": "SELECT problem_id FROM problems WHERE date_problem_reported < \"1978-06-26\"",
    "query_toks": [
      "SELECT",
      "problem_id",
      "FROM",
      "problems",
      "WHERE",
      "date_problem_reported",
      "<",
      "``",
      "1978-06-26",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "problem_id",
      "from",
      "problems",
      "where",
      "date_problem_reported",
      "<",
      "value"
    ],
    "question": "What are the ids of the problems which are reported before 1978-06-26?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "the",
      "problems",
      "which",
      "are",
      "reported",
      "before",
      "1978-06-26",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"1978-06-26\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_software_problems",
    "query": "SELECT problem_id FROM problems WHERE date_problem_reported < \"1978-06-26\"",
    "query_toks": [
      "SELECT",
      "problem_id",
      "FROM",
      "problems",
      "WHERE",
      "date_problem_reported",
      "<",
      "``",
      "1978-06-26",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "problem_id",
      "from",
      "problems",
      "where",
      "date_problem_reported",
      "<",
      "value"
    ],
    "question": "Which problems are reported before 1978-06-26? Give me the ids of the problems.",
    "question_toks": [
      "Which",
      "problems",
      "are",
      "reported",
      "before",
      "1978-06-26",
      "?",
      "Give",
      "me",
      "the",
      "ids",
      "of",
      "the",
      "problems",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"1978-06-26\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "shop_membership",
    "query": "SELECT count(*) FROM branch WHERE membership_amount  >  (SELECT avg(membership_amount) FROM branch)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "branch",
      "WHERE",
      "membership_amount",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "membership_amount",
      ")",
      "FROM",
      "branch",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "branch",
      "where",
      "membership_amount",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "membership_amount",
      ")",
      "from",
      "branch",
      ")"
    ],
    "question": "How many branches where have more than average number of memberships are there?",
    "question_toks": [
      "How",
      "many",
      "branches",
      "where",
      "have",
      "more",
      "than",
      "average",
      "number",
      "of",
      "memberships",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      11,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "shop_membership",
    "query": "SELECT count(*) FROM branch WHERE membership_amount  >  (SELECT avg(membership_amount) FROM branch)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "branch",
      "WHERE",
      "membership_amount",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "membership_amount",
      ")",
      "FROM",
      "branch",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "branch",
      "where",
      "membership_amount",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "membership_amount",
      ")",
      "from",
      "branch",
      ")"
    ],
    "question": "What is the number of branches that have more than the average number of memberships?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "branches",
      "that",
      "have",
      "more",
      "than",
      "the",
      "average",
      "number",
      "of",
      "memberships",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      11,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "shop_membership",
    "query": "SELECT min(membership_amount) ,  max(membership_amount) FROM branch WHERE open_year  =  2011 OR city  =  'London'",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "membership_amount",
      ")",
      ",",
      "max",
      "(",
      "membership_amount",
      ")",
      "FROM",
      "branch",
      "WHERE",
      "open_year",
      "=",
      "2011",
      "OR",
      "city",
      "=",
      "'London",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "membership_amount",
      ")",
      ",",
      "max",
      "(",
      "membership_amount",
      ")",
      "from",
      "branch",
      "where",
      "open_year",
      "=",
      "value",
      "or",
      "city",
      "=",
      "value"
    ],
    "question": "Show minimum and maximum amount of memberships for all branches opened in 2011 or located at city London.",
    "question_toks": [
      "Show",
      "minimum",
      "and",
      "maximum",
      "amount",
      "of",
      "memberships",
      "for",
      "all",
      "branches",
      "opened",
      "in",
      "2011",
      "or",
      "located",
      "at",
      "city",
      "London",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2011.0,
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"London\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "shop_membership",
    "query": "SELECT min(membership_amount) ,  max(membership_amount) FROM branch WHERE open_year  =  2011 OR city  =  'London'",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "membership_amount",
      ")",
      ",",
      "max",
      "(",
      "membership_amount",
      ")",
      "FROM",
      "branch",
      "WHERE",
      "open_year",
      "=",
      "2011",
      "OR",
      "city",
      "=",
      "'London",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "membership_amount",
      ")",
      ",",
      "max",
      "(",
      "membership_amount",
      ")",
      "from",
      "branch",
      "where",
      "open_year",
      "=",
      "value",
      "or",
      "city",
      "=",
      "value"
    ],
    "question": "What are the minimum and maximum membership amounts for all branches that either opened in 2011 or are located in London?",
    "question_toks": [
      "What",
      "are",
      "the",
      "minimum",
      "and",
      "maximum",
      "membership",
      "amounts",
      "for",
      "all",
      "branches",
      "that",
      "either",
      "opened",
      "in",
      "2011",
      "or",
      "are",
      "located",
      "in",
      "London",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2011.0,
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"London\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "shop_membership",
    "query": "SELECT count(DISTINCT LEVEL) FROM member",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "LEVEL",
      ")",
      "FROM",
      "member"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "level",
      ")",
      "from",
      "member"
    ],
    "question": "How many different levels do members have?",
    "question_toks": [
      "How",
      "many",
      "different",
      "levels",
      "do",
      "members",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                5,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "shop_membership",
    "query": "SELECT count(DISTINCT LEVEL) FROM member",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "LEVEL",
      ")",
      "FROM",
      "member"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "level",
      ")",
      "from",
      "member"
    ],
    "question": "What are the different membership levels?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "membership",
      "levels",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                5,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "shop_membership",
    "query": "SELECT name FROM member WHERE member_id NOT IN (SELECT member_id FROM membership_register_branch)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "member",
      "WHERE",
      "member_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "member_id",
      "FROM",
      "membership_register_branch",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "member",
      "where",
      "member_id",
      "not",
      "in",
      "(",
      "select",
      "member_id",
      "from",
      "membership_register_branch",
      ")"
    ],
    "question": "Show member names without any registered branch.",
    "question_toks": [
      "Show",
      "member",
      "names",
      "without",
      "any",
      "registered",
      "branch",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      12,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "shop_membership",
    "query": "SELECT name FROM member WHERE member_id NOT IN (SELECT member_id FROM membership_register_branch)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "member",
      "WHERE",
      "member_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "member_id",
      "FROM",
      "membership_register_branch",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "member",
      "where",
      "member_id",
      "not",
      "in",
      "(",
      "select",
      "member_id",
      "from",
      "membership_register_branch",
      ")"
    ],
    "question": "What are the names of the members that have never registered at any branch?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "members",
      "that",
      "have",
      "never",
      "registered",
      "at",
      "any",
      "branch",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      12,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "shop_membership",
    "query": "SELECT name ,  city FROM branch WHERE branch_id NOT IN (SELECT branch_id FROM membership_register_branch)",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "city",
      "FROM",
      "branch",
      "WHERE",
      "branch_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "branch_id",
      "FROM",
      "membership_register_branch",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "city",
      "from",
      "branch",
      "where",
      "branch_id",
      "not",
      "in",
      "(",
      "select",
      "branch_id",
      "from",
      "membership_register_branch",
      ")"
    ],
    "question": "List the branch name and city without any registered members.",
    "question_toks": [
      "List",
      "the",
      "branch",
      "name",
      "and",
      "city",
      "without",
      "any",
      "registered",
      "members",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      13,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "shop_membership",
    "query": "SELECT name ,  city FROM branch WHERE branch_id NOT IN (SELECT branch_id FROM membership_register_branch)",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "city",
      "FROM",
      "branch",
      "WHERE",
      "branch_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "branch_id",
      "FROM",
      "membership_register_branch",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "city",
      "from",
      "branch",
      "where",
      "branch_id",
      "not",
      "in",
      "(",
      "select",
      "branch_id",
      "from",
      "membership_register_branch",
      ")"
    ],
    "question": "What are the names and cities of the branches that do not have any registered members?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "cities",
      "of",
      "the",
      "branches",
      "that",
      "do",
      "not",
      "have",
      "any",
      "registered",
      "members",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      13,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "shop_membership",
    "query": "SELECT city FROM branch WHERE open_year  =  2001 AND membership_amount  >  100",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "branch",
      "WHERE",
      "open_year",
      "=",
      "2001",
      "AND",
      "membership_amount",
      ">",
      "100"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "branch",
      "where",
      "open_year",
      "=",
      "value",
      "and",
      "membership_amount",
      ">",
      "value"
    ],
    "question": "Show all city with a branch opened in 2001 and a branch with more than 100 membership.",
    "question_toks": [
      "Show",
      "all",
      "city",
      "with",
      "a",
      "branch",
      "opened",
      "in",
      "2001",
      "and",
      "a",
      "branch",
      "with",
      "more",
      "than",
      "100",
      "membership",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2001.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          100.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "shop_membership",
    "query": "SELECT city FROM branch WHERE open_year  =  2001 AND membership_amount  >  100",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "branch",
      "WHERE",
      "open_year",
      "=",
      "2001",
      "AND",
      "membership_amount",
      ">",
      "100"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "branch",
      "where",
      "open_year",
      "=",
      "value",
      "and",
      "membership_amount",
      ">",
      "value"
    ],
    "question": "What are the cities that have a branch that opened in 2001 and a branch with more than 100 members?",
    "question_toks": [
      "What",
      "are",
      "the",
      "cities",
      "that",
      "have",
      "a",
      "branch",
      "that",
      "opened",
      "in",
      "2001",
      "and",
      "a",
      "branch",
      "with",
      "more",
      "than",
      "100",
      "members",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2001.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          100.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "shop_membership",
    "query": "SELECT card_number FROM member WHERE Hometown LIKE \"%Kentucky%\"",
    "query_toks": [
      "SELECT",
      "card_number",
      "FROM",
      "member",
      "WHERE",
      "Hometown",
      "LIKE",
      "``",
      "%",
      "Kentucky",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "card_number",
      "from",
      "member",
      "where",
      "hometown",
      "like",
      "value"
    ],
    "question": "list the card number of all members whose hometown address includes word \"Kentucky\".",
    "question_toks": [
      "list",
      "the",
      "card",
      "number",
      "of",
      "all",
      "members",
      "whose",
      "hometown",
      "address",
      "includes",
      "word",
      "``",
      "Kentucky",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"%Kentucky%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "shop_membership",
    "query": "SELECT card_number FROM member WHERE Hometown LIKE \"%Kentucky%\"",
    "query_toks": [
      "SELECT",
      "card_number",
      "FROM",
      "member",
      "WHERE",
      "Hometown",
      "LIKE",
      "``",
      "%",
      "Kentucky",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "card_number",
      "from",
      "member",
      "where",
      "hometown",
      "like",
      "value"
    ],
    "question": "What are the card numbers of members from Kentucky?",
    "question_toks": [
      "What",
      "are",
      "the",
      "card",
      "numbers",
      "of",
      "members",
      "from",
      "Kentucky",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"%Kentucky%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT count(*) FROM STUDENT",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "STUDENT"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student"
    ],
    "question": "Find the number of students in total.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "students",
      "in",
      "total",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT count(*) FROM STUDENT",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "STUDENT"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student"
    ],
    "question": "How many students are there in total?",
    "question_toks": [
      "How",
      "many",
      "students",
      "are",
      "there",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT count(*) FROM VOTING_RECORD",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "VOTING_RECORD"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "voting_record"
    ],
    "question": "Find the number of voting records in total.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "voting",
      "records",
      "in",
      "total",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT count(*) FROM VOTING_RECORD",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "VOTING_RECORD"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "voting_record"
    ],
    "question": "How many voting records do we have?",
    "question_toks": [
      "How",
      "many",
      "voting",
      "records",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT count(DISTINCT President_Vote) FROM VOTING_RECORD",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "President_Vote",
      ")",
      "FROM",
      "VOTING_RECORD"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "president_vote",
      ")",
      "from",
      "voting_record"
    ],
    "question": "Find the distinct number of president votes.",
    "question_toks": [
      "Find",
      "the",
      "distinct",
      "number",
      "of",
      "president",
      "votes",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT count(DISTINCT President_Vote) FROM VOTING_RECORD",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "President_Vote",
      ")",
      "FROM",
      "VOTING_RECORD"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "president_vote",
      ")",
      "from",
      "voting_record"
    ],
    "question": "How many distinct president votes are recorded?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "president",
      "votes",
      "are",
      "recorded",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT max(Age) FROM STUDENT",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Age",
      ")",
      "FROM",
      "STUDENT"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "age",
      ")",
      "from",
      "student"
    ],
    "question": "Find the maximum age of all the students.",
    "question_toks": [
      "Find",
      "the",
      "maximum",
      "age",
      "of",
      "all",
      "the",
      "students",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT max(Age) FROM STUDENT",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Age",
      ")",
      "FROM",
      "STUDENT"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "age",
      ")",
      "from",
      "student"
    ],
    "question": "What is the oldest age among the students?",
    "question_toks": [
      "What",
      "is",
      "the",
      "oldest",
      "age",
      "among",
      "the",
      "students",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT LName FROM STUDENT WHERE Major  =  50",
    "query_toks": [
      "SELECT",
      "LName",
      "FROM",
      "STUDENT",
      "WHERE",
      "Major",
      "=",
      "50"
    ],
    "query_toks_no_value": [
      "select",
      "lname",
      "from",
      "student",
      "where",
      "major",
      "=",
      "value"
    ],
    "question": "Find the last names of students with major 50.",
    "question_toks": [
      "Find",
      "the",
      "last",
      "names",
      "of",
      "students",
      "with",
      "major",
      "50",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          50.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT LName FROM STUDENT WHERE Major  =  50",
    "query_toks": [
      "SELECT",
      "LName",
      "FROM",
      "STUDENT",
      "WHERE",
      "Major",
      "=",
      "50"
    ],
    "query_toks_no_value": [
      "select",
      "lname",
      "from",
      "student",
      "where",
      "major",
      "=",
      "value"
    ],
    "question": "What are the last names of students studying major 50?",
    "question_toks": [
      "What",
      "are",
      "the",
      "last",
      "names",
      "of",
      "students",
      "studying",
      "major",
      "50",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          50.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT Fname FROM STUDENT WHERE Age  >  22",
    "query_toks": [
      "SELECT",
      "Fname",
      "FROM",
      "STUDENT",
      "WHERE",
      "Age",
      ">",
      "22"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      "from",
      "student",
      "where",
      "age",
      ">",
      "value"
    ],
    "question": "Find the first names of students with age above 22.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "names",
      "of",
      "students",
      "with",
      "age",
      "above",
      "22",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          22.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT Fname FROM STUDENT WHERE Age  >  22",
    "query_toks": [
      "SELECT",
      "Fname",
      "FROM",
      "STUDENT",
      "WHERE",
      "Age",
      ">",
      "22"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      "from",
      "student",
      "where",
      "age",
      ">",
      "value"
    ],
    "question": "What are the first names of all the students aged above 22?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "names",
      "of",
      "all",
      "the",
      "students",
      "aged",
      "above",
      "22",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          22.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT Major FROM STUDENT WHERE Sex  =  \"M\"",
    "query_toks": [
      "SELECT",
      "Major",
      "FROM",
      "STUDENT",
      "WHERE",
      "Sex",
      "=",
      "``",
      "M",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "major",
      "from",
      "student",
      "where",
      "sex",
      "=",
      "value"
    ],
    "question": "What are the majors of male (sex is M) students?",
    "question_toks": [
      "What",
      "are",
      "the",
      "majors",
      "of",
      "male",
      "(",
      "sex",
      "is",
      "M",
      ")",
      "students",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"M\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT Major FROM STUDENT WHERE Sex  =  \"M\"",
    "query_toks": [
      "SELECT",
      "Major",
      "FROM",
      "STUDENT",
      "WHERE",
      "Sex",
      "=",
      "``",
      "M",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "major",
      "from",
      "student",
      "where",
      "sex",
      "=",
      "value"
    ],
    "question": "List the major of each male student.",
    "question_toks": [
      "List",
      "the",
      "major",
      "of",
      "each",
      "male",
      "student",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"M\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT avg(Age) FROM STUDENT WHERE Sex  =  \"F\"",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Age",
      ")",
      "FROM",
      "STUDENT",
      "WHERE",
      "Sex",
      "=",
      "``",
      "F",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "age",
      ")",
      "from",
      "student",
      "where",
      "sex",
      "=",
      "value"
    ],
    "question": "What is the average age of female (sex is F) students?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "age",
      "of",
      "female",
      "(",
      "sex",
      "is",
      "F",
      ")",
      "students",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"F\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT avg(Age) FROM STUDENT WHERE Sex  =  \"F\"",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Age",
      ")",
      "FROM",
      "STUDENT",
      "WHERE",
      "Sex",
      "=",
      "``",
      "F",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "age",
      ")",
      "from",
      "student",
      "where",
      "sex",
      "=",
      "value"
    ],
    "question": "Find the average age of female students.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "age",
      "of",
      "female",
      "students",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"F\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT max(Age) ,  min(Age) FROM STUDENT WHERE Major  =  600",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Age",
      ")",
      ",",
      "min",
      "(",
      "Age",
      ")",
      "FROM",
      "STUDENT",
      "WHERE",
      "Major",
      "=",
      "600"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "age",
      ")",
      ",",
      "min",
      "(",
      "age",
      ")",
      "from",
      "student",
      "where",
      "major",
      "=",
      "value"
    ],
    "question": "What are the maximum and minimum age of students with major 600?",
    "question_toks": [
      "What",
      "are",
      "the",
      "maximum",
      "and",
      "minimum",
      "age",
      "of",
      "students",
      "with",
      "major",
      "600",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          600.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT max(Age) ,  min(Age) FROM STUDENT WHERE Major  =  600",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Age",
      ")",
      ",",
      "min",
      "(",
      "Age",
      ")",
      "FROM",
      "STUDENT",
      "WHERE",
      "Major",
      "=",
      "600"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "age",
      ")",
      ",",
      "min",
      "(",
      "age",
      ")",
      "from",
      "student",
      "where",
      "major",
      "=",
      "value"
    ],
    "question": "Tell me the ages of the oldest and youngest students studying major 600.",
    "question_toks": [
      "Tell",
      "me",
      "the",
      "ages",
      "of",
      "the",
      "oldest",
      "and",
      "youngest",
      "students",
      "studying",
      "major",
      "600",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          600.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT Advisor FROM STUDENT WHERE city_code  =  \"BAL\"",
    "query_toks": [
      "SELECT",
      "Advisor",
      "FROM",
      "STUDENT",
      "WHERE",
      "city_code",
      "=",
      "``",
      "BAL",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "advisor",
      "from",
      "student",
      "where",
      "city_code",
      "=",
      "value"
    ],
    "question": "Who are the advisors for students that live in a city with city code \"BAL\"?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "advisors",
      "for",
      "students",
      "that",
      "live",
      "in",
      "a",
      "city",
      "with",
      "city",
      "code",
      "``",
      "BAL",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"BAL\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT Advisor FROM STUDENT WHERE city_code  =  \"BAL\"",
    "query_toks": [
      "SELECT",
      "Advisor",
      "FROM",
      "STUDENT",
      "WHERE",
      "city_code",
      "=",
      "``",
      "BAL",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "advisor",
      "from",
      "student",
      "where",
      "city_code",
      "=",
      "value"
    ],
    "question": "Show the advisors of the students whose city of residence has city code \"BAL\".",
    "question_toks": [
      "Show",
      "the",
      "advisors",
      "of",
      "the",
      "students",
      "whose",
      "city",
      "of",
      "residence",
      "has",
      "city",
      "code",
      "``",
      "BAL",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"BAL\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT count(*) FROM products",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "products"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "products"
    ],
    "question": "How many products are there?",
    "question_toks": [
      "How",
      "many",
      "products",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT count(*) FROM products",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "products"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "products"
    ],
    "question": "Count the number of products.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "products",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT count(*) FROM ref_colors",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "ref_colors"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ref_colors"
    ],
    "question": "How many colors are there?",
    "question_toks": [
      "How",
      "many",
      "colors",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT count(*) FROM ref_colors",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "ref_colors"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ref_colors"
    ],
    "question": "Count the number of colors.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "colors",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT count(*) FROM CHARACTERISTICS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "CHARACTERISTICS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "characteristics"
    ],
    "question": "How many characteristics are there?",
    "question_toks": [
      "How",
      "many",
      "characteristics",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT count(*) FROM CHARACTERISTICS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "CHARACTERISTICS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "characteristics"
    ],
    "question": "Count the number of characteristics.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "characteristics",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT product_name ,  typical_buying_price FROM products",
    "query_toks": [
      "SELECT",
      "product_name",
      ",",
      "typical_buying_price",
      "FROM",
      "products"
    ],
    "query_toks_no_value": [
      "select",
      "product_name",
      ",",
      "typical_buying_price",
      "from",
      "products"
    ],
    "question": "What are the names and buying prices of all the products?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "buying",
      "prices",
      "of",
      "all",
      "the",
      "products",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT product_name ,  typical_buying_price FROM products",
    "query_toks": [
      "SELECT",
      "product_name",
      ",",
      "typical_buying_price",
      "FROM",
      "products"
    ],
    "query_toks_no_value": [
      "select",
      "product_name",
      ",",
      "typical_buying_price",
      "from",
      "products"
    ],
    "question": "Return the names and typical buying prices for all products.",
    "question_toks": [
      "Return",
      "the",
      "names",
      "and",
      "typical",
      "buying",
      "prices",
      "for",
      "all",
      "products",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT color_description FROM ref_colors",
    "query_toks": [
      "SELECT",
      "color_description",
      "FROM",
      "ref_colors"
    ],
    "query_toks_no_value": [
      "select",
      "color_description",
      "from",
      "ref_colors"
    ],
    "question": "List the description of all the colors.",
    "question_toks": [
      "List",
      "the",
      "description",
      "of",
      "all",
      "the",
      "colors",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT color_description FROM ref_colors",
    "query_toks": [
      "SELECT",
      "color_description",
      "FROM",
      "ref_colors"
    ],
    "query_toks_no_value": [
      "select",
      "color_description",
      "from",
      "ref_colors"
    ],
    "question": "What are the descriptions for each color?",
    "question_toks": [
      "What",
      "are",
      "the",
      "descriptions",
      "for",
      "each",
      "color",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT product_name FROM products WHERE product_category_code  =  \"Spices\"",
    "query_toks": [
      "SELECT",
      "product_name",
      "FROM",
      "products",
      "WHERE",
      "product_category_code",
      "=",
      "``",
      "Spices",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "product_name",
      "from",
      "products",
      "where",
      "product_category_code",
      "=",
      "value"
    ],
    "question": "What are the names of products with category \"Spices\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "products",
      "with",
      "category",
      "``",
      "Spices",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"Spices\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT product_name FROM products WHERE product_category_code  =  \"Spices\"",
    "query_toks": [
      "SELECT",
      "product_name",
      "FROM",
      "products",
      "WHERE",
      "product_category_code",
      "=",
      "``",
      "Spices",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "product_name",
      "from",
      "products",
      "where",
      "product_category_code",
      "=",
      "value"
    ],
    "question": "Return the names of products in the category 'Spices'.",
    "question_toks": [
      "Return",
      "the",
      "names",
      "of",
      "products",
      "in",
      "the",
      "category",
      "'Spices",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"Spices\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT count(*) FROM products WHERE product_category_code  =  \"Seeds\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "products",
      "WHERE",
      "product_category_code",
      "=",
      "``",
      "Seeds",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "products",
      "where",
      "product_category_code",
      "=",
      "value"
    ],
    "question": "How many products are there under the category \"Seeds\"?",
    "question_toks": [
      "How",
      "many",
      "products",
      "are",
      "there",
      "under",
      "the",
      "category",
      "``",
      "Seeds",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"Seeds\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT count(*) FROM products WHERE product_category_code  =  \"Seeds\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "products",
      "WHERE",
      "product_category_code",
      "=",
      "``",
      "Seeds",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "products",
      "where",
      "product_category_code",
      "=",
      "value"
    ],
    "question": "Count the number of products in the category 'Seeds'.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "products",
      "in",
      "the",
      "category",
      "'Seeds",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"Seeds\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT count(*) FROM products WHERE product_category_code  =  \"Spices\" AND typical_buying_price  >  1000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "products",
      "WHERE",
      "product_category_code",
      "=",
      "``",
      "Spices",
      "''",
      "AND",
      "typical_buying_price",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "products",
      "where",
      "product_category_code",
      "=",
      "value",
      "and",
      "typical_buying_price",
      ">",
      "value"
    ],
    "question": "Find the number of products with category \"Spices\" and typically sold above 1000.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "products",
      "with",
      "category",
      "``",
      "Spices",
      "''",
      "and",
      "typically",
      "sold",
      "above",
      "1000",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"Spices\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          1000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT count(*) FROM products WHERE product_category_code  =  \"Spices\" AND typical_buying_price  >  1000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "products",
      "WHERE",
      "product_category_code",
      "=",
      "``",
      "Spices",
      "''",
      "AND",
      "typical_buying_price",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "products",
      "where",
      "product_category_code",
      "=",
      "value",
      "and",
      "typical_buying_price",
      ">",
      "value"
    ],
    "question": "How many products are in the 'Spices' category and have a typical price of over 1000?",
    "question_toks": [
      "How",
      "many",
      "products",
      "are",
      "in",
      "the",
      "'Spices",
      "'",
      "category",
      "and",
      "have",
      "a",
      "typical",
      "price",
      "of",
      "over",
      "1000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"Spices\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          1000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT product_category_code ,  typical_buying_price FROM products WHERE product_name  =  \"cumin\"",
    "query_toks": [
      "SELECT",
      "product_category_code",
      ",",
      "typical_buying_price",
      "FROM",
      "products",
      "WHERE",
      "product_name",
      "=",
      "``",
      "cumin",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "product_category_code",
      ",",
      "typical_buying_price",
      "from",
      "products",
      "where",
      "product_name",
      "=",
      "value"
    ],
    "question": "What is the category and typical buying price  of the product with name \"cumin\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "category",
      "and",
      "typical",
      "buying",
      "price",
      "of",
      "the",
      "product",
      "with",
      "name",
      "``",
      "cumin",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"cumin\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT product_category_code ,  typical_buying_price FROM products WHERE product_name  =  \"cumin\"",
    "query_toks": [
      "SELECT",
      "product_category_code",
      ",",
      "typical_buying_price",
      "FROM",
      "products",
      "WHERE",
      "product_name",
      "=",
      "``",
      "cumin",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "product_category_code",
      ",",
      "typical_buying_price",
      "from",
      "products",
      "where",
      "product_name",
      "=",
      "value"
    ],
    "question": "Return the category code and typical price of 'cumin'.",
    "question_toks": [
      "Return",
      "the",
      "category",
      "code",
      "and",
      "typical",
      "price",
      "of",
      "'cumin",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"cumin\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT product_category_code FROM products WHERE product_name  =  \"flax\"",
    "query_toks": [
      "SELECT",
      "product_category_code",
      "FROM",
      "products",
      "WHERE",
      "product_name",
      "=",
      "``",
      "flax",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "product_category_code",
      "from",
      "products",
      "where",
      "product_name",
      "=",
      "value"
    ],
    "question": "Which category does the product named \"flax\" belong to?",
    "question_toks": [
      "Which",
      "category",
      "does",
      "the",
      "product",
      "named",
      "``",
      "flax",
      "''",
      "belong",
      "to",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"flax\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT product_category_code FROM products WHERE product_name  =  \"flax\"",
    "query_toks": [
      "SELECT",
      "product_category_code",
      "FROM",
      "products",
      "WHERE",
      "product_name",
      "=",
      "``",
      "flax",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "product_category_code",
      "from",
      "products",
      "where",
      "product_name",
      "=",
      "value"
    ],
    "question": "What is the code of the category that the product with the name 'flax' belongs to?",
    "question_toks": [
      "What",
      "is",
      "the",
      "code",
      "of",
      "the",
      "category",
      "that",
      "the",
      "product",
      "with",
      "the",
      "name",
      "'flax",
      "'",
      "belongs",
      "to",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"flax\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\"",
    "query_toks": [
      "SELECT",
      "unit_of_measure",
      "FROM",
      "ref_product_categories",
      "WHERE",
      "product_category_code",
      "=",
      "``",
      "Herbs",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "unit_of_measure",
      "from",
      "ref_product_categories",
      "where",
      "product_category_code",
      "=",
      "value"
    ],
    "question": "What is the unit of measuerment of the product category code \"Herbs\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "unit",
      "of",
      "measuerment",
      "of",
      "the",
      "product",
      "category",
      "code",
      "``",
      "Herbs",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Herbs\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\"",
    "query_toks": [
      "SELECT",
      "unit_of_measure",
      "FROM",
      "ref_product_categories",
      "WHERE",
      "product_category_code",
      "=",
      "``",
      "Herbs",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "unit_of_measure",
      "from",
      "ref_product_categories",
      "where",
      "product_category_code",
      "=",
      "value"
    ],
    "question": "Return the unit of measure for 'Herb' products.",
    "question_toks": [
      "Return",
      "the",
      "unit",
      "of",
      "measure",
      "for",
      "'Herb",
      "'",
      "products",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Herbs\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code  =  \"Spices\"",
    "query_toks": [
      "SELECT",
      "product_category_description",
      "FROM",
      "ref_product_categories",
      "WHERE",
      "product_category_code",
      "=",
      "``",
      "Spices",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "product_category_description",
      "from",
      "ref_product_categories",
      "where",
      "product_category_code",
      "=",
      "value"
    ],
    "question": "Find the product category description of the product category with code \"Spices\".",
    "question_toks": [
      "Find",
      "the",
      "product",
      "category",
      "description",
      "of",
      "the",
      "product",
      "category",
      "with",
      "code",
      "``",
      "Spices",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Spices\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code  =  \"Spices\"",
    "query_toks": [
      "SELECT",
      "product_category_description",
      "FROM",
      "ref_product_categories",
      "WHERE",
      "product_category_code",
      "=",
      "``",
      "Spices",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "product_category_description",
      "from",
      "ref_product_categories",
      "where",
      "product_category_code",
      "=",
      "value"
    ],
    "question": "What is the description of the product category with the code 'Spices'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "description",
      "of",
      "the",
      "product",
      "category",
      "with",
      "the",
      "code",
      "'Spices",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Spices\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT product_category_description ,  unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\"",
    "query_toks": [
      "SELECT",
      "product_category_description",
      ",",
      "unit_of_measure",
      "FROM",
      "ref_product_categories",
      "WHERE",
      "product_category_code",
      "=",
      "``",
      "Herbs",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "product_category_description",
      ",",
      "unit_of_measure",
      "from",
      "ref_product_categories",
      "where",
      "product_category_code",
      "=",
      "value"
    ],
    "question": "What is the product category description and unit of measurement of category \"Herbs\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "product",
      "category",
      "description",
      "and",
      "unit",
      "of",
      "measurement",
      "of",
      "category",
      "``",
      "Herbs",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Herbs\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT product_category_description ,  unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\"",
    "query_toks": [
      "SELECT",
      "product_category_description",
      ",",
      "unit_of_measure",
      "FROM",
      "ref_product_categories",
      "WHERE",
      "product_category_code",
      "=",
      "``",
      "Herbs",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "product_category_description",
      ",",
      "unit_of_measure",
      "from",
      "ref_product_categories",
      "where",
      "product_category_code",
      "=",
      "value"
    ],
    "question": "Return the description and unit of measurement for products in the 'Herbs' category.",
    "question_toks": [
      "Return",
      "the",
      "description",
      "and",
      "unit",
      "of",
      "measurement",
      "for",
      "products",
      "in",
      "the",
      "'Herbs",
      "'",
      "category",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Herbs\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT count(*) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Ref_colors",
      "WHERE",
      "color_code",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "color_code",
      "FROM",
      "products",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ref_colors",
      "where",
      "color_code",
      "not",
      "in",
      "(",
      "select",
      "color_code",
      "from",
      "products",
      ")"
    ],
    "question": "How many colors are never used by any product?",
    "question_toks": [
      "How",
      "many",
      "colors",
      "are",
      "never",
      "used",
      "by",
      "any",
      "product",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      14,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT count(*) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Ref_colors",
      "WHERE",
      "color_code",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "color_code",
      "FROM",
      "products",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ref_colors",
      "where",
      "color_code",
      "not",
      "in",
      "(",
      "select",
      "color_code",
      "from",
      "products",
      ")"
    ],
    "question": "Count the number of colors that are not used in any products.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "colors",
      "that",
      "are",
      "not",
      "used",
      "in",
      "any",
      "products",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      14,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "swimming",
    "query": "SELECT count(*) FROM event",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "event"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "event"
    ],
    "question": "How many events are there?",
    "question_toks": [
      "How",
      "many",
      "events",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "swimming",
    "query": "SELECT count(*) FROM stadium",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "stadium"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "stadium"
    ],
    "question": "How many stadiums are there?",
    "question_toks": [
      "How",
      "many",
      "stadiums",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "swimming",
    "query": "SELECT name FROM stadium WHERE capacity  <  (SELECT avg(capacity) FROM stadium)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "stadium",
      "WHERE",
      "capacity",
      "<",
      "(",
      "SELECT",
      "avg",
      "(",
      "capacity",
      ")",
      "FROM",
      "stadium",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "stadium",
      "where",
      "capacity",
      "<",
      "(",
      "select",
      "avg",
      "(",
      "capacity",
      ")",
      "from",
      "stadium",
      ")"
    ],
    "question": "Find the names of stadiums whose capacity is smaller than the average capacity.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "stadiums",
      "whose",
      "capacity",
      "is",
      "smaller",
      "than",
      "the",
      "average",
      "capacity",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      14,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "swimming",
    "query": "SELECT count(DISTINCT city) FROM stadium WHERE opening_year  <  2006",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "city",
      ")",
      "FROM",
      "stadium",
      "WHERE",
      "opening_year",
      "<",
      "2006"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "city",
      ")",
      "from",
      "stadium",
      "where",
      "opening_year",
      "<",
      "value"
    ],
    "question": "How many cities have a stadium that was opened before the year of 2006?",
    "question_toks": [
      "How",
      "many",
      "cities",
      "have",
      "a",
      "stadium",
      "that",
      "was",
      "opened",
      "before",
      "the",
      "year",
      "of",
      "2006",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                15,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          2006.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "swimming",
    "query": "SELECT count(*) FROM stadium WHERE country != 'Russia'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "stadium",
      "WHERE",
      "country",
      "!",
      "=",
      "'Russia",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "stadium",
      "where",
      "country",
      "!",
      "=",
      "value"
    ],
    "question": "How many stadiums are not in country \"Russia\"?",
    "question_toks": [
      "How",
      "many",
      "stadiums",
      "are",
      "not",
      "in",
      "country",
      "``",
      "Russia",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"Russia\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "swimming",
    "query": "SELECT count(DISTINCT nationality) FROM swimmer",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "nationality",
      ")",
      "FROM",
      "swimmer"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "nationality",
      ")",
      "from",
      "swimmer"
    ],
    "question": "How many different countries are all the swimmers from?",
    "question_toks": [
      "How",
      "many",
      "different",
      "countries",
      "are",
      "all",
      "the",
      "swimmers",
      "from",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "swimming",
    "query": "SELECT meter_200 ,  meter_300 FROM swimmer WHERE nationality  =  'Australia'",
    "query_toks": [
      "SELECT",
      "meter_200",
      ",",
      "meter_300",
      "FROM",
      "swimmer",
      "WHERE",
      "nationality",
      "=",
      "'Australia",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "meter_200",
      ",",
      "meter_300",
      "from",
      "swimmer",
      "where",
      "nationality",
      "=",
      "value"
    ],
    "question": "Find all 200 meter and 300 meter results of swimmers with nationality \"Australia\".",
    "question_toks": [
      "Find",
      "all",
      "200",
      "meter",
      "and",
      "300",
      "meter",
      "results",
      "of",
      "swimmers",
      "with",
      "nationality",
      "``",
      "Australia",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Australia\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "swimming",
    "query": "SELECT name FROM stadium WHERE id NOT IN (SELECT stadium_id FROM event)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "stadium",
      "WHERE",
      "id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "stadium_id",
      "FROM",
      "event",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "stadium",
      "where",
      "id",
      "not",
      "in",
      "(",
      "select",
      "stadium_id",
      "from",
      "event",
      ")"
    ],
    "question": "Find the names of stadiums which have never had any event.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "stadiums",
      "which",
      "have",
      "never",
      "had",
      "any",
      "event",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      20,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "swimming",
    "query": "SELECT name FROM swimmer WHERE id NOT IN (SELECT swimmer_id FROM record)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "swimmer",
      "WHERE",
      "id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "swimmer_id",
      "FROM",
      "record",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "swimmer",
      "where",
      "id",
      "not",
      "in",
      "(",
      "select",
      "swimmer_id",
      "from",
      "record",
      ")"
    ],
    "question": "Find the names of the swimmers who have no record.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "the",
      "swimmers",
      "who",
      "have",
      "no",
      "record",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      24,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "swimming",
    "query": "SELECT * FROM swimmer",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "swimmer"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "swimmer"
    ],
    "question": "Find all details for each swimmer.",
    "question_toks": [
      "Find",
      "all",
      "details",
      "for",
      "each",
      "swimmer",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "swimming",
    "query": "SELECT avg(capacity) FROM stadium WHERE opening_year  =  2005",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "capacity",
      ")",
      "FROM",
      "stadium",
      "WHERE",
      "opening_year",
      "=",
      "2005"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "capacity",
      ")",
      "from",
      "stadium",
      "where",
      "opening_year",
      "=",
      "value"
    ],
    "question": "What is the average capacity of the stadiums that were opened in year 2005?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "capacity",
      "of",
      "the",
      "stadiums",
      "that",
      "were",
      "opened",
      "in",
      "year",
      "2005",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          2005.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "railway",
    "query": "SELECT count(*) FROM railway",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "railway"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "railway"
    ],
    "question": "How many railways are there?",
    "question_toks": [
      "How",
      "many",
      "railways",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "railway",
    "query": "SELECT Wheels ,  LOCATION FROM railway",
    "query_toks": [
      "SELECT",
      "Wheels",
      ",",
      "LOCATION",
      "FROM",
      "railway"
    ],
    "query_toks_no_value": [
      "select",
      "wheels",
      ",",
      "location",
      "from",
      "railway"
    ],
    "question": "List the wheels and locations of the railways.",
    "question_toks": [
      "List",
      "the",
      "wheels",
      "and",
      "locations",
      "of",
      "the",
      "railways",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "railway",
    "query": "SELECT max(LEVEL) FROM manager WHERE Country != \"Australia\t\"",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "LEVEL",
      ")",
      "FROM",
      "manager",
      "WHERE",
      "Country",
      "!",
      "=",
      "``",
      "Australia",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "level",
      ")",
      "from",
      "manager",
      "where",
      "country",
      "!",
      "=",
      "value"
    ],
    "question": "What is the maximum level of managers in countries that are not \"Australia\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      "level",
      "of",
      "managers",
      "in",
      "countries",
      "that",
      "are",
      "not",
      "``",
      "Australia",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"Australia\t\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "railway",
    "query": "SELECT avg(Age) FROM manager",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Age",
      ")",
      "FROM",
      "manager"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "age",
      ")",
      "from",
      "manager"
    ],
    "question": "What is the average age for all managers?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "age",
      "for",
      "all",
      "managers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "railway",
    "query": "SELECT Name ,  Arrival FROM train",
    "query_toks": [
      "SELECT",
      "Name",
      ",",
      "Arrival",
      "FROM",
      "train"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "arrival",
      "from",
      "train"
    ],
    "question": "What are the names and arrival times of trains?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "arrival",
      "times",
      "of",
      "trains",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "railway",
    "query": "SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN (SELECT Railway_ID FROM train)",
    "query_toks": [
      "SELECT",
      "ObjectNumber",
      "FROM",
      "railway",
      "WHERE",
      "Railway_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Railway_ID",
      "FROM",
      "train",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "objectnumber",
      "from",
      "railway",
      "where",
      "railway_id",
      "not",
      "in",
      "(",
      "select",
      "railway_id",
      "from",
      "train",
      ")"
    ],
    "question": "List the object number of railways that do not have any trains.",
    "question_toks": [
      "List",
      "the",
      "object",
      "number",
      "of",
      "railways",
      "that",
      "do",
      "not",
      "have",
      "any",
      "trains",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      13,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "railway",
    "query": "SELECT Country FROM manager WHERE Age  >  50 OR Age  <  46",
    "query_toks": [
      "SELECT",
      "Country",
      "FROM",
      "manager",
      "WHERE",
      "Age",
      ">",
      "50",
      "OR",
      "Age",
      "<",
      "46"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "manager",
      "where",
      "age",
      ">",
      "value",
      "or",
      "age",
      "<",
      "value"
    ],
    "question": "Show the countries that have managers of age above 50 or below 46.",
    "question_toks": [
      "Show",
      "the",
      "countries",
      "that",
      "have",
      "managers",
      "of",
      "age",
      "above",
      "50",
      "or",
      "below",
      "46",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          50.0,
          null
        ],
        "or",
        [
          false,
          4,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          46.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_products_contacts",
    "query": "SELECT count(*) FROM addresses WHERE country  =  'USA'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "addresses",
      "WHERE",
      "country",
      "=",
      "'USA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "addresses",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "How many addresses are there in country USA?",
    "question_toks": [
      "How",
      "many",
      "addresses",
      "are",
      "there",
      "in",
      "country",
      "USA",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"USA\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_products_contacts",
    "query": "SELECT customer_name ,  customer_phone FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customer_address_history)",
    "query_toks": [
      "SELECT",
      "customer_name",
      ",",
      "customer_phone",
      "FROM",
      "customers",
      "WHERE",
      "customer_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "customer_id",
      "FROM",
      "customer_address_history",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "customer_name",
      ",",
      "customer_phone",
      "from",
      "customers",
      "where",
      "customer_id",
      "not",
      "in",
      "(",
      "select",
      "customer_id",
      "from",
      "customer_address_history",
      ")"
    ],
    "question": "Show names and phones of customers who do not have address information.",
    "question_toks": [
      "Show",
      "names",
      "and",
      "phones",
      "of",
      "customers",
      "who",
      "do",
      "not",
      "have",
      "address",
      "information",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      24,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_products_contacts",
    "query": "SELECT min(product_price) ,  max(product_price) ,  avg(product_price) FROM products",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "product_price",
      ")",
      ",",
      "max",
      "(",
      "product_price",
      ")",
      ",",
      "avg",
      "(",
      "product_price",
      ")",
      "FROM",
      "products"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "product_price",
      ")",
      ",",
      "max",
      "(",
      "product_price",
      ")",
      ",",
      "avg",
      "(",
      "product_price",
      ")",
      "from",
      "products"
    ],
    "question": "Show the minimum, maximum, average price for all products.",
    "question_toks": [
      "Show",
      "the",
      "minimum",
      ",",
      "maximum",
      ",",
      "average",
      "price",
      "for",
      "all",
      "products",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_products_contacts",
    "query": "SELECT count(*) FROM products WHERE product_price  >  (SELECT avg(product_price) FROM products)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "products",
      "WHERE",
      "product_price",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "product_price",
      ")",
      "FROM",
      "products",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "products",
      "where",
      "product_price",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "product_price",
      ")",
      "from",
      "products",
      ")"
    ],
    "question": "How many products have a price higher than the average?",
    "question_toks": [
      "How",
      "many",
      "products",
      "have",
      "a",
      "price",
      "higher",
      "than",
      "the",
      "average",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      10,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_products_contacts",
    "query": "SELECT product_type_code ,  product_name FROM products WHERE product_price  >  1000 OR product_price  <  500",
    "query_toks": [
      "SELECT",
      "product_type_code",
      ",",
      "product_name",
      "FROM",
      "products",
      "WHERE",
      "product_price",
      ">",
      "1000",
      "OR",
      "product_price",
      "<",
      "500"
    ],
    "query_toks_no_value": [
      "select",
      "product_type_code",
      ",",
      "product_name",
      "from",
      "products",
      "where",
      "product_price",
      ">",
      "value",
      "or",
      "product_price",
      "<",
      "value"
    ],
    "question": "Show the product type and name for the products with price higher than 1000 or lower than 500.",
    "question_toks": [
      "Show",
      "the",
      "product",
      "type",
      "and",
      "name",
      "for",
      "the",
      "products",
      "with",
      "price",
      "higher",
      "than",
      "1000",
      "or",
      "lower",
      "than",
      "500",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          1000.0,
          null
        ],
        "or",
        [
          false,
          4,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          500.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT dorm_name FROM dorm WHERE gender  =  'F'",
    "query_toks": [
      "SELECT",
      "dorm_name",
      "FROM",
      "dorm",
      "WHERE",
      "gender",
      "=",
      "'F",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "dorm_name",
      "from",
      "dorm",
      "where",
      "gender",
      "=",
      "value"
    ],
    "question": "Find the name of dorms only for female (F gender).",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "dorms",
      "only",
      "for",
      "female",
      "(",
      "F",
      "gender",
      ")",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"F\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT dorm_name FROM dorm WHERE gender  =  'F'",
    "query_toks": [
      "SELECT",
      "dorm_name",
      "FROM",
      "dorm",
      "WHERE",
      "gender",
      "=",
      "'F",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "dorm_name",
      "from",
      "dorm",
      "where",
      "gender",
      "=",
      "value"
    ],
    "question": "What are the names of the all-female dorms?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "all-female",
      "dorms",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"F\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT dorm_name FROM dorm WHERE student_capacity  >  300",
    "query_toks": [
      "SELECT",
      "dorm_name",
      "FROM",
      "dorm",
      "WHERE",
      "student_capacity",
      ">",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "dorm_name",
      "from",
      "dorm",
      "where",
      "student_capacity",
      ">",
      "value"
    ],
    "question": "Find the name of dorms that can accommodate more than 300 students.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "dorms",
      "that",
      "can",
      "accommodate",
      "more",
      "than",
      "300",
      "students",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          300.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT dorm_name FROM dorm WHERE student_capacity  >  300",
    "query_toks": [
      "SELECT",
      "dorm_name",
      "FROM",
      "dorm",
      "WHERE",
      "student_capacity",
      ">",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "dorm_name",
      "from",
      "dorm",
      "where",
      "student_capacity",
      ">",
      "value"
    ],
    "question": "What are the names of all the dorms that can accomdate more than 300 students?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "the",
      "dorms",
      "that",
      "can",
      "accomdate",
      "more",
      "than",
      "300",
      "students",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          300.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT count(*) FROM student WHERE sex  =  'F' AND age  <  25",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "student",
      "WHERE",
      "sex",
      "=",
      "'F",
      "'",
      "AND",
      "age",
      "<",
      "25"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student",
      "where",
      "sex",
      "=",
      "value",
      "and",
      "age",
      "<",
      "value"
    ],
    "question": "How many female students (sex is F) whose age is below 25?",
    "question_toks": [
      "How",
      "many",
      "female",
      "students",
      "(",
      "sex",
      "is",
      "F",
      ")",
      "whose",
      "age",
      "is",
      "below",
      "25",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"F\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          25.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT count(*) FROM student WHERE sex  =  'F' AND age  <  25",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "student",
      "WHERE",
      "sex",
      "=",
      "'F",
      "'",
      "AND",
      "age",
      "<",
      "25"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student",
      "where",
      "sex",
      "=",
      "value",
      "and",
      "age",
      "<",
      "value"
    ],
    "question": "How many girl students who are younger than 25?",
    "question_toks": [
      "How",
      "many",
      "girl",
      "students",
      "who",
      "are",
      "younger",
      "than",
      "25",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"F\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          25.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT fname FROM student WHERE age  >  20",
    "query_toks": [
      "SELECT",
      "fname",
      "FROM",
      "student",
      "WHERE",
      "age",
      ">",
      "20"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      "from",
      "student",
      "where",
      "age",
      ">",
      "value"
    ],
    "question": "Find the first name of students who is older than 20.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "name",
      "of",
      "students",
      "who",
      "is",
      "older",
      "than",
      "20",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          20.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT fname FROM student WHERE age  >  20",
    "query_toks": [
      "SELECT",
      "fname",
      "FROM",
      "student",
      "WHERE",
      "age",
      ">",
      "20"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      "from",
      "student",
      "where",
      "age",
      ">",
      "value"
    ],
    "question": "What are the first names of all students who are older than 20?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "names",
      "of",
      "all",
      "students",
      "who",
      "are",
      "older",
      "than",
      "20",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          20.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT fname FROM student WHERE city_code  =  'PHL' AND age BETWEEN 20 AND 25",
    "query_toks": [
      "SELECT",
      "fname",
      "FROM",
      "student",
      "WHERE",
      "city_code",
      "=",
      "'PHL",
      "'",
      "AND",
      "age",
      "BETWEEN",
      "20",
      "AND",
      "25"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      "from",
      "student",
      "where",
      "city_code",
      "=",
      "value",
      "and",
      "age",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "Find the first name of students living in city PHL whose age is between 20 and 25.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "name",
      "of",
      "students",
      "living",
      "in",
      "city",
      "PHL",
      "whose",
      "age",
      "is",
      "between",
      "20",
      "and",
      "25",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"PHL\"",
          null
        ],
        "and",
        [
          false,
          1,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          20.0,
          25.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT fname FROM student WHERE city_code  =  'PHL' AND age BETWEEN 20 AND 25",
    "query_toks": [
      "SELECT",
      "fname",
      "FROM",
      "student",
      "WHERE",
      "city_code",
      "=",
      "'PHL",
      "'",
      "AND",
      "age",
      "BETWEEN",
      "20",
      "AND",
      "25"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      "from",
      "student",
      "where",
      "city_code",
      "=",
      "value",
      "and",
      "age",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What is the first name of the students who are in age 20 to 25 and living in PHL city?",
    "question_toks": [
      "What",
      "is",
      "the",
      "first",
      "name",
      "of",
      "the",
      "students",
      "who",
      "are",
      "in",
      "age",
      "20",
      "to",
      "25",
      "and",
      "living",
      "in",
      "PHL",
      "city",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"PHL\"",
          null
        ],
        "and",
        [
          false,
          1,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          20.0,
          25.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT count(*) FROM dorm",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "dorm"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "dorm"
    ],
    "question": "How many dorms are there?",
    "question_toks": [
      "How",
      "many",
      "dorms",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT count(*) FROM dorm",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "dorm"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "dorm"
    ],
    "question": "How many dorms are in the database?",
    "question_toks": [
      "How",
      "many",
      "dorms",
      "are",
      "in",
      "the",
      "database",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT count(*) FROM dorm_amenity",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "dorm_amenity"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "dorm_amenity"
    ],
    "question": "Find the number of distinct amenities.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "distinct",
      "amenities",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT count(*) FROM dorm_amenity",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "dorm_amenity"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "dorm_amenity"
    ],
    "question": "How many diffrent dorm amenities are there?",
    "question_toks": [
      "How",
      "many",
      "diffrent",
      "dorm",
      "amenities",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT sum(student_capacity) FROM dorm",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "student_capacity",
      ")",
      "FROM",
      "dorm"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "student_capacity",
      ")",
      "from",
      "dorm"
    ],
    "question": "Find the total capacity of all dorms.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "capacity",
      "of",
      "all",
      "dorms",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT sum(student_capacity) FROM dorm",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "student_capacity",
      ")",
      "FROM",
      "dorm"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "student_capacity",
      ")",
      "from",
      "dorm"
    ],
    "question": "What is the total student capacity of all dorms?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "student",
      "capacity",
      "of",
      "all",
      "dorms",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT count(*) FROM student",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "student"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student"
    ],
    "question": "How many students are there?",
    "question_toks": [
      "How",
      "many",
      "students",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT count(*) FROM student",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "student"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student"
    ],
    "question": "How many students exist?",
    "question_toks": [
      "How",
      "many",
      "students",
      "exist",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT avg(student_capacity) ,  sum(student_capacity) FROM dorm WHERE gender  =  'X'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "student_capacity",
      ")",
      ",",
      "sum",
      "(",
      "student_capacity",
      ")",
      "FROM",
      "dorm",
      "WHERE",
      "gender",
      "=",
      "'X",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "student_capacity",
      ")",
      ",",
      "sum",
      "(",
      "student_capacity",
      ")",
      "from",
      "dorm",
      "where",
      "gender",
      "=",
      "value"
    ],
    "question": "Find the average and total capacity of dorms for the students with gender X.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "and",
      "total",
      "capacity",
      "of",
      "dorms",
      "for",
      "the",
      "students",
      "with",
      "gender",
      "X",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            4,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"X\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT avg(student_capacity) ,  sum(student_capacity) FROM dorm WHERE gender  =  'X'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "student_capacity",
      ")",
      ",",
      "sum",
      "(",
      "student_capacity",
      ")",
      "FROM",
      "dorm",
      "WHERE",
      "gender",
      "=",
      "'X",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "student_capacity",
      ")",
      ",",
      "sum",
      "(",
      "student_capacity",
      ")",
      "from",
      "dorm",
      "where",
      "gender",
      "=",
      "value"
    ],
    "question": "What is the average and total capacity for all dorms who are of gender X?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "and",
      "total",
      "capacity",
      "for",
      "all",
      "dorms",
      "who",
      "are",
      "of",
      "gender",
      "X",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            4,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"X\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT count(DISTINCT dormid) FROM has_amenity",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "dormid",
      ")",
      "FROM",
      "has_amenity"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "dormid",
      ")",
      "from",
      "has_amenity"
    ],
    "question": "Find the number of dorms that have some amenity.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "dorms",
      "that",
      "have",
      "some",
      "amenity",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                15,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT count(DISTINCT dormid) FROM has_amenity",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "dormid",
      ")",
      "FROM",
      "has_amenity"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "dormid",
      ")",
      "from",
      "has_amenity"
    ],
    "question": "How many dorms have amenities?",
    "question_toks": [
      "How",
      "many",
      "dorms",
      "have",
      "amenities",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                15,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT dorm_name FROM dorm WHERE dormid NOT IN (SELECT dormid FROM has_amenity)",
    "query_toks": [
      "SELECT",
      "dorm_name",
      "FROM",
      "dorm",
      "WHERE",
      "dormid",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "dormid",
      "FROM",
      "has_amenity",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "dorm_name",
      "from",
      "dorm",
      "where",
      "dormid",
      "not",
      "in",
      "(",
      "select",
      "dormid",
      "from",
      "has_amenity",
      ")"
    ],
    "question": "Find the name of dorms that do not have any amenity",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "dorms",
      "that",
      "do",
      "not",
      "have",
      "any",
      "amenity"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      15,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT dorm_name FROM dorm WHERE dormid NOT IN (SELECT dormid FROM has_amenity)",
    "query_toks": [
      "SELECT",
      "dorm_name",
      "FROM",
      "dorm",
      "WHERE",
      "dormid",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "dormid",
      "FROM",
      "has_amenity",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "dorm_name",
      "from",
      "dorm",
      "where",
      "dormid",
      "not",
      "in",
      "(",
      "select",
      "dormid",
      "from",
      "has_amenity",
      ")"
    ],
    "question": "What are the names of all the dorms that don't have any amenities?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "the",
      "dorms",
      "that",
      "do",
      "n't",
      "have",
      "any",
      "amenities",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      15,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT count(DISTINCT gender) FROM dorm",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "gender",
      ")",
      "FROM",
      "dorm"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "gender",
      ")",
      "from",
      "dorm"
    ],
    "question": "Find the number of distinct gender for dorms.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "distinct",
      "gender",
      "for",
      "dorms",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT count(DISTINCT gender) FROM dorm",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "gender",
      ")",
      "FROM",
      "dorm"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "gender",
      ")",
      "from",
      "dorm"
    ],
    "question": "How many different genders are there in the dorms?",
    "question_toks": [
      "How",
      "many",
      "different",
      "genders",
      "are",
      "there",
      "in",
      "the",
      "dorms",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT student_capacity ,  gender FROM dorm WHERE dorm_name LIKE '%Donor%'",
    "query_toks": [
      "SELECT",
      "student_capacity",
      ",",
      "gender",
      "FROM",
      "dorm",
      "WHERE",
      "dorm_name",
      "LIKE",
      "'",
      "%",
      "Donor",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_capacity",
      ",",
      "gender",
      "from",
      "dorm",
      "where",
      "dorm_name",
      "like",
      "value"
    ],
    "question": "Find the capacity and gender type of the dorm whose name has substring \u2018Donor\u2019.",
    "question_toks": [
      "Find",
      "the",
      "capacity",
      "and",
      "gender",
      "type",
      "of",
      "the",
      "dorm",
      "whose",
      "name",
      "has",
      "substring",
      "\u2018Donor\u2019",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"%Donor%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT student_capacity ,  gender FROM dorm WHERE dorm_name LIKE '%Donor%'",
    "query_toks": [
      "SELECT",
      "student_capacity",
      ",",
      "gender",
      "FROM",
      "dorm",
      "WHERE",
      "dorm_name",
      "LIKE",
      "'",
      "%",
      "Donor",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_capacity",
      ",",
      "gender",
      "from",
      "dorm",
      "where",
      "dorm_name",
      "like",
      "value"
    ],
    "question": "What is the student capacity and type of gender for the dorm whose name as the phrase Donor in it?",
    "question_toks": [
      "What",
      "is",
      "the",
      "student",
      "capacity",
      "and",
      "type",
      "of",
      "gender",
      "for",
      "the",
      "dorm",
      "whose",
      "name",
      "as",
      "the",
      "phrase",
      "Donor",
      "in",
      "it",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"%Donor%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT dorm_name ,  gender FROM dorm WHERE student_capacity  >  300 OR student_capacity  <  100",
    "query_toks": [
      "SELECT",
      "dorm_name",
      ",",
      "gender",
      "FROM",
      "dorm",
      "WHERE",
      "student_capacity",
      ">",
      "300",
      "OR",
      "student_capacity",
      "<",
      "100"
    ],
    "query_toks_no_value": [
      "select",
      "dorm_name",
      ",",
      "gender",
      "from",
      "dorm",
      "where",
      "student_capacity",
      ">",
      "value",
      "or",
      "student_capacity",
      "<",
      "value"
    ],
    "question": "Find the name and gender type of the dorms whose capacity is greater than 300 or less than 100.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "and",
      "gender",
      "type",
      "of",
      "the",
      "dorms",
      "whose",
      "capacity",
      "is",
      "greater",
      "than",
      "300",
      "or",
      "less",
      "than",
      "100",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          300.0,
          null
        ],
        "or",
        [
          false,
          4,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          100.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT dorm_name ,  gender FROM dorm WHERE student_capacity  >  300 OR student_capacity  <  100",
    "query_toks": [
      "SELECT",
      "dorm_name",
      ",",
      "gender",
      "FROM",
      "dorm",
      "WHERE",
      "student_capacity",
      ">",
      "300",
      "OR",
      "student_capacity",
      "<",
      "100"
    ],
    "query_toks_no_value": [
      "select",
      "dorm_name",
      ",",
      "gender",
      "from",
      "dorm",
      "where",
      "student_capacity",
      ">",
      "value",
      "or",
      "student_capacity",
      "<",
      "value"
    ],
    "question": "What are the names and types of the dorms that have a capacity greater than 300 or less than 100?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "types",
      "of",
      "the",
      "dorms",
      "that",
      "have",
      "a",
      "capacity",
      "greater",
      "than",
      "300",
      "or",
      "less",
      "than",
      "100",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          300.0,
          null
        ],
        "or",
        [
          false,
          4,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          100.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT count(DISTINCT major) ,  count(DISTINCT city_code) FROM student",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "major",
      ")",
      ",",
      "count",
      "(",
      "DISTINCT",
      "city_code",
      ")",
      "FROM",
      "student"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "major",
      ")",
      ",",
      "count",
      "(",
      "distinct",
      "city_code",
      ")",
      "from",
      "student"
    ],
    "question": "Find the numbers of different majors and cities.",
    "question_toks": [
      "Find",
      "the",
      "numbers",
      "of",
      "different",
      "majors",
      "and",
      "cities",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                8,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT count(DISTINCT major) ,  count(DISTINCT city_code) FROM student",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "major",
      ")",
      ",",
      "count",
      "(",
      "DISTINCT",
      "city_code",
      ")",
      "FROM",
      "student"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "major",
      ")",
      ",",
      "count",
      "(",
      "distinct",
      "city_code",
      ")",
      "from",
      "student"
    ],
    "question": "How many different majors are there and how many different city codes are there for each student?",
    "question_toks": [
      "How",
      "many",
      "different",
      "majors",
      "are",
      "there",
      "and",
      "how",
      "many",
      "different",
      "city",
      "codes",
      "are",
      "there",
      "for",
      "each",
      "student",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                8,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT fname ,  lname FROM student WHERE age  <  (SELECT avg(age) FROM student)",
    "query_toks": [
      "SELECT",
      "fname",
      ",",
      "lname",
      "FROM",
      "student",
      "WHERE",
      "age",
      "<",
      "(",
      "SELECT",
      "avg",
      "(",
      "age",
      ")",
      "FROM",
      "student",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      ",",
      "lname",
      "from",
      "student",
      "where",
      "age",
      "<",
      "(",
      "select",
      "avg",
      "(",
      "age",
      ")",
      "from",
      "student",
      ")"
    ],
    "question": "Find the first and last name of students whose age is younger than the average age.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "and",
      "last",
      "name",
      "of",
      "students",
      "whose",
      "age",
      "is",
      "younger",
      "than",
      "the",
      "average",
      "age",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT fname ,  lname FROM student WHERE age  <  (SELECT avg(age) FROM student)",
    "query_toks": [
      "SELECT",
      "fname",
      ",",
      "lname",
      "FROM",
      "student",
      "WHERE",
      "age",
      "<",
      "(",
      "SELECT",
      "avg",
      "(",
      "age",
      ")",
      "FROM",
      "student",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      ",",
      "lname",
      "from",
      "student",
      "where",
      "age",
      "<",
      "(",
      "select",
      "avg",
      "(",
      "age",
      ")",
      "from",
      "student",
      ")"
    ],
    "question": "What is the first and last name of all students who are younger than average?",
    "question_toks": [
      "What",
      "is",
      "the",
      "first",
      "and",
      "last",
      "name",
      "of",
      "all",
      "students",
      "who",
      "are",
      "younger",
      "than",
      "average",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT fname ,  lname FROM student WHERE major != (SELECT major FROM student GROUP BY major ORDER BY count(*) DESC LIMIT 1)",
    "query_toks": [
      "SELECT",
      "fname",
      ",",
      "lname",
      "FROM",
      "student",
      "WHERE",
      "major",
      "!",
      "=",
      "(",
      "SELECT",
      "major",
      "FROM",
      "student",
      "GROUP",
      "BY",
      "major",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      ",",
      "lname",
      "from",
      "student",
      "where",
      "major",
      "!",
      "=",
      "(",
      "select",
      "major",
      "from",
      "student",
      "group",
      "by",
      "major",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value",
      ")"
    ],
    "question": "Find the first and last name of students who are not in the largest major.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "and",
      "last",
      "name",
      "of",
      "students",
      "who",
      "are",
      "not",
      "in",
      "the",
      "largest",
      "major",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      6,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [
              [
                0,
                6,
                false
              ]
            ],
            "having": [],
            "orderBy": [
              "desc",
              [
                [
                  0,
                  [
                    3,
                    0,
                    false
                  ],
                  null
                ]
              ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT fname ,  lname FROM student WHERE major != (SELECT major FROM student GROUP BY major ORDER BY count(*) DESC LIMIT 1)",
    "query_toks": [
      "SELECT",
      "fname",
      ",",
      "lname",
      "FROM",
      "student",
      "WHERE",
      "major",
      "!",
      "=",
      "(",
      "SELECT",
      "major",
      "FROM",
      "student",
      "GROUP",
      "BY",
      "major",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      ",",
      "lname",
      "from",
      "student",
      "where",
      "major",
      "!",
      "=",
      "(",
      "select",
      "major",
      "from",
      "student",
      "group",
      "by",
      "major",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value",
      ")"
    ],
    "question": "What is the first and last name of the students who are not in the largest major?",
    "question_toks": [
      "What",
      "is",
      "the",
      "first",
      "and",
      "last",
      "name",
      "of",
      "the",
      "students",
      "who",
      "are",
      "not",
      "in",
      "the",
      "largest",
      "major",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      6,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [
              [
                0,
                6,
                false
              ]
            ],
            "having": [],
            "orderBy": [
              "desc",
              [
                [
                  0,
                  [
                    3,
                    0,
                    false
                  ],
                  null
                ]
              ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_complaints",
    "query": "SELECT count(*) FROM customers",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customers"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers"
    ],
    "question": "How many customers are there?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_complaints",
    "query": "SELECT count(*) FROM customers",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customers"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers"
    ],
    "question": "Count the number of customers.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "customers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_complaints",
    "query": "SELECT email_address ,  phone_number FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM complaints)",
    "query_toks": [
      "SELECT",
      "email_address",
      ",",
      "phone_number",
      "FROM",
      "customers",
      "WHERE",
      "customer_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "customer_id",
      "FROM",
      "complaints",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "email_address",
      ",",
      "phone_number",
      "from",
      "customers",
      "where",
      "customer_id",
      "not",
      "in",
      "(",
      "select",
      "customer_id",
      "from",
      "complaints",
      ")"
    ],
    "question": "Find the email and phone number of the customers who have never filed a complaint before.",
    "question_toks": [
      "Find",
      "the",
      "email",
      "and",
      "phone",
      "number",
      "of",
      "the",
      "customers",
      "who",
      "have",
      "never",
      "filed",
      "a",
      "complaint",
      "before",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      25,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_complaints",
    "query": "SELECT email_address ,  phone_number FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM complaints)",
    "query_toks": [
      "SELECT",
      "email_address",
      ",",
      "phone_number",
      "FROM",
      "customers",
      "WHERE",
      "customer_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "customer_id",
      "FROM",
      "complaints",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "email_address",
      ",",
      "phone_number",
      "from",
      "customers",
      "where",
      "customer_id",
      "not",
      "in",
      "(",
      "select",
      "customer_id",
      "from",
      "complaints",
      ")"
    ],
    "question": "What are the emails and phone numbers of custoemrs who have never filed a complaint?",
    "question_toks": [
      "What",
      "are",
      "the",
      "emails",
      "and",
      "phone",
      "numbers",
      "of",
      "custoemrs",
      "who",
      "have",
      "never",
      "filed",
      "a",
      "complaint",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      25,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_complaints",
    "query": "SELECT product_description FROM products WHERE product_name  =  \"Chocolate\"",
    "query_toks": [
      "SELECT",
      "product_description",
      "FROM",
      "products",
      "WHERE",
      "product_name",
      "=",
      "``",
      "Chocolate",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "product_description",
      "from",
      "products",
      "where",
      "product_name",
      "=",
      "value"
    ],
    "question": "What is the description of the product named \"Chocolate\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "description",
      "of",
      "the",
      "product",
      "named",
      "``",
      "Chocolate",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          "\"Chocolate\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_complaints",
    "query": "SELECT product_description FROM products WHERE product_name  =  \"Chocolate\"",
    "query_toks": [
      "SELECT",
      "product_description",
      "FROM",
      "products",
      "WHERE",
      "product_name",
      "=",
      "``",
      "Chocolate",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "product_description",
      "from",
      "products",
      "where",
      "product_name",
      "=",
      "value"
    ],
    "question": "Return the description of the product called \"Chocolate\".",
    "question_toks": [
      "Return",
      "the",
      "description",
      "of",
      "the",
      "product",
      "called",
      "``",
      "Chocolate",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          "\"Chocolate\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_complaints",
    "query": "SELECT product_price FROM products WHERE product_id NOT IN (SELECT product_id FROM complaints)",
    "query_toks": [
      "SELECT",
      "product_price",
      "FROM",
      "products",
      "WHERE",
      "product_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "product_id",
      "FROM",
      "complaints",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "product_price",
      "from",
      "products",
      "where",
      "product_id",
      "not",
      "in",
      "(",
      "select",
      "product_id",
      "from",
      "complaints",
      ")"
    ],
    "question": "Find the prices of products which has never received a single complaint.",
    "question_toks": [
      "Find",
      "the",
      "prices",
      "of",
      "products",
      "which",
      "has",
      "never",
      "received",
      "a",
      "single",
      "complaint",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      24,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_complaints",
    "query": "SELECT product_price FROM products WHERE product_id NOT IN (SELECT product_id FROM complaints)",
    "query_toks": [
      "SELECT",
      "product_price",
      "FROM",
      "products",
      "WHERE",
      "product_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "product_id",
      "FROM",
      "complaints",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "product_price",
      "from",
      "products",
      "where",
      "product_id",
      "not",
      "in",
      "(",
      "select",
      "product_id",
      "from",
      "complaints",
      ")"
    ],
    "question": "What are the prices of products that have never gotten a complaint?",
    "question_toks": [
      "What",
      "are",
      "the",
      "prices",
      "of",
      "products",
      "that",
      "have",
      "never",
      "gotten",
      "a",
      "complaint",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      24,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_complaints",
    "query": "SELECT last_name FROM staff WHERE email_address LIKE \"%wrau%\"",
    "query_toks": [
      "SELECT",
      "last_name",
      "FROM",
      "staff",
      "WHERE",
      "email_address",
      "LIKE",
      "``",
      "%",
      "wrau",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "last_name",
      "from",
      "staff",
      "where",
      "email_address",
      "like",
      "value"
    ],
    "question": "Find the last name of the staff whose email address contains \"wrau\".",
    "question_toks": [
      "Find",
      "the",
      "last",
      "name",
      "of",
      "the",
      "staff",
      "whose",
      "email",
      "address",
      "contains",
      "``",
      "wrau",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"%wrau%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_complaints",
    "query": "SELECT last_name FROM staff WHERE email_address LIKE \"%wrau%\"",
    "query_toks": [
      "SELECT",
      "last_name",
      "FROM",
      "staff",
      "WHERE",
      "email_address",
      "LIKE",
      "``",
      "%",
      "wrau",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "last_name",
      "from",
      "staff",
      "where",
      "email_address",
      "like",
      "value"
    ],
    "question": "What are the last names of staff with email addressed containing the substring \"wrau\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "last",
      "names",
      "of",
      "staff",
      "with",
      "email",
      "addressed",
      "containing",
      "the",
      "substring",
      "``",
      "wrau",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"%wrau%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_complaints",
    "query": "SELECT count(DISTINCT complaint_type_code) FROM complaints",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "complaint_type_code",
      ")",
      "FROM",
      "complaints"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "complaint_type_code",
      ")",
      "from",
      "complaints"
    ],
    "question": "How many distinct complaint type codes are there in the database?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "complaint",
      "type",
      "codes",
      "are",
      "there",
      "in",
      "the",
      "database",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                28,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_complaints",
    "query": "SELECT count(DISTINCT complaint_type_code) FROM complaints",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "complaint_type_code",
      ")",
      "FROM",
      "complaints"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "complaint_type_code",
      ")",
      "from",
      "complaints"
    ],
    "question": "Count the number of different complaint type codes.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "complaint",
      "type",
      "codes",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                28,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_complaints",
    "query": "SELECT address_line_1 ,  address_line_2 FROM customers WHERE email_address  =  \"vbogisich@example.org\"",
    "query_toks": [
      "SELECT",
      "address_line_1",
      ",",
      "address_line_2",
      "FROM",
      "customers",
      "WHERE",
      "email_address",
      "=",
      "``",
      "vbogisich",
      "@",
      "example.org",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "address_line_1",
      ",",
      "address_line_2",
      "from",
      "customers",
      "where",
      "email_address",
      "=",
      "value"
    ],
    "question": "Find the address line 1 and 2 of the customer with email \"vbogisich@example.org\".",
    "question_toks": [
      "Find",
      "the",
      "address",
      "line",
      "1",
      "and",
      "2",
      "of",
      "the",
      "customer",
      "with",
      "email",
      "``",
      "vbogisich",
      "@",
      "example.org",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"vbogisich@example.org\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_complaints",
    "query": "SELECT address_line_1 ,  address_line_2 FROM customers WHERE email_address  =  \"vbogisich@example.org\"",
    "query_toks": [
      "SELECT",
      "address_line_1",
      ",",
      "address_line_2",
      "FROM",
      "customers",
      "WHERE",
      "email_address",
      "=",
      "``",
      "vbogisich",
      "@",
      "example.org",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "address_line_1",
      ",",
      "address_line_2",
      "from",
      "customers",
      "where",
      "email_address",
      "=",
      "value"
    ],
    "question": "What are lines 1 and 2 of the addressed of the customer with the email \"vbogisich@example.org\"?",
    "question_toks": [
      "What",
      "are",
      "lines",
      "1",
      "and",
      "2",
      "of",
      "the",
      "addressed",
      "of",
      "the",
      "customer",
      "with",
      "the",
      "email",
      "``",
      "vbogisich",
      "@",
      "example.org",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"vbogisich@example.org\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "workshop_paper",
    "query": "SELECT count(*) FROM submission",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "submission"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "submission"
    ],
    "question": "How many submissions are there?",
    "question_toks": [
      "How",
      "many",
      "submissions",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "workshop_paper",
    "query": "SELECT count(*) FROM submission",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "submission"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "submission"
    ],
    "question": "Count the number of submissions.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "submissions",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "workshop_paper",
    "query": "SELECT Author ,  College FROM submission",
    "query_toks": [
      "SELECT",
      "Author",
      ",",
      "College",
      "FROM",
      "submission"
    ],
    "query_toks_no_value": [
      "select",
      "author",
      ",",
      "college",
      "from",
      "submission"
    ],
    "question": "What are the authors of submissions and their colleges?",
    "question_toks": [
      "What",
      "are",
      "the",
      "authors",
      "of",
      "submissions",
      "and",
      "their",
      "colleges",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "workshop_paper",
    "query": "SELECT Author ,  College FROM submission",
    "query_toks": [
      "SELECT",
      "Author",
      ",",
      "College",
      "FROM",
      "submission"
    ],
    "query_toks_no_value": [
      "select",
      "author",
      ",",
      "college",
      "from",
      "submission"
    ],
    "question": "For each submission, show the author and their affiliated college.",
    "question_toks": [
      "For",
      "each",
      "submission",
      ",",
      "show",
      "the",
      "author",
      "and",
      "their",
      "affiliated",
      "college",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "workshop_paper",
    "query": "SELECT Author FROM submission WHERE College  =  \"Florida\" OR College  =  \"Temple\"",
    "query_toks": [
      "SELECT",
      "Author",
      "FROM",
      "submission",
      "WHERE",
      "College",
      "=",
      "``",
      "Florida",
      "''",
      "OR",
      "College",
      "=",
      "``",
      "Temple",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "author",
      "from",
      "submission",
      "where",
      "college",
      "=",
      "value",
      "or",
      "college",
      "=",
      "value"
    ],
    "question": "Show the names of authors from college \"Florida\" or \"Temple\"",
    "question_toks": [
      "Show",
      "the",
      "names",
      "of",
      "authors",
      "from",
      "college",
      "``",
      "Florida",
      "''",
      "or",
      "``",
      "Temple",
      "''"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Florida\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Temple\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "workshop_paper",
    "query": "SELECT Author FROM submission WHERE College  =  \"Florida\" OR College  =  \"Temple\"",
    "query_toks": [
      "SELECT",
      "Author",
      "FROM",
      "submission",
      "WHERE",
      "College",
      "=",
      "``",
      "Florida",
      "''",
      "OR",
      "College",
      "=",
      "``",
      "Temple",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "author",
      "from",
      "submission",
      "where",
      "college",
      "=",
      "value",
      "or",
      "college",
      "=",
      "value"
    ],
    "question": "Which authors with submissions are from college \"Florida\" or \"Temple\"?",
    "question_toks": [
      "Which",
      "authors",
      "with",
      "submissions",
      "are",
      "from",
      "college",
      "``",
      "Florida",
      "''",
      "or",
      "``",
      "Temple",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Florida\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Temple\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "workshop_paper",
    "query": "SELECT avg(Scores) FROM submission",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Scores",
      ")",
      "FROM",
      "submission"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "scores",
      ")",
      "from",
      "submission"
    ],
    "question": "What is the average score of submissions?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "score",
      "of",
      "submissions",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "workshop_paper",
    "query": "SELECT avg(Scores) FROM submission",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Scores",
      ")",
      "FROM",
      "submission"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "scores",
      ")",
      "from",
      "submission"
    ],
    "question": "Compute the average score of submissions.",
    "question_toks": [
      "Compute",
      "the",
      "average",
      "score",
      "of",
      "submissions",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "workshop_paper",
    "query": "SELECT Author FROM submission WHERE Submission_ID NOT IN (SELECT Submission_ID FROM acceptance)",
    "query_toks": [
      "SELECT",
      "Author",
      "FROM",
      "submission",
      "WHERE",
      "Submission_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Submission_ID",
      "FROM",
      "acceptance",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "author",
      "from",
      "submission",
      "where",
      "submission_id",
      "not",
      "in",
      "(",
      "select",
      "submission_id",
      "from",
      "acceptance",
      ")"
    ],
    "question": "List the authors who do not have submission to any workshop.",
    "question_toks": [
      "List",
      "the",
      "authors",
      "who",
      "do",
      "not",
      "have",
      "submission",
      "to",
      "any",
      "workshop",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "workshop_paper",
    "query": "SELECT Author FROM submission WHERE Submission_ID NOT IN (SELECT Submission_ID FROM acceptance)",
    "query_toks": [
      "SELECT",
      "Author",
      "FROM",
      "submission",
      "WHERE",
      "Submission_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Submission_ID",
      "FROM",
      "acceptance",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "author",
      "from",
      "submission",
      "where",
      "submission_id",
      "not",
      "in",
      "(",
      "select",
      "submission_id",
      "from",
      "acceptance",
      ")"
    ],
    "question": "Which authors did not submit to any workshop?",
    "question_toks": [
      "Which",
      "authors",
      "did",
      "not",
      "submit",
      "to",
      "any",
      "workshop",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_share_transactions",
    "query": "SELECT count(*) FROM INVESTORS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "INVESTORS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "investors"
    ],
    "question": "Find the number of investors in total.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "investors",
      "in",
      "total",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_share_transactions",
    "query": "SELECT Investor_details FROM INVESTORS",
    "query_toks": [
      "SELECT",
      "Investor_details",
      "FROM",
      "INVESTORS"
    ],
    "query_toks_no_value": [
      "select",
      "investor_details",
      "from",
      "investors"
    ],
    "question": "Show all investor details.",
    "question_toks": [
      "Show",
      "all",
      "investor",
      "details",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_share_transactions",
    "query": "SELECT max(amount_of_transaction) FROM TRANSACTIONS",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "amount_of_transaction",
      ")",
      "FROM",
      "TRANSACTIONS"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "amount_of_transaction",
      ")",
      "from",
      "transactions"
    ],
    "question": "Show the maximum amount of transaction.",
    "question_toks": [
      "Show",
      "the",
      "maximum",
      "amount",
      "of",
      "transaction",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_share_transactions",
    "query": "SELECT date_of_transaction ,  share_count FROM TRANSACTIONS",
    "query_toks": [
      "SELECT",
      "date_of_transaction",
      ",",
      "share_count",
      "FROM",
      "TRANSACTIONS"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_transaction",
      ",",
      "share_count",
      "from",
      "transactions"
    ],
    "question": "Show all date and share count of transactions.",
    "question_toks": [
      "Show",
      "all",
      "date",
      "and",
      "share",
      "count",
      "of",
      "transactions",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_share_transactions",
    "query": "SELECT sum(share_count) FROM TRANSACTIONS",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "share_count",
      ")",
      "FROM",
      "TRANSACTIONS"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "share_count",
      ")",
      "from",
      "transactions"
    ],
    "question": "What is the total share of transactions?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "share",
      "of",
      "transactions",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_share_transactions",
    "query": "SELECT transaction_id FROM TRANSACTIONS WHERE transaction_type_code  =  'PUR'",
    "query_toks": [
      "SELECT",
      "transaction_id",
      "FROM",
      "TRANSACTIONS",
      "WHERE",
      "transaction_type_code",
      "=",
      "'PUR",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "transaction_id",
      "from",
      "transactions",
      "where",
      "transaction_type_code",
      "=",
      "value"
    ],
    "question": "Show all transaction ids with transaction code 'PUR'.",
    "question_toks": [
      "Show",
      "all",
      "transaction",
      "ids",
      "with",
      "transaction",
      "code",
      "'PUR",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"PUR\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_share_transactions",
    "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE transaction_type_code  =  \"SALE\"",
    "query_toks": [
      "SELECT",
      "date_of_transaction",
      "FROM",
      "TRANSACTIONS",
      "WHERE",
      "transaction_type_code",
      "=",
      "``",
      "SALE",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_transaction",
      "from",
      "transactions",
      "where",
      "transaction_type_code",
      "=",
      "value"
    ],
    "question": "Show all dates of transactions whose type code is \"SALE\".",
    "question_toks": [
      "Show",
      "all",
      "dates",
      "of",
      "transactions",
      "whose",
      "type",
      "code",
      "is",
      "``",
      "SALE",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"SALE\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_share_transactions",
    "query": "SELECT avg(amount_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code  =  \"SALE\"",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "amount_of_transaction",
      ")",
      "FROM",
      "TRANSACTIONS",
      "WHERE",
      "transaction_type_code",
      "=",
      "``",
      "SALE",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "amount_of_transaction",
      ")",
      "from",
      "transactions",
      "where",
      "transaction_type_code",
      "=",
      "value"
    ],
    "question": "Show the average amount of transactions with type code \"SALE\".",
    "question_toks": [
      "Show",
      "the",
      "average",
      "amount",
      "of",
      "transactions",
      "with",
      "type",
      "code",
      "``",
      "SALE",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"SALE\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_share_transactions",
    "query": "SELECT transaction_type_description FROM Ref_Transaction_Types WHERE transaction_type_code\t  =  \"PUR\"",
    "query_toks": [
      "SELECT",
      "transaction_type_description",
      "FROM",
      "Ref_Transaction_Types",
      "WHERE",
      "transaction_type_code",
      "=",
      "``",
      "PUR",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "transaction_type_description",
      "from",
      "ref_transaction_types",
      "where",
      "transaction_type_code",
      "=",
      "value"
    ],
    "question": "Show the description of transaction type with code \"PUR\".",
    "question_toks": [
      "Show",
      "the",
      "description",
      "of",
      "transaction",
      "type",
      "with",
      "code",
      "``",
      "PUR",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"PUR\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_share_transactions",
    "query": "SELECT min(amount_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code  =  \"PUR\" AND share_count  >  50",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "amount_of_transaction",
      ")",
      "FROM",
      "TRANSACTIONS",
      "WHERE",
      "transaction_type_code",
      "=",
      "``",
      "PUR",
      "''",
      "AND",
      "share_count",
      ">",
      "50"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "amount_of_transaction",
      ")",
      "from",
      "transactions",
      "where",
      "transaction_type_code",
      "=",
      "value",
      "and",
      "share_count",
      ">",
      "value"
    ],
    "question": "Show the minimum amount of transactions whose type code is \"PUR\" and whose share count is bigger than 50.",
    "question_toks": [
      "Show",
      "the",
      "minimum",
      "amount",
      "of",
      "transactions",
      "whose",
      "type",
      "code",
      "is",
      "``",
      "PUR",
      "''",
      "and",
      "whose",
      "share",
      "count",
      "is",
      "bigger",
      "than",
      "50",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"PUR\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          50.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_share_transactions",
    "query": "SELECT max(share_count) FROM TRANSACTIONS WHERE amount_of_transaction  <  10000",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "share_count",
      ")",
      "FROM",
      "TRANSACTIONS",
      "WHERE",
      "amount_of_transaction",
      "<",
      "10000"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "share_count",
      ")",
      "from",
      "transactions",
      "where",
      "amount_of_transaction",
      "<",
      "value"
    ],
    "question": "Show the maximum share count of transactions where the amount is smaller than 10000",
    "question_toks": [
      "Show",
      "the",
      "maximum",
      "share",
      "count",
      "of",
      "transactions",
      "where",
      "the",
      "amount",
      "is",
      "smaller",
      "than",
      "10000"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          10000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_share_transactions",
    "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >  100 OR amount_of_transaction  >  1000",
    "query_toks": [
      "SELECT",
      "date_of_transaction",
      "FROM",
      "TRANSACTIONS",
      "WHERE",
      "share_count",
      ">",
      "100",
      "OR",
      "amount_of_transaction",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_transaction",
      "from",
      "transactions",
      "where",
      "share_count",
      ">",
      "value",
      "or",
      "amount_of_transaction",
      ">",
      "value"
    ],
    "question": "Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000.",
    "question_toks": [
      "Show",
      "the",
      "dates",
      "of",
      "transactions",
      "if",
      "the",
      "share",
      "count",
      "is",
      "bigger",
      "than",
      "100",
      "or",
      "the",
      "amount",
      "is",
      "bigger",
      "than",
      "1000",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          100.0,
          null
        ],
        "or",
        [
          false,
          3,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          1000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_share_transactions",
    "query": "SELECT COUNT(DISTINCT transaction_type_code) FROM TRANSACTIONS",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "transaction_type_code",
      ")",
      "FROM",
      "TRANSACTIONS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "transaction_type_code",
      ")",
      "from",
      "transactions"
    ],
    "question": "How many distinct transaction types are used in the transactions?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "transaction",
      "types",
      "are",
      "used",
      "in",
      "the",
      "transactions",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                10,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_share_transactions",
    "query": "SELECT lot_details ,  investor_id FROM LOTS",
    "query_toks": [
      "SELECT",
      "lot_details",
      ",",
      "investor_id",
      "FROM",
      "LOTS"
    ],
    "query_toks_no_value": [
      "select",
      "lot_details",
      ",",
      "investor_id",
      "from",
      "lots"
    ],
    "question": "Return the lot details and investor ids.",
    "question_toks": [
      "Return",
      "the",
      "lot",
      "details",
      "and",
      "investor",
      "ids",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_share_transactions",
    "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >=  100 OR amount_of_transaction  >=  100",
    "query_toks": [
      "SELECT",
      "date_of_transaction",
      "FROM",
      "TRANSACTIONS",
      "WHERE",
      "share_count",
      ">",
      "=",
      "100",
      "OR",
      "amount_of_transaction",
      ">",
      "=",
      "100"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_transaction",
      "from",
      "transactions",
      "where",
      "share_count",
      ">",
      "=",
      "value",
      "or",
      "amount_of_transaction",
      ">",
      "=",
      "value"
    ],
    "question": "What are the dates of transactions with at least 100 share count or amount bigger than 100?",
    "question_toks": [
      "What",
      "are",
      "the",
      "dates",
      "of",
      "transactions",
      "with",
      "at",
      "least",
      "100",
      "share",
      "count",
      "or",
      "amount",
      "bigger",
      "than",
      "100",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          100.0,
          null
        ],
        "or",
        [
          false,
          5,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          100.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT count(*) FROM HOTELS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "HOTELS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "hotels"
    ],
    "question": "How many available hotels are there in total?",
    "question_toks": [
      "How",
      "many",
      "available",
      "hotels",
      "are",
      "there",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT count(*) FROM HOTELS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "HOTELS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "hotels"
    ],
    "question": "Find the total number of available hotels.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "number",
      "of",
      "available",
      "hotels",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT price_range FROM HOTELS",
    "query_toks": [
      "SELECT",
      "price_range",
      "FROM",
      "HOTELS"
    ],
    "query_toks_no_value": [
      "select",
      "price_range",
      "from",
      "hotels"
    ],
    "question": "What are the price ranges of hotels?",
    "question_toks": [
      "What",
      "are",
      "the",
      "price",
      "ranges",
      "of",
      "hotels",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT price_range FROM HOTELS",
    "query_toks": [
      "SELECT",
      "price_range",
      "FROM",
      "HOTELS"
    ],
    "query_toks_no_value": [
      "select",
      "price_range",
      "from",
      "hotels"
    ],
    "question": "Tell me the price ranges for all the hotels.",
    "question_toks": [
      "Tell",
      "me",
      "the",
      "price",
      "ranges",
      "for",
      "all",
      "the",
      "hotels",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT Name ,  Other_Details FROM Staff",
    "query_toks": [
      "SELECT",
      "Name",
      ",",
      "Other_Details",
      "FROM",
      "Staff"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "other_details",
      "from",
      "staff"
    ],
    "question": "Show the names and details of all the staff members.",
    "question_toks": [
      "Show",
      "the",
      "names",
      "and",
      "details",
      "of",
      "all",
      "the",
      "staff",
      "members",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            14
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                49,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                50,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT Name ,  Other_Details FROM Staff",
    "query_toks": [
      "SELECT",
      "Name",
      ",",
      "Other_Details",
      "FROM",
      "Staff"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "other_details",
      "from",
      "staff"
    ],
    "question": "What is the name and detail of each staff member?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "and",
      "detail",
      "of",
      "each",
      "staff",
      "member",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            14
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                49,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                50,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT Tourist_Details FROM VISITORS",
    "query_toks": [
      "SELECT",
      "Tourist_Details",
      "FROM",
      "VISITORS"
    ],
    "query_toks_no_value": [
      "select",
      "tourist_details",
      "from",
      "visitors"
    ],
    "question": "Show details of all visitors.",
    "question_toks": [
      "Show",
      "details",
      "of",
      "all",
      "visitors",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT Tourist_Details FROM VISITORS",
    "query_toks": [
      "SELECT",
      "Tourist_Details",
      "FROM",
      "VISITORS"
    ],
    "query_toks_no_value": [
      "select",
      "tourist_details",
      "from",
      "visitors"
    ],
    "question": "What is the detail of each visitor?",
    "question_toks": [
      "What",
      "is",
      "the",
      "detail",
      "of",
      "each",
      "visitor",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT price_range FROM HOTELS WHERE star_rating_code  =  \"5\"",
    "query_toks": [
      "SELECT",
      "price_range",
      "FROM",
      "HOTELS",
      "WHERE",
      "star_rating_code",
      "=",
      "``",
      "5",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "price_range",
      "from",
      "hotels",
      "where",
      "star_rating_code",
      "=",
      "value"
    ],
    "question": "Show the price ranges of hotels with 5 star ratings.",
    "question_toks": [
      "Show",
      "the",
      "price",
      "ranges",
      "of",
      "hotels",
      "with",
      "5",
      "star",
      "ratings",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"5\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT price_range FROM HOTELS WHERE star_rating_code  =  \"5\"",
    "query_toks": [
      "SELECT",
      "price_range",
      "FROM",
      "HOTELS",
      "WHERE",
      "star_rating_code",
      "=",
      "``",
      "5",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "price_range",
      "from",
      "hotels",
      "where",
      "star_rating_code",
      "=",
      "value"
    ],
    "question": "What are the price ranges of five star hotels?",
    "question_toks": [
      "What",
      "are",
      "the",
      "price",
      "ranges",
      "of",
      "five",
      "star",
      "hotels",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"5\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT avg(price_range) FROM HOTELS WHERE star_rating_code  =  \"5\" AND pets_allowed_yn  =  1",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price_range",
      ")",
      "FROM",
      "HOTELS",
      "WHERE",
      "star_rating_code",
      "=",
      "``",
      "5",
      "''",
      "AND",
      "pets_allowed_yn",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price_range",
      ")",
      "from",
      "hotels",
      "where",
      "star_rating_code",
      "=",
      "value",
      "and",
      "pets_allowed_yn",
      "=",
      "value"
    ],
    "question": "Show the average price range of hotels that have 5 star ratings and allow pets.",
    "question_toks": [
      "Show",
      "the",
      "average",
      "price",
      "range",
      "of",
      "hotels",
      "that",
      "have",
      "5",
      "star",
      "ratings",
      "and",
      "allow",
      "pets",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"5\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT avg(price_range) FROM HOTELS WHERE star_rating_code  =  \"5\" AND pets_allowed_yn  =  1",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price_range",
      ")",
      "FROM",
      "HOTELS",
      "WHERE",
      "star_rating_code",
      "=",
      "``",
      "5",
      "''",
      "AND",
      "pets_allowed_yn",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price_range",
      ")",
      "from",
      "hotels",
      "where",
      "star_rating_code",
      "=",
      "value",
      "and",
      "pets_allowed_yn",
      "=",
      "value"
    ],
    "question": "What is the average price range of five star hotels that allow pets?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "price",
      "range",
      "of",
      "five",
      "star",
      "hotels",
      "that",
      "allow",
      "pets",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"5\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT Address FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\"",
    "query_toks": [
      "SELECT",
      "Address",
      "FROM",
      "LOCATIONS",
      "WHERE",
      "Location_Name",
      "=",
      "``",
      "UK",
      "Gallery",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "address",
      "from",
      "locations",
      "where",
      "location_name",
      "=",
      "value"
    ],
    "question": "What is the address of the location \"UK Gallery\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "address",
      "of",
      "the",
      "location",
      "``",
      "UK",
      "Gallery",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"UK Gallery\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT Address FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\"",
    "query_toks": [
      "SELECT",
      "Address",
      "FROM",
      "LOCATIONS",
      "WHERE",
      "Location_Name",
      "=",
      "``",
      "UK",
      "Gallery",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "address",
      "from",
      "locations",
      "where",
      "location_name",
      "=",
      "value"
    ],
    "question": "Find the address of the location named \"UK Gallery\".",
    "question_toks": [
      "Find",
      "the",
      "address",
      "of",
      "the",
      "location",
      "named",
      "``",
      "UK",
      "Gallery",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"UK Gallery\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\"",
    "query_toks": [
      "SELECT",
      "Other_Details",
      "FROM",
      "LOCATIONS",
      "WHERE",
      "Location_Name",
      "=",
      "``",
      "UK",
      "Gallery",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "other_details",
      "from",
      "locations",
      "where",
      "location_name",
      "=",
      "value"
    ],
    "question": "What is the detail of the location UK Gallery?",
    "question_toks": [
      "What",
      "is",
      "the",
      "detail",
      "of",
      "the",
      "location",
      "UK",
      "Gallery",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"UK Gallery\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\"",
    "query_toks": [
      "SELECT",
      "Other_Details",
      "FROM",
      "LOCATIONS",
      "WHERE",
      "Location_Name",
      "=",
      "``",
      "UK",
      "Gallery",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "other_details",
      "from",
      "locations",
      "where",
      "location_name",
      "=",
      "value"
    ],
    "question": "Return the detail of the location named \"UK Gallery\".",
    "question_toks": [
      "Return",
      "the",
      "detail",
      "of",
      "the",
      "location",
      "named",
      "``",
      "UK",
      "Gallery",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"UK Gallery\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE \"%film%\"",
    "query_toks": [
      "SELECT",
      "Location_Name",
      "FROM",
      "LOCATIONS",
      "WHERE",
      "Location_Name",
      "LIKE",
      "``",
      "%",
      "film",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "location_name",
      "from",
      "locations",
      "where",
      "location_name",
      "like",
      "value"
    ],
    "question": "Which location names contain the word \"film\"?",
    "question_toks": [
      "Which",
      "location",
      "names",
      "contain",
      "the",
      "word",
      "``",
      "film",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"%film%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE \"%film%\"",
    "query_toks": [
      "SELECT",
      "Location_Name",
      "FROM",
      "LOCATIONS",
      "WHERE",
      "Location_Name",
      "LIKE",
      "``",
      "%",
      "film",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "location_name",
      "from",
      "locations",
      "where",
      "location_name",
      "like",
      "value"
    ],
    "question": "Find all the locations whose names contain the word \"film\".",
    "question_toks": [
      "Find",
      "all",
      "the",
      "locations",
      "whose",
      "names",
      "contain",
      "the",
      "word",
      "``",
      "film",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"%film%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT count(DISTINCT Name) FROM PHOTOS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Name",
      ")",
      "FROM",
      "PHOTOS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "name",
      ")",
      "from",
      "photos"
    ],
    "question": "How many distinct names are associated with all the photos?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "names",
      "are",
      "associated",
      "with",
      "all",
      "the",
      "photos",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            13
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                43,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT count(DISTINCT Name) FROM PHOTOS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Name",
      ")",
      "FROM",
      "PHOTOS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "name",
      ")",
      "from",
      "photos"
    ],
    "question": "Count the number of distinct names associated with the photos.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "distinct",
      "names",
      "associated",
      "with",
      "the",
      "photos",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            13
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                43,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "TOURIST_ATTRACTIONS",
      "WHERE",
      "How_to_Get_There",
      "=",
      "``",
      "bus",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "tourist_attractions",
      "where",
      "how_to_get_there",
      "=",
      "value"
    ],
    "question": "What are the names of the tourist attractions that can be accessed by bus?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "tourist",
      "attractions",
      "that",
      "can",
      "be",
      "accessed",
      "by",
      "bus",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          "\"bus\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "TOURIST_ATTRACTIONS",
      "WHERE",
      "How_to_Get_There",
      "=",
      "``",
      "bus",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "tourist_attractions",
      "where",
      "how_to_get_there",
      "=",
      "value"
    ],
    "question": "Which tourist attractions can we get to by bus? Tell me the names of the attractions.",
    "question_toks": [
      "Which",
      "tourist",
      "attractions",
      "can",
      "we",
      "get",
      "to",
      "by",
      "bus",
      "?",
      "Tell",
      "me",
      "the",
      "names",
      "of",
      "the",
      "attractions",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          "\"bus\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT Name ,  Opening_Hours FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\" OR How_to_Get_There  =  \"walk\"",
    "query_toks": [
      "SELECT",
      "Name",
      ",",
      "Opening_Hours",
      "FROM",
      "TOURIST_ATTRACTIONS",
      "WHERE",
      "How_to_Get_There",
      "=",
      "``",
      "bus",
      "''",
      "OR",
      "How_to_Get_There",
      "=",
      "``",
      "walk",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "opening_hours",
      "from",
      "tourist_attractions",
      "where",
      "how_to_get_there",
      "=",
      "value",
      "or",
      "how_to_get_there",
      "=",
      "value"
    ],
    "question": "What are the names and opening hours of the tourist attractions that can be accessed by bus or walk?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "opening",
      "hours",
      "of",
      "the",
      "tourist",
      "attractions",
      "that",
      "can",
      "be",
      "accessed",
      "by",
      "bus",
      "or",
      "walk",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          "\"bus\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          "\"walk\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT Name ,  Opening_Hours FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\" OR How_to_Get_There  =  \"walk\"",
    "query_toks": [
      "SELECT",
      "Name",
      ",",
      "Opening_Hours",
      "FROM",
      "TOURIST_ATTRACTIONS",
      "WHERE",
      "How_to_Get_There",
      "=",
      "``",
      "bus",
      "''",
      "OR",
      "How_to_Get_There",
      "=",
      "``",
      "walk",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "opening_hours",
      "from",
      "tourist_attractions",
      "where",
      "how_to_get_there",
      "=",
      "value",
      "or",
      "how_to_get_there",
      "=",
      "value"
    ],
    "question": "Find the names and opening hours of the tourist attractions that we get to by bus or walk.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "and",
      "opening",
      "hours",
      "of",
      "the",
      "tourist",
      "attractions",
      "that",
      "we",
      "get",
      "to",
      "by",
      "bus",
      "or",
      "walk",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          "\"bus\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          "\"walk\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT count(*) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Visitors",
      "WHERE",
      "Tourist_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Tourist_ID",
      "FROM",
      "Visits",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "visitors",
      "where",
      "tourist_id",
      "not",
      "in",
      "(",
      "select",
      "tourist_id",
      "from",
      "visits",
      ")"
    ],
    "question": "How many tourists did not make any visit?",
    "question_toks": [
      "How",
      "many",
      "tourists",
      "did",
      "not",
      "make",
      "any",
      "visit",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  12
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      38,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT count(*) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Visitors",
      "WHERE",
      "Tourist_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Tourist_ID",
      "FROM",
      "Visits",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "visitors",
      "where",
      "tourist_id",
      "not",
      "in",
      "(",
      "select",
      "tourist_id",
      "from",
      "visits",
      ")"
    ],
    "question": "Count the number of tourists who did not visit any place.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "tourists",
      "who",
      "did",
      "not",
      "visit",
      "any",
      "place",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  12
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      38,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT count(*) FROM Video_games",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Video_games"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "video_games"
    ],
    "question": "How many video games exist?",
    "question_toks": [
      "How",
      "many",
      "video",
      "games",
      "exist",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT count(*) FROM Video_games",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Video_games"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "video_games"
    ],
    "question": "How many video games do you have?",
    "question_toks": [
      "How",
      "many",
      "video",
      "games",
      "do",
      "you",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT count(DISTINCT gtype) FROM Video_games",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "gtype",
      ")",
      "FROM",
      "Video_games"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "gtype",
      ")",
      "from",
      "video_games"
    ],
    "question": "How many video game types exist?",
    "question_toks": [
      "How",
      "many",
      "video",
      "game",
      "types",
      "exist",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT count(DISTINCT gtype) FROM Video_games",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "gtype",
      ")",
      "FROM",
      "Video_games"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "gtype",
      ")",
      "from",
      "video_games"
    ],
    "question": "What is the count of different game types?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "different",
      "game",
      "types",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT gname FROM Video_games WHERE gtype  =  \"Collectible card game\"",
    "query_toks": [
      "SELECT",
      "gname",
      "FROM",
      "Video_games",
      "WHERE",
      "gtype",
      "=",
      "``",
      "Collectible",
      "card",
      "game",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "gname",
      "from",
      "video_games",
      "where",
      "gtype",
      "=",
      "value"
    ],
    "question": "Show all video games with type Collectible card game.",
    "question_toks": [
      "Show",
      "all",
      "video",
      "games",
      "with",
      "type",
      "Collectible",
      "card",
      "game",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Collectible card game\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT gname FROM Video_games WHERE gtype  =  \"Collectible card game\"",
    "query_toks": [
      "SELECT",
      "gname",
      "FROM",
      "Video_games",
      "WHERE",
      "gtype",
      "=",
      "``",
      "Collectible",
      "card",
      "game",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "gname",
      "from",
      "video_games",
      "where",
      "gtype",
      "=",
      "value"
    ],
    "question": "What are the names of all video games that are collectible cards?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "video",
      "games",
      "that",
      "are",
      "collectible",
      "cards",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Collectible card game\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT gtype FROM Video_games WHERE gname  =  \"Call of Destiny\"",
    "query_toks": [
      "SELECT",
      "gtype",
      "FROM",
      "Video_games",
      "WHERE",
      "gname",
      "=",
      "``",
      "Call",
      "of",
      "Destiny",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "gtype",
      "from",
      "video_games",
      "where",
      "gname",
      "=",
      "value"
    ],
    "question": "What is the type of video game Call of Destiny.",
    "question_toks": [
      "What",
      "is",
      "the",
      "type",
      "of",
      "video",
      "game",
      "Call",
      "of",
      "Destiny",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Call of Destiny\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT gtype FROM Video_games WHERE gname  =  \"Call of Destiny\"",
    "query_toks": [
      "SELECT",
      "gtype",
      "FROM",
      "Video_games",
      "WHERE",
      "gname",
      "=",
      "``",
      "Call",
      "of",
      "Destiny",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "gtype",
      "from",
      "video_games",
      "where",
      "gname",
      "=",
      "value"
    ],
    "question": "What type of game is Call of Destiny?",
    "question_toks": [
      "What",
      "type",
      "of",
      "game",
      "is",
      "Call",
      "of",
      "Destiny",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Call of Destiny\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT count(*) FROM Video_games WHERE gtype  =  \"Massively multiplayer online game\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Video_games",
      "WHERE",
      "gtype",
      "=",
      "``",
      "Massively",
      "multiplayer",
      "online",
      "game",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "video_games",
      "where",
      "gtype",
      "=",
      "value"
    ],
    "question": "How many video games have type Massively multiplayer online game?",
    "question_toks": [
      "How",
      "many",
      "video",
      "games",
      "have",
      "type",
      "Massively",
      "multiplayer",
      "online",
      "game",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Massively multiplayer online game\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT count(*) FROM Video_games WHERE gtype  =  \"Massively multiplayer online game\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Video_games",
      "WHERE",
      "gtype",
      "=",
      "``",
      "Massively",
      "multiplayer",
      "online",
      "game",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "video_games",
      "where",
      "gtype",
      "=",
      "value"
    ],
    "question": "Count the number of video games with Massively multiplayer online game type .",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "video",
      "games",
      "with",
      "Massively",
      "multiplayer",
      "online",
      "game",
      "type",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Massively multiplayer online game\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT StuID FROM Student WHERE city_code  =  \"CHI\"",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Student",
      "WHERE",
      "city_code",
      "=",
      "``",
      "CHI",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "student",
      "where",
      "city_code",
      "=",
      "value"
    ],
    "question": "Show ids for all students who live in CHI.",
    "question_toks": [
      "Show",
      "ids",
      "for",
      "all",
      "students",
      "who",
      "live",
      "in",
      "CHI",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"CHI\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT StuID FROM Student WHERE city_code  =  \"CHI\"",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Student",
      "WHERE",
      "city_code",
      "=",
      "``",
      "CHI",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "student",
      "where",
      "city_code",
      "=",
      "value"
    ],
    "question": "What are the ids of all students who live in CHI?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "all",
      "students",
      "who",
      "live",
      "in",
      "CHI",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"CHI\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT StuID FROM Student WHERE Advisor  =  1121",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Student",
      "WHERE",
      "Advisor",
      "=",
      "1121"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "student",
      "where",
      "advisor",
      "=",
      "value"
    ],
    "question": "Show ids for all students who have advisor 1121.",
    "question_toks": [
      "Show",
      "ids",
      "for",
      "all",
      "students",
      "who",
      "have",
      "advisor",
      "1121",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          1121.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT StuID FROM Student WHERE Advisor  =  1121",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Student",
      "WHERE",
      "Advisor",
      "=",
      "1121"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "student",
      "where",
      "advisor",
      "=",
      "value"
    ],
    "question": "What are the ids of all students who have advisor number 1121?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "all",
      "students",
      "who",
      "have",
      "advisor",
      "number",
      "1121",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          1121.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT Fname FROM Student WHERE Major  =  600",
    "query_toks": [
      "SELECT",
      "Fname",
      "FROM",
      "Student",
      "WHERE",
      "Major",
      "=",
      "600"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      "from",
      "student",
      "where",
      "major",
      "=",
      "value"
    ],
    "question": "Show first name for all students with major 600.",
    "question_toks": [
      "Show",
      "first",
      "name",
      "for",
      "all",
      "students",
      "with",
      "major",
      "600",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          600.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT Fname FROM Student WHERE Major  =  600",
    "query_toks": [
      "SELECT",
      "Fname",
      "FROM",
      "Student",
      "WHERE",
      "Major",
      "=",
      "600"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      "from",
      "student",
      "where",
      "major",
      "=",
      "value"
    ],
    "question": "What are the first names for all students who are from the major numbered 600?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "names",
      "for",
      "all",
      "students",
      "who",
      "are",
      "from",
      "the",
      "major",
      "numbered",
      "600",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          600.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT count(DISTINCT sportname) FROM Sportsinfo",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "sportname",
      ")",
      "FROM",
      "Sportsinfo"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "sportname",
      ")",
      "from",
      "sportsinfo"
    ],
    "question": "How many sports do we have?",
    "question_toks": [
      "How",
      "many",
      "sports",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                16,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT count(DISTINCT sportname) FROM Sportsinfo",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "sportname",
      ")",
      "FROM",
      "Sportsinfo"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "sportname",
      ")",
      "from",
      "sportsinfo"
    ],
    "question": "How many different types of sports do we offer?",
    "question_toks": [
      "How",
      "many",
      "different",
      "types",
      "of",
      "sports",
      "do",
      "we",
      "offer",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                16,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT count(DISTINCT StuID) FROM Sportsinfo",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "StuID",
      ")",
      "FROM",
      "Sportsinfo"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "stuid",
      ")",
      "from",
      "sportsinfo"
    ],
    "question": "How many students play sports?",
    "question_toks": [
      "How",
      "many",
      "students",
      "play",
      "sports",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                15,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT count(DISTINCT StuID) FROM Sportsinfo",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "StuID",
      ")",
      "FROM",
      "Sportsinfo"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "stuid",
      ")",
      "from",
      "sportsinfo"
    ],
    "question": "How many different students are involved in sports?",
    "question_toks": [
      "How",
      "many",
      "different",
      "students",
      "are",
      "involved",
      "in",
      "sports",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                15,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y'",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Sportsinfo",
      "WHERE",
      "onscholarship",
      "=",
      "'Y",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "sportsinfo",
      "where",
      "onscholarship",
      "=",
      "value"
    ],
    "question": "List ids for all student who are on scholarship.",
    "question_toks": [
      "List",
      "ids",
      "for",
      "all",
      "student",
      "who",
      "are",
      "on",
      "scholarship",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Y\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y'",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Sportsinfo",
      "WHERE",
      "onscholarship",
      "=",
      "'Y",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "sportsinfo",
      "where",
      "onscholarship",
      "=",
      "value"
    ],
    "question": "What are the ids for all sporty students who are on scholarship?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "for",
      "all",
      "sporty",
      "students",
      "who",
      "are",
      "on",
      "scholarship",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Y\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT sum(gamesplayed) FROM Sportsinfo",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "gamesplayed",
      ")",
      "FROM",
      "Sportsinfo"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "gamesplayed",
      ")",
      "from",
      "sportsinfo"
    ],
    "question": "How many games are played for all students?",
    "question_toks": [
      "How",
      "many",
      "games",
      "are",
      "played",
      "for",
      "all",
      "students",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT sum(gamesplayed) FROM Sportsinfo",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "gamesplayed",
      ")",
      "FROM",
      "Sportsinfo"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "gamesplayed",
      ")",
      "from",
      "sportsinfo"
    ],
    "question": "What is the total number of games played?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "games",
      "played",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT sum(gamesplayed) FROM Sportsinfo WHERE sportname  =  \"Football\" AND onscholarship  =  'Y'",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "gamesplayed",
      ")",
      "FROM",
      "Sportsinfo",
      "WHERE",
      "sportname",
      "=",
      "``",
      "Football",
      "''",
      "AND",
      "onscholarship",
      "=",
      "'Y",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "gamesplayed",
      ")",
      "from",
      "sportsinfo",
      "where",
      "sportname",
      "=",
      "value",
      "and",
      "onscholarship",
      "=",
      "value"
    ],
    "question": "How many games are played for all football games by students on scholarship?",
    "question_toks": [
      "How",
      "many",
      "games",
      "are",
      "played",
      "for",
      "all",
      "football",
      "games",
      "by",
      "students",
      "on",
      "scholarship",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"Football\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Y\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT sum(gamesplayed) FROM Sportsinfo WHERE sportname  =  \"Football\" AND onscholarship  =  'Y'",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "gamesplayed",
      ")",
      "FROM",
      "Sportsinfo",
      "WHERE",
      "sportname",
      "=",
      "``",
      "Football",
      "''",
      "AND",
      "onscholarship",
      "=",
      "'Y",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "gamesplayed",
      ")",
      "from",
      "sportsinfo",
      "where",
      "sportname",
      "=",
      "value",
      "and",
      "onscholarship",
      "=",
      "value"
    ],
    "question": "What is the total number of all football games played by scholarship students?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "all",
      "football",
      "games",
      "played",
      "by",
      "scholarship",
      "students",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"Football\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Y\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT count(DISTINCT StuID) FROM Plays_games",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "StuID",
      ")",
      "FROM",
      "Plays_games"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "stuid",
      ")",
      "from",
      "plays_games"
    ],
    "question": "How many students play video games?",
    "question_toks": [
      "How",
      "many",
      "students",
      "play",
      "video",
      "games",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT count(DISTINCT StuID) FROM Plays_games",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "StuID",
      ")",
      "FROM",
      "Plays_games"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "stuid",
      ")",
      "from",
      "plays_games"
    ],
    "question": "How many different students play games?",
    "question_toks": [
      "How",
      "many",
      "different",
      "students",
      "play",
      "games",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT fname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Football\" INTERSECT SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Lacrosse\")",
    "query_toks": [
      "SELECT",
      "fname",
      ",",
      "age",
      "FROM",
      "Student",
      "WHERE",
      "StuID",
      "IN",
      "(",
      "SELECT",
      "StuID",
      "FROM",
      "Sportsinfo",
      "WHERE",
      "SportName",
      "=",
      "``",
      "Football",
      "''",
      "INTERSECT",
      "SELECT",
      "StuID",
      "FROM",
      "Sportsinfo",
      "WHERE",
      "SportName",
      "=",
      "``",
      "Lacrosse",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      ",",
      "age",
      "from",
      "student",
      "where",
      "stuid",
      "in",
      "(",
      "select",
      "stuid",
      "from",
      "sportsinfo",
      "where",
      "sportname",
      "=",
      "value",
      "intersect",
      "select",
      "stuid",
      "from",
      "sportsinfo",
      "where",
      "sportname",
      "=",
      "value",
      ")"
    ],
    "question": "Find the first name and age of the students who are playing both Football and Lacrosse.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "name",
      "and",
      "age",
      "of",
      "the",
      "students",
      "who",
      "are",
      "playing",
      "both",
      "Football",
      "and",
      "Lacrosse",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      15,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    16,
                    false
                  ],
                  null
                ],
                "\"Football\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
              "from": {
                "table_units": [
                  [
                    "table_unit",
                    3
                  ]
                ],
                "conds": []
              },
              "select": [
                false,
                [
                  [
                    0,
                    [
                      0,
                      [
                        0,
                        15,
                        false
                      ],
                      null
                    ]
                  ]
                ]
              ],
              "where": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      16,
                      false
                    ],
                    null
                  ],
                  "\"Lacrosse\"",
                  null
                ]
              ],
              "groupBy": [],
              "having": [],
              "orderBy": [],
              "limit": null,
              "intersect": null,
              "union": null,
              "except": null
            },
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT fname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Football\" INTERSECT SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Lacrosse\")",
    "query_toks": [
      "SELECT",
      "fname",
      ",",
      "age",
      "FROM",
      "Student",
      "WHERE",
      "StuID",
      "IN",
      "(",
      "SELECT",
      "StuID",
      "FROM",
      "Sportsinfo",
      "WHERE",
      "SportName",
      "=",
      "``",
      "Football",
      "''",
      "INTERSECT",
      "SELECT",
      "StuID",
      "FROM",
      "Sportsinfo",
      "WHERE",
      "SportName",
      "=",
      "``",
      "Lacrosse",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      ",",
      "age",
      "from",
      "student",
      "where",
      "stuid",
      "in",
      "(",
      "select",
      "stuid",
      "from",
      "sportsinfo",
      "where",
      "sportname",
      "=",
      "value",
      "intersect",
      "select",
      "stuid",
      "from",
      "sportsinfo",
      "where",
      "sportname",
      "=",
      "value",
      ")"
    ],
    "question": "What are the first names and ages of all students who are playing both Football and Lacrosse?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "names",
      "and",
      "ages",
      "of",
      "all",
      "students",
      "who",
      "are",
      "playing",
      "both",
      "Football",
      "and",
      "Lacrosse",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      15,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    16,
                    false
                  ],
                  null
                ],
                "\"Football\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
              "from": {
                "table_units": [
                  [
                    "table_unit",
                    3
                  ]
                ],
                "conds": []
              },
              "select": [
                false,
                [
                  [
                    0,
                    [
                      0,
                      [
                        0,
                        15,
                        false
                      ],
                      null
                    ]
                  ]
                ]
              ],
              "where": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      16,
                      false
                    ],
                    null
                  ],
                  "\"Lacrosse\"",
                  null
                ]
              ],
              "groupBy": [],
              "having": [],
              "orderBy": [],
              "limit": null,
              "intersect": null,
              "union": null,
              "except": null
            },
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT lname ,  sex FROM Student WHERE StuID IN (SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Call of Destiny\" INTERSECT SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Works of Widenius\")",
    "query_toks": [
      "SELECT",
      "lname",
      ",",
      "sex",
      "FROM",
      "Student",
      "WHERE",
      "StuID",
      "IN",
      "(",
      "SELECT",
      "T1.StuID",
      "FROM",
      "Plays_games",
      "AS",
      "T1",
      "JOIN",
      "Video_games",
      "AS",
      "T2",
      "ON",
      "T1.GameID",
      "=",
      "T2.GameID",
      "WHERE",
      "T2.Gname",
      "=",
      "``",
      "Call",
      "of",
      "Destiny",
      "''",
      "INTERSECT",
      "SELECT",
      "T1.StuID",
      "FROM",
      "Plays_games",
      "AS",
      "T1",
      "JOIN",
      "Video_games",
      "AS",
      "T2",
      "ON",
      "T1.GameID",
      "=",
      "T2.GameID",
      "WHERE",
      "T2.Gname",
      "=",
      "``",
      "Works",
      "of",
      "Widenius",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "lname",
      ",",
      "sex",
      "from",
      "student",
      "where",
      "stuid",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "stuid",
      "from",
      "plays_games",
      "as",
      "t1",
      "join",
      "video_games",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "gameid",
      "=",
      "t2",
      ".",
      "gameid",
      "where",
      "t2",
      ".",
      "gname",
      "=",
      "value",
      "intersect",
      "select",
      "t1",
      ".",
      "stuid",
      "from",
      "plays_games",
      "as",
      "t1",
      "join",
      "video_games",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "gameid",
      "=",
      "t2",
      ".",
      "gameid",
      "where",
      "t2",
      ".",
      "gname",
      "=",
      "value",
      ")"
    ],
    "question": "Find the last name and gender of the students who are playing both Call of Destiny and Works of Widenius games.",
    "question_toks": [
      "Find",
      "the",
      "last",
      "name",
      "and",
      "gender",
      "of",
      "the",
      "students",
      "who",
      "are",
      "playing",
      "both",
      "Call",
      "of",
      "Destiny",
      "and",
      "Works",
      "of",
      "Widenius",
      "games",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ],
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      13,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    9,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      12,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    10,
                    false
                  ],
                  null
                ],
                "\"Call of Destiny\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
              "from": {
                "table_units": [
                  [
                    "table_unit",
                    2
                  ],
                  [
                    "table_unit",
                    1
                  ]
                ],
                "conds": [
                  [
                    false,
                    2,
                    [
                      0,
                      [
                        0,
                        13,
                        false
                      ],
                      null
                    ],
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              },
              "select": [
                false,
                [
                  [
                    0,
                    [
                      0,
                      [
                        0,
                        12,
                        false
                      ],
                      null
                    ]
                  ]
                ]
              ],
              "where": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      10,
                      false
                    ],
                    null
                  ],
                  "\"Works of Widenius\"",
                  null
                ]
              ],
              "groupBy": [],
              "having": [],
              "orderBy": [],
              "limit": null,
              "intersect": null,
              "union": null,
              "except": null
            },
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT lname ,  sex FROM Student WHERE StuID IN (SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Call of Destiny\" INTERSECT SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Works of Widenius\")",
    "query_toks": [
      "SELECT",
      "lname",
      ",",
      "sex",
      "FROM",
      "Student",
      "WHERE",
      "StuID",
      "IN",
      "(",
      "SELECT",
      "T1.StuID",
      "FROM",
      "Plays_games",
      "AS",
      "T1",
      "JOIN",
      "Video_games",
      "AS",
      "T2",
      "ON",
      "T1.GameID",
      "=",
      "T2.GameID",
      "WHERE",
      "T2.Gname",
      "=",
      "``",
      "Call",
      "of",
      "Destiny",
      "''",
      "INTERSECT",
      "SELECT",
      "T1.StuID",
      "FROM",
      "Plays_games",
      "AS",
      "T1",
      "JOIN",
      "Video_games",
      "AS",
      "T2",
      "ON",
      "T1.GameID",
      "=",
      "T2.GameID",
      "WHERE",
      "T2.Gname",
      "=",
      "``",
      "Works",
      "of",
      "Widenius",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "lname",
      ",",
      "sex",
      "from",
      "student",
      "where",
      "stuid",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "stuid",
      "from",
      "plays_games",
      "as",
      "t1",
      "join",
      "video_games",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "gameid",
      "=",
      "t2",
      ".",
      "gameid",
      "where",
      "t2",
      ".",
      "gname",
      "=",
      "value",
      "intersect",
      "select",
      "t1",
      ".",
      "stuid",
      "from",
      "plays_games",
      "as",
      "t1",
      "join",
      "video_games",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "gameid",
      "=",
      "t2",
      ".",
      "gameid",
      "where",
      "t2",
      ".",
      "gname",
      "=",
      "value",
      ")"
    ],
    "question": "what is the last name and gender of all students who played both Call of Destiny and Works of Widenius?",
    "question_toks": [
      "what",
      "is",
      "the",
      "last",
      "name",
      "and",
      "gender",
      "of",
      "all",
      "students",
      "who",
      "played",
      "both",
      "Call",
      "of",
      "Destiny",
      "and",
      "Works",
      "of",
      "Widenius",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ],
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      13,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    9,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      12,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    10,
                    false
                  ],
                  null
                ],
                "\"Call of Destiny\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
              "from": {
                "table_units": [
                  [
                    "table_unit",
                    2
                  ],
                  [
                    "table_unit",
                    1
                  ]
                ],
                "conds": [
                  [
                    false,
                    2,
                    [
                      0,
                      [
                        0,
                        13,
                        false
                      ],
                      null
                    ],
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              },
              "select": [
                false,
                [
                  [
                    0,
                    [
                      0,
                      [
                        0,
                        12,
                        false
                      ],
                      null
                    ]
                  ]
                ]
              ],
              "where": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      10,
                      false
                    ],
                    null
                  ],
                  "\"Works of Widenius\"",
                  null
                ]
              ],
              "groupBy": [],
              "having": [],
              "orderBy": [],
              "limit": null,
              "intersect": null,
              "union": null,
              "except": null
            },
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT customer_name FROM customers",
    "query_toks": [
      "SELECT",
      "customer_name",
      "FROM",
      "customers"
    ],
    "query_toks_no_value": [
      "select",
      "customer_name",
      "from",
      "customers"
    ],
    "question": "Find the name of all customers.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "all",
      "customers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT customer_name FROM customers",
    "query_toks": [
      "SELECT",
      "customer_name",
      "FROM",
      "customers"
    ],
    "query_toks_no_value": [
      "select",
      "customer_name",
      "from",
      "customers"
    ],
    "question": "What are the names of all the customers?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "the",
      "customers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT count(*) FROM customers",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customers"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers"
    ],
    "question": "How many customers are there?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT count(*) FROM customers",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customers"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers"
    ],
    "question": "Return the total number of distinct customers.",
    "question_toks": [
      "Return",
      "the",
      "total",
      "number",
      "of",
      "distinct",
      "customers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT avg(order_quantity) FROM order_items",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "order_quantity",
      ")",
      "FROM",
      "order_items"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "order_quantity",
      ")",
      "from",
      "order_items"
    ],
    "question": "What is the average amount of items ordered in each order?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "amount",
      "of",
      "items",
      "ordered",
      "in",
      "each",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                32,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT avg(order_quantity) FROM order_items",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "order_quantity",
      ")",
      "FROM",
      "order_items"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "order_quantity",
      ")",
      "from",
      "order_items"
    ],
    "question": "Find the average order quantity per order.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "order",
      "quantity",
      "per",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                32,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT customer_name FROM customers WHERE payment_method  =  \"Cash\"",
    "query_toks": [
      "SELECT",
      "customer_name",
      "FROM",
      "customers",
      "WHERE",
      "payment_method",
      "=",
      "``",
      "Cash",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_name",
      "from",
      "customers",
      "where",
      "payment_method",
      "=",
      "value"
    ],
    "question": "What are the names of customers who use payment method \"Cash\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "customers",
      "who",
      "use",
      "payment",
      "method",
      "``",
      "Cash",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Cash\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT customer_name FROM customers WHERE payment_method  =  \"Cash\"",
    "query_toks": [
      "SELECT",
      "customer_name",
      "FROM",
      "customers",
      "WHERE",
      "payment_method",
      "=",
      "``",
      "Cash",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_name",
      "from",
      "customers",
      "where",
      "payment_method",
      "=",
      "value"
    ],
    "question": "Which customers use \"Cash\" for payment method? Return the customer names.",
    "question_toks": [
      "Which",
      "customers",
      "use",
      "``",
      "Cash",
      "''",
      "for",
      "payment",
      "method",
      "?",
      "Return",
      "the",
      "customer",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Cash\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT date_became_customer FROM customers WHERE customer_id BETWEEN 10 AND 20",
    "query_toks": [
      "SELECT",
      "date_became_customer",
      "FROM",
      "customers",
      "WHERE",
      "customer_id",
      "BETWEEN",
      "10",
      "AND",
      "20"
    ],
    "query_toks_no_value": [
      "select",
      "date_became_customer",
      "from",
      "customers",
      "where",
      "customer_id",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "Find the \"date became customers\" of the customers whose ID is between 10 and 20.",
    "question_toks": [
      "Find",
      "the",
      "``",
      "date",
      "became",
      "customers",
      "''",
      "of",
      "the",
      "customers",
      "whose",
      "ID",
      "is",
      "between",
      "10",
      "and",
      "20",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          10.0,
          20.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT date_became_customer FROM customers WHERE customer_id BETWEEN 10 AND 20",
    "query_toks": [
      "SELECT",
      "date_became_customer",
      "FROM",
      "customers",
      "WHERE",
      "customer_id",
      "BETWEEN",
      "10",
      "AND",
      "20"
    ],
    "query_toks_no_value": [
      "select",
      "date_became_customer",
      "from",
      "customers",
      "where",
      "customer_id",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What are the dates when customers with ids between 10 and 20 became customers?",
    "question_toks": [
      "What",
      "are",
      "the",
      "dates",
      "when",
      "customers",
      "with",
      "ids",
      "between",
      "10",
      "and",
      "20",
      "became",
      "customers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          10.0,
          20.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT customer_name FROM customers WHERE payment_method  =  (SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1)",
    "query_toks": [
      "SELECT",
      "customer_name",
      "FROM",
      "customers",
      "WHERE",
      "payment_method",
      "=",
      "(",
      "SELECT",
      "payment_method",
      "FROM",
      "customers",
      "GROUP",
      "BY",
      "payment_method",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "customer_name",
      "from",
      "customers",
      "where",
      "payment_method",
      "=",
      "(",
      "select",
      "payment_method",
      "from",
      "customers",
      "group",
      "by",
      "payment_method",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value",
      ")"
    ],
    "question": "What are the names of customers using the most popular payment method?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "customers",
      "using",
      "the",
      "most",
      "popular",
      "payment",
      "method",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      11,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [
              [
                0,
                11,
                false
              ]
            ],
            "having": [],
            "orderBy": [
              "desc",
              [
                [
                  0,
                  [
                    3,
                    0,
                    false
                  ],
                  null
                ]
              ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT customer_name FROM customers WHERE payment_method  =  (SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1)",
    "query_toks": [
      "SELECT",
      "customer_name",
      "FROM",
      "customers",
      "WHERE",
      "payment_method",
      "=",
      "(",
      "SELECT",
      "payment_method",
      "FROM",
      "customers",
      "GROUP",
      "BY",
      "payment_method",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "customer_name",
      "from",
      "customers",
      "where",
      "payment_method",
      "=",
      "(",
      "select",
      "payment_method",
      "from",
      "customers",
      "group",
      "by",
      "payment_method",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value",
      ")"
    ],
    "question": "Find the name of the customers who use the most frequently used payment method.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "the",
      "customers",
      "who",
      "use",
      "the",
      "most",
      "frequently",
      "used",
      "payment",
      "method",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      11,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [
              [
                0,
                11,
                false
              ]
            ],
            "having": [],
            "orderBy": [
              "desc",
              [
                [
                  0,
                  [
                    3,
                    0,
                    false
                  ],
                  null
                ]
              ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT customer_name FROM customers WHERE customer_name LIKE \"%Alex%\"",
    "query_toks": [
      "SELECT",
      "customer_name",
      "FROM",
      "customers",
      "WHERE",
      "customer_name",
      "LIKE",
      "``",
      "%",
      "Alex",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_name",
      "from",
      "customers",
      "where",
      "customer_name",
      "like",
      "value"
    ],
    "question": "Find the name of all customers whose name contains \"Alex\".",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "all",
      "customers",
      "whose",
      "name",
      "contains",
      "``",
      "Alex",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"%Alex%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT customer_name FROM customers WHERE customer_name LIKE \"%Alex%\"",
    "query_toks": [
      "SELECT",
      "customer_name",
      "FROM",
      "customers",
      "WHERE",
      "customer_name",
      "LIKE",
      "``",
      "%",
      "Alex",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_name",
      "from",
      "customers",
      "where",
      "customer_name",
      "like",
      "value"
    ],
    "question": "Which customer's name contains \"Alex\"? Find the full name.",
    "question_toks": [
      "Which",
      "customer",
      "'s",
      "name",
      "contains",
      "``",
      "Alex",
      "''",
      "?",
      "Find",
      "the",
      "full",
      "name",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"%Alex%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT product_details FROM products WHERE product_details LIKE \"%Latte%\" OR product_details LIKE \"%Americano%\"",
    "query_toks": [
      "SELECT",
      "product_details",
      "FROM",
      "products",
      "WHERE",
      "product_details",
      "LIKE",
      "``",
      "%",
      "Latte",
      "%",
      "''",
      "OR",
      "product_details",
      "LIKE",
      "``",
      "%",
      "Americano",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "product_details",
      "from",
      "products",
      "where",
      "product_details",
      "like",
      "value",
      "or",
      "product_details",
      "like",
      "value"
    ],
    "question": "Find the detail of products whose detail contains the word \"Latte\" or the word \"Americano\"",
    "question_toks": [
      "Find",
      "the",
      "detail",
      "of",
      "products",
      "whose",
      "detail",
      "contains",
      "the",
      "word",
      "``",
      "Latte",
      "''",
      "or",
      "the",
      "word",
      "``",
      "Americano",
      "''"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"%Latte%\"",
          null
        ],
        "or",
        [
          false,
          9,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"%Americano%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT product_details FROM products WHERE product_details LIKE \"%Latte%\" OR product_details LIKE \"%Americano%\"",
    "query_toks": [
      "SELECT",
      "product_details",
      "FROM",
      "products",
      "WHERE",
      "product_details",
      "LIKE",
      "``",
      "%",
      "Latte",
      "%",
      "''",
      "OR",
      "product_details",
      "LIKE",
      "``",
      "%",
      "Americano",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "product_details",
      "from",
      "products",
      "where",
      "product_details",
      "like",
      "value",
      "or",
      "product_details",
      "like",
      "value"
    ],
    "question": "Which product's detail contains the word \"Latte\" or \"Americano\"? Return the full detail.",
    "question_toks": [
      "Which",
      "product",
      "'s",
      "detail",
      "contains",
      "the",
      "word",
      "``",
      "Latte",
      "''",
      "or",
      "``",
      "Americano",
      "''",
      "?",
      "Return",
      "the",
      "full",
      "detail",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"%Latte%\"",
          null
        ],
        "or",
        [
          false,
          9,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"%Americano%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT city FROM addresses WHERE city NOT IN ( SELECT DISTINCT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id)",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "addresses",
      "WHERE",
      "city",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "DISTINCT",
      "t3.city",
      "FROM",
      "customers",
      "AS",
      "t1",
      "JOIN",
      "customer_addresses",
      "AS",
      "t2",
      "ON",
      "t1.customer_id",
      "=",
      "t2.customer_id",
      "JOIN",
      "addresses",
      "AS",
      "t3",
      "ON",
      "t2.address_id",
      "=",
      "t3.address_id",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "addresses",
      "where",
      "city",
      "not",
      "in",
      "(",
      "select",
      "distinct",
      "t3",
      ".",
      "city",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "customer_addresses",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "join",
      "addresses",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "address_id",
      "=",
      "t3",
      ".",
      "address_id",
      ")"
    ],
    "question": "Find the list of cities that no customer is living in.",
    "question_toks": [
      "Find",
      "the",
      "list",
      "of",
      "cities",
      "that",
      "no",
      "customer",
      "is",
      "living",
      "in",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ],
                [
                  "table_unit",
                  3
                ],
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      10,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    15,
                    false
                  ],
                  null
                ],
                "and",
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      16,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    1,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              true,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT city FROM addresses WHERE city NOT IN ( SELECT DISTINCT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id)",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "addresses",
      "WHERE",
      "city",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "DISTINCT",
      "t3.city",
      "FROM",
      "customers",
      "AS",
      "t1",
      "JOIN",
      "customer_addresses",
      "AS",
      "t2",
      "ON",
      "t1.customer_id",
      "=",
      "t2.customer_id",
      "JOIN",
      "addresses",
      "AS",
      "t3",
      "ON",
      "t2.address_id",
      "=",
      "t3.address_id",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "addresses",
      "where",
      "city",
      "not",
      "in",
      "(",
      "select",
      "distinct",
      "t3",
      ".",
      "city",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "customer_addresses",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "join",
      "addresses",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "address_id",
      "=",
      "t3",
      ".",
      "address_id",
      ")"
    ],
    "question": "What are the cities no customers live in?",
    "question_toks": [
      "What",
      "are",
      "the",
      "cities",
      "no",
      "customers",
      "live",
      "in",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ],
                [
                  "table_unit",
                  3
                ],
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      10,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    15,
                    false
                  ],
                  null
                ],
                "and",
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      16,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    1,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              true,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT city FROM addresses WHERE zip_postcode  =  255",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "addresses",
      "WHERE",
      "zip_postcode",
      "=",
      "255"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "addresses",
      "where",
      "zip_postcode",
      "=",
      "value"
    ],
    "question": "Find the city with post code 255.",
    "question_toks": [
      "Find",
      "the",
      "city",
      "with",
      "post",
      "code",
      "255",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          255.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT city FROM addresses WHERE zip_postcode  =  255",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "addresses",
      "WHERE",
      "zip_postcode",
      "=",
      "255"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "addresses",
      "where",
      "zip_postcode",
      "=",
      "value"
    ],
    "question": "Which city is post code 255 located in?",
    "question_toks": [
      "Which",
      "city",
      "is",
      "post",
      "code",
      "255",
      "located",
      "in",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          255.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE \"4%\"",
    "query_toks": [
      "SELECT",
      "state_province_county",
      ",",
      "country",
      "FROM",
      "addresses",
      "WHERE",
      "zip_postcode",
      "LIKE",
      "``",
      "4",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "state_province_county",
      ",",
      "country",
      "from",
      "addresses",
      "where",
      "zip_postcode",
      "like",
      "value"
    ],
    "question": "Find the state and country of all cities with post code starting with 4.",
    "question_toks": [
      "Find",
      "the",
      "state",
      "and",
      "country",
      "of",
      "all",
      "cities",
      "with",
      "post",
      "code",
      "starting",
      "with",
      "4",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"4%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE \"4%\"",
    "query_toks": [
      "SELECT",
      "state_province_county",
      ",",
      "country",
      "FROM",
      "addresses",
      "WHERE",
      "zip_postcode",
      "LIKE",
      "``",
      "4",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "state_province_county",
      ",",
      "country",
      "from",
      "addresses",
      "where",
      "zip_postcode",
      "like",
      "value"
    ],
    "question": "What are the state and country of all the cities that have post codes starting with 4.\\",
    "question_toks": [
      "What",
      "are",
      "the",
      "state",
      "and",
      "country",
      "of",
      "all",
      "the",
      "cities",
      "that",
      "have",
      "post",
      "codes",
      "starting",
      "with",
      "4.\\"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"4%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT avg(active_to_date - active_from_date) FROM customer_contact_channels",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "active_to_date",
      "-",
      "active_from_date",
      ")",
      "FROM",
      "customer_contact_channels"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "active_to_date",
      "-",
      "active_from_date",
      ")",
      "from",
      "customer_contact_channels"
    ],
    "question": "What is the average time span of contact channels in the database?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "time",
      "span",
      "of",
      "contact",
      "channels",
      "in",
      "the",
      "database",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              1,
              [
                0,
                23,
                false
              ],
              [
                0,
                22,
                false
              ]
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT avg(active_to_date - active_from_date) FROM customer_contact_channels",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "active_to_date",
      "-",
      "active_from_date",
      ")",
      "FROM",
      "customer_contact_channels"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "active_to_date",
      "-",
      "active_from_date",
      ")",
      "from",
      "customer_contact_channels"
    ],
    "question": "Compute the average active time span of contact channels.",
    "question_toks": [
      "Compute",
      "the",
      "average",
      "active",
      "time",
      "span",
      "of",
      "contact",
      "channels",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              1,
              [
                0,
                23,
                false
              ],
              [
                0,
                22,
                false
              ]
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT channel_code ,  contact_number FROM customer_contact_channels WHERE active_to_date - active_from_date  =  (SELECT active_to_date - active_from_date FROM customer_contact_channels ORDER BY (active_to_date - active_from_date) DESC LIMIT 1)",
    "query_toks": [
      "SELECT",
      "channel_code",
      ",",
      "contact_number",
      "FROM",
      "customer_contact_channels",
      "WHERE",
      "active_to_date",
      "-",
      "active_from_date",
      "=",
      "(",
      "SELECT",
      "active_to_date",
      "-",
      "active_from_date",
      "FROM",
      "customer_contact_channels",
      "ORDER",
      "BY",
      "(",
      "active_to_date",
      "-",
      "active_from_date",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "channel_code",
      ",",
      "contact_number",
      "from",
      "customer_contact_channels",
      "where",
      "active_to_date",
      "-",
      "active_from_date",
      "=",
      "(",
      "select",
      "active_to_date",
      "-",
      "active_from_date",
      "from",
      "customer_contact_channels",
      "order",
      "by",
      "(",
      "active_to_date",
      "-",
      "active_from_date",
      ")",
      "desc",
      "limit",
      "value",
      ")"
    ],
    "question": "What is the channel code and contact number of the customer contact channel that was active for the longest time?",
    "question_toks": [
      "What",
      "is",
      "the",
      "channel",
      "code",
      "and",
      "contact",
      "number",
      "of",
      "the",
      "customer",
      "contact",
      "channel",
      "that",
      "was",
      "active",
      "for",
      "the",
      "longest",
      "time",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            1,
            [
              0,
              23,
              false
            ],
            [
              0,
              22,
              false
            ]
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    1,
                    [
                      0,
                      23,
                      false
                    ],
                    [
                      0,
                      22,
                      false
                    ]
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
              "desc",
              [
                [
                  1,
                  [
                    0,
                    23,
                    false
                  ],
                  [
                    0,
                    22,
                    false
                  ]
                ]
              ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT channel_code ,  contact_number FROM customer_contact_channels WHERE active_to_date - active_from_date  =  (SELECT active_to_date - active_from_date FROM customer_contact_channels ORDER BY (active_to_date - active_from_date) DESC LIMIT 1)",
    "query_toks": [
      "SELECT",
      "channel_code",
      ",",
      "contact_number",
      "FROM",
      "customer_contact_channels",
      "WHERE",
      "active_to_date",
      "-",
      "active_from_date",
      "=",
      "(",
      "SELECT",
      "active_to_date",
      "-",
      "active_from_date",
      "FROM",
      "customer_contact_channels",
      "ORDER",
      "BY",
      "(",
      "active_to_date",
      "-",
      "active_from_date",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "channel_code",
      ",",
      "contact_number",
      "from",
      "customer_contact_channels",
      "where",
      "active_to_date",
      "-",
      "active_from_date",
      "=",
      "(",
      "select",
      "active_to_date",
      "-",
      "active_from_date",
      "from",
      "customer_contact_channels",
      "order",
      "by",
      "(",
      "active_to_date",
      "-",
      "active_from_date",
      ")",
      "desc",
      "limit",
      "value",
      ")"
    ],
    "question": "Return the channel code and contact number of the customer contact channel whose active duration was the longest.",
    "question_toks": [
      "Return",
      "the",
      "channel",
      "code",
      "and",
      "contact",
      "number",
      "of",
      "the",
      "customer",
      "contact",
      "channel",
      "whose",
      "active",
      "duration",
      "was",
      "the",
      "longest",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            1,
            [
              0,
              23,
              false
            ],
            [
              0,
              22,
              false
            ]
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    1,
                    [
                      0,
                      23,
                      false
                    ],
                    [
                      0,
                      22,
                      false
                    ]
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
              "desc",
              [
                [
                  1,
                  [
                    0,
                    23,
                    false
                  ],
                  [
                    0,
                    22,
                    false
                  ]
                ]
              ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT count(DISTINCT customer_id) FROM customer_orders WHERE order_status  =  \"Cancelled\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "customer_id",
      ")",
      "FROM",
      "customer_orders",
      "WHERE",
      "order_status",
      "=",
      "``",
      "Cancelled",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "customer_id",
      ")",
      "from",
      "customer_orders",
      "where",
      "order_status",
      "=",
      "value"
    ],
    "question": "How many customers have at least one order with status \"Cancelled\"?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "have",
      "at",
      "least",
      "one",
      "order",
      "with",
      "status",
      "``",
      "Cancelled",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                26,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          "\"Cancelled\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT count(DISTINCT customer_id) FROM customer_orders WHERE order_status  =  \"Cancelled\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "customer_id",
      ")",
      "FROM",
      "customer_orders",
      "WHERE",
      "order_status",
      "=",
      "``",
      "Cancelled",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "customer_id",
      ")",
      "from",
      "customer_orders",
      "where",
      "order_status",
      "=",
      "value"
    ],
    "question": "Return the number of customers who have at least one order with \"Cancelled\" status.",
    "question_toks": [
      "Return",
      "the",
      "number",
      "of",
      "customers",
      "who",
      "have",
      "at",
      "least",
      "one",
      "order",
      "with",
      "``",
      "Cancelled",
      "''",
      "status",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                26,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          "\"Cancelled\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT count(*) FROM customer_orders WHERE order_details  =  \"Second time\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customer_orders",
      "WHERE",
      "order_details",
      "=",
      "``",
      "Second",
      "time",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customer_orders",
      "where",
      "order_details",
      "=",
      "value"
    ],
    "question": "How many orders have detail \"Second time\"?",
    "question_toks": [
      "How",
      "many",
      "orders",
      "have",
      "detail",
      "``",
      "Second",
      "time",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"Second time\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT count(*) FROM customer_orders WHERE order_details  =  \"Second time\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customer_orders",
      "WHERE",
      "order_details",
      "=",
      "``",
      "Second",
      "time",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customer_orders",
      "where",
      "order_details",
      "=",
      "value"
    ],
    "question": "Tell me the number of orders with \"Second time\" as order detail.",
    "question_toks": [
      "Tell",
      "me",
      "the",
      "number",
      "of",
      "orders",
      "with",
      "``",
      "Second",
      "time",
      "''",
      "as",
      "order",
      "detail",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"Second time\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT customer_name FROM customers WHERE payment_method != 'Cash'",
    "query_toks": [
      "SELECT",
      "customer_name",
      "FROM",
      "customers",
      "WHERE",
      "payment_method",
      "!",
      "=",
      "'Cash",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "customer_name",
      "from",
      "customers",
      "where",
      "payment_method",
      "!",
      "=",
      "value"
    ],
    "question": "Find the name of customers who did not pay with Cash.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "customers",
      "who",
      "did",
      "not",
      "pay",
      "with",
      "Cash",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Cash\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT customer_name FROM customers WHERE payment_method != 'Cash'",
    "query_toks": [
      "SELECT",
      "customer_name",
      "FROM",
      "customers",
      "WHERE",
      "payment_method",
      "!",
      "=",
      "'Cash",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "customer_name",
      "from",
      "customers",
      "where",
      "payment_method",
      "!",
      "=",
      "value"
    ],
    "question": "What is the name of customers who do not use Cash as payment method.",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "customers",
      "who",
      "do",
      "not",
      "use",
      "Cash",
      "as",
      "payment",
      "method",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Cash\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT count(*) FROM artist",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "artist"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "artist"
    ],
    "question": "How many artists are there?",
    "question_toks": [
      "How",
      "many",
      "artists",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT count(*) FROM artist",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "artist"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "artist"
    ],
    "question": "Count the number of artists.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "artists",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Age FROM artist",
    "query_toks": [
      "SELECT",
      "Age",
      "FROM",
      "artist"
    ],
    "query_toks_no_value": [
      "select",
      "age",
      "from",
      "artist"
    ],
    "question": "List the age of all music artists.",
    "question_toks": [
      "List",
      "the",
      "age",
      "of",
      "all",
      "music",
      "artists",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Age FROM artist",
    "query_toks": [
      "SELECT",
      "Age",
      "FROM",
      "artist"
    ],
    "query_toks_no_value": [
      "select",
      "age",
      "from",
      "artist"
    ],
    "question": "What are the ages of all music artists?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ages",
      "of",
      "all",
      "music",
      "artists",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT avg(Age) FROM artist",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Age",
      ")",
      "FROM",
      "artist"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "age",
      ")",
      "from",
      "artist"
    ],
    "question": "What is the average age of all artists?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "age",
      "of",
      "all",
      "artists",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT avg(Age) FROM artist",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Age",
      ")",
      "FROM",
      "artist"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "age",
      ")",
      "from",
      "artist"
    ],
    "question": "Return the average age across all artists.",
    "question_toks": [
      "Return",
      "the",
      "average",
      "age",
      "across",
      "all",
      "artists",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Famous_Title FROM artist WHERE Artist  =  \"Triumfall\"",
    "query_toks": [
      "SELECT",
      "Famous_Title",
      "FROM",
      "artist",
      "WHERE",
      "Artist",
      "=",
      "``",
      "Triumfall",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "famous_title",
      "from",
      "artist",
      "where",
      "artist",
      "=",
      "value"
    ],
    "question": "What are the famous titles of the artist \"Triumfall\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "famous",
      "titles",
      "of",
      "the",
      "artist",
      "``",
      "Triumfall",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Triumfall\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Famous_Title FROM artist WHERE Artist  =  \"Triumfall\"",
    "query_toks": [
      "SELECT",
      "Famous_Title",
      "FROM",
      "artist",
      "WHERE",
      "Artist",
      "=",
      "``",
      "Triumfall",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "famous_title",
      "from",
      "artist",
      "where",
      "artist",
      "=",
      "value"
    ],
    "question": "Return the famous titles of the artist called \"Triumfall\".",
    "question_toks": [
      "Return",
      "the",
      "famous",
      "titles",
      "of",
      "the",
      "artist",
      "called",
      "``",
      "Triumfall",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Triumfall\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Date_of_ceremony ,  RESULT FROM music_festival",
    "query_toks": [
      "SELECT",
      "Date_of_ceremony",
      ",",
      "RESULT",
      "FROM",
      "music_festival"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_ceremony",
      ",",
      "result",
      "from",
      "music_festival"
    ],
    "question": "Return the dates of ceremony and the results of all music festivals",
    "question_toks": [
      "Return",
      "the",
      "dates",
      "of",
      "ceremony",
      "and",
      "the",
      "results",
      "of",
      "all",
      "music",
      "festivals"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Date_of_ceremony ,  RESULT FROM music_festival",
    "query_toks": [
      "SELECT",
      "Date_of_ceremony",
      ",",
      "RESULT",
      "FROM",
      "music_festival"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_ceremony",
      ",",
      "result",
      "from",
      "music_festival"
    ],
    "question": "What are the dates of ceremony and results for each music festival?",
    "question_toks": [
      "What",
      "are",
      "the",
      "dates",
      "of",
      "ceremony",
      "and",
      "results",
      "for",
      "each",
      "music",
      "festival",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Category FROM music_festival WHERE RESULT  =  \"Awarded\"",
    "query_toks": [
      "SELECT",
      "Category",
      "FROM",
      "music_festival",
      "WHERE",
      "RESULT",
      "=",
      "``",
      "Awarded",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "category",
      "from",
      "music_festival",
      "where",
      "result",
      "=",
      "value"
    ],
    "question": "What are the category of music festivals with result \"Awarded\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "category",
      "of",
      "music",
      "festivals",
      "with",
      "result",
      "``",
      "Awarded",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Awarded\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Category FROM music_festival WHERE RESULT  =  \"Awarded\"",
    "query_toks": [
      "SELECT",
      "Category",
      "FROM",
      "music_festival",
      "WHERE",
      "RESULT",
      "=",
      "``",
      "Awarded",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "category",
      "from",
      "music_festival",
      "where",
      "result",
      "=",
      "value"
    ],
    "question": "Return the categories of music festivals that have the result \"Awarded\".",
    "question_toks": [
      "Return",
      "the",
      "categories",
      "of",
      "music",
      "festivals",
      "that",
      "have",
      "the",
      "result",
      "``",
      "Awarded",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Awarded\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT max(Weeks_on_Top) ,  min(Weeks_on_Top) FROM volume",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Weeks_on_Top",
      ")",
      ",",
      "min",
      "(",
      "Weeks_on_Top",
      ")",
      "FROM",
      "volume"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "weeks_on_top",
      ")",
      ",",
      "min",
      "(",
      "weeks_on_top",
      ")",
      "from",
      "volume"
    ],
    "question": "What are the maximum and minimum week on top of all volumes?",
    "question_toks": [
      "What",
      "are",
      "the",
      "maximum",
      "and",
      "minimum",
      "week",
      "on",
      "top",
      "of",
      "all",
      "volumes",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT max(Weeks_on_Top) ,  min(Weeks_on_Top) FROM volume",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Weeks_on_Top",
      ")",
      ",",
      "min",
      "(",
      "Weeks_on_Top",
      ")",
      "FROM",
      "volume"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "weeks_on_top",
      ")",
      ",",
      "min",
      "(",
      "weeks_on_top",
      ")",
      "from",
      "volume"
    ],
    "question": "Give the maximum and minimum weeks on top across all volumes.",
    "question_toks": [
      "Give",
      "the",
      "maximum",
      "and",
      "minimum",
      "weeks",
      "on",
      "top",
      "across",
      "all",
      "volumes",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Song FROM volume WHERE Weeks_on_Top  >  1",
    "query_toks": [
      "SELECT",
      "Song",
      "FROM",
      "volume",
      "WHERE",
      "Weeks_on_Top",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "song",
      "from",
      "volume",
      "where",
      "weeks_on_top",
      ">",
      "value"
    ],
    "question": "What are the songs in volumes with more than 1 week on top?",
    "question_toks": [
      "What",
      "are",
      "the",
      "songs",
      "in",
      "volumes",
      "with",
      "more",
      "than",
      "1",
      "week",
      "on",
      "top",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Song FROM volume WHERE Weeks_on_Top  >  1",
    "query_toks": [
      "SELECT",
      "Song",
      "FROM",
      "volume",
      "WHERE",
      "Weeks_on_Top",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "song",
      "from",
      "volume",
      "where",
      "weeks_on_top",
      ">",
      "value"
    ],
    "question": "Give the songs included in volumes that have more than 1 week on top.",
    "question_toks": [
      "Give",
      "the",
      "songs",
      "included",
      "in",
      "volumes",
      "that",
      "have",
      "more",
      "than",
      "1",
      "week",
      "on",
      "top",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT COUNT(DISTINCT Artist_ID) FROM volume",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "Artist_ID",
      ")",
      "FROM",
      "volume"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "artist_id",
      ")",
      "from",
      "volume"
    ],
    "question": "How many distinct artists do the volumes associate to?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "artists",
      "do",
      "the",
      "volumes",
      "associate",
      "to",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT COUNT(DISTINCT Artist_ID) FROM volume",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "Artist_ID",
      ")",
      "FROM",
      "volume"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "artist_id",
      ")",
      "from",
      "volume"
    ],
    "question": "Count the number of distinct artists who have volumes.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "distinct",
      "artists",
      "who",
      "have",
      "volumes",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN(SELECT Artist_ID FROM volume)",
    "query_toks": [
      "SELECT",
      "Famous_Title",
      "FROM",
      "artist",
      "WHERE",
      "Artist_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Artist_ID",
      "FROM",
      "volume",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "famous_title",
      "from",
      "artist",
      "where",
      "artist_id",
      "not",
      "in",
      "(",
      "select",
      "artist_id",
      "from",
      "volume",
      ")"
    ],
    "question": "Find the famous titles of artists that do not have any volume.",
    "question_toks": [
      "Find",
      "the",
      "famous",
      "titles",
      "of",
      "artists",
      "that",
      "do",
      "not",
      "have",
      "any",
      "volume",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      11,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN(SELECT Artist_ID FROM volume)",
    "query_toks": [
      "SELECT",
      "Famous_Title",
      "FROM",
      "artist",
      "WHERE",
      "Artist_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Artist_ID",
      "FROM",
      "volume",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "famous_title",
      "from",
      "artist",
      "where",
      "artist_id",
      "not",
      "in",
      "(",
      "select",
      "artist_id",
      "from",
      "volume",
      ")"
    ],
    "question": "What are the famous titles of artists who do not have any volumes?",
    "question_toks": [
      "What",
      "are",
      "the",
      "famous",
      "titles",
      "of",
      "artists",
      "who",
      "do",
      "not",
      "have",
      "any",
      "volumes",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      11,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Date_of_ceremony FROM music_festival WHERE Category  =  \"Best Song\" AND RESULT  =  \"Awarded\"",
    "query_toks": [
      "SELECT",
      "Date_of_ceremony",
      "FROM",
      "music_festival",
      "WHERE",
      "Category",
      "=",
      "``",
      "Best",
      "Song",
      "''",
      "AND",
      "RESULT",
      "=",
      "``",
      "Awarded",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_ceremony",
      "from",
      "music_festival",
      "where",
      "category",
      "=",
      "value",
      "and",
      "result",
      "=",
      "value"
    ],
    "question": "What are the date of ceremony of music festivals with category \"Best Song\" and result \"Awarded\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "date",
      "of",
      "ceremony",
      "of",
      "music",
      "festivals",
      "with",
      "category",
      "``",
      "Best",
      "Song",
      "''",
      "and",
      "result",
      "``",
      "Awarded",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"Best Song\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Awarded\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Date_of_ceremony FROM music_festival WHERE Category  =  \"Best Song\" AND RESULT  =  \"Awarded\"",
    "query_toks": [
      "SELECT",
      "Date_of_ceremony",
      "FROM",
      "music_festival",
      "WHERE",
      "Category",
      "=",
      "``",
      "Best",
      "Song",
      "''",
      "AND",
      "RESULT",
      "=",
      "``",
      "Awarded",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_ceremony",
      "from",
      "music_festival",
      "where",
      "category",
      "=",
      "value",
      "and",
      "result",
      "=",
      "value"
    ],
    "question": "Return the dates of ceremony corresponding to music festivals that had the category \"Best Song\" and result \"Awarded\".",
    "question_toks": [
      "Return",
      "the",
      "dates",
      "of",
      "ceremony",
      "corresponding",
      "to",
      "music",
      "festivals",
      "that",
      "had",
      "the",
      "category",
      "``",
      "Best",
      "Song",
      "''",
      "and",
      "result",
      "``",
      "Awarded",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"Best Song\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Awarded\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT COUNT(DISTINCT Artist_ID) FROM volume",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "Artist_ID",
      ")",
      "FROM",
      "volume"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "artist_id",
      ")",
      "from",
      "volume"
    ],
    "question": "How many distinct artists have volumes?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "artists",
      "have",
      "volumes",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT COUNT(DISTINCT Artist_ID) FROM volume",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "Artist_ID",
      ")",
      "FROM",
      "volume"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "artist_id",
      ")",
      "from",
      "volume"
    ],
    "question": "Count the number of artists who have had volumes.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "artists",
      "who",
      "have",
      "had",
      "volumes",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "roller_coaster",
    "query": "SELECT count(*) FROM roller_coaster",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "roller_coaster"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "roller_coaster"
    ],
    "question": "How many roller coasters are there?",
    "question_toks": [
      "How",
      "many",
      "roller",
      "coasters",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "roller_coaster",
    "query": "SELECT LENGTH ,  Height FROM roller_coaster",
    "query_toks": [
      "SELECT",
      "LENGTH",
      ",",
      "Height",
      "FROM",
      "roller_coaster"
    ],
    "query_toks_no_value": [
      "select",
      "length",
      ",",
      "height",
      "from",
      "roller_coaster"
    ],
    "question": "What are the lengths and heights of roller coasters?",
    "question_toks": [
      "What",
      "are",
      "the",
      "lengths",
      "and",
      "heights",
      "of",
      "roller",
      "coasters",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "roller_coaster",
    "query": "SELECT Name FROM country WHERE Languages != \"German\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "country",
      "WHERE",
      "Languages",
      "!",
      "=",
      "``",
      "German",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "country",
      "where",
      "languages",
      "!",
      "=",
      "value"
    ],
    "question": "List the names of countries whose language is not \"German\".",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "countries",
      "whose",
      "language",
      "is",
      "not",
      "``",
      "German",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"German\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "roller_coaster",
    "query": "SELECT Status FROM roller_coaster WHERE LENGTH  >  3300 OR Height  >  100",
    "query_toks": [
      "SELECT",
      "Status",
      "FROM",
      "roller_coaster",
      "WHERE",
      "LENGTH",
      ">",
      "3300",
      "OR",
      "Height",
      ">",
      "100"
    ],
    "query_toks_no_value": [
      "select",
      "status",
      "from",
      "roller_coaster",
      "where",
      "length",
      ">",
      "value",
      "or",
      "height",
      ">",
      "value"
    ],
    "question": "Show the statuses of roller coasters longer than 3300 or higher than 100.",
    "question_toks": [
      "Show",
      "the",
      "statuses",
      "of",
      "roller",
      "coasters",
      "longer",
      "than",
      "3300",
      "or",
      "higher",
      "than",
      "100",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          3300.0,
          null
        ],
        "or",
        [
          false,
          3,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          100.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "roller_coaster",
    "query": "SELECT avg(Speed) FROM roller_coaster",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Speed",
      ")",
      "FROM",
      "roller_coaster"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "speed",
      ")",
      "from",
      "roller_coaster"
    ],
    "question": "What is the average speed of roller coasters?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "speed",
      "of",
      "roller",
      "coasters",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "roller_coaster",
    "query": "SELECT count(*) FROM country WHERE country_id NOT IN ( SELECT country_id FROM roller_coaster WHERE LENGTH  >  3000 )",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "country",
      "WHERE",
      "country_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "country_id",
      "FROM",
      "roller_coaster",
      "WHERE",
      "LENGTH",
      ">",
      "3000",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "country",
      "where",
      "country_id",
      "not",
      "in",
      "(",
      "select",
      "country_id",
      "from",
      "roller_coaster",
      "where",
      "length",
      ">",
      "value",
      ")"
    ],
    "question": "How many countries do not have an roller coaster longer than 3000?",
    "question_toks": [
      "How",
      "many",
      "countries",
      "do",
      "not",
      "have",
      "an",
      "roller",
      "coaster",
      "longer",
      "than",
      "3000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                3,
                [
                  0,
                  [
                    0,
                    5,
                    false
                  ],
                  null
                ],
                3000.0,
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_1",
    "query": "SELECT count(DISTINCT rank) FROM captain",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "rank",
      ")",
      "FROM",
      "captain"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "rank",
      ")",
      "from",
      "captain"
    ],
    "question": "How many different captain ranks are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "captain",
      "ranks",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_1",
    "query": "SELECT count(DISTINCT rank) FROM captain",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "rank",
      ")",
      "FROM",
      "captain"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "rank",
      ")",
      "from",
      "captain"
    ],
    "question": "Count the number of different ranks of captain.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "ranks",
      "of",
      "captain",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_1",
    "query": "SELECT name ,  CLASS ,  rank FROM captain",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "CLASS",
      ",",
      "rank",
      "FROM",
      "captain"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "class",
      ",",
      "rank",
      "from",
      "captain"
    ],
    "question": "Find the name, class and rank of all captains.",
    "question_toks": [
      "Find",
      "the",
      "name",
      ",",
      "class",
      "and",
      "rank",
      "of",
      "all",
      "captains",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_1",
    "query": "SELECT name ,  CLASS ,  rank FROM captain",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "CLASS",
      ",",
      "rank",
      "FROM",
      "captain"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "class",
      ",",
      "rank",
      "from",
      "captain"
    ],
    "question": "What are the names, classes, and ranks of all captains?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      ",",
      "classes",
      ",",
      "and",
      "ranks",
      "of",
      "all",
      "captains",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_1",
    "query": "SELECT name FROM captain WHERE rank  =  'Midshipman' OR rank  =  'Lieutenant'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "captain",
      "WHERE",
      "rank",
      "=",
      "'Midshipman",
      "'",
      "OR",
      "rank",
      "=",
      "'Lieutenant",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "captain",
      "where",
      "rank",
      "=",
      "value",
      "or",
      "rank",
      "=",
      "value"
    ],
    "question": "Find the name of captains whose rank are either Midshipman or Lieutenant.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "captains",
      "whose",
      "rank",
      "are",
      "either",
      "Midshipman",
      "or",
      "Lieutenant",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Midshipman\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Lieutenant\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_1",
    "query": "SELECT name FROM captain WHERE rank  =  'Midshipman' OR rank  =  'Lieutenant'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "captain",
      "WHERE",
      "rank",
      "=",
      "'Midshipman",
      "'",
      "OR",
      "rank",
      "=",
      "'Lieutenant",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "captain",
      "where",
      "rank",
      "=",
      "value",
      "or",
      "rank",
      "=",
      "value"
    ],
    "question": "What are the names of captains that have either the rank Midshipman or Lieutenant?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "captains",
      "that",
      "have",
      "either",
      "the",
      "rank",
      "Midshipman",
      "or",
      "Lieutenant",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Midshipman\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Lieutenant\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_1",
    "query": "SELECT count(*) FROM ship",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "ship"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ship"
    ],
    "question": "how many ships are there?",
    "question_toks": [
      "how",
      "many",
      "ships",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_1",
    "query": "SELECT count(*) FROM ship",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "ship"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ship"
    ],
    "question": "Count the number of ships.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "ships",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_1",
    "query": "SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "CLASS",
      "FROM",
      "ship",
      "WHERE",
      "ship_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "ship_id",
      "FROM",
      "captain",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "class",
      "from",
      "ship",
      "where",
      "ship_id",
      "not",
      "in",
      "(",
      "select",
      "ship_id",
      "from",
      "captain",
      ")"
    ],
    "question": "what are the names and classes of the ships that do not have any captain yet?",
    "question_toks": [
      "what",
      "are",
      "the",
      "names",
      "and",
      "classes",
      "of",
      "the",
      "ships",
      "that",
      "do",
      "not",
      "have",
      "any",
      "captain",
      "yet",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_1",
    "query": "SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "CLASS",
      "FROM",
      "ship",
      "WHERE",
      "ship_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "ship_id",
      "FROM",
      "captain",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "class",
      "from",
      "ship",
      "where",
      "ship_id",
      "not",
      "in",
      "(",
      "select",
      "ship_id",
      "from",
      "captain",
      ")"
    ],
    "question": "Return the names and classes of ships that do not have a captain?",
    "question_toks": [
      "Return",
      "the",
      "names",
      "and",
      "classes",
      "of",
      "ships",
      "that",
      "do",
      "not",
      "have",
      "a",
      "captain",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_1",
    "query": "SELECT name ,  flag FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank  =  'Midshipman')",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "flag",
      "FROM",
      "ship",
      "WHERE",
      "ship_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "ship_id",
      "FROM",
      "captain",
      "WHERE",
      "rank",
      "=",
      "'Midshipman",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "flag",
      "from",
      "ship",
      "where",
      "ship_id",
      "not",
      "in",
      "(",
      "select",
      "ship_id",
      "from",
      "captain",
      "where",
      "rank",
      "=",
      "value",
      ")"
    ],
    "question": "Find the name and flag of ships that are not steered by any captain with Midshipman rank.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "and",
      "flag",
      "of",
      "ships",
      "that",
      "are",
      "not",
      "steered",
      "by",
      "any",
      "captain",
      "with",
      "Midshipman",
      "rank",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"Midshipman\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_1",
    "query": "SELECT name ,  flag FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank  =  'Midshipman')",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "flag",
      "FROM",
      "ship",
      "WHERE",
      "ship_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "ship_id",
      "FROM",
      "captain",
      "WHERE",
      "rank",
      "=",
      "'Midshipman",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "flag",
      "from",
      "ship",
      "where",
      "ship_id",
      "not",
      "in",
      "(",
      "select",
      "ship_id",
      "from",
      "captain",
      "where",
      "rank",
      "=",
      "value",
      ")"
    ],
    "question": "What are the names and flags of ships that do not have a captain with the rank of Midshipman?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "flags",
      "of",
      "ships",
      "that",
      "do",
      "not",
      "have",
      "a",
      "captain",
      "with",
      "the",
      "rank",
      "of",
      "Midshipman",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"Midshipman\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "city_record",
    "query": "SELECT match_id FROM MATCH WHERE competition = \"1994 FIFA World Cup qualification\"",
    "query_toks": [
      "SELECT",
      "match_id",
      "FROM",
      "MATCH",
      "WHERE",
      "competition",
      "=",
      "``",
      "1994",
      "FIFA",
      "World",
      "Cup",
      "qualification",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "match_id",
      "from",
      "match",
      "where",
      "competition",
      "=",
      "value"
    ],
    "question": "Find the match ids of the cities that hosted competition \"1994 FIFA World Cup qualification\"?",
    "question_toks": [
      "Find",
      "the",
      "match",
      "ids",
      "of",
      "the",
      "cities",
      "that",
      "hosted",
      "competition",
      "``",
      "1994",
      "FIFA",
      "World",
      "Cup",
      "qualification",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"1994 FIFA World Cup qualification\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "city_record",
    "query": "SELECT match_id FROM MATCH WHERE competition = \"1994 FIFA World Cup qualification\"",
    "query_toks": [
      "SELECT",
      "match_id",
      "FROM",
      "MATCH",
      "WHERE",
      "competition",
      "=",
      "``",
      "1994",
      "FIFA",
      "World",
      "Cup",
      "qualification",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "match_id",
      "from",
      "match",
      "where",
      "competition",
      "=",
      "value"
    ],
    "question": "What is the match id of the competition called \"1994 FIFA World Cup qualification\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "match",
      "id",
      "of",
      "the",
      "competition",
      "called",
      "``",
      "1994",
      "FIFA",
      "World",
      "Cup",
      "qualification",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"1994 FIFA World Cup qualification\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "city_record",
    "query": "SELECT city FROM city WHERE regional_population  >  10000000",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "city",
      "WHERE",
      "regional_population",
      ">",
      "10000000"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "city",
      "where",
      "regional_population",
      ">",
      "value"
    ],
    "question": "Please give me a list of cities whose regional population is over 10000000.",
    "question_toks": [
      "Please",
      "give",
      "me",
      "a",
      "list",
      "of",
      "cities",
      "whose",
      "regional",
      "population",
      "is",
      "over",
      "10000000",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          10000000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "city_record",
    "query": "SELECT city FROM city WHERE regional_population  >  10000000",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "city",
      "WHERE",
      "regional_population",
      ">",
      "10000000"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "city",
      "where",
      "regional_population",
      ">",
      "value"
    ],
    "question": "Which cities have regional population above 10000000?",
    "question_toks": [
      "Which",
      "cities",
      "have",
      "regional",
      "population",
      "above",
      "10000000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          10000000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT payment_method_code ,  party_phone FROM parties WHERE party_email  =  \"enrico09@example.com\"",
    "query_toks": [
      "SELECT",
      "payment_method_code",
      ",",
      "party_phone",
      "FROM",
      "parties",
      "WHERE",
      "party_email",
      "=",
      "``",
      "enrico09",
      "@",
      "example.com",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "payment_method_code",
      ",",
      "party_phone",
      "from",
      "parties",
      "where",
      "party_email",
      "=",
      "value"
    ],
    "question": "Find the payment method and phone of the party with email \"enrico09@example.com\".",
    "question_toks": [
      "Find",
      "the",
      "payment",
      "method",
      "and",
      "phone",
      "of",
      "the",
      "party",
      "with",
      "email",
      "``",
      "enrico09",
      "@",
      "example.com",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              31,
              false
            ],
            null
          ],
          "\"enrico09@example.com\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT payment_method_code ,  party_phone FROM parties WHERE party_email  =  \"enrico09@example.com\"",
    "query_toks": [
      "SELECT",
      "payment_method_code",
      ",",
      "party_phone",
      "FROM",
      "parties",
      "WHERE",
      "party_email",
      "=",
      "``",
      "enrico09",
      "@",
      "example.com",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "payment_method_code",
      ",",
      "party_phone",
      "from",
      "parties",
      "where",
      "party_email",
      "=",
      "value"
    ],
    "question": "What is the payment method code and party phone of the party with the email 'enrico09@example.com'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "payment",
      "method",
      "code",
      "and",
      "party",
      "phone",
      "of",
      "the",
      "party",
      "with",
      "the",
      "email",
      "'enrico09",
      "@",
      "example.com",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              31,
              false
            ],
            null
          ],
          "\"enrico09@example.com\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT count(*) FROM services",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "services"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "services"
    ],
    "question": "How many services are there?",
    "question_toks": [
      "How",
      "many",
      "services",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT count(*) FROM services",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "services"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "services"
    ],
    "question": "Count the number of services.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "services",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT count(*) FROM addresses WHERE state_province_county  =  \"Colorado\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "addresses",
      "WHERE",
      "state_province_county",
      "=",
      "``",
      "Colorado",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "addresses",
      "where",
      "state_province_county",
      "=",
      "value"
    ],
    "question": "How many cities are there in state \"Colorado\"?",
    "question_toks": [
      "How",
      "many",
      "cities",
      "are",
      "there",
      "in",
      "state",
      "``",
      "Colorado",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Colorado\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT count(*) FROM addresses WHERE state_province_county  =  \"Colorado\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "addresses",
      "WHERE",
      "state_province_county",
      "=",
      "``",
      "Colorado",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "addresses",
      "where",
      "state_province_county",
      "=",
      "value"
    ],
    "question": "Count the number of cities in the state of Colorado.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "cities",
      "in",
      "the",
      "state",
      "of",
      "Colorado",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Colorado\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT organization_name FROM organizations WHERE organization_name LIKE \"%Party%\"",
    "query_toks": [
      "SELECT",
      "organization_name",
      "FROM",
      "organizations",
      "WHERE",
      "organization_name",
      "LIKE",
      "``",
      "%",
      "Party",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "organization_name",
      "from",
      "organizations",
      "where",
      "organization_name",
      "like",
      "value"
    ],
    "question": "Find the name of organizations whose names contain \"Party\".",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "organizations",
      "whose",
      "names",
      "contain",
      "``",
      "Party",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"%Party%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT organization_name FROM organizations WHERE organization_name LIKE \"%Party%\"",
    "query_toks": [
      "SELECT",
      "organization_name",
      "FROM",
      "organizations",
      "WHERE",
      "organization_name",
      "LIKE",
      "``",
      "%",
      "Party",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "organization_name",
      "from",
      "organizations",
      "where",
      "organization_name",
      "like",
      "value"
    ],
    "question": "What are the names of organizations that contain the word \"Party\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "organizations",
      "that",
      "contain",
      "the",
      "word",
      "``",
      "Party",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"%Party%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT count(DISTINCT payment_method_code) FROM parties",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "payment_method_code",
      ")",
      "FROM",
      "parties"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "payment_method_code",
      ")",
      "from",
      "parties"
    ],
    "question": "How many distinct payment methods are used by parties?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "payment",
      "methods",
      "are",
      "used",
      "by",
      "parties",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT count(DISTINCT payment_method_code) FROM parties",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "payment_method_code",
      ")",
      "FROM",
      "parties"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "payment_method_code",
      ")",
      "from",
      "parties"
    ],
    "question": "Count the number of different payment method codes used by parties.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "payment",
      "method",
      "codes",
      "used",
      "by",
      "parties",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT state_province_county FROM addresses WHERE line_1_number_building LIKE \"%6862 Kaitlyn Knolls%\"",
    "query_toks": [
      "SELECT",
      "state_province_county",
      "FROM",
      "addresses",
      "WHERE",
      "line_1_number_building",
      "LIKE",
      "``",
      "%",
      "6862",
      "Kaitlyn",
      "Knolls",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "state_province_county",
      "from",
      "addresses",
      "where",
      "line_1_number_building",
      "like",
      "value"
    ],
    "question": "Which state can address \"6862 Kaitlyn Knolls\" possibly be in?",
    "question_toks": [
      "Which",
      "state",
      "can",
      "address",
      "``",
      "6862",
      "Kaitlyn",
      "Knolls",
      "''",
      "possibly",
      "be",
      "in",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"%6862 Kaitlyn Knolls%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT state_province_county FROM addresses WHERE line_1_number_building LIKE \"%6862 Kaitlyn Knolls%\"",
    "query_toks": [
      "SELECT",
      "state_province_county",
      "FROM",
      "addresses",
      "WHERE",
      "line_1_number_building",
      "LIKE",
      "``",
      "%",
      "6862",
      "Kaitlyn",
      "Knolls",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "state_province_county",
      "from",
      "addresses",
      "where",
      "line_1_number_building",
      "like",
      "value"
    ],
    "question": "Give the state corresponding to the line number building \"6862 Kaitlyn Knolls\".",
    "question_toks": [
      "Give",
      "the",
      "state",
      "corresponding",
      "to",
      "the",
      "line",
      "number",
      "building",
      "``",
      "6862",
      "Kaitlyn",
      "Knolls",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"%6862 Kaitlyn Knolls%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_bus",
    "query": "SELECT count(*) FROM driver",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "driver"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "driver"
    ],
    "question": "How many drivers are there?",
    "question_toks": [
      "How",
      "many",
      "drivers",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_bus",
    "query": "SELECT name ,  home_city ,  age FROM driver",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "home_city",
      ",",
      "age",
      "FROM",
      "driver"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "home_city",
      ",",
      "age",
      "from",
      "driver"
    ],
    "question": "Show the name, home city, and age for all drivers.",
    "question_toks": [
      "Show",
      "the",
      "name",
      ",",
      "home",
      "city",
      ",",
      "and",
      "age",
      "for",
      "all",
      "drivers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_bus",
    "query": "SELECT party FROM driver WHERE home_city  =  'Hartford' AND age  >  40",
    "query_toks": [
      "SELECT",
      "party",
      "FROM",
      "driver",
      "WHERE",
      "home_city",
      "=",
      "'Hartford",
      "'",
      "AND",
      "age",
      ">",
      "40"
    ],
    "query_toks_no_value": [
      "select",
      "party",
      "from",
      "driver",
      "where",
      "home_city",
      "=",
      "value",
      "and",
      "age",
      ">",
      "value"
    ],
    "question": "Show the party with drivers from Hartford and drivers older than 40.",
    "question_toks": [
      "Show",
      "the",
      "party",
      "with",
      "drivers",
      "from",
      "Hartford",
      "and",
      "drivers",
      "older",
      "than",
      "40",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Hartford\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          40.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_bus",
    "query": "SELECT name FROM driver WHERE driver_id NOT IN (SELECT driver_id FROM school_bus)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "driver",
      "WHERE",
      "driver_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "driver_id",
      "FROM",
      "school_bus",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "driver",
      "where",
      "driver_id",
      "not",
      "in",
      "(",
      "select",
      "driver_id",
      "from",
      "school_bus",
      ")"
    ],
    "question": "Show the names of the drivers without a school bus.",
    "question_toks": [
      "Show",
      "the",
      "names",
      "of",
      "the",
      "drivers",
      "without",
      "a",
      "school",
      "bus",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      12,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_bus",
    "query": "SELECT max(years_working) ,  min(years_working) ,  avg(years_working) FROM school_bus",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "years_working",
      ")",
      ",",
      "min",
      "(",
      "years_working",
      ")",
      ",",
      "avg",
      "(",
      "years_working",
      ")",
      "FROM",
      "school_bus"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "years_working",
      ")",
      ",",
      "min",
      "(",
      "years_working",
      ")",
      ",",
      "avg",
      "(",
      "years_working",
      ")",
      "from",
      "school_bus"
    ],
    "question": "What is the maximum, minimum and average years spent working on a school bus?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      ",",
      "minimum",
      "and",
      "average",
      "years",
      "spent",
      "working",
      "on",
      "a",
      "school",
      "bus",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_bus",
    "query": "SELECT school ,  TYPE FROM school WHERE school_id NOT IN (SELECT school_id FROM school_bus)",
    "query_toks": [
      "SELECT",
      "school",
      ",",
      "TYPE",
      "FROM",
      "school",
      "WHERE",
      "school_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "school_id",
      "FROM",
      "school_bus",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "school",
      ",",
      "type",
      "from",
      "school",
      "where",
      "school_id",
      "not",
      "in",
      "(",
      "select",
      "school_id",
      "from",
      "school_bus",
      ")"
    ],
    "question": "Show the school name and type for schools without a school bus.",
    "question_toks": [
      "Show",
      "the",
      "school",
      "name",
      "and",
      "type",
      "for",
      "schools",
      "without",
      "a",
      "school",
      "bus",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      11,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_bus",
    "query": "SELECT count(*) FROM driver WHERE home_city  =  'Hartford' OR age  <  40",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "driver",
      "WHERE",
      "home_city",
      "=",
      "'Hartford",
      "'",
      "OR",
      "age",
      "<",
      "40"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "driver",
      "where",
      "home_city",
      "=",
      "value",
      "or",
      "age",
      "<",
      "value"
    ],
    "question": "How many drivers are from Hartford city or younger than 40?",
    "question_toks": [
      "How",
      "many",
      "drivers",
      "are",
      "from",
      "Hartford",
      "city",
      "or",
      "younger",
      "than",
      "40",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Hartford\"",
          null
        ],
        "or",
        [
          false,
          4,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          40.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_bus",
    "query": "SELECT name FROM driver WHERE home_city  =  'Hartford' AND age  <  40",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "driver",
      "WHERE",
      "home_city",
      "=",
      "'Hartford",
      "'",
      "AND",
      "age",
      "<",
      "40"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "driver",
      "where",
      "home_city",
      "=",
      "value",
      "and",
      "age",
      "<",
      "value"
    ],
    "question": "List names for drivers from Hartford city and younger than 40.",
    "question_toks": [
      "List",
      "names",
      "for",
      "drivers",
      "from",
      "Hartford",
      "city",
      "and",
      "younger",
      "than",
      "40",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Hartford\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          40.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_company",
    "query": "SELECT count(*) FROM flight WHERE velocity  >  200",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "velocity",
      ">",
      "200"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "velocity",
      ">",
      "value"
    ],
    "question": "How many flights have a velocity larger than 200?",
    "question_toks": [
      "How",
      "many",
      "flights",
      "have",
      "a",
      "velocity",
      "larger",
      "than",
      "200",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          200.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_company",
    "query": "SELECT max(group_equity_shareholding) FROM operate_company",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "group_equity_shareholding",
      ")",
      "FROM",
      "operate_company"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "group_equity_shareholding",
      ")",
      "from",
      "operate_company"
    ],
    "question": "What is maximum group equity shareholding of the companies?",
    "question_toks": [
      "What",
      "is",
      "maximum",
      "group",
      "equity",
      "shareholding",
      "of",
      "the",
      "companies",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_company",
    "query": "SELECT avg(velocity) FROM flight WHERE pilot  =  'Thompson'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "velocity",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "pilot",
      "=",
      "'Thompson",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "velocity",
      ")",
      "from",
      "flight",
      "where",
      "pilot",
      "=",
      "value"
    ],
    "question": "What is the velocity of the pilot named 'Thompson'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "velocity",
      "of",
      "the",
      "pilot",
      "named",
      "'Thompson",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"Thompson\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_company",
    "query": "SELECT name FROM airport WHERE country != 'Iceland'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "airport",
      "WHERE",
      "country",
      "!",
      "=",
      "'Iceland",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "airport",
      "where",
      "country",
      "!",
      "=",
      "value"
    ],
    "question": "What are the names of the airports which are not in the country 'Iceland'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "airports",
      "which",
      "are",
      "not",
      "in",
      "the",
      "country",
      "'Iceland",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Iceland\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_company",
    "query": "SELECT count(*) FROM airport WHERE id NOT IN ( SELECT airport_id FROM flight WHERE pilot  =  'Thompson' );",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airport",
      "WHERE",
      "id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "airport_id",
      "FROM",
      "flight",
      "WHERE",
      "pilot",
      "=",
      "'Thompson",
      "'",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airport",
      "where",
      "id",
      "not",
      "in",
      "(",
      "select",
      "airport_id",
      "from",
      "flight",
      "where",
      "pilot",
      "=",
      "value",
      ")"
    ],
    "question": "How many airports haven't the pilot 'Thompson' driven an aircraft?",
    "question_toks": [
      "How",
      "many",
      "airports",
      "have",
      "n't",
      "the",
      "pilot",
      "'Thompson",
      "'",
      "driven",
      "an",
      "aircraft",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      19,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    16,
                    false
                  ],
                  null
                ],
                "\"Thompson\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_company",
    "query": "SELECT name FROM airport WHERE name LIKE '%international%'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "airport",
      "WHERE",
      "name",
      "LIKE",
      "'",
      "%",
      "international",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "airport",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "Which of the airport names contains the word 'international'?",
    "question_toks": [
      "Which",
      "of",
      "the",
      "airport",
      "names",
      "contains",
      "the",
      "word",
      "'international",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"%international%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Accounts",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Accounts"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "accounts"
    ],
    "question": "How many accounts do we have?",
    "question_toks": [
      "How",
      "many",
      "accounts",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Accounts",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Accounts"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "accounts"
    ],
    "question": "Count the number of accounts.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "accounts",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT account_id ,  account_details FROM Accounts",
    "query_toks": [
      "SELECT",
      "account_id",
      ",",
      "account_details",
      "FROM",
      "Accounts"
    ],
    "query_toks_no_value": [
      "select",
      "account_id",
      ",",
      "account_details",
      "from",
      "accounts"
    ],
    "question": "Show all account ids and account details.",
    "question_toks": [
      "Show",
      "all",
      "account",
      "ids",
      "and",
      "account",
      "details",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT account_id ,  account_details FROM Accounts",
    "query_toks": [
      "SELECT",
      "account_id",
      ",",
      "account_details",
      "FROM",
      "Accounts"
    ],
    "query_toks_no_value": [
      "select",
      "account_id",
      ",",
      "account_details",
      "from",
      "accounts"
    ],
    "question": "What are the ids and details of all accounts?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "and",
      "details",
      "of",
      "all",
      "accounts",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Statements",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Statements"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "statements"
    ],
    "question": "How many statements do we have?",
    "question_toks": [
      "How",
      "many",
      "statements",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Statements",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Statements"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "statements"
    ],
    "question": "Count the number of statements.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "statements",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT STATEMENT_ID ,  statement_details FROM Statements",
    "query_toks": [
      "SELECT",
      "STATEMENT_ID",
      ",",
      "statement_details",
      "FROM",
      "Statements"
    ],
    "query_toks_no_value": [
      "select",
      "statement_id",
      ",",
      "statement_details",
      "from",
      "statements"
    ],
    "question": "List all statement ids and statement details.",
    "question_toks": [
      "List",
      "all",
      "statement",
      "ids",
      "and",
      "statement",
      "details",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT STATEMENT_ID ,  statement_details FROM Statements",
    "query_toks": [
      "SELECT",
      "STATEMENT_ID",
      ",",
      "statement_details",
      "FROM",
      "Statements"
    ],
    "query_toks_no_value": [
      "select",
      "statement_id",
      ",",
      "statement_details",
      "from",
      "statements"
    ],
    "question": "What are the ids and details of all statements?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "and",
      "details",
      "of",
      "all",
      "statements",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Documents",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Documents"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "documents"
    ],
    "question": "Show the number of documents.",
    "question_toks": [
      "Show",
      "the",
      "number",
      "of",
      "documents",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Documents",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Documents"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "documents"
    ],
    "question": "Count the number of documents.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "documents",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_type_code ,  document_name ,  document_description FROM Documents WHERE document_name  =  'Noel CV' OR document_name  =  'King Book'",
    "query_toks": [
      "SELECT",
      "document_type_code",
      ",",
      "document_name",
      ",",
      "document_description",
      "FROM",
      "Documents",
      "WHERE",
      "document_name",
      "=",
      "'Noel",
      "CV",
      "'",
      "OR",
      "document_name",
      "=",
      "'King",
      "Book",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      ",",
      "document_name",
      ",",
      "document_description",
      "from",
      "documents",
      "where",
      "document_name",
      "=",
      "value",
      "or",
      "document_name",
      "=",
      "value"
    ],
    "question": "List the document type code, document name, and document description for the document with name 'Noel CV' or name 'King Book'.",
    "question_toks": [
      "List",
      "the",
      "document",
      "type",
      "code",
      ",",
      "document",
      "name",
      ",",
      "and",
      "document",
      "description",
      "for",
      "the",
      "document",
      "with",
      "name",
      "'Noel",
      "CV",
      "'",
      "or",
      "name",
      "'King",
      "Book",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Noel CV\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"King Book\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_type_code ,  document_name ,  document_description FROM Documents WHERE document_name  =  'Noel CV' OR document_name  =  'King Book'",
    "query_toks": [
      "SELECT",
      "document_type_code",
      ",",
      "document_name",
      ",",
      "document_description",
      "FROM",
      "Documents",
      "WHERE",
      "document_name",
      "=",
      "'Noel",
      "CV",
      "'",
      "OR",
      "document_name",
      "=",
      "'King",
      "Book",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      ",",
      "document_name",
      ",",
      "document_description",
      "from",
      "documents",
      "where",
      "document_name",
      "=",
      "value",
      "or",
      "document_name",
      "=",
      "value"
    ],
    "question": "What are the type come, name, and description of the document that has either the name 'Noel CV' or 'King Book'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "type",
      "come",
      ",",
      "name",
      ",",
      "and",
      "description",
      "of",
      "the",
      "document",
      "that",
      "has",
      "either",
      "the",
      "name",
      "'Noel",
      "CV",
      "'",
      "or",
      "'King",
      "Book",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Noel CV\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"King Book\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_id ,  document_name FROM Documents",
    "query_toks": [
      "SELECT",
      "document_id",
      ",",
      "document_name",
      "FROM",
      "Documents"
    ],
    "query_toks_no_value": [
      "select",
      "document_id",
      ",",
      "document_name",
      "from",
      "documents"
    ],
    "question": "Show the ids and names of all documents.",
    "question_toks": [
      "Show",
      "the",
      "ids",
      "and",
      "names",
      "of",
      "all",
      "documents",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_id ,  document_name FROM Documents",
    "query_toks": [
      "SELECT",
      "document_id",
      ",",
      "document_name",
      "FROM",
      "Documents"
    ],
    "query_toks_no_value": [
      "select",
      "document_id",
      ",",
      "document_name",
      "from",
      "documents"
    ],
    "question": "What are the ids and names for each of the documents?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "and",
      "names",
      "for",
      "each",
      "of",
      "the",
      "documents",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_name ,  document_id FROM Documents WHERE document_type_code  =  \"BK\"",
    "query_toks": [
      "SELECT",
      "document_name",
      ",",
      "document_id",
      "FROM",
      "Documents",
      "WHERE",
      "document_type_code",
      "=",
      "``",
      "BK",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "document_name",
      ",",
      "document_id",
      "from",
      "documents",
      "where",
      "document_type_code",
      "=",
      "value"
    ],
    "question": "Find names and ids of all documents with document type code BK.",
    "question_toks": [
      "Find",
      "names",
      "and",
      "ids",
      "of",
      "all",
      "documents",
      "with",
      "document",
      "type",
      "code",
      "BK",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"BK\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_name ,  document_id FROM Documents WHERE document_type_code  =  \"BK\"",
    "query_toks": [
      "SELECT",
      "document_name",
      ",",
      "document_id",
      "FROM",
      "Documents",
      "WHERE",
      "document_type_code",
      "=",
      "``",
      "BK",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "document_name",
      ",",
      "document_id",
      "from",
      "documents",
      "where",
      "document_type_code",
      "=",
      "value"
    ],
    "question": "What are the names and ids of documents that have the type code BK?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "ids",
      "of",
      "documents",
      "that",
      "have",
      "the",
      "type",
      "code",
      "BK",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"BK\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_type_code ,  document_type_name ,  document_type_description FROM Ref_document_types",
    "query_toks": [
      "SELECT",
      "document_type_code",
      ",",
      "document_type_name",
      ",",
      "document_type_description",
      "FROM",
      "Ref_document_types"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      ",",
      "document_type_name",
      ",",
      "document_type_description",
      "from",
      "ref_document_types"
    ],
    "question": "Show all document type codes, document type names, document type descriptions.",
    "question_toks": [
      "Show",
      "all",
      "document",
      "type",
      "codes",
      ",",
      "document",
      "type",
      "names",
      ",",
      "document",
      "type",
      "descriptions",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_type_code ,  document_type_name ,  document_type_description FROM Ref_document_types",
    "query_toks": [
      "SELECT",
      "document_type_code",
      ",",
      "document_type_name",
      ",",
      "document_type_description",
      "FROM",
      "Ref_document_types"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      ",",
      "document_type_name",
      ",",
      "document_type_description",
      "from",
      "ref_document_types"
    ],
    "question": "What are the codes, names, and descriptions of the different document types?",
    "question_toks": [
      "What",
      "are",
      "the",
      "codes",
      ",",
      "names",
      ",",
      "and",
      "descriptions",
      "of",
      "the",
      "different",
      "document",
      "types",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name  =  \"Film\"",
    "query_toks": [
      "SELECT",
      "document_type_description",
      "FROM",
      "Ref_document_types",
      "WHERE",
      "document_type_name",
      "=",
      "``",
      "Film",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_description",
      "from",
      "ref_document_types",
      "where",
      "document_type_name",
      "=",
      "value"
    ],
    "question": "What is the document type description for document type named Film?",
    "question_toks": [
      "What",
      "is",
      "the",
      "document",
      "type",
      "description",
      "for",
      "document",
      "type",
      "named",
      "Film",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Film\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name  =  \"Film\"",
    "query_toks": [
      "SELECT",
      "document_type_description",
      "FROM",
      "Ref_document_types",
      "WHERE",
      "document_type_name",
      "=",
      "``",
      "Film",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_description",
      "from",
      "ref_document_types",
      "where",
      "document_type_name",
      "=",
      "value"
    ],
    "question": "Return the description of the document type name 'Film'.",
    "question_toks": [
      "Return",
      "the",
      "description",
      "of",
      "the",
      "document",
      "type",
      "name",
      "'Film",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Film\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Projects",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Projects"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "projects"
    ],
    "question": "Show the number of projects.",
    "question_toks": [
      "Show",
      "the",
      "number",
      "of",
      "projects",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Projects",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Projects"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "projects"
    ],
    "question": "How many projects are there?",
    "question_toks": [
      "How",
      "many",
      "projects",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT project_id ,  project_details FROM Projects",
    "query_toks": [
      "SELECT",
      "project_id",
      ",",
      "project_details",
      "FROM",
      "Projects"
    ],
    "query_toks_no_value": [
      "select",
      "project_id",
      ",",
      "project_details",
      "from",
      "projects"
    ],
    "question": "List ids and details for all projects.",
    "question_toks": [
      "List",
      "ids",
      "and",
      "details",
      "for",
      "all",
      "projects",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT project_id ,  project_details FROM Projects",
    "query_toks": [
      "SELECT",
      "project_id",
      ",",
      "project_details",
      "FROM",
      "Projects"
    ],
    "query_toks_no_value": [
      "select",
      "project_id",
      ",",
      "project_details",
      "from",
      "projects"
    ],
    "question": "What are the ids and details for each project?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "and",
      "details",
      "for",
      "each",
      "project",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Ref_budget_codes",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Ref_budget_codes"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ref_budget_codes"
    ],
    "question": "How many budget types do we have?",
    "question_toks": [
      "How",
      "many",
      "budget",
      "types",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Ref_budget_codes",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Ref_budget_codes"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ref_budget_codes"
    ],
    "question": "Count the number of budget codes.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "budget",
      "codes",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT budget_type_code ,  budget_type_description FROM Ref_budget_codes",
    "query_toks": [
      "SELECT",
      "budget_type_code",
      ",",
      "budget_type_description",
      "FROM",
      "Ref_budget_codes"
    ],
    "query_toks_no_value": [
      "select",
      "budget_type_code",
      ",",
      "budget_type_description",
      "from",
      "ref_budget_codes"
    ],
    "question": "List all budget type codes and descriptions.",
    "question_toks": [
      "List",
      "all",
      "budget",
      "type",
      "codes",
      "and",
      "descriptions",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT budget_type_code ,  budget_type_description FROM Ref_budget_codes",
    "query_toks": [
      "SELECT",
      "budget_type_code",
      ",",
      "budget_type_description",
      "FROM",
      "Ref_budget_codes"
    ],
    "query_toks_no_value": [
      "select",
      "budget_type_code",
      ",",
      "budget_type_description",
      "from",
      "ref_budget_codes"
    ],
    "question": "What are the type codes and descriptions of each budget type?",
    "question_toks": [
      "What",
      "are",
      "the",
      "type",
      "codes",
      "and",
      "descriptions",
      "of",
      "each",
      "budget",
      "type",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code  =  \"ORG\"",
    "query_toks": [
      "SELECT",
      "budget_type_description",
      "FROM",
      "Ref_budget_codes",
      "WHERE",
      "budget_type_code",
      "=",
      "``",
      "ORG",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "budget_type_description",
      "from",
      "ref_budget_codes",
      "where",
      "budget_type_code",
      "=",
      "value"
    ],
    "question": "What is the description for the budget type with code ORG?",
    "question_toks": [
      "What",
      "is",
      "the",
      "description",
      "for",
      "the",
      "budget",
      "type",
      "with",
      "code",
      "ORG",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"ORG\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code  =  \"ORG\"",
    "query_toks": [
      "SELECT",
      "budget_type_description",
      "FROM",
      "Ref_budget_codes",
      "WHERE",
      "budget_type_code",
      "=",
      "``",
      "ORG",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "budget_type_description",
      "from",
      "ref_budget_codes",
      "where",
      "budget_type_code",
      "=",
      "value"
    ],
    "question": "Return the description of the budget type that has the code ORG.",
    "question_toks": [
      "Return",
      "the",
      "description",
      "of",
      "the",
      "budget",
      "type",
      "that",
      "has",
      "the",
      "code",
      "ORG",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"ORG\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Documents_with_expenses",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Documents_with_expenses"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "documents_with_expenses"
    ],
    "question": "How many documents have expenses?",
    "question_toks": [
      "How",
      "many",
      "documents",
      "have",
      "expenses",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Documents_with_expenses",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Documents_with_expenses"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "documents_with_expenses"
    ],
    "question": "Count the number of documents with expenses.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "documents",
      "with",
      "expenses",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code  =  'SF'",
    "query_toks": [
      "SELECT",
      "document_id",
      "FROM",
      "Documents_with_expenses",
      "WHERE",
      "budget_type_code",
      "=",
      "'SF",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "document_id",
      "from",
      "documents_with_expenses",
      "where",
      "budget_type_code",
      "=",
      "value"
    ],
    "question": "What are the document ids for the budget type code 'SF'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "document",
      "ids",
      "for",
      "the",
      "budget",
      "type",
      "code",
      "'SF",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"SF\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code  =  'SF'",
    "query_toks": [
      "SELECT",
      "document_id",
      "FROM",
      "Documents_with_expenses",
      "WHERE",
      "budget_type_code",
      "=",
      "'SF",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "document_id",
      "from",
      "documents_with_expenses",
      "where",
      "budget_type_code",
      "=",
      "value"
    ],
    "question": "Give the ids of documents with expenses that have the budget code 'SF'.",
    "question_toks": [
      "Give",
      "the",
      "ids",
      "of",
      "documents",
      "with",
      "expenses",
      "that",
      "have",
      "the",
      "budget",
      "code",
      "'SF",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"SF\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Documents",
      "WHERE",
      "document_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "document_id",
      "FROM",
      "Documents_with_expenses",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "documents",
      "where",
      "document_id",
      "not",
      "in",
      "(",
      "select",
      "document_id",
      "from",
      "documents_with_expenses",
      ")"
    ],
    "question": "How many documents do not have any expense?",
    "question_toks": [
      "How",
      "many",
      "documents",
      "do",
      "not",
      "have",
      "any",
      "expense",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  5
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      17,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Documents",
      "WHERE",
      "document_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "document_id",
      "FROM",
      "Documents_with_expenses",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "documents",
      "where",
      "document_id",
      "not",
      "in",
      "(",
      "select",
      "document_id",
      "from",
      "documents_with_expenses",
      ")"
    ],
    "question": "Count the number of documents that do not have expenses.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "documents",
      "that",
      "do",
      "not",
      "have",
      "expenses",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  5
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      17,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT count(*) FROM scientists",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "scientists"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "scientists"
    ],
    "question": "Find the total number of scientists.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "number",
      "of",
      "scientists",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT count(*) FROM scientists",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "scientists"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "scientists"
    ],
    "question": "How many scientists are there?",
    "question_toks": [
      "How",
      "many",
      "scientists",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT sum(hours) FROM projects",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "hours",
      ")",
      "FROM",
      "projects"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "hours",
      ")",
      "from",
      "projects"
    ],
    "question": "Find the total hours of all projects.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "hours",
      "of",
      "all",
      "projects",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT sum(hours) FROM projects",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "hours",
      ")",
      "FROM",
      "projects"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "hours",
      ")",
      "from",
      "projects"
    ],
    "question": "What is the total number of hours for all projects?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "hours",
      "for",
      "all",
      "projects",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT count(DISTINCT scientist) FROM assignedto",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "scientist",
      ")",
      "FROM",
      "assignedto"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "scientist",
      ")",
      "from",
      "assignedto"
    ],
    "question": "How many different scientists are assigned to any project?",
    "question_toks": [
      "How",
      "many",
      "different",
      "scientists",
      "are",
      "assigned",
      "to",
      "any",
      "project",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT count(DISTINCT scientist) FROM assignedto",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "scientist",
      ")",
      "FROM",
      "assignedto"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "scientist",
      ")",
      "from",
      "assignedto"
    ],
    "question": "Count the number of different scientists assigned to any project.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "scientists",
      "assigned",
      "to",
      "any",
      "project",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT count(DISTINCT name) FROM projects",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "name",
      ")",
      "FROM",
      "projects"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "name",
      ")",
      "from",
      "projects"
    ],
    "question": "Find the number of distinct projects.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "distinct",
      "projects",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                4,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT count(DISTINCT name) FROM projects",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "name",
      ")",
      "FROM",
      "projects"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "name",
      ")",
      "from",
      "projects"
    ],
    "question": "How many different projects are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "projects",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                4,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT avg(hours) FROM projects",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "hours",
      ")",
      "FROM",
      "projects"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "hours",
      ")",
      "from",
      "projects"
    ],
    "question": "Find the average hours of all projects.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "hours",
      "of",
      "all",
      "projects",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT avg(hours) FROM projects",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "hours",
      ")",
      "FROM",
      "projects"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "hours",
      ")",
      "from",
      "projects"
    ],
    "question": "What is the average hours across all projects?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "hours",
      "across",
      "all",
      "projects",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT name FROM projects WHERE hours  >  (SELECT avg(hours) FROM projects)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "projects",
      "WHERE",
      "hours",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "hours",
      ")",
      "FROM",
      "projects",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "projects",
      "where",
      "hours",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "hours",
      ")",
      "from",
      "projects",
      ")"
    ],
    "question": "List the name of all projects that are operated longer than the average working hours of all projects.",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "all",
      "projects",
      "that",
      "are",
      "operated",
      "longer",
      "than",
      "the",
      "average",
      "working",
      "hours",
      "of",
      "all",
      "projects",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT name FROM projects WHERE hours  >  (SELECT avg(hours) FROM projects)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "projects",
      "WHERE",
      "hours",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "hours",
      ")",
      "FROM",
      "projects",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "projects",
      "where",
      "hours",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "hours",
      ")",
      "from",
      "projects",
      ")"
    ],
    "question": "What are the names of projects that have taken longer than the average number of hours for all projects?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "projects",
      "that",
      "have",
      "taken",
      "longer",
      "than",
      "the",
      "average",
      "number",
      "of",
      "hours",
      "for",
      "all",
      "projects",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT name FROM projects WHERE hours BETWEEN 100 AND 300",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "projects",
      "WHERE",
      "hours",
      "BETWEEN",
      "100",
      "AND",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "projects",
      "where",
      "hours",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "Find the name of projects that require between 100 and 300 hours of work.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "projects",
      "that",
      "require",
      "between",
      "100",
      "and",
      "300",
      "hours",
      "of",
      "work",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          100.0,
          300.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT name FROM projects WHERE hours BETWEEN 100 AND 300",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "projects",
      "WHERE",
      "hours",
      "BETWEEN",
      "100",
      "AND",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "projects",
      "where",
      "hours",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What are the names of projects that require between 100 and 300 hours?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "projects",
      "that",
      "require",
      "between",
      "100",
      "and",
      "300",
      "hours",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          100.0,
          300.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT Name FROM Projects WHERE Code NOT IN (SELECT Project FROM AssignedTo)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "Projects",
      "WHERE",
      "Code",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Project",
      "FROM",
      "AssignedTo",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "projects",
      "where",
      "code",
      "not",
      "in",
      "(",
      "select",
      "project",
      "from",
      "assignedto",
      ")"
    ],
    "question": "Select the project names which are not assigned yet.",
    "question_toks": [
      "Select",
      "the",
      "project",
      "names",
      "which",
      "are",
      "not",
      "assigned",
      "yet",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      7,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT Name FROM Projects WHERE Code NOT IN (SELECT Project FROM AssignedTo)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "Projects",
      "WHERE",
      "Code",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Project",
      "FROM",
      "AssignedTo",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "projects",
      "where",
      "code",
      "not",
      "in",
      "(",
      "select",
      "project",
      "from",
      "assignedto",
      ")"
    ],
    "question": "What are the names of projects that have not been assigned?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "projects",
      "that",
      "have",
      "not",
      "been",
      "assigned",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      7,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT Name FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "scientists",
      "WHERE",
      "ssn",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "scientist",
      "FROM",
      "AssignedTo",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "scientists",
      "where",
      "ssn",
      "not",
      "in",
      "(",
      "select",
      "scientist",
      "from",
      "assignedto",
      ")"
    ],
    "question": "Find the name of scientists who are not assigned to any project.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "scientists",
      "who",
      "are",
      "not",
      "assigned",
      "to",
      "any",
      "project",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      6,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT Name FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "scientists",
      "WHERE",
      "ssn",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "scientist",
      "FROM",
      "AssignedTo",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "scientists",
      "where",
      "ssn",
      "not",
      "in",
      "(",
      "select",
      "scientist",
      "from",
      "assignedto",
      ")"
    ],
    "question": "What are the names of scientists who have not been assigned a project?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "scientists",
      "who",
      "have",
      "not",
      "been",
      "assigned",
      "a",
      "project",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      6,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT count(*) FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "scientists",
      "WHERE",
      "ssn",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "scientist",
      "FROM",
      "AssignedTo",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "scientists",
      "where",
      "ssn",
      "not",
      "in",
      "(",
      "select",
      "scientist",
      "from",
      "assignedto",
      ")"
    ],
    "question": "Find the number of scientists who are not assigned to any project.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "scientists",
      "who",
      "are",
      "not",
      "assigned",
      "to",
      "any",
      "project",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      6,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT count(*) FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "scientists",
      "WHERE",
      "ssn",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "scientist",
      "FROM",
      "AssignedTo",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "scientists",
      "where",
      "ssn",
      "not",
      "in",
      "(",
      "select",
      "scientist",
      "from",
      "assignedto",
      ")"
    ],
    "question": "How many scientists do not have any projects assigned to them?",
    "question_toks": [
      "How",
      "many",
      "scientists",
      "do",
      "not",
      "have",
      "any",
      "projects",
      "assigned",
      "to",
      "them",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      6,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Name FROM WINE WHERE YEAR  =  \"2008\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "WINE",
      "WHERE",
      "YEAR",
      "=",
      "``",
      "2008",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wine",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "Find the names of all wines produced in 2008.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "all",
      "wines",
      "produced",
      "in",
      "2008",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"2008\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Name FROM WINE WHERE YEAR  =  \"2008\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "WINE",
      "WHERE",
      "YEAR",
      "=",
      "``",
      "2008",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wine",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "What are the names of all wines produced in 2008?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "wines",
      "produced",
      "in",
      "2008",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"2008\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Grape ,  Appelation FROM WINE",
    "query_toks": [
      "SELECT",
      "Grape",
      ",",
      "Appelation",
      "FROM",
      "WINE"
    ],
    "query_toks_no_value": [
      "select",
      "grape",
      ",",
      "appelation",
      "from",
      "wine"
    ],
    "question": "List the grapes and appelations of all wines.",
    "question_toks": [
      "List",
      "the",
      "grapes",
      "and",
      "appelations",
      "of",
      "all",
      "wines",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Grape ,  Appelation FROM WINE",
    "query_toks": [
      "SELECT",
      "Grape",
      ",",
      "Appelation",
      "FROM",
      "WINE"
    ],
    "query_toks_no_value": [
      "select",
      "grape",
      ",",
      "appelation",
      "from",
      "wine"
    ],
    "question": "What are the grapes and appelations of each wine?",
    "question_toks": [
      "What",
      "are",
      "the",
      "grapes",
      "and",
      "appelations",
      "of",
      "each",
      "wine",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Name ,  Score FROM WINE",
    "query_toks": [
      "SELECT",
      "Name",
      ",",
      "Score",
      "FROM",
      "WINE"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "score",
      "from",
      "wine"
    ],
    "question": "List the names and scores of all wines.",
    "question_toks": [
      "List",
      "the",
      "names",
      "and",
      "scores",
      "of",
      "all",
      "wines",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Name ,  Score FROM WINE",
    "query_toks": [
      "SELECT",
      "Name",
      ",",
      "Score",
      "FROM",
      "WINE"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "score",
      "from",
      "wine"
    ],
    "question": "What are the names and scores of all wines?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "scores",
      "of",
      "all",
      "wines",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Area ,  County FROM APPELLATIONS",
    "query_toks": [
      "SELECT",
      "Area",
      ",",
      "County",
      "FROM",
      "APPELLATIONS"
    ],
    "query_toks_no_value": [
      "select",
      "area",
      ",",
      "county",
      "from",
      "appellations"
    ],
    "question": "List the area and county of all appelations.",
    "question_toks": [
      "List",
      "the",
      "area",
      "and",
      "county",
      "of",
      "all",
      "appelations",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Area ,  County FROM APPELLATIONS",
    "query_toks": [
      "SELECT",
      "Area",
      ",",
      "County",
      "FROM",
      "APPELLATIONS"
    ],
    "query_toks_no_value": [
      "select",
      "area",
      ",",
      "county",
      "from",
      "appellations"
    ],
    "question": "What are the areas and counties for all appelations?",
    "question_toks": [
      "What",
      "are",
      "the",
      "areas",
      "and",
      "counties",
      "for",
      "all",
      "appelations",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Price FROM WINE WHERE YEAR  <  2010",
    "query_toks": [
      "SELECT",
      "Price",
      "FROM",
      "WINE",
      "WHERE",
      "YEAR",
      "<",
      "2010"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "wine",
      "where",
      "year",
      "<",
      "value"
    ],
    "question": "What are the prices of wines produced before the year of 2010?",
    "question_toks": [
      "What",
      "are",
      "the",
      "prices",
      "of",
      "wines",
      "produced",
      "before",
      "the",
      "year",
      "of",
      "2010",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Price FROM WINE WHERE YEAR  <  2010",
    "query_toks": [
      "SELECT",
      "Price",
      "FROM",
      "WINE",
      "WHERE",
      "YEAR",
      "<",
      "2010"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "wine",
      "where",
      "year",
      "<",
      "value"
    ],
    "question": "Return the prices of wines produced before 2010.",
    "question_toks": [
      "Return",
      "the",
      "prices",
      "of",
      "wines",
      "produced",
      "before",
      "2010",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Name FROM WINE WHERE score  >  90",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "WINE",
      "WHERE",
      "score",
      ">",
      "90"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wine",
      "where",
      "score",
      ">",
      "value"
    ],
    "question": "List the names of all distinct wines that have scores higher than 90.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "all",
      "distinct",
      "wines",
      "that",
      "have",
      "scores",
      "higher",
      "than",
      "90",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          90.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Name FROM WINE WHERE score  >  90",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "WINE",
      "WHERE",
      "score",
      ">",
      "90"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wine",
      "where",
      "score",
      ">",
      "value"
    ],
    "question": "What are the names of wines with scores higher than 90?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "wines",
      "with",
      "scores",
      "higher",
      "than",
      "90",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          90.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT count(*) FROM WINE WHERE Winery  =  \"Robert Biale\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "WINE",
      "WHERE",
      "Winery",
      "=",
      "``",
      "Robert",
      "Biale",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "wine",
      "where",
      "winery",
      "=",
      "value"
    ],
    "question": "How many wines are produced at Robert Biale winery?",
    "question_toks": [
      "How",
      "many",
      "wines",
      "are",
      "produced",
      "at",
      "Robert",
      "Biale",
      "winery",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Robert Biale\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT count(*) FROM WINE WHERE Winery  =  \"Robert Biale\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "WINE",
      "WHERE",
      "Winery",
      "=",
      "``",
      "Robert",
      "Biale",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "wine",
      "where",
      "winery",
      "=",
      "value"
    ],
    "question": "Count the number of wines produced at Robert Biale winery.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "wines",
      "produced",
      "at",
      "Robert",
      "Biale",
      "winery",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Robert Biale\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT count(*) FROM APPELLATIONS WHERE County  =  \"Napa\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "APPELLATIONS",
      "WHERE",
      "County",
      "=",
      "``",
      "Napa",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "appellations",
      "where",
      "county",
      "=",
      "value"
    ],
    "question": "How many appelations are in Napa Country?",
    "question_toks": [
      "How",
      "many",
      "appelations",
      "are",
      "in",
      "Napa",
      "Country",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Napa\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT count(*) FROM APPELLATIONS WHERE County  =  \"Napa\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "APPELLATIONS",
      "WHERE",
      "County",
      "=",
      "``",
      "Napa",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "appellations",
      "where",
      "county",
      "=",
      "value"
    ],
    "question": "Count the number of appelations in Napa County.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "appelations",
      "in",
      "Napa",
      "County",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Napa\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT AVG(Price) ,  AVG(Cases) FROM WINE WHERE YEAR  =  2009 AND Grape  =  \"Zinfandel\"",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "Price",
      ")",
      ",",
      "AVG",
      "(",
      "Cases",
      ")",
      "FROM",
      "WINE",
      "WHERE",
      "YEAR",
      "=",
      "2009",
      "AND",
      "Grape",
      "=",
      "``",
      "Zinfandel",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "cases",
      ")",
      "from",
      "wine",
      "where",
      "year",
      "=",
      "value",
      "and",
      "grape",
      "=",
      "value"
    ],
    "question": "What are the average prices and cases of wines produced in the year of 2009 and made of Zinfandel grape?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "prices",
      "and",
      "cases",
      "of",
      "wines",
      "produced",
      "in",
      "the",
      "year",
      "of",
      "2009",
      "and",
      "made",
      "of",
      "Zinfandel",
      "grape",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          2009.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Zinfandel\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT AVG(Price) ,  AVG(Cases) FROM WINE WHERE YEAR  =  2009 AND Grape  =  \"Zinfandel\"",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "Price",
      ")",
      ",",
      "AVG",
      "(",
      "Cases",
      ")",
      "FROM",
      "WINE",
      "WHERE",
      "YEAR",
      "=",
      "2009",
      "AND",
      "Grape",
      "=",
      "``",
      "Zinfandel",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "cases",
      ")",
      "from",
      "wine",
      "where",
      "year",
      "=",
      "value",
      "and",
      "grape",
      "=",
      "value"
    ],
    "question": "Give the average price and case of wines made from Zinfandel grapes in the year 2009.",
    "question_toks": [
      "Give",
      "the",
      "average",
      "price",
      "and",
      "case",
      "of",
      "wines",
      "made",
      "from",
      "Zinfandel",
      "grapes",
      "in",
      "the",
      "year",
      "2009",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          2009.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Zinfandel\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT max(Price) ,  max(Score) FROM WINE WHERE Appelation  =  \"St. Helena\"",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Price",
      ")",
      ",",
      "max",
      "(",
      "Score",
      ")",
      "FROM",
      "WINE",
      "WHERE",
      "Appelation",
      "=",
      "``",
      "St.",
      "Helena",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "score",
      ")",
      "from",
      "wine",
      "where",
      "appelation",
      "=",
      "value"
    ],
    "question": "What are the maximum price and score of wines produced by St. Helena appelation?",
    "question_toks": [
      "What",
      "are",
      "the",
      "maximum",
      "price",
      "and",
      "score",
      "of",
      "wines",
      "produced",
      "by",
      "St.",
      "Helena",
      "appelation",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"St. Helena\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT max(Price) ,  max(Score) FROM WINE WHERE Appelation  =  \"St. Helena\"",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Price",
      ")",
      ",",
      "max",
      "(",
      "Score",
      ")",
      "FROM",
      "WINE",
      "WHERE",
      "Appelation",
      "=",
      "``",
      "St.",
      "Helena",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "score",
      ")",
      "from",
      "wine",
      "where",
      "appelation",
      "=",
      "value"
    ],
    "question": "Give the maximum price and score for wines produced in the appelation St. Helena.",
    "question_toks": [
      "Give",
      "the",
      "maximum",
      "price",
      "and",
      "score",
      "for",
      "wines",
      "produced",
      "in",
      "the",
      "appelation",
      "St.",
      "Helena",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"St. Helena\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Name FROM WINE WHERE YEAR  <  (SELECT min(YEAR) FROM WINE WHERE Winery  =  \"Brander\")",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "WINE",
      "WHERE",
      "YEAR",
      "<",
      "(",
      "SELECT",
      "min",
      "(",
      "YEAR",
      ")",
      "FROM",
      "WINE",
      "WHERE",
      "Winery",
      "=",
      "``",
      "Brander",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wine",
      "where",
      "year",
      "<",
      "(",
      "select",
      "min",
      "(",
      "year",
      ")",
      "from",
      "wine",
      "where",
      "winery",
      "=",
      "value",
      ")"
    ],
    "question": "What are the names of wines whose production year are before the year of all wines by Brander winery?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "wines",
      "whose",
      "production",
      "year",
      "are",
      "before",
      "the",
      "year",
      "of",
      "all",
      "wines",
      "by",
      "Brander",
      "winery",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      16,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"Brander\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Name FROM WINE WHERE YEAR  <  (SELECT min(YEAR) FROM WINE WHERE Winery  =  \"Brander\")",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "WINE",
      "WHERE",
      "YEAR",
      "<",
      "(",
      "SELECT",
      "min",
      "(",
      "YEAR",
      ")",
      "FROM",
      "WINE",
      "WHERE",
      "Winery",
      "=",
      "``",
      "Brander",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wine",
      "where",
      "year",
      "<",
      "(",
      "select",
      "min",
      "(",
      "year",
      ")",
      "from",
      "wine",
      "where",
      "winery",
      "=",
      "value",
      ")"
    ],
    "question": "What are the names of wines produced before any wine from the Brander winery?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "wines",
      "produced",
      "before",
      "any",
      "wine",
      "from",
      "the",
      "Brander",
      "winery",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      16,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"Brander\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Name FROM WINE WHERE Price  >  (SELECT max(Price) FROM WINE WHERE YEAR  =  2006)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "WINE",
      "WHERE",
      "Price",
      ">",
      "(",
      "SELECT",
      "max",
      "(",
      "Price",
      ")",
      "FROM",
      "WINE",
      "WHERE",
      "YEAR",
      "=",
      "2006",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wine",
      "where",
      "price",
      ">",
      "(",
      "select",
      "max",
      "(",
      "price",
      ")",
      "from",
      "wine",
      "where",
      "year",
      "=",
      "value",
      ")"
    ],
    "question": "What are the names of wines that are more expensive then all wines made in the year 2006?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "wines",
      "that",
      "are",
      "more",
      "expensive",
      "then",
      "all",
      "wines",
      "made",
      "in",
      "the",
      "year",
      "2006",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      17,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    16,
                    false
                  ],
                  null
                ],
                2006.0,
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Name FROM WINE WHERE Price  >  (SELECT max(Price) FROM WINE WHERE YEAR  =  2006)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "WINE",
      "WHERE",
      "Price",
      ">",
      "(",
      "SELECT",
      "max",
      "(",
      "Price",
      ")",
      "FROM",
      "WINE",
      "WHERE",
      "YEAR",
      "=",
      "2006",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wine",
      "where",
      "price",
      ">",
      "(",
      "select",
      "max",
      "(",
      "price",
      ")",
      "from",
      "wine",
      "where",
      "year",
      "=",
      "value",
      ")"
    ],
    "question": "Give the names of wines with prices above any wine produced in 2006.",
    "question_toks": [
      "Give",
      "the",
      "names",
      "of",
      "wines",
      "with",
      "prices",
      "above",
      "any",
      "wine",
      "produced",
      "in",
      "2006",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      17,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    16,
                    false
                  ],
                  null
                ],
                2006.0,
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT avg(price) FROM wine WHERE Appelation NOT IN (SELECT T1.Appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  'Sonoma')",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "wine",
      "WHERE",
      "Appelation",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "T1.Appelation",
      "FROM",
      "APPELLATIONS",
      "AS",
      "T1",
      "JOIN",
      "WINE",
      "AS",
      "T2",
      "ON",
      "T1.Appelation",
      "=",
      "T2.Appelation",
      "WHERE",
      "T1.County",
      "=",
      "'Sonoma",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "wine",
      "where",
      "appelation",
      "not",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "appelation",
      "from",
      "appellations",
      "as",
      "t1",
      "join",
      "wine",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "appelation",
      "=",
      "t2",
      ".",
      "appelation",
      "where",
      "t1",
      ".",
      "county",
      "=",
      "value",
      ")"
    ],
    "question": "Find the average price of wines that are not produced from Sonoma county.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "price",
      "of",
      "wines",
      "that",
      "are",
      "not",
      "produced",
      "from",
      "Sonoma",
      "county",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    13,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"Sonoma\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT avg(price) FROM wine WHERE Appelation NOT IN (SELECT T1.Appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  'Sonoma')",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "wine",
      "WHERE",
      "Appelation",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "T1.Appelation",
      "FROM",
      "APPELLATIONS",
      "AS",
      "T1",
      "JOIN",
      "WINE",
      "AS",
      "T2",
      "ON",
      "T1.Appelation",
      "=",
      "T2.Appelation",
      "WHERE",
      "T1.County",
      "=",
      "'Sonoma",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "wine",
      "where",
      "appelation",
      "not",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "appelation",
      "from",
      "appellations",
      "as",
      "t1",
      "join",
      "wine",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "appelation",
      "=",
      "t2",
      ".",
      "appelation",
      "where",
      "t1",
      ".",
      "county",
      "=",
      "value",
      ")"
    ],
    "question": "What is the average price for wines not produced in Sonoma county?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "price",
      "for",
      "wines",
      "not",
      "produced",
      "in",
      "Sonoma",
      "county",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    13,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"Sonoma\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT count(*) FROM station",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "station"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "station"
    ],
    "question": "How many train stations are there?",
    "question_toks": [
      "How",
      "many",
      "train",
      "stations",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT name ,  LOCATION ,  number_of_platforms FROM station",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "LOCATION",
      ",",
      "number_of_platforms",
      "FROM",
      "station"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "location",
      ",",
      "number_of_platforms",
      "from",
      "station"
    ],
    "question": "Show the name, location, and number of platforms for all stations.",
    "question_toks": [
      "Show",
      "the",
      "name",
      ",",
      "location",
      ",",
      "and",
      "number",
      "of",
      "platforms",
      "for",
      "all",
      "stations",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT name ,  total_passengers FROM station WHERE LOCATION != 'London'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "total_passengers",
      "FROM",
      "station",
      "WHERE",
      "LOCATION",
      "!",
      "=",
      "'London",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "total_passengers",
      "from",
      "station",
      "where",
      "location",
      "!",
      "=",
      "value"
    ],
    "question": "Show the names and total passengers for all train stations not in London.",
    "question_toks": [
      "Show",
      "the",
      "names",
      "and",
      "total",
      "passengers",
      "for",
      "all",
      "train",
      "stations",
      "not",
      "in",
      "London",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"London\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT avg(total_passengers) ,  max(total_passengers) FROM station WHERE LOCATION  =  'London' OR LOCATION  =  'Glasgow'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "total_passengers",
      ")",
      ",",
      "max",
      "(",
      "total_passengers",
      ")",
      "FROM",
      "station",
      "WHERE",
      "LOCATION",
      "=",
      "'London",
      "'",
      "OR",
      "LOCATION",
      "=",
      "'Glasgow",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "total_passengers",
      ")",
      ",",
      "max",
      "(",
      "total_passengers",
      ")",
      "from",
      "station",
      "where",
      "location",
      "=",
      "value",
      "or",
      "location",
      "=",
      "value"
    ],
    "question": "What is the average and maximum number of total passengers for train stations in London or Glasgow?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "and",
      "maximum",
      "number",
      "of",
      "total",
      "passengers",
      "for",
      "train",
      "stations",
      "in",
      "London",
      "or",
      "Glasgow",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"London\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Glasgow\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT name ,  TIME ,  service FROM train",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "TIME",
      ",",
      "service",
      "FROM",
      "train"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "time",
      ",",
      "service",
      "from",
      "train"
    ],
    "question": "Show the name, time, and service for all trains.",
    "question_toks": [
      "Show",
      "the",
      "name",
      ",",
      "time",
      ",",
      "and",
      "service",
      "for",
      "all",
      "trains",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT count(*) FROM train",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "train"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "train"
    ],
    "question": "Show the number of trains",
    "question_toks": [
      "Show",
      "the",
      "number",
      "of",
      "trains"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT name FROM station WHERE station_id NOT IN (SELECT station_id FROM train_station)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "station",
      "WHERE",
      "station_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "station_id",
      "FROM",
      "train_station",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "station",
      "where",
      "station_id",
      "not",
      "in",
      "(",
      "select",
      "station_id",
      "from",
      "train_station",
      ")"
    ],
    "question": "Show station names without any trains.",
    "question_toks": [
      "Show",
      "station",
      "names",
      "without",
      "any",
      "trains",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      14,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT vehicle_id FROM Vehicles;",
    "query_toks": [
      "SELECT",
      "vehicle_id",
      "FROM",
      "Vehicles",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "vehicle_id",
      "from",
      "vehicles"
    ],
    "question": "List all vehicle id",
    "question_toks": [
      "List",
      "all",
      "vehicle",
      "id"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT vehicle_id FROM Vehicles;",
    "query_toks": [
      "SELECT",
      "vehicle_id",
      "FROM",
      "Vehicles",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "vehicle_id",
      "from",
      "vehicles"
    ],
    "question": "What are the ids of all vehicles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "all",
      "vehicles",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Vehicles;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Vehicles",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "vehicles"
    ],
    "question": "How many vehicle in total?",
    "question_toks": [
      "How",
      "many",
      "vehicle",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Vehicles;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Vehicles",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "vehicles"
    ],
    "question": "How many vehicles exist?",
    "question_toks": [
      "How",
      "many",
      "vehicles",
      "exist",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1;",
    "query_toks": [
      "SELECT",
      "vehicle_details",
      "FROM",
      "Vehicles",
      "WHERE",
      "vehicle_id",
      "=",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "vehicle_details",
      "from",
      "vehicles",
      "where",
      "vehicle_id",
      "=",
      "value"
    ],
    "question": "Show the detail of vehicle with id 1.",
    "question_toks": [
      "Show",
      "the",
      "detail",
      "of",
      "vehicle",
      "with",
      "id",
      "1",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1;",
    "query_toks": [
      "SELECT",
      "vehicle_details",
      "FROM",
      "Vehicles",
      "WHERE",
      "vehicle_id",
      "=",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "vehicle_details",
      "from",
      "vehicles",
      "where",
      "vehicle_id",
      "=",
      "value"
    ],
    "question": "What are the details of the car with id 1?",
    "question_toks": [
      "What",
      "are",
      "the",
      "details",
      "of",
      "the",
      "car",
      "with",
      "id",
      "1",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT first_name ,  middle_name ,  last_name FROM Staff;",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "middle_name",
      ",",
      "last_name",
      "FROM",
      "Staff",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "middle_name",
      ",",
      "last_name",
      "from",
      "staff"
    ],
    "question": "List the first name middle name and last name of all staff.",
    "question_toks": [
      "List",
      "the",
      "first",
      "name",
      "middle",
      "name",
      "and",
      "last",
      "name",
      "of",
      "all",
      "staff",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT first_name ,  middle_name ,  last_name FROM Staff;",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "middle_name",
      ",",
      "last_name",
      "FROM",
      "Staff",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "middle_name",
      ",",
      "last_name",
      "from",
      "staff"
    ],
    "question": "What are the first, middle, and last names of all staff?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      ",",
      "middle",
      ",",
      "and",
      "last",
      "names",
      "of",
      "all",
      "staff",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_of_birth FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";",
    "query_toks": [
      "SELECT",
      "date_of_birth",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Janessa",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Sawayn",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_birth",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is the birthday of the staff member with first name as Janessa and last name as Sawayn?",
    "question_toks": [
      "What",
      "is",
      "the",
      "birthday",
      "of",
      "the",
      "staff",
      "member",
      "with",
      "first",
      "name",
      "as",
      "Janessa",
      "and",
      "last",
      "name",
      "as",
      "Sawayn",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Janessa\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Sawayn\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_of_birth FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";",
    "query_toks": [
      "SELECT",
      "date_of_birth",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Janessa",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Sawayn",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_birth",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is the date of birth for the staff member named Janessa Sawayn?",
    "question_toks": [
      "What",
      "is",
      "the",
      "date",
      "of",
      "birth",
      "for",
      "the",
      "staff",
      "member",
      "named",
      "Janessa",
      "Sawayn",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Janessa\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Sawayn\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_joined_staff FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";",
    "query_toks": [
      "SELECT",
      "date_joined_staff",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Janessa",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Sawayn",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "date_joined_staff",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "When did the staff member with first name as Janessa and last name as Sawayn join the company?",
    "question_toks": [
      "When",
      "did",
      "the",
      "staff",
      "member",
      "with",
      "first",
      "name",
      "as",
      "Janessa",
      "and",
      "last",
      "name",
      "as",
      "Sawayn",
      "join",
      "the",
      "company",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Janessa\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Sawayn\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_joined_staff FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";",
    "query_toks": [
      "SELECT",
      "date_joined_staff",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Janessa",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Sawayn",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "date_joined_staff",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "When did the staff member named Janessa Sawayn join the company?",
    "question_toks": [
      "When",
      "did",
      "the",
      "staff",
      "member",
      "named",
      "Janessa",
      "Sawayn",
      "join",
      "the",
      "company",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Janessa\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Sawayn\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_left_staff FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";",
    "query_toks": [
      "SELECT",
      "date_left_staff",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Janessa",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Sawayn",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "date_left_staff",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "When did the staff member with first name as Janessa and last name as Sawayn leave the company?",
    "question_toks": [
      "When",
      "did",
      "the",
      "staff",
      "member",
      "with",
      "first",
      "name",
      "as",
      "Janessa",
      "and",
      "last",
      "name",
      "as",
      "Sawayn",
      "leave",
      "the",
      "company",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Janessa\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Sawayn\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_left_staff FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";",
    "query_toks": [
      "SELECT",
      "date_left_staff",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Janessa",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Sawayn",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "date_left_staff",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "When did the staff member Janessa Sawayn leave the company?",
    "question_toks": [
      "When",
      "did",
      "the",
      "staff",
      "member",
      "Janessa",
      "Sawayn",
      "leave",
      "the",
      "company",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Janessa\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Sawayn\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Staff WHERE first_name = \"Ludie\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Ludie",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "value"
    ],
    "question": "How many staff have the first name Ludie?",
    "question_toks": [
      "How",
      "many",
      "staff",
      "have",
      "the",
      "first",
      "name",
      "Ludie",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Ludie\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Staff WHERE first_name = \"Ludie\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Ludie",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "value"
    ],
    "question": "How many employees have a first name of Ludie?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "have",
      "a",
      "first",
      "name",
      "of",
      "Ludie",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Ludie\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT nickname FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";",
    "query_toks": [
      "SELECT",
      "nickname",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Janessa",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Sawayn",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "nickname",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is the nickname of staff with first name as Janessa and last name as Sawayn?",
    "question_toks": [
      "What",
      "is",
      "the",
      "nickname",
      "of",
      "staff",
      "with",
      "first",
      "name",
      "as",
      "Janessa",
      "and",
      "last",
      "name",
      "as",
      "Sawayn",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Janessa\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Sawayn\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT nickname FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";",
    "query_toks": [
      "SELECT",
      "nickname",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Janessa",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Sawayn",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "nickname",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is the nickname of the employee named Janessa Sawayn?",
    "question_toks": [
      "What",
      "is",
      "the",
      "nickname",
      "of",
      "the",
      "employee",
      "named",
      "Janessa",
      "Sawayn",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Janessa\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Sawayn\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Staff;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Staff",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "staff"
    ],
    "question": "How many staff in total?",
    "question_toks": [
      "How",
      "many",
      "staff",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Staff;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Staff",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "staff"
    ],
    "question": "How many employees are there?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Addresses WHERE state_province_county = \"Georgia\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Addresses",
      "WHERE",
      "state_province_county",
      "=",
      "``",
      "Georgia",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "addresses",
      "where",
      "state_province_county",
      "=",
      "value"
    ],
    "question": "How many staff live in state Georgia?",
    "question_toks": [
      "How",
      "many",
      "staff",
      "live",
      "in",
      "state",
      "Georgia",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Georgia\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Addresses WHERE state_province_county = \"Georgia\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Addresses",
      "WHERE",
      "state_province_county",
      "=",
      "``",
      "Georgia",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "addresses",
      "where",
      "state_province_county",
      "=",
      "value"
    ],
    "question": "How many employees live in Georgia?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "live",
      "in",
      "Georgia",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Georgia\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT first_name ,  last_name FROM Customers;",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "Customers",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "customers"
    ],
    "question": "List the first name and last name of all customers.",
    "question_toks": [
      "List",
      "the",
      "first",
      "name",
      "and",
      "last",
      "name",
      "of",
      "all",
      "customers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT first_name ,  last_name FROM Customers;",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "Customers",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "customers"
    ],
    "question": "What are the first and last names for all customers?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "and",
      "last",
      "names",
      "for",
      "all",
      "customers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT email_address ,  date_of_birth FROM Customers WHERE first_name = \"Carole\"",
    "query_toks": [
      "SELECT",
      "email_address",
      ",",
      "date_of_birth",
      "FROM",
      "Customers",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Carole",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "email_address",
      ",",
      "date_of_birth",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "value"
    ],
    "question": "List email address and birthday of customer whose first name as Carole.",
    "question_toks": [
      "List",
      "email",
      "address",
      "and",
      "birthday",
      "of",
      "customer",
      "whose",
      "first",
      "name",
      "as",
      "Carole",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Carole\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT email_address ,  date_of_birth FROM Customers WHERE first_name = \"Carole\"",
    "query_toks": [
      "SELECT",
      "email_address",
      ",",
      "date_of_birth",
      "FROM",
      "Customers",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Carole",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "email_address",
      ",",
      "date_of_birth",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "value"
    ],
    "question": "What are the email addresses and date of births for all customers who have a first name of Carole?",
    "question_toks": [
      "What",
      "are",
      "the",
      "email",
      "addresses",
      "and",
      "date",
      "of",
      "births",
      "for",
      "all",
      "customers",
      "who",
      "have",
      "a",
      "first",
      "name",
      "of",
      "Carole",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Carole\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT phone_number ,  email_address FROM Customers WHERE amount_outstanding  >  2000;",
    "query_toks": [
      "SELECT",
      "phone_number",
      ",",
      "email_address",
      "FROM",
      "Customers",
      "WHERE",
      "amount_outstanding",
      ">",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "phone_number",
      ",",
      "email_address",
      "from",
      "customers",
      "where",
      "amount_outstanding",
      ">",
      "value"
    ],
    "question": "List phone number and email address of customer with more than 2000 outstanding balance.",
    "question_toks": [
      "List",
      "phone",
      "number",
      "and",
      "email",
      "address",
      "of",
      "customer",
      "with",
      "more",
      "than",
      "2000",
      "outstanding",
      "balance",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT phone_number ,  email_address FROM Customers WHERE amount_outstanding  >  2000;",
    "query_toks": [
      "SELECT",
      "phone_number",
      ",",
      "email_address",
      "FROM",
      "Customers",
      "WHERE",
      "amount_outstanding",
      ">",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "phone_number",
      ",",
      "email_address",
      "from",
      "customers",
      "where",
      "amount_outstanding",
      ">",
      "value"
    ],
    "question": "What are the phone numbers and email addresses of all customers who have an outstanding balance of more than 2000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "phone",
      "numbers",
      "and",
      "email",
      "addresses",
      "of",
      "all",
      "customers",
      "who",
      "have",
      "an",
      "outstanding",
      "balance",
      "of",
      "more",
      "than",
      "2000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT customer_status_code ,  cell_mobile_phone_number ,  email_address FROM Customers WHERE first_name = \"Marina\" OR last_name  =  \"Kohler\"",
    "query_toks": [
      "SELECT",
      "customer_status_code",
      ",",
      "cell_mobile_phone_number",
      ",",
      "email_address",
      "FROM",
      "Customers",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Marina",
      "''",
      "OR",
      "last_name",
      "=",
      "``",
      "Kohler",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_status_code",
      ",",
      "cell_mobile_phone_number",
      ",",
      "email_address",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "value",
      "or",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is the status code, mobile phone number and email address of customer with last name as Kohler or first name as Marina?",
    "question_toks": [
      "What",
      "is",
      "the",
      "status",
      "code",
      ",",
      "mobile",
      "phone",
      "number",
      "and",
      "email",
      "address",
      "of",
      "customer",
      "with",
      "last",
      "name",
      "as",
      "Kohler",
      "or",
      "first",
      "name",
      "as",
      "Marina",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Marina\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Kohler\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT customer_status_code ,  cell_mobile_phone_number ,  email_address FROM Customers WHERE first_name = \"Marina\" OR last_name  =  \"Kohler\"",
    "query_toks": [
      "SELECT",
      "customer_status_code",
      ",",
      "cell_mobile_phone_number",
      ",",
      "email_address",
      "FROM",
      "Customers",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Marina",
      "''",
      "OR",
      "last_name",
      "=",
      "``",
      "Kohler",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_status_code",
      ",",
      "cell_mobile_phone_number",
      ",",
      "email_address",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "value",
      "or",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is the status code, phone number, and email address of the customer whose last name is Kohler or whose first name is Marina?",
    "question_toks": [
      "What",
      "is",
      "the",
      "status",
      "code",
      ",",
      "phone",
      "number",
      ",",
      "and",
      "email",
      "address",
      "of",
      "the",
      "customer",
      "whose",
      "last",
      "name",
      "is",
      "Kohler",
      "or",
      "whose",
      "first",
      "name",
      "is",
      "Marina",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Marina\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Kohler\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_of_birth FROM Customers WHERE customer_status_code  =  'Good Customer'",
    "query_toks": [
      "SELECT",
      "date_of_birth",
      "FROM",
      "Customers",
      "WHERE",
      "customer_status_code",
      "=",
      "'Good",
      "Customer",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_birth",
      "from",
      "customers",
      "where",
      "customer_status_code",
      "=",
      "value"
    ],
    "question": "When are the birthdays of customer who are classified as 'Good Customer' status?",
    "question_toks": [
      "When",
      "are",
      "the",
      "birthdays",
      "of",
      "customer",
      "who",
      "are",
      "classified",
      "as",
      "'Good",
      "Customer",
      "'",
      "status",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          "\"Good Customer\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_of_birth FROM Customers WHERE customer_status_code  =  'Good Customer'",
    "query_toks": [
      "SELECT",
      "date_of_birth",
      "FROM",
      "Customers",
      "WHERE",
      "customer_status_code",
      "=",
      "'Good",
      "Customer",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_birth",
      "from",
      "customers",
      "where",
      "customer_status_code",
      "=",
      "value"
    ],
    "question": "What is the date of birth of every customer whose status code is 'Good Customer'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "date",
      "of",
      "birth",
      "of",
      "every",
      "customer",
      "whose",
      "status",
      "code",
      "is",
      "'Good",
      "Customer",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          "\"Good Customer\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_became_customer FROM Customers WHERE first_name = \"Carole\" AND last_name = \"Bernhard\";",
    "query_toks": [
      "SELECT",
      "date_became_customer",
      "FROM",
      "Customers",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Carole",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Bernhard",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "date_became_customer",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "When did customer with first name as Carole and last name as Bernhard became a customer?",
    "question_toks": [
      "When",
      "did",
      "customer",
      "with",
      "first",
      "name",
      "as",
      "Carole",
      "and",
      "last",
      "name",
      "as",
      "Bernhard",
      "became",
      "a",
      "customer",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Carole\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Bernhard\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_became_customer FROM Customers WHERE first_name = \"Carole\" AND last_name = \"Bernhard\";",
    "query_toks": [
      "SELECT",
      "date_became_customer",
      "FROM",
      "Customers",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Carole",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Bernhard",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "date_became_customer",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "When did Carole Bernhard first become a customer?",
    "question_toks": [
      "When",
      "did",
      "Carole",
      "Bernhard",
      "first",
      "become",
      "a",
      "customer",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Carole\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Bernhard\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Customers;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers"
    ],
    "question": "How many customers in total?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Customers;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers"
    ],
    "question": "How many customers are there?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT max(amount_outstanding) ,  min(amount_outstanding) ,  avg(amount_outstanding) FROM Customers;",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "amount_outstanding",
      ")",
      ",",
      "min",
      "(",
      "amount_outstanding",
      ")",
      ",",
      "avg",
      "(",
      "amount_outstanding",
      ")",
      "FROM",
      "Customers",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "amount_outstanding",
      ")",
      ",",
      "min",
      "(",
      "amount_outstanding",
      ")",
      ",",
      "avg",
      "(",
      "amount_outstanding",
      ")",
      "from",
      "customers"
    ],
    "question": "What is maximum, minimum and average amount of outstanding of customer?",
    "question_toks": [
      "What",
      "is",
      "maximum",
      ",",
      "minimum",
      "and",
      "average",
      "amount",
      "of",
      "outstanding",
      "of",
      "customer",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT max(amount_outstanding) ,  min(amount_outstanding) ,  avg(amount_outstanding) FROM Customers;",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "amount_outstanding",
      ")",
      ",",
      "min",
      "(",
      "amount_outstanding",
      ")",
      ",",
      "avg",
      "(",
      "amount_outstanding",
      ")",
      "FROM",
      "Customers",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "amount_outstanding",
      ")",
      ",",
      "min",
      "(",
      "amount_outstanding",
      ")",
      ",",
      "avg",
      "(",
      "amount_outstanding",
      ")",
      "from",
      "customers"
    ],
    "question": "What is the maximum, minimum, and average amount of money outsanding for all customers?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      ",",
      "minimum",
      ",",
      "and",
      "average",
      "amount",
      "of",
      "money",
      "outsanding",
      "for",
      "all",
      "customers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT first_name ,  last_name FROM Customers WHERE amount_outstanding BETWEEN 1000 AND 3000;",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "Customers",
      "WHERE",
      "amount_outstanding",
      "BETWEEN",
      "1000",
      "AND",
      "3000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "customers",
      "where",
      "amount_outstanding",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "List the first name and last name of customers have the amount of outstanding between 1000 and 3000.",
    "question_toks": [
      "List",
      "the",
      "first",
      "name",
      "and",
      "last",
      "name",
      "of",
      "customers",
      "have",
      "the",
      "amount",
      "of",
      "outstanding",
      "between",
      "1000",
      "and",
      "3000",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          1000.0,
          3000.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT first_name ,  last_name FROM Customers WHERE amount_outstanding BETWEEN 1000 AND 3000;",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "Customers",
      "WHERE",
      "amount_outstanding",
      "BETWEEN",
      "1000",
      "AND",
      "3000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "customers",
      "where",
      "amount_outstanding",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What are the first and last names of all customers with between 1000 and 3000 dollars outstanding?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "all",
      "customers",
      "with",
      "between",
      "1000",
      "and",
      "3000",
      "dollars",
      "outstanding",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          1000.0,
          3000.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payments );",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers",
      "WHERE",
      "customer_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "customer_id",
      "FROM",
      "Customer_Payments",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers",
      "where",
      "customer_id",
      "not",
      "in",
      "(",
      "select",
      "customer_id",
      "from",
      "customer_payments",
      ")"
    ],
    "question": "List the number of customers that did not have any payment history.",
    "question_toks": [
      "List",
      "the",
      "number",
      "of",
      "customers",
      "that",
      "did",
      "not",
      "have",
      "any",
      "payment",
      "history",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      29,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payments );",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers",
      "WHERE",
      "customer_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "customer_id",
      "FROM",
      "Customer_Payments",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers",
      "where",
      "customer_id",
      "not",
      "in",
      "(",
      "select",
      "customer_id",
      "from",
      "customer_payments",
      ")"
    ],
    "question": "How many customers have no payment histories?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "have",
      "no",
      "payment",
      "histories",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      29,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Lessons WHERE lesson_status_code = \"Cancelled\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Lessons",
      "WHERE",
      "lesson_status_code",
      "=",
      "``",
      "Cancelled",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "lessons",
      "where",
      "lesson_status_code",
      "=",
      "value"
    ],
    "question": "How many lessons were in cancelled state?",
    "question_toks": [
      "How",
      "many",
      "lessons",
      "were",
      "in",
      "cancelled",
      "state",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"Cancelled\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Lessons WHERE lesson_status_code = \"Cancelled\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Lessons",
      "WHERE",
      "lesson_status_code",
      "=",
      "``",
      "Cancelled",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "lessons",
      "where",
      "lesson_status_code",
      "=",
      "value"
    ],
    "question": "How many lessons have been cancelled?",
    "question_toks": [
      "How",
      "many",
      "lessons",
      "have",
      "been",
      "cancelled",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"Cancelled\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT count(*) FROM Faculty",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Faculty"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "faculty"
    ],
    "question": "How many faculty do we have?",
    "question_toks": [
      "How",
      "many",
      "faculty",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT count(*) FROM Faculty",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Faculty"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "faculty"
    ],
    "question": "What is the total number of faculty members?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "faculty",
      "members",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT rank ,  Fname ,  Lname FROM Faculty",
    "query_toks": [
      "SELECT",
      "rank",
      ",",
      "Fname",
      ",",
      "Lname",
      "FROM",
      "Faculty"
    ],
    "query_toks_no_value": [
      "select",
      "rank",
      ",",
      "fname",
      ",",
      "lname",
      "from",
      "faculty"
    ],
    "question": "Show the rank, first name, and last name for all the faculty.",
    "question_toks": [
      "Show",
      "the",
      "rank",
      ",",
      "first",
      "name",
      ",",
      "and",
      "last",
      "name",
      "for",
      "all",
      "the",
      "faculty",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT rank ,  Fname ,  Lname FROM Faculty",
    "query_toks": [
      "SELECT",
      "rank",
      ",",
      "Fname",
      ",",
      "Lname",
      "FROM",
      "Faculty"
    ],
    "query_toks_no_value": [
      "select",
      "rank",
      ",",
      "fname",
      ",",
      "lname",
      "from",
      "faculty"
    ],
    "question": "What are the rank, first name, and last name of the faculty members?",
    "question_toks": [
      "What",
      "are",
      "the",
      "rank",
      ",",
      "first",
      "name",
      ",",
      "and",
      "last",
      "name",
      "of",
      "the",
      "faculty",
      "members",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT Fname ,  Lname ,  phone FROM Faculty WHERE Sex  =  'F'",
    "query_toks": [
      "SELECT",
      "Fname",
      ",",
      "Lname",
      ",",
      "phone",
      "FROM",
      "Faculty",
      "WHERE",
      "Sex",
      "=",
      "'F",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      ",",
      "lname",
      ",",
      "phone",
      "from",
      "faculty",
      "where",
      "sex",
      "=",
      "value"
    ],
    "question": "Show the first name, last name, and phone number for all female faculty members.",
    "question_toks": [
      "Show",
      "the",
      "first",
      "name",
      ",",
      "last",
      "name",
      ",",
      "and",
      "phone",
      "number",
      "for",
      "all",
      "female",
      "faculty",
      "members",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"F\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT Fname ,  Lname ,  phone FROM Faculty WHERE Sex  =  'F'",
    "query_toks": [
      "SELECT",
      "Fname",
      ",",
      "Lname",
      ",",
      "phone",
      "FROM",
      "Faculty",
      "WHERE",
      "Sex",
      "=",
      "'F",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      ",",
      "lname",
      ",",
      "phone",
      "from",
      "faculty",
      "where",
      "sex",
      "=",
      "value"
    ],
    "question": "What are the first name, last name, and phone number of all the female faculty members?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "name",
      ",",
      "last",
      "name",
      ",",
      "and",
      "phone",
      "number",
      "of",
      "all",
      "the",
      "female",
      "faculty",
      "members",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"F\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT FacID FROM Faculty WHERE Sex  =  'M'",
    "query_toks": [
      "SELECT",
      "FacID",
      "FROM",
      "Faculty",
      "WHERE",
      "Sex",
      "=",
      "'M",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "facid",
      "from",
      "faculty",
      "where",
      "sex",
      "=",
      "value"
    ],
    "question": "Show ids for all the male faculty.",
    "question_toks": [
      "Show",
      "ids",
      "for",
      "all",
      "the",
      "male",
      "faculty",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"M\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT FacID FROM Faculty WHERE Sex  =  'M'",
    "query_toks": [
      "SELECT",
      "FacID",
      "FROM",
      "Faculty",
      "WHERE",
      "Sex",
      "=",
      "'M",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "facid",
      "from",
      "faculty",
      "where",
      "sex",
      "=",
      "value"
    ],
    "question": "What are the faculty ids of all the male faculty members?",
    "question_toks": [
      "What",
      "are",
      "the",
      "faculty",
      "ids",
      "of",
      "all",
      "the",
      "male",
      "faculty",
      "members",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"M\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT count(*) FROM Faculty WHERE Sex  =  'F' AND Rank  =  \"Professor\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Faculty",
      "WHERE",
      "Sex",
      "=",
      "'F",
      "'",
      "AND",
      "Rank",
      "=",
      "``",
      "Professor",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "faculty",
      "where",
      "sex",
      "=",
      "value",
      "and",
      "rank",
      "=",
      "value"
    ],
    "question": "How many female Professors do we have?",
    "question_toks": [
      "How",
      "many",
      "female",
      "Professors",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"F\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Professor\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT count(*) FROM Faculty WHERE Sex  =  'F' AND Rank  =  \"Professor\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Faculty",
      "WHERE",
      "Sex",
      "=",
      "'F",
      "'",
      "AND",
      "Rank",
      "=",
      "``",
      "Professor",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "faculty",
      "where",
      "sex",
      "=",
      "value",
      "and",
      "rank",
      "=",
      "value"
    ],
    "question": "Count the number of female Professors we have.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "female",
      "Professors",
      "we",
      "have",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"F\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Professor\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT phone ,  room ,  building FROM Faculty WHERE Fname  =  \"Jerry\" AND Lname  =  \"Prince\"",
    "query_toks": [
      "SELECT",
      "phone",
      ",",
      "room",
      ",",
      "building",
      "FROM",
      "Faculty",
      "WHERE",
      "Fname",
      "=",
      "``",
      "Jerry",
      "''",
      "AND",
      "Lname",
      "=",
      "``",
      "Prince",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "phone",
      ",",
      "room",
      ",",
      "building",
      "from",
      "faculty",
      "where",
      "fname",
      "=",
      "value",
      "and",
      "lname",
      "=",
      "value"
    ],
    "question": "Show the phone, room, and building for the faculty named Jerry Prince.",
    "question_toks": [
      "Show",
      "the",
      "phone",
      ",",
      "room",
      ",",
      "and",
      "building",
      "for",
      "the",
      "faculty",
      "named",
      "Jerry",
      "Prince",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Jerry\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"Prince\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT phone ,  room ,  building FROM Faculty WHERE Fname  =  \"Jerry\" AND Lname  =  \"Prince\"",
    "query_toks": [
      "SELECT",
      "phone",
      ",",
      "room",
      ",",
      "building",
      "FROM",
      "Faculty",
      "WHERE",
      "Fname",
      "=",
      "``",
      "Jerry",
      "''",
      "AND",
      "Lname",
      "=",
      "``",
      "Prince",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "phone",
      ",",
      "room",
      ",",
      "building",
      "from",
      "faculty",
      "where",
      "fname",
      "=",
      "value",
      "and",
      "lname",
      "=",
      "value"
    ],
    "question": "What are the phone, room, and building of the faculty member called Jerry Prince?",
    "question_toks": [
      "What",
      "are",
      "the",
      "phone",
      ",",
      "room",
      ",",
      "and",
      "building",
      "of",
      "the",
      "faculty",
      "member",
      "called",
      "Jerry",
      "Prince",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Jerry\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"Prince\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT count(*) FROM Faculty WHERE Rank  =  \"Professor\" AND building  =  \"NEB\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Faculty",
      "WHERE",
      "Rank",
      "=",
      "``",
      "Professor",
      "''",
      "AND",
      "building",
      "=",
      "``",
      "NEB",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "faculty",
      "where",
      "rank",
      "=",
      "value",
      "and",
      "building",
      "=",
      "value"
    ],
    "question": "How many Professors are in building NEB?",
    "question_toks": [
      "How",
      "many",
      "Professors",
      "are",
      "in",
      "building",
      "NEB",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Professor\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          "\"NEB\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT count(*) FROM Faculty WHERE Rank  =  \"Professor\" AND building  =  \"NEB\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Faculty",
      "WHERE",
      "Rank",
      "=",
      "``",
      "Professor",
      "''",
      "AND",
      "building",
      "=",
      "``",
      "NEB",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "faculty",
      "where",
      "rank",
      "=",
      "value",
      "and",
      "building",
      "=",
      "value"
    ],
    "question": "Count the number of Professors who have office in building NEB.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "Professors",
      "who",
      "have",
      "office",
      "in",
      "building",
      "NEB",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Professor\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          "\"NEB\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT fname ,  lname FROM Faculty WHERE Rank  =  \"Instructor\"",
    "query_toks": [
      "SELECT",
      "fname",
      ",",
      "lname",
      "FROM",
      "Faculty",
      "WHERE",
      "Rank",
      "=",
      "``",
      "Instructor",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      ",",
      "lname",
      "from",
      "faculty",
      "where",
      "rank",
      "=",
      "value"
    ],
    "question": "Show the first name and last name for all the instructors.",
    "question_toks": [
      "Show",
      "the",
      "first",
      "name",
      "and",
      "last",
      "name",
      "for",
      "all",
      "the",
      "instructors",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Instructor\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT fname ,  lname FROM Faculty WHERE Rank  =  \"Instructor\"",
    "query_toks": [
      "SELECT",
      "fname",
      ",",
      "lname",
      "FROM",
      "Faculty",
      "WHERE",
      "Rank",
      "=",
      "``",
      "Instructor",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      ",",
      "lname",
      "from",
      "faculty",
      "where",
      "rank",
      "=",
      "value"
    ],
    "question": "What are the first name and last name of all the instructors?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "name",
      "and",
      "last",
      "name",
      "of",
      "all",
      "the",
      "instructors",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Instructor\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT activity_name FROM Activity",
    "query_toks": [
      "SELECT",
      "activity_name",
      "FROM",
      "Activity"
    ],
    "query_toks_no_value": [
      "select",
      "activity_name",
      "from",
      "activity"
    ],
    "question": "What activities do we have?",
    "question_toks": [
      "What",
      "activities",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT activity_name FROM Activity",
    "query_toks": [
      "SELECT",
      "activity_name",
      "FROM",
      "Activity"
    ],
    "query_toks_no_value": [
      "select",
      "activity_name",
      "from",
      "activity"
    ],
    "question": "List all the activities we have.",
    "question_toks": [
      "List",
      "all",
      "the",
      "activities",
      "we",
      "have",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT count(*) FROM Activity",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Activity"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "activity"
    ],
    "question": "How many activities do we have?",
    "question_toks": [
      "How",
      "many",
      "activities",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT count(*) FROM Activity",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Activity"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "activity"
    ],
    "question": "Find the number of activities available.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "activities",
      "available",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT count(DISTINCT FacID) FROM Faculty_participates_in",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "FacID",
      ")",
      "FROM",
      "Faculty_participates_in"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "facid",
      ")",
      "from",
      "faculty_participates_in"
    ],
    "question": "How many faculty members participate in an activity?",
    "question_toks": [
      "How",
      "many",
      "faculty",
      "members",
      "participate",
      "in",
      "an",
      "activity",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                5,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT count(DISTINCT FacID) FROM Faculty_participates_in",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "FacID",
      ")",
      "FROM",
      "Faculty_participates_in"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "facid",
      ")",
      "from",
      "faculty_participates_in"
    ],
    "question": "Give me the number of faculty members who participate in an activity",
    "question_toks": [
      "Give",
      "me",
      "the",
      "number",
      "of",
      "faculty",
      "members",
      "who",
      "participate",
      "in",
      "an",
      "activity"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                5,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT name FROM airports WHERE city  =  'Goroka'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "airports",
      "WHERE",
      "city",
      "=",
      "'Goroka",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "airports",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "Find the name of the airport in the city of Goroka.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "the",
      "airport",
      "in",
      "the",
      "city",
      "of",
      "Goroka",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Goroka\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT name FROM airports WHERE city  =  'Goroka'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "airports",
      "WHERE",
      "city",
      "=",
      "'Goroka",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "airports",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "What are the names of the airports in the city of Goroka?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "airports",
      "in",
      "the",
      "city",
      "of",
      "Goroka",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Goroka\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT name ,  city ,  country ,  elevation FROM airports WHERE city  =  'New York'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "city",
      ",",
      "country",
      ",",
      "elevation",
      "FROM",
      "airports",
      "WHERE",
      "city",
      "=",
      "'New",
      "York",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "city",
      ",",
      "country",
      ",",
      "elevation",
      "from",
      "airports",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "Find the name, city, country, and altitude (or elevation) of the airports in the city of New York.",
    "question_toks": [
      "Find",
      "the",
      "name",
      ",",
      "city",
      ",",
      "country",
      ",",
      "and",
      "altitude",
      "(",
      "or",
      "elevation",
      ")",
      "of",
      "the",
      "airports",
      "in",
      "the",
      "city",
      "of",
      "New",
      "York",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"New York\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT name ,  city ,  country ,  elevation FROM airports WHERE city  =  'New York'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "city",
      ",",
      "country",
      ",",
      "elevation",
      "FROM",
      "airports",
      "WHERE",
      "city",
      "=",
      "'New",
      "York",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "city",
      ",",
      "country",
      ",",
      "elevation",
      "from",
      "airports",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "What is the name, city, country, and elevation for every airport in the city of New York?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      ",",
      "city",
      ",",
      "country",
      ",",
      "and",
      "elevation",
      "for",
      "every",
      "airport",
      "in",
      "the",
      "city",
      "of",
      "New",
      "York",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"New York\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM airlines",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airlines"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airlines"
    ],
    "question": "How many airlines are there?",
    "question_toks": [
      "How",
      "many",
      "airlines",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM airlines",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airlines"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airlines"
    ],
    "question": "What is the total number of airlines?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "airlines",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM airlines WHERE country  =  'Russia'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airlines",
      "WHERE",
      "country",
      "=",
      "'Russia",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airlines",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "How many airlines does Russia has?",
    "question_toks": [
      "How",
      "many",
      "airlines",
      "does",
      "Russia",
      "has",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Russia\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM airlines WHERE country  =  'Russia'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airlines",
      "WHERE",
      "country",
      "=",
      "'Russia",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airlines",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "What is the number of airlines based in Russia?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "airlines",
      "based",
      "in",
      "Russia",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Russia\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT max(elevation) FROM airports WHERE country  =  'Iceland'",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "elevation",
      ")",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'Iceland",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "elevation",
      ")",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "What is the maximum elevation of all airports in the country of Iceland?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      "elevation",
      "of",
      "all",
      "airports",
      "in",
      "the",
      "country",
      "of",
      "Iceland",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Iceland\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT max(elevation) FROM airports WHERE country  =  'Iceland'",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "elevation",
      ")",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'Iceland",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "elevation",
      ")",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "What is the highest elevation of an airport in the country of Iceland?",
    "question_toks": [
      "What",
      "is",
      "the",
      "highest",
      "elevation",
      "of",
      "an",
      "airport",
      "in",
      "the",
      "country",
      "of",
      "Iceland",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Iceland\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT name FROM airports WHERE country  =  'Cuba' OR country  =  'Argentina'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'Cuba",
      "'",
      "OR",
      "country",
      "=",
      "'Argentina",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value",
      "or",
      "country",
      "=",
      "value"
    ],
    "question": "Find the name of the airports located in Cuba or Argentina.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "the",
      "airports",
      "located",
      "in",
      "Cuba",
      "or",
      "Argentina",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Cuba\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Argentina\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT name FROM airports WHERE country  =  'Cuba' OR country  =  'Argentina'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'Cuba",
      "'",
      "OR",
      "country",
      "=",
      "'Argentina",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value",
      "or",
      "country",
      "=",
      "value"
    ],
    "question": "What are the names of all airports in Cuba or Argentina?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "airports",
      "in",
      "Cuba",
      "or",
      "Argentina",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Cuba\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Argentina\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT country FROM airlines WHERE name LIKE 'Orbit%'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "airlines",
      "WHERE",
      "name",
      "LIKE",
      "'Orbit",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "airlines",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "Find the country of the airlines whose name starts with 'Orbit'.",
    "question_toks": [
      "Find",
      "the",
      "country",
      "of",
      "the",
      "airlines",
      "whose",
      "name",
      "starts",
      "with",
      "'Orbit",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Orbit%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT country FROM airlines WHERE name LIKE 'Orbit%'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "airlines",
      "WHERE",
      "name",
      "LIKE",
      "'Orbit",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "airlines",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "What are the countries of all airlines whose names start with Orbit?",
    "question_toks": [
      "What",
      "are",
      "the",
      "countries",
      "of",
      "all",
      "airlines",
      "whose",
      "names",
      "start",
      "with",
      "Orbit",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Orbit%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "airports",
      "WHERE",
      "elevation",
      "BETWEEN",
      "-50",
      "AND",
      "50"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "airports",
      "where",
      "elevation",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "Find the name of airports whose altitude is between -50 and 50.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "airports",
      "whose",
      "altitude",
      "is",
      "between",
      "-50",
      "and",
      "50",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          -50.0,
          50.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "airports",
      "WHERE",
      "elevation",
      "BETWEEN",
      "-50",
      "AND",
      "50"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "airports",
      "where",
      "elevation",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What are the names of all airports whose elevation is between -50 and 50?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "airports",
      "whose",
      "elevation",
      "is",
      "between",
      "-50",
      "and",
      "50",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          -50.0,
          50.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM airports WHERE name LIKE '%International%'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airports",
      "WHERE",
      "name",
      "LIKE",
      "'",
      "%",
      "International",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airports",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "Find the number of airports whose name contain the word 'International'.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "airports",
      "whose",
      "name",
      "contain",
      "the",
      "word",
      "'International",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"%International%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM airports WHERE name LIKE '%International%'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airports",
      "WHERE",
      "name",
      "LIKE",
      "'",
      "%",
      "International",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airports",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "How many airports' names have the word Interanation in them?",
    "question_toks": [
      "How",
      "many",
      "airports",
      "'",
      "names",
      "have",
      "the",
      "word",
      "Interanation",
      "in",
      "them",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"%International%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(DISTINCT city) FROM airports WHERE country  =  'Greenland'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "city",
      ")",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'Greenland",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "city",
      ")",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "How many different cities do have some airport in the country of Greenland?",
    "question_toks": [
      "How",
      "many",
      "different",
      "cities",
      "do",
      "have",
      "some",
      "airport",
      "in",
      "the",
      "country",
      "of",
      "Greenland",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Greenland\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(DISTINCT city) FROM airports WHERE country  =  'Greenland'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "city",
      ")",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'Greenland",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "city",
      ")",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "In how many cities are there airports in the country of Greenland?",
    "question_toks": [
      "In",
      "how",
      "many",
      "cities",
      "are",
      "there",
      "airports",
      "in",
      "the",
      "country",
      "of",
      "Greenland",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Greenland\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM (SELECT city FROM airports GROUP BY city HAVING count(*)  >  3)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "(",
      "SELECT",
      "city",
      "FROM",
      "airports",
      "GROUP",
      "BY",
      "city",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "3",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "(",
      "select",
      "city",
      "from",
      "airports",
      "group",
      "by",
      "city",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value",
      ")"
    ],
    "question": "How many cities are there that have more than 3 airports?",
    "question_toks": [
      "How",
      "many",
      "cities",
      "are",
      "there",
      "that",
      "have",
      "more",
      "than",
      "3",
      "airports",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "sql",
            {
              "from": {
                "table_units": [
                  [
                    "table_unit",
                    1
                  ]
                ],
                "conds": []
              },
              "select": [
                false,
                [
                  [
                    0,
                    [
                      0,
                      [
                        0,
                        11,
                        false
                      ],
                      null
                    ]
                  ]
                ]
              ],
              "where": [],
              "groupBy": [
                [
                  0,
                  11,
                  false
                ]
              ],
              "having": [
                [
                  false,
                  3,
                  [
                    0,
                    [
                      3,
                      0,
                      false
                    ],
                    null
                  ],
                  3.0,
                  null
                ]
              ],
              "orderBy": [],
              "limit": null,
              "intersect": null,
              "union": null,
              "except": null
            }
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM (SELECT city FROM airports GROUP BY city HAVING count(*)  >  3)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "(",
      "SELECT",
      "city",
      "FROM",
      "airports",
      "GROUP",
      "BY",
      "city",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "3",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "(",
      "select",
      "city",
      "from",
      "airports",
      "group",
      "by",
      "city",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value",
      ")"
    ],
    "question": "What is the count of cities with more than 3 airports?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "cities",
      "with",
      "more",
      "than",
      "3",
      "airports",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "sql",
            {
              "from": {
                "table_units": [
                  [
                    "table_unit",
                    1
                  ]
                ],
                "conds": []
              },
              "select": [
                false,
                [
                  [
                    0,
                    [
                      0,
                      [
                        0,
                        11,
                        false
                      ],
                      null
                    ]
                  ]
                ]
              ],
              "where": [],
              "groupBy": [
                [
                  0,
                  11,
                  false
                ]
              ],
              "having": [
                [
                  false,
                  3,
                  [
                    0,
                    [
                      3,
                      0,
                      false
                    ],
                    null
                  ],
                  3.0,
                  null
                ]
              ],
              "orderBy": [],
              "limit": null,
              "intersect": null,
              "union": null,
              "except": null
            }
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'Canada') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "routes",
      "WHERE",
      "dst_apid",
      "IN",
      "(",
      "SELECT",
      "apid",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'Canada",
      "'",
      ")",
      "AND",
      "src_apid",
      "IN",
      "(",
      "SELECT",
      "apid",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'United",
      "States",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "routes",
      "where",
      "dst_apid",
      "in",
      "(",
      "select",
      "apid",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value",
      ")",
      "and",
      "src_apid",
      "in",
      "(",
      "select",
      "apid",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value",
      ")"
    ],
    "question": "Find the number of routes from the United States to Canada.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "routes",
      "from",
      "the",
      "United",
      "States",
      "to",
      "Canada",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"Canada\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ],
        "and",
        [
          false,
          8,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"United States\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'Canada') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "routes",
      "WHERE",
      "dst_apid",
      "IN",
      "(",
      "SELECT",
      "apid",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'Canada",
      "'",
      ")",
      "AND",
      "src_apid",
      "IN",
      "(",
      "SELECT",
      "apid",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'United",
      "States",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "routes",
      "where",
      "dst_apid",
      "in",
      "(",
      "select",
      "apid",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value",
      ")",
      "and",
      "src_apid",
      "in",
      "(",
      "select",
      "apid",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value",
      ")"
    ],
    "question": "How many routes go from the United States to Canada?",
    "question_toks": [
      "How",
      "many",
      "routes",
      "go",
      "from",
      "the",
      "United",
      "States",
      "to",
      "Canada",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"Canada\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ],
        "and",
        [
          false,
          8,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"United States\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'United States') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')",
    "query_toks": [
      "SELECT",
      "rid",
      "FROM",
      "routes",
      "WHERE",
      "dst_apid",
      "IN",
      "(",
      "SELECT",
      "apid",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'United",
      "States",
      "'",
      ")",
      "AND",
      "src_apid",
      "IN",
      "(",
      "SELECT",
      "apid",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'United",
      "States",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "rid",
      "from",
      "routes",
      "where",
      "dst_apid",
      "in",
      "(",
      "select",
      "apid",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value",
      ")",
      "and",
      "src_apid",
      "in",
      "(",
      "select",
      "apid",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value",
      ")"
    ],
    "question": "Find the id of routes whose source and destination airports are in the United States.",
    "question_toks": [
      "Find",
      "the",
      "id",
      "of",
      "routes",
      "whose",
      "source",
      "and",
      "destination",
      "airports",
      "are",
      "in",
      "the",
      "United",
      "States",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"United States\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ],
        "and",
        [
          false,
          8,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"United States\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'United States') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')",
    "query_toks": [
      "SELECT",
      "rid",
      "FROM",
      "routes",
      "WHERE",
      "dst_apid",
      "IN",
      "(",
      "SELECT",
      "apid",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'United",
      "States",
      "'",
      ")",
      "AND",
      "src_apid",
      "IN",
      "(",
      "SELECT",
      "apid",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'United",
      "States",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "rid",
      "from",
      "routes",
      "where",
      "dst_apid",
      "in",
      "(",
      "select",
      "apid",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value",
      ")",
      "and",
      "src_apid",
      "in",
      "(",
      "select",
      "apid",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value",
      ")"
    ],
    "question": "What is the id of the routes whose source and destination airports are in the United States?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "of",
      "the",
      "routes",
      "whose",
      "source",
      "and",
      "destination",
      "airports",
      "are",
      "in",
      "the",
      "United",
      "States",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"United States\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ],
        "and",
        [
          false,
          8,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"United States\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT order_id FROM shipments WHERE shipment_tracking_number = \"3452\"",
    "query_toks": [
      "SELECT",
      "order_id",
      "FROM",
      "shipments",
      "WHERE",
      "shipment_tracking_number",
      "=",
      "``",
      "3452",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "order_id",
      "from",
      "shipments",
      "where",
      "shipment_tracking_number",
      "=",
      "value"
    ],
    "question": "Find the id of the order whose shipment tracking number is \"3452\".",
    "question_toks": [
      "Find",
      "the",
      "id",
      "of",
      "the",
      "order",
      "whose",
      "shipment",
      "tracking",
      "number",
      "is",
      "``",
      "3452",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"3452\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT order_id FROM shipments WHERE shipment_tracking_number = \"3452\"",
    "query_toks": [
      "SELECT",
      "order_id",
      "FROM",
      "shipments",
      "WHERE",
      "shipment_tracking_number",
      "=",
      "``",
      "3452",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "order_id",
      "from",
      "shipments",
      "where",
      "shipment_tracking_number",
      "=",
      "value"
    ],
    "question": "Which order's shipment tracking number is \"3452\"? Give me the id of the order.",
    "question_toks": [
      "Which",
      "order",
      "'s",
      "shipment",
      "tracking",
      "number",
      "is",
      "``",
      "3452",
      "''",
      "?",
      "Give",
      "me",
      "the",
      "id",
      "of",
      "the",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"3452\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT order_item_id FROM order_items WHERE product_id = 11",
    "query_toks": [
      "SELECT",
      "order_item_id",
      "FROM",
      "order_items",
      "WHERE",
      "product_id",
      "=",
      "11"
    ],
    "query_toks_no_value": [
      "select",
      "order_item_id",
      "from",
      "order_items",
      "where",
      "product_id",
      "=",
      "value"
    ],
    "question": "Find the ids of all the order items whose product id is 11.",
    "question_toks": [
      "Find",
      "the",
      "ids",
      "of",
      "all",
      "the",
      "order",
      "items",
      "whose",
      "product",
      "id",
      "is",
      "11",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          11.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT order_item_id FROM order_items WHERE product_id = 11",
    "query_toks": [
      "SELECT",
      "order_item_id",
      "FROM",
      "order_items",
      "WHERE",
      "product_id",
      "=",
      "11"
    ],
    "query_toks_no_value": [
      "select",
      "order_item_id",
      "from",
      "order_items",
      "where",
      "product_id",
      "=",
      "value"
    ],
    "question": "Find all the order items whose product id is 11. What are the order item ids?",
    "question_toks": [
      "Find",
      "all",
      "the",
      "order",
      "items",
      "whose",
      "product",
      "id",
      "is",
      "11",
      ".",
      "What",
      "are",
      "the",
      "order",
      "item",
      "ids",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          11.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT order_id FROM shipments WHERE shipment_date > \"2000-01-01\"",
    "query_toks": [
      "SELECT",
      "order_id",
      "FROM",
      "shipments",
      "WHERE",
      "shipment_date",
      ">",
      "``",
      "2000-01-01",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "order_id",
      "from",
      "shipments",
      "where",
      "shipment_date",
      ">",
      "value"
    ],
    "question": "Find the ids of orders which are shipped after 2000-01-01.",
    "question_toks": [
      "Find",
      "the",
      "ids",
      "of",
      "orders",
      "which",
      "are",
      "shipped",
      "after",
      "2000-01-01",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"2000-01-01\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT order_id FROM shipments WHERE shipment_date > \"2000-01-01\"",
    "query_toks": [
      "SELECT",
      "order_id",
      "FROM",
      "shipments",
      "WHERE",
      "shipment_date",
      ">",
      "``",
      "2000-01-01",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "order_id",
      "from",
      "shipments",
      "where",
      "shipment_date",
      ">",
      "value"
    ],
    "question": "Which orders have shipment after 2000-01-01? Give me the order ids.",
    "question_toks": [
      "Which",
      "orders",
      "have",
      "shipment",
      "after",
      "2000-01-01",
      "?",
      "Give",
      "me",
      "the",
      "order",
      "ids",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"2000-01-01\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT order_id FROM shipments WHERE shipment_date  =  (SELECT max(shipment_date) FROM shipments)",
    "query_toks": [
      "SELECT",
      "order_id",
      "FROM",
      "shipments",
      "WHERE",
      "shipment_date",
      "=",
      "(",
      "SELECT",
      "max",
      "(",
      "shipment_date",
      ")",
      "FROM",
      "shipments",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "order_id",
      "from",
      "shipments",
      "where",
      "shipment_date",
      "=",
      "(",
      "select",
      "max",
      "(",
      "shipment_date",
      ")",
      "from",
      "shipments",
      ")"
    ],
    "question": "Find the id of the order which is shipped most recently.",
    "question_toks": [
      "Find",
      "the",
      "id",
      "of",
      "the",
      "order",
      "which",
      "is",
      "shipped",
      "most",
      "recently",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  5
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      24,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT order_id FROM shipments WHERE shipment_date  =  (SELECT max(shipment_date) FROM shipments)",
    "query_toks": [
      "SELECT",
      "order_id",
      "FROM",
      "shipments",
      "WHERE",
      "shipment_date",
      "=",
      "(",
      "SELECT",
      "max",
      "(",
      "shipment_date",
      ")",
      "FROM",
      "shipments",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "order_id",
      "from",
      "shipments",
      "where",
      "shipment_date",
      "=",
      "(",
      "select",
      "max",
      "(",
      "shipment_date",
      ")",
      "from",
      "shipments",
      ")"
    ],
    "question": "Which order has the most recent shipment? Give me the order id.",
    "question_toks": [
      "Which",
      "order",
      "has",
      "the",
      "most",
      "recent",
      "shipment",
      "?",
      "Give",
      "me",
      "the",
      "order",
      "id",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  5
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      24,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT invoice_number FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\"",
    "query_toks": [
      "SELECT",
      "invoice_number",
      "FROM",
      "invoices",
      "WHERE",
      "invoice_date",
      "<",
      "``",
      "1989-09-03",
      "''",
      "OR",
      "invoice_date",
      ">",
      "``",
      "2007-12-25",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "invoice_number",
      "from",
      "invoices",
      "where",
      "invoice_date",
      "<",
      "value",
      "or",
      "invoice_date",
      ">",
      "value"
    ],
    "question": "Find the invoice numbers which are created before 1989-09-03 or after 2007-12-25.",
    "question_toks": [
      "Find",
      "the",
      "invoice",
      "numbers",
      "which",
      "are",
      "created",
      "before",
      "1989-09-03",
      "or",
      "after",
      "2007-12-25",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"1989-09-03\"",
          null
        ],
        "or",
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"2007-12-25\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT invoice_number FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\"",
    "query_toks": [
      "SELECT",
      "invoice_number",
      "FROM",
      "invoices",
      "WHERE",
      "invoice_date",
      "<",
      "``",
      "1989-09-03",
      "''",
      "OR",
      "invoice_date",
      ">",
      "``",
      "2007-12-25",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "invoice_number",
      "from",
      "invoices",
      "where",
      "invoice_date",
      "<",
      "value",
      "or",
      "invoice_date",
      ">",
      "value"
    ],
    "question": "What are the invoice numbers created before 1989-09-03 or after 2007-12-25?",
    "question_toks": [
      "What",
      "are",
      "the",
      "invoice",
      "numbers",
      "created",
      "before",
      "1989-09-03",
      "or",
      "after",
      "2007-12-25",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"1989-09-03\"",
          null
        ],
        "or",
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"2007-12-25\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "architecture",
    "query": "SELECT count(*) FROM architect WHERE gender  =  'female'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "architect",
      "WHERE",
      "gender",
      "=",
      "'female",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "architect",
      "where",
      "gender",
      "=",
      "value"
    ],
    "question": "How many architects are female?",
    "question_toks": [
      "How",
      "many",
      "architects",
      "are",
      "female",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"female\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "architecture",
    "query": "SELECT avg(length_feet) FROM bridge",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "length_feet",
      ")",
      "FROM",
      "bridge"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "length_feet",
      ")",
      "from",
      "bridge"
    ],
    "question": "What is the average length in feet of the bridges?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "length",
      "in",
      "feet",
      "of",
      "the",
      "bridges",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "architecture",
    "query": "SELECT name ,  built_year FROM mill WHERE TYPE  =  'Grondzeiler'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "built_year",
      "FROM",
      "mill",
      "WHERE",
      "TYPE",
      "=",
      "'Grondzeiler",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "built_year",
      "from",
      "mill",
      "where",
      "type",
      "=",
      "value"
    ],
    "question": "What are the names and year of construction for the mills of 'Grondzeiler' type?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "year",
      "of",
      "construction",
      "for",
      "the",
      "mills",
      "of",
      "'Grondzeiler",
      "'",
      "type",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"Grondzeiler\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "architecture",
    "query": "SELECT name FROM mill WHERE LOCATION != 'Donceel'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "mill",
      "WHERE",
      "LOCATION",
      "!",
      "=",
      "'Donceel",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "mill",
      "where",
      "location",
      "!",
      "=",
      "value"
    ],
    "question": "What are the names of the mills which are not located in 'Donceel'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "mills",
      "which",
      "are",
      "not",
      "located",
      "in",
      "'Donceel",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"Donceel\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "architecture",
    "query": "SELECT LOCATION FROM bridge WHERE name  =  'Kolob Arch' OR name  =  'Rainbow Bridge'",
    "query_toks": [
      "SELECT",
      "LOCATION",
      "FROM",
      "bridge",
      "WHERE",
      "name",
      "=",
      "'Kolob",
      "Arch",
      "'",
      "OR",
      "name",
      "=",
      "'Rainbow",
      "Bridge",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "location",
      "from",
      "bridge",
      "where",
      "name",
      "=",
      "value",
      "or",
      "name",
      "=",
      "value"
    ],
    "question": "What is the location of the bridge named 'Kolob Arch' or 'Rainbow Bridge'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "location",
      "of",
      "the",
      "bridge",
      "named",
      "'Kolob",
      "Arch",
      "'",
      "or",
      "'Rainbow",
      "Bridge",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"Kolob Arch\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"Rainbow Bridge\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "architecture",
    "query": "SELECT name FROM mill WHERE name LIKE '%Moulin%'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "mill",
      "WHERE",
      "name",
      "LIKE",
      "'",
      "%",
      "Moulin",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "mill",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "Which of the mill names contains the french word 'Moulin'?",
    "question_toks": [
      "Which",
      "of",
      "the",
      "mill",
      "names",
      "contains",
      "the",
      "french",
      "word",
      "'Moulin",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"%Moulin%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "architecture",
    "query": "SELECT count(*) FROM architect WHERE id NOT IN ( SELECT architect_id FROM mill WHERE built_year  <  1850 );",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "architect",
      "WHERE",
      "id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "architect_id",
      "FROM",
      "mill",
      "WHERE",
      "built_year",
      "<",
      "1850",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "architect",
      "where",
      "id",
      "not",
      "in",
      "(",
      "select",
      "architect_id",
      "from",
      "mill",
      "where",
      "built_year",
      "<",
      "value",
      ")"
    ],
    "question": "How many architects haven't built a mill before year 1850?",
    "question_toks": [
      "How",
      "many",
      "architects",
      "have",
      "n't",
      "built",
      "a",
      "mill",
      "before",
      "year",
      "1850",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      11,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                4,
                [
                  0,
                  [
                    0,
                    16,
                    false
                  ],
                  null
                ],
                1850.0,
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT count(*) FROM book_club",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "book_club"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "book_club"
    ],
    "question": "How many book clubs are there?",
    "question_toks": [
      "How",
      "many",
      "book",
      "clubs",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT count(*) FROM book_club",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "book_club"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "book_club"
    ],
    "question": "Count the number of book clubs.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "book",
      "clubs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT book_title ,  author_or_editor FROM book_club WHERE YEAR  >  1989",
    "query_toks": [
      "SELECT",
      "book_title",
      ",",
      "author_or_editor",
      "FROM",
      "book_club",
      "WHERE",
      "YEAR",
      ">",
      "1989"
    ],
    "query_toks_no_value": [
      "select",
      "book_title",
      ",",
      "author_or_editor",
      "from",
      "book_club",
      "where",
      "year",
      ">",
      "value"
    ],
    "question": "show the titles, and authors or editors for all books made after the year 1989.",
    "question_toks": [
      "show",
      "the",
      "titles",
      ",",
      "and",
      "authors",
      "or",
      "editors",
      "for",
      "all",
      "books",
      "made",
      "after",
      "the",
      "year",
      "1989",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          1989.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT book_title ,  author_or_editor FROM book_club WHERE YEAR  >  1989",
    "query_toks": [
      "SELECT",
      "book_title",
      ",",
      "author_or_editor",
      "FROM",
      "book_club",
      "WHERE",
      "YEAR",
      ">",
      "1989"
    ],
    "query_toks_no_value": [
      "select",
      "book_title",
      ",",
      "author_or_editor",
      "from",
      "book_club",
      "where",
      "year",
      ">",
      "value"
    ],
    "question": "What are the titles and authors or editors that correspond to books made after 1989?",
    "question_toks": [
      "What",
      "are",
      "the",
      "titles",
      "and",
      "authors",
      "or",
      "editors",
      "that",
      "correspond",
      "to",
      "books",
      "made",
      "after",
      "1989",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          1989.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT COUNT (DISTINCT director) FROM movie",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "director",
      ")",
      "FROM",
      "movie"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "director",
      ")",
      "from",
      "movie"
    ],
    "question": "How many movie directors are there?",
    "question_toks": [
      "How",
      "many",
      "movie",
      "directors",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT COUNT (DISTINCT director) FROM movie",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "director",
      ")",
      "FROM",
      "movie"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "director",
      ")",
      "from",
      "movie"
    ],
    "question": "Count the number of different directors.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "directors",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT director FROM movie WHERE YEAR  =  1999 OR YEAR  =  2000",
    "query_toks": [
      "SELECT",
      "director",
      "FROM",
      "movie",
      "WHERE",
      "YEAR",
      "=",
      "1999",
      "OR",
      "YEAR",
      "=",
      "2000"
    ],
    "query_toks_no_value": [
      "select",
      "director",
      "from",
      "movie",
      "where",
      "year",
      "=",
      "value",
      "or",
      "year",
      "=",
      "value"
    ],
    "question": "Show all director names who have a movie in the year 1999 or 2000.",
    "question_toks": [
      "Show",
      "all",
      "director",
      "names",
      "who",
      "have",
      "a",
      "movie",
      "in",
      "the",
      "year",
      "1999",
      "or",
      "2000",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          1999.0,
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT director FROM movie WHERE YEAR  =  1999 OR YEAR  =  2000",
    "query_toks": [
      "SELECT",
      "director",
      "FROM",
      "movie",
      "WHERE",
      "YEAR",
      "=",
      "1999",
      "OR",
      "YEAR",
      "=",
      "2000"
    ],
    "query_toks_no_value": [
      "select",
      "director",
      "from",
      "movie",
      "where",
      "year",
      "=",
      "value",
      "or",
      "year",
      "=",
      "value"
    ],
    "question": "Which directors had a movie in either 1999 or 2000?",
    "question_toks": [
      "Which",
      "directors",
      "had",
      "a",
      "movie",
      "in",
      "either",
      "1999",
      "or",
      "2000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          1999.0,
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT avg(budget_million) ,  max(budget_million) ,  min(budget_million) FROM movie WHERE YEAR  <  2000",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "budget_million",
      ")",
      ",",
      "max",
      "(",
      "budget_million",
      ")",
      ",",
      "min",
      "(",
      "budget_million",
      ")",
      "FROM",
      "movie",
      "WHERE",
      "YEAR",
      "<",
      "2000"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "budget_million",
      ")",
      ",",
      "max",
      "(",
      "budget_million",
      ")",
      ",",
      "min",
      "(",
      "budget_million",
      ")",
      "from",
      "movie",
      "where",
      "year",
      "<",
      "value"
    ],
    "question": "What is the average, maximum, and minimum budget for all movies before 2000.",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      ",",
      "maximum",
      ",",
      "and",
      "minimum",
      "budget",
      "for",
      "all",
      "movies",
      "before",
      "2000",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT avg(budget_million) ,  max(budget_million) ,  min(budget_million) FROM movie WHERE YEAR  <  2000",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "budget_million",
      ")",
      ",",
      "max",
      "(",
      "budget_million",
      ")",
      ",",
      "min",
      "(",
      "budget_million",
      ")",
      "FROM",
      "movie",
      "WHERE",
      "YEAR",
      "<",
      "2000"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "budget_million",
      ")",
      ",",
      "max",
      "(",
      "budget_million",
      ")",
      ",",
      "min",
      "(",
      "budget_million",
      ")",
      "from",
      "movie",
      "where",
      "year",
      "<",
      "value"
    ],
    "question": "Return the average, maximum, and minimum budgets in millions for movies made before the year 2000.",
    "question_toks": [
      "Return",
      "the",
      "average",
      ",",
      "maximum",
      ",",
      "and",
      "minimum",
      "budgets",
      "in",
      "millions",
      "for",
      "movies",
      "made",
      "before",
      "the",
      "year",
      "2000",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  }
]